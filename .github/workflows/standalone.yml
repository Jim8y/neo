name: Build & Release (neo-cli)

on:
  workflow_dispatch:

env:
  DOTNET_VERSION: 7.0.x
  CONFIGURATION: Release
  DIST_PATH: /tmp/dist
  OUTPUT_PATH: /tmp/out

jobs:
  build-neo-cli:
    name: Build (${{ matrix.runtime }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime: [linux-x64, linux-arm64, linux-musl-arm64, osx-x64, osx-arm64, win-x64, win-arm64]

    steps:
    - name: Checkout Repository Code
      uses: actions/checkout@v4
      with:
        path: neo
        fetch-depth: 0

    - name: Checkout Repository Code (neo-modules)
      uses: actions/checkout@v4
      with:
        repository: neo-project/neo-modules
        path: neo-modules
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: .NET Publish (neo-cli)
      working-directory: ./neo
      run: |
        dotnet publish ./src/Neo.CLI \
        --framework net7.0 \
        --configuration ${{ env.CONFIGURATION }} \
        --runtime ${{ matrix.runtime }} \
        --self-contained true \
        --output ${{ env.OUTPUT_PATH }}/${{ matrix.runtime }} \
        --verbosity normal \
        -p:RuntimeIdentifier=${{ matrix.runtime }} \
        -p:SelfContained=true \
        -p:IncludeNativeLibrariesForSelfExtract=false \
        -p:PublishTrimmed=false \
        -p:PublishSingleFile=true \
        -p:PublishReadyToRun=true \
        -p:EnableCompressionInSingleFile=true \
        -p:DebugType=embedded \
        -p:ServerGarbageCollection=true

    - name: .NET Build (LevelDBStore)
      working-directory: ./neo-modules
      run: |
        dotnet build ./src/LevelDBStore/LevelDBStore.csproj \
        --framework net7.0 \
        --configuration ${{ env.CONFIGURATION }} \
        --output ${{ env.OUTPUT_PATH }}/${{ matrix.runtime }}/Plugins/LevelDBStore \
        --verbosity normal

    - name: .NET Build (SQLiteWallet)
      working-directory: ./neo-modules
      run: |
        dotnet build ./src/SQLiteWallet/SQLiteWallet.csproj \
        --framework net7.0 \
        --configuration ${{ env.CONFIGURATION }} \
        --output ${{ env.OUTPUT_PATH }}/${{ matrix.runtime }}/Plugins/SQLiteWallet \
        --verbosity normal

    - name: Create Distribution Directory
      run: mkdir -p ${{ env.DIST_PATH }}

    - name: Zip Up Files (linux)
      if: ${{ startsWith(matrix.runtime, 'linux') }}
      working-directory: ${{ env.OUTPUT_PATH }}/${{ matrix.runtime }}
      run: tar -czvf ${{ env.DIST_PATH }}/neo-cli-${{ matrix.runtime }}.tar.gz .

    - name: Zip Up Files (osx)
      if: ${{ startsWith(matrix.runtime, 'osx') }}
      working-directory: ${{ env.OUTPUT_PATH }}/${{ matrix.runtime }}
      run: tar -cJf ${{ env.DIST_PATH }}/neo-cli-${{ matrix.runtime }}.tar.xz .

    - name: Zip Up Files (win)
      if: ${{ startsWith(matrix.runtime, 'win') }}
      working-directory: ${{ env.OUTPUT_PATH }}/${{ matrix.runtime }}
      run: zip ${{ env.DIST_PATH }}/neo-cli-${{ matrix.runtime }}.zip *

    - name: Output/Distribution Directory Contents
      run: |
        ls -l ${{ env.DIST_PATH }}
        ls -l ${{ env.OUTPUT_PATH }}/${{ matrix.runtime }}

    - name: Cache Distribution
      uses: actions/cache/save@v3
      with:
        path: ${{ env.DIST_PATH }}/*
        key: ${{ matrix.runtime }}
        fail-on-cache-miss: true

  Release-neo-cli:
    name: Release (github)
    needs: [build-neo-cli]
    runs-on: ubuntu-latest

    steps:
    - name: Get Distribution Caches
      uses: actions/cache/restore@v3
      with:
        path: ${{ env.DIST_PATH }}/*
        key: |
          linux-x64
          linux-arm64
          linux-musl-arm64
          osx-x64
          osx-arm64
          win-x64
          win-arm64
        fail-on-cache-miss: true

