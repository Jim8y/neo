### YamlMime:XRefMap
sorted: true
references:
- uid: Neo
  name: Neo
  href: api/Neo.html
  commentId: N:Neo
  fullName: Neo
  nameWithType: Neo
- uid: Neo.BigDecimal
  name: BigDecimal
  href: api/Neo.BigDecimal.html
  commentId: T:Neo.BigDecimal
  fullName: Neo.BigDecimal
  nameWithType: BigDecimal
- uid: Neo.BigDecimal.#ctor(System.Decimal)
  name: BigDecimal(decimal)
  href: api/Neo.BigDecimal.html#Neo_BigDecimal__ctor_System_Decimal_
  commentId: M:Neo.BigDecimal.#ctor(System.Decimal)
  name.vb: New(Decimal)
  fullName: Neo.BigDecimal.BigDecimal(decimal)
  fullName.vb: Neo.BigDecimal.New(Decimal)
  nameWithType: BigDecimal.BigDecimal(decimal)
  nameWithType.vb: BigDecimal.New(Decimal)
- uid: Neo.BigDecimal.#ctor(System.Decimal,System.Byte)
  name: BigDecimal(decimal, byte)
  href: api/Neo.BigDecimal.html#Neo_BigDecimal__ctor_System_Decimal_System_Byte_
  commentId: M:Neo.BigDecimal.#ctor(System.Decimal,System.Byte)
  name.vb: New(Decimal, Byte)
  fullName: Neo.BigDecimal.BigDecimal(decimal, byte)
  fullName.vb: Neo.BigDecimal.New(Decimal, Byte)
  nameWithType: BigDecimal.BigDecimal(decimal, byte)
  nameWithType.vb: BigDecimal.New(Decimal, Byte)
- uid: Neo.BigDecimal.#ctor(System.Numerics.BigInteger,System.Byte)
  name: BigDecimal(BigInteger, byte)
  href: api/Neo.BigDecimal.html#Neo_BigDecimal__ctor_System_Numerics_BigInteger_System_Byte_
  commentId: M:Neo.BigDecimal.#ctor(System.Numerics.BigInteger,System.Byte)
  name.vb: New(BigInteger, Byte)
  fullName: Neo.BigDecimal.BigDecimal(System.Numerics.BigInteger, byte)
  fullName.vb: Neo.BigDecimal.New(System.Numerics.BigInteger, Byte)
  nameWithType: BigDecimal.BigDecimal(BigInteger, byte)
  nameWithType.vb: BigDecimal.New(BigInteger, Byte)
- uid: Neo.BigDecimal.#ctor*
  name: BigDecimal
  href: api/Neo.BigDecimal.html#Neo_BigDecimal__ctor_
  commentId: Overload:Neo.BigDecimal.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.BigDecimal.BigDecimal
  fullName.vb: Neo.BigDecimal.New
  nameWithType: BigDecimal.BigDecimal
  nameWithType.vb: BigDecimal.New
- uid: Neo.BigDecimal.ChangeDecimals(System.Byte)
  name: ChangeDecimals(byte)
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_ChangeDecimals_System_Byte_
  commentId: M:Neo.BigDecimal.ChangeDecimals(System.Byte)
  name.vb: ChangeDecimals(Byte)
  fullName: Neo.BigDecimal.ChangeDecimals(byte)
  fullName.vb: Neo.BigDecimal.ChangeDecimals(Byte)
  nameWithType: BigDecimal.ChangeDecimals(byte)
  nameWithType.vb: BigDecimal.ChangeDecimals(Byte)
- uid: Neo.BigDecimal.ChangeDecimals*
  name: ChangeDecimals
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_ChangeDecimals_
  commentId: Overload:Neo.BigDecimal.ChangeDecimals
  isSpec: "True"
  fullName: Neo.BigDecimal.ChangeDecimals
  nameWithType: BigDecimal.ChangeDecimals
- uid: Neo.BigDecimal.CompareTo(Neo.BigDecimal)
  name: CompareTo(BigDecimal)
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_CompareTo_Neo_BigDecimal_
  commentId: M:Neo.BigDecimal.CompareTo(Neo.BigDecimal)
  fullName: Neo.BigDecimal.CompareTo(Neo.BigDecimal)
  nameWithType: BigDecimal.CompareTo(BigDecimal)
- uid: Neo.BigDecimal.CompareTo*
  name: CompareTo
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_CompareTo_
  commentId: Overload:Neo.BigDecimal.CompareTo
  isSpec: "True"
  fullName: Neo.BigDecimal.CompareTo
  nameWithType: BigDecimal.CompareTo
- uid: Neo.BigDecimal.Decimals
  name: Decimals
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_Decimals
  commentId: P:Neo.BigDecimal.Decimals
  fullName: Neo.BigDecimal.Decimals
  nameWithType: BigDecimal.Decimals
- uid: Neo.BigDecimal.Decimals*
  name: Decimals
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_Decimals_
  commentId: Overload:Neo.BigDecimal.Decimals
  isSpec: "True"
  fullName: Neo.BigDecimal.Decimals
  nameWithType: BigDecimal.Decimals
- uid: Neo.BigDecimal.Equals(Neo.BigDecimal)
  name: Equals(BigDecimal)
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_Equals_Neo_BigDecimal_
  commentId: M:Neo.BigDecimal.Equals(Neo.BigDecimal)
  fullName: Neo.BigDecimal.Equals(Neo.BigDecimal)
  nameWithType: BigDecimal.Equals(BigDecimal)
- uid: Neo.BigDecimal.Equals(System.Object)
  name: Equals(object)
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_Equals_System_Object_
  commentId: M:Neo.BigDecimal.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Neo.BigDecimal.Equals(object)
  fullName.vb: Neo.BigDecimal.Equals(Object)
  nameWithType: BigDecimal.Equals(object)
  nameWithType.vb: BigDecimal.Equals(Object)
- uid: Neo.BigDecimal.Equals*
  name: Equals
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_Equals_
  commentId: Overload:Neo.BigDecimal.Equals
  isSpec: "True"
  fullName: Neo.BigDecimal.Equals
  nameWithType: BigDecimal.Equals
- uid: Neo.BigDecimal.GetHashCode
  name: GetHashCode()
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_GetHashCode
  commentId: M:Neo.BigDecimal.GetHashCode
  fullName: Neo.BigDecimal.GetHashCode()
  nameWithType: BigDecimal.GetHashCode()
- uid: Neo.BigDecimal.GetHashCode*
  name: GetHashCode
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_GetHashCode_
  commentId: Overload:Neo.BigDecimal.GetHashCode
  isSpec: "True"
  fullName: Neo.BigDecimal.GetHashCode
  nameWithType: BigDecimal.GetHashCode
- uid: Neo.BigDecimal.Parse(System.String,System.Byte)
  name: Parse(string, byte)
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_Parse_System_String_System_Byte_
  commentId: M:Neo.BigDecimal.Parse(System.String,System.Byte)
  name.vb: Parse(String, Byte)
  fullName: Neo.BigDecimal.Parse(string, byte)
  fullName.vb: Neo.BigDecimal.Parse(String, Byte)
  nameWithType: BigDecimal.Parse(string, byte)
  nameWithType.vb: BigDecimal.Parse(String, Byte)
- uid: Neo.BigDecimal.Parse*
  name: Parse
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_Parse_
  commentId: Overload:Neo.BigDecimal.Parse
  isSpec: "True"
  fullName: Neo.BigDecimal.Parse
  nameWithType: BigDecimal.Parse
- uid: Neo.BigDecimal.Sign
  name: Sign
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_Sign
  commentId: P:Neo.BigDecimal.Sign
  fullName: Neo.BigDecimal.Sign
  nameWithType: BigDecimal.Sign
- uid: Neo.BigDecimal.Sign*
  name: Sign
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_Sign_
  commentId: Overload:Neo.BigDecimal.Sign
  isSpec: "True"
  fullName: Neo.BigDecimal.Sign
  nameWithType: BigDecimal.Sign
- uid: Neo.BigDecimal.ToString
  name: ToString()
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_ToString
  commentId: M:Neo.BigDecimal.ToString
  fullName: Neo.BigDecimal.ToString()
  nameWithType: BigDecimal.ToString()
- uid: Neo.BigDecimal.ToString*
  name: ToString
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_ToString_
  commentId: Overload:Neo.BigDecimal.ToString
  isSpec: "True"
  fullName: Neo.BigDecimal.ToString
  nameWithType: BigDecimal.ToString
- uid: Neo.BigDecimal.TryParse(System.String,System.Byte,Neo.BigDecimal@)
  name: TryParse(string, byte, out BigDecimal)
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_TryParse_System_String_System_Byte_Neo_BigDecimal__
  commentId: M:Neo.BigDecimal.TryParse(System.String,System.Byte,Neo.BigDecimal@)
  name.vb: TryParse(String, Byte, BigDecimal)
  fullName: Neo.BigDecimal.TryParse(string, byte, out Neo.BigDecimal)
  fullName.vb: Neo.BigDecimal.TryParse(String, Byte, Neo.BigDecimal)
  nameWithType: BigDecimal.TryParse(string, byte, out BigDecimal)
  nameWithType.vb: BigDecimal.TryParse(String, Byte, BigDecimal)
- uid: Neo.BigDecimal.TryParse*
  name: TryParse
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_TryParse_
  commentId: Overload:Neo.BigDecimal.TryParse
  isSpec: "True"
  fullName: Neo.BigDecimal.TryParse
  nameWithType: BigDecimal.TryParse
- uid: Neo.BigDecimal.Value
  name: Value
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_Value
  commentId: P:Neo.BigDecimal.Value
  fullName: Neo.BigDecimal.Value
  nameWithType: BigDecimal.Value
- uid: Neo.BigDecimal.Value*
  name: Value
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_Value_
  commentId: Overload:Neo.BigDecimal.Value
  isSpec: "True"
  fullName: Neo.BigDecimal.Value
  nameWithType: BigDecimal.Value
- uid: Neo.BigDecimal.op_Equality(Neo.BigDecimal,Neo.BigDecimal)
  name: operator ==(BigDecimal, BigDecimal)
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_op_Equality_Neo_BigDecimal_Neo_BigDecimal_
  commentId: M:Neo.BigDecimal.op_Equality(Neo.BigDecimal,Neo.BigDecimal)
  name.vb: =(BigDecimal, BigDecimal)
  fullName: Neo.BigDecimal.operator ==(Neo.BigDecimal, Neo.BigDecimal)
  fullName.vb: Neo.BigDecimal.=(Neo.BigDecimal, Neo.BigDecimal)
  nameWithType: BigDecimal.operator ==(BigDecimal, BigDecimal)
  nameWithType.vb: BigDecimal.=(BigDecimal, BigDecimal)
- uid: Neo.BigDecimal.op_Equality*
  name: operator ==
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_op_Equality_
  commentId: Overload:Neo.BigDecimal.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: Neo.BigDecimal.operator ==
  fullName.vb: Neo.BigDecimal.=
  nameWithType: BigDecimal.operator ==
  nameWithType.vb: BigDecimal.=
- uid: Neo.BigDecimal.op_GreaterThan(Neo.BigDecimal,Neo.BigDecimal)
  name: operator >(BigDecimal, BigDecimal)
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_op_GreaterThan_Neo_BigDecimal_Neo_BigDecimal_
  commentId: M:Neo.BigDecimal.op_GreaterThan(Neo.BigDecimal,Neo.BigDecimal)
  name.vb: '>(BigDecimal, BigDecimal)'
  fullName: Neo.BigDecimal.operator >(Neo.BigDecimal, Neo.BigDecimal)
  fullName.vb: Neo.BigDecimal.>(Neo.BigDecimal, Neo.BigDecimal)
  nameWithType: BigDecimal.operator >(BigDecimal, BigDecimal)
  nameWithType.vb: BigDecimal.>(BigDecimal, BigDecimal)
- uid: Neo.BigDecimal.op_GreaterThan*
  name: operator >
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_op_GreaterThan_
  commentId: Overload:Neo.BigDecimal.op_GreaterThan
  isSpec: "True"
  name.vb: '>'
  fullName: Neo.BigDecimal.operator >
  fullName.vb: Neo.BigDecimal.>
  nameWithType: BigDecimal.operator >
  nameWithType.vb: BigDecimal.>
- uid: Neo.BigDecimal.op_GreaterThanOrEqual(Neo.BigDecimal,Neo.BigDecimal)
  name: operator >=(BigDecimal, BigDecimal)
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_op_GreaterThanOrEqual_Neo_BigDecimal_Neo_BigDecimal_
  commentId: M:Neo.BigDecimal.op_GreaterThanOrEqual(Neo.BigDecimal,Neo.BigDecimal)
  name.vb: '>=(BigDecimal, BigDecimal)'
  fullName: Neo.BigDecimal.operator >=(Neo.BigDecimal, Neo.BigDecimal)
  fullName.vb: Neo.BigDecimal.>=(Neo.BigDecimal, Neo.BigDecimal)
  nameWithType: BigDecimal.operator >=(BigDecimal, BigDecimal)
  nameWithType.vb: BigDecimal.>=(BigDecimal, BigDecimal)
- uid: Neo.BigDecimal.op_GreaterThanOrEqual*
  name: operator >=
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_op_GreaterThanOrEqual_
  commentId: Overload:Neo.BigDecimal.op_GreaterThanOrEqual
  isSpec: "True"
  name.vb: '>='
  fullName: Neo.BigDecimal.operator >=
  fullName.vb: Neo.BigDecimal.>=
  nameWithType: BigDecimal.operator >=
  nameWithType.vb: BigDecimal.>=
- uid: Neo.BigDecimal.op_Inequality(Neo.BigDecimal,Neo.BigDecimal)
  name: operator !=(BigDecimal, BigDecimal)
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_op_Inequality_Neo_BigDecimal_Neo_BigDecimal_
  commentId: M:Neo.BigDecimal.op_Inequality(Neo.BigDecimal,Neo.BigDecimal)
  name.vb: <>(BigDecimal, BigDecimal)
  fullName: Neo.BigDecimal.operator !=(Neo.BigDecimal, Neo.BigDecimal)
  fullName.vb: Neo.BigDecimal.<>(Neo.BigDecimal, Neo.BigDecimal)
  nameWithType: BigDecimal.operator !=(BigDecimal, BigDecimal)
  nameWithType.vb: BigDecimal.<>(BigDecimal, BigDecimal)
- uid: Neo.BigDecimal.op_Inequality*
  name: operator !=
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_op_Inequality_
  commentId: Overload:Neo.BigDecimal.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: Neo.BigDecimal.operator !=
  fullName.vb: Neo.BigDecimal.<>
  nameWithType: BigDecimal.operator !=
  nameWithType.vb: BigDecimal.<>
- uid: Neo.BigDecimal.op_LessThan(Neo.BigDecimal,Neo.BigDecimal)
  name: operator <(BigDecimal, BigDecimal)
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_op_LessThan_Neo_BigDecimal_Neo_BigDecimal_
  commentId: M:Neo.BigDecimal.op_LessThan(Neo.BigDecimal,Neo.BigDecimal)
  name.vb: <(BigDecimal, BigDecimal)
  fullName: Neo.BigDecimal.operator <(Neo.BigDecimal, Neo.BigDecimal)
  fullName.vb: Neo.BigDecimal.<(Neo.BigDecimal, Neo.BigDecimal)
  nameWithType: BigDecimal.operator <(BigDecimal, BigDecimal)
  nameWithType.vb: BigDecimal.<(BigDecimal, BigDecimal)
- uid: Neo.BigDecimal.op_LessThan*
  name: operator <
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_op_LessThan_
  commentId: Overload:Neo.BigDecimal.op_LessThan
  isSpec: "True"
  name.vb: <
  fullName: Neo.BigDecimal.operator <
  fullName.vb: Neo.BigDecimal.<
  nameWithType: BigDecimal.operator <
  nameWithType.vb: BigDecimal.<
- uid: Neo.BigDecimal.op_LessThanOrEqual(Neo.BigDecimal,Neo.BigDecimal)
  name: operator <=(BigDecimal, BigDecimal)
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_op_LessThanOrEqual_Neo_BigDecimal_Neo_BigDecimal_
  commentId: M:Neo.BigDecimal.op_LessThanOrEqual(Neo.BigDecimal,Neo.BigDecimal)
  name.vb: <=(BigDecimal, BigDecimal)
  fullName: Neo.BigDecimal.operator <=(Neo.BigDecimal, Neo.BigDecimal)
  fullName.vb: Neo.BigDecimal.<=(Neo.BigDecimal, Neo.BigDecimal)
  nameWithType: BigDecimal.operator <=(BigDecimal, BigDecimal)
  nameWithType.vb: BigDecimal.<=(BigDecimal, BigDecimal)
- uid: Neo.BigDecimal.op_LessThanOrEqual*
  name: operator <=
  href: api/Neo.BigDecimal.html#Neo_BigDecimal_op_LessThanOrEqual_
  commentId: Overload:Neo.BigDecimal.op_LessThanOrEqual
  isSpec: "True"
  name.vb: <=
  fullName: Neo.BigDecimal.operator <=
  fullName.vb: Neo.BigDecimal.<=
  nameWithType: BigDecimal.operator <=
  nameWithType.vb: BigDecimal.<=
- uid: Neo.Cryptography
  name: Neo.Cryptography
  href: api/Neo.Cryptography.html
  commentId: N:Neo.Cryptography
  fullName: Neo.Cryptography
  nameWithType: Neo.Cryptography
- uid: Neo.Cryptography.Base58
  name: Base58
  href: api/Neo.Cryptography.Base58.html
  commentId: T:Neo.Cryptography.Base58
  fullName: Neo.Cryptography.Base58
  nameWithType: Base58
- uid: Neo.Cryptography.Base58.Alphabet
  name: Alphabet
  href: api/Neo.Cryptography.Base58.html#Neo_Cryptography_Base58_Alphabet
  commentId: F:Neo.Cryptography.Base58.Alphabet
  fullName: Neo.Cryptography.Base58.Alphabet
  nameWithType: Base58.Alphabet
- uid: Neo.Cryptography.Base58.Base58CheckDecode(System.String)
  name: Base58CheckDecode(string)
  href: api/Neo.Cryptography.Base58.html#Neo_Cryptography_Base58_Base58CheckDecode_System_String_
  commentId: M:Neo.Cryptography.Base58.Base58CheckDecode(System.String)
  name.vb: Base58CheckDecode(String)
  fullName: Neo.Cryptography.Base58.Base58CheckDecode(string)
  fullName.vb: Neo.Cryptography.Base58.Base58CheckDecode(String)
  nameWithType: Base58.Base58CheckDecode(string)
  nameWithType.vb: Base58.Base58CheckDecode(String)
- uid: Neo.Cryptography.Base58.Base58CheckDecode*
  name: Base58CheckDecode
  href: api/Neo.Cryptography.Base58.html#Neo_Cryptography_Base58_Base58CheckDecode_
  commentId: Overload:Neo.Cryptography.Base58.Base58CheckDecode
  isSpec: "True"
  fullName: Neo.Cryptography.Base58.Base58CheckDecode
  nameWithType: Base58.Base58CheckDecode
- uid: Neo.Cryptography.Base58.Base58CheckEncode(System.ReadOnlySpan{System.Byte})
  name: Base58CheckEncode(ReadOnlySpan<byte>)
  href: api/Neo.Cryptography.Base58.html#Neo_Cryptography_Base58_Base58CheckEncode_System_ReadOnlySpan_System_Byte__
  commentId: M:Neo.Cryptography.Base58.Base58CheckEncode(System.ReadOnlySpan{System.Byte})
  name.vb: Base58CheckEncode(ReadOnlySpan(Of Byte))
  fullName: Neo.Cryptography.Base58.Base58CheckEncode(System.ReadOnlySpan<byte>)
  fullName.vb: Neo.Cryptography.Base58.Base58CheckEncode(System.ReadOnlySpan(Of Byte))
  nameWithType: Base58.Base58CheckEncode(ReadOnlySpan<byte>)
  nameWithType.vb: Base58.Base58CheckEncode(ReadOnlySpan(Of Byte))
- uid: Neo.Cryptography.Base58.Base58CheckEncode*
  name: Base58CheckEncode
  href: api/Neo.Cryptography.Base58.html#Neo_Cryptography_Base58_Base58CheckEncode_
  commentId: Overload:Neo.Cryptography.Base58.Base58CheckEncode
  isSpec: "True"
  fullName: Neo.Cryptography.Base58.Base58CheckEncode
  nameWithType: Base58.Base58CheckEncode
- uid: Neo.Cryptography.Base58.Decode(System.String)
  name: Decode(string)
  href: api/Neo.Cryptography.Base58.html#Neo_Cryptography_Base58_Decode_System_String_
  commentId: M:Neo.Cryptography.Base58.Decode(System.String)
  name.vb: Decode(String)
  fullName: Neo.Cryptography.Base58.Decode(string)
  fullName.vb: Neo.Cryptography.Base58.Decode(String)
  nameWithType: Base58.Decode(string)
  nameWithType.vb: Base58.Decode(String)
- uid: Neo.Cryptography.Base58.Decode*
  name: Decode
  href: api/Neo.Cryptography.Base58.html#Neo_Cryptography_Base58_Decode_
  commentId: Overload:Neo.Cryptography.Base58.Decode
  isSpec: "True"
  fullName: Neo.Cryptography.Base58.Decode
  nameWithType: Base58.Decode
- uid: Neo.Cryptography.Base58.Encode(System.ReadOnlySpan{System.Byte})
  name: Encode(ReadOnlySpan<byte>)
  href: api/Neo.Cryptography.Base58.html#Neo_Cryptography_Base58_Encode_System_ReadOnlySpan_System_Byte__
  commentId: M:Neo.Cryptography.Base58.Encode(System.ReadOnlySpan{System.Byte})
  name.vb: Encode(ReadOnlySpan(Of Byte))
  fullName: Neo.Cryptography.Base58.Encode(System.ReadOnlySpan<byte>)
  fullName.vb: Neo.Cryptography.Base58.Encode(System.ReadOnlySpan(Of Byte))
  nameWithType: Base58.Encode(ReadOnlySpan<byte>)
  nameWithType.vb: Base58.Encode(ReadOnlySpan(Of Byte))
- uid: Neo.Cryptography.Base58.Encode*
  name: Encode
  href: api/Neo.Cryptography.Base58.html#Neo_Cryptography_Base58_Encode_
  commentId: Overload:Neo.Cryptography.Base58.Encode
  isSpec: "True"
  fullName: Neo.Cryptography.Base58.Encode
  nameWithType: Base58.Encode
- uid: Neo.Cryptography.BloomFilter
  name: BloomFilter
  href: api/Neo.Cryptography.BloomFilter.html
  commentId: T:Neo.Cryptography.BloomFilter
  fullName: Neo.Cryptography.BloomFilter
  nameWithType: BloomFilter
- uid: Neo.Cryptography.BloomFilter.#ctor(System.Int32,System.Int32,System.UInt32)
  name: BloomFilter(int, int, uint)
  href: api/Neo.Cryptography.BloomFilter.html#Neo_Cryptography_BloomFilter__ctor_System_Int32_System_Int32_System_UInt32_
  commentId: M:Neo.Cryptography.BloomFilter.#ctor(System.Int32,System.Int32,System.UInt32)
  name.vb: New(Integer, Integer, UInteger)
  fullName: Neo.Cryptography.BloomFilter.BloomFilter(int, int, uint)
  fullName.vb: Neo.Cryptography.BloomFilter.New(Integer, Integer, UInteger)
  nameWithType: BloomFilter.BloomFilter(int, int, uint)
  nameWithType.vb: BloomFilter.New(Integer, Integer, UInteger)
- uid: Neo.Cryptography.BloomFilter.#ctor(System.Int32,System.Int32,System.UInt32,System.ReadOnlyMemory{System.Byte})
  name: BloomFilter(int, int, uint, ReadOnlyMemory<byte>)
  href: api/Neo.Cryptography.BloomFilter.html#Neo_Cryptography_BloomFilter__ctor_System_Int32_System_Int32_System_UInt32_System_ReadOnlyMemory_System_Byte__
  commentId: M:Neo.Cryptography.BloomFilter.#ctor(System.Int32,System.Int32,System.UInt32,System.ReadOnlyMemory{System.Byte})
  name.vb: New(Integer, Integer, UInteger, ReadOnlyMemory(Of Byte))
  fullName: Neo.Cryptography.BloomFilter.BloomFilter(int, int, uint, System.ReadOnlyMemory<byte>)
  fullName.vb: Neo.Cryptography.BloomFilter.New(Integer, Integer, UInteger, System.ReadOnlyMemory(Of Byte))
  nameWithType: BloomFilter.BloomFilter(int, int, uint, ReadOnlyMemory<byte>)
  nameWithType.vb: BloomFilter.New(Integer, Integer, UInteger, ReadOnlyMemory(Of Byte))
- uid: Neo.Cryptography.BloomFilter.#ctor*
  name: BloomFilter
  href: api/Neo.Cryptography.BloomFilter.html#Neo_Cryptography_BloomFilter__ctor_
  commentId: Overload:Neo.Cryptography.BloomFilter.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Cryptography.BloomFilter.BloomFilter
  fullName.vb: Neo.Cryptography.BloomFilter.New
  nameWithType: BloomFilter.BloomFilter
  nameWithType.vb: BloomFilter.New
- uid: Neo.Cryptography.BloomFilter.Add(System.ReadOnlyMemory{System.Byte})
  name: Add(ReadOnlyMemory<byte>)
  href: api/Neo.Cryptography.BloomFilter.html#Neo_Cryptography_BloomFilter_Add_System_ReadOnlyMemory_System_Byte__
  commentId: M:Neo.Cryptography.BloomFilter.Add(System.ReadOnlyMemory{System.Byte})
  name.vb: Add(ReadOnlyMemory(Of Byte))
  fullName: Neo.Cryptography.BloomFilter.Add(System.ReadOnlyMemory<byte>)
  fullName.vb: Neo.Cryptography.BloomFilter.Add(System.ReadOnlyMemory(Of Byte))
  nameWithType: BloomFilter.Add(ReadOnlyMemory<byte>)
  nameWithType.vb: BloomFilter.Add(ReadOnlyMemory(Of Byte))
- uid: Neo.Cryptography.BloomFilter.Add*
  name: Add
  href: api/Neo.Cryptography.BloomFilter.html#Neo_Cryptography_BloomFilter_Add_
  commentId: Overload:Neo.Cryptography.BloomFilter.Add
  isSpec: "True"
  fullName: Neo.Cryptography.BloomFilter.Add
  nameWithType: BloomFilter.Add
- uid: Neo.Cryptography.BloomFilter.Check(System.Byte[])
  name: Check(byte[])
  href: api/Neo.Cryptography.BloomFilter.html#Neo_Cryptography_BloomFilter_Check_System_Byte___
  commentId: M:Neo.Cryptography.BloomFilter.Check(System.Byte[])
  name.vb: Check(Byte())
  fullName: Neo.Cryptography.BloomFilter.Check(byte[])
  fullName.vb: Neo.Cryptography.BloomFilter.Check(Byte())
  nameWithType: BloomFilter.Check(byte[])
  nameWithType.vb: BloomFilter.Check(Byte())
- uid: Neo.Cryptography.BloomFilter.Check*
  name: Check
  href: api/Neo.Cryptography.BloomFilter.html#Neo_Cryptography_BloomFilter_Check_
  commentId: Overload:Neo.Cryptography.BloomFilter.Check
  isSpec: "True"
  fullName: Neo.Cryptography.BloomFilter.Check
  nameWithType: BloomFilter.Check
- uid: Neo.Cryptography.BloomFilter.GetBits(System.Byte[])
  name: GetBits(byte[])
  href: api/Neo.Cryptography.BloomFilter.html#Neo_Cryptography_BloomFilter_GetBits_System_Byte___
  commentId: M:Neo.Cryptography.BloomFilter.GetBits(System.Byte[])
  name.vb: GetBits(Byte())
  fullName: Neo.Cryptography.BloomFilter.GetBits(byte[])
  fullName.vb: Neo.Cryptography.BloomFilter.GetBits(Byte())
  nameWithType: BloomFilter.GetBits(byte[])
  nameWithType.vb: BloomFilter.GetBits(Byte())
- uid: Neo.Cryptography.BloomFilter.GetBits*
  name: GetBits
  href: api/Neo.Cryptography.BloomFilter.html#Neo_Cryptography_BloomFilter_GetBits_
  commentId: Overload:Neo.Cryptography.BloomFilter.GetBits
  isSpec: "True"
  fullName: Neo.Cryptography.BloomFilter.GetBits
  nameWithType: BloomFilter.GetBits
- uid: Neo.Cryptography.BloomFilter.K
  name: K
  href: api/Neo.Cryptography.BloomFilter.html#Neo_Cryptography_BloomFilter_K
  commentId: P:Neo.Cryptography.BloomFilter.K
  fullName: Neo.Cryptography.BloomFilter.K
  nameWithType: BloomFilter.K
- uid: Neo.Cryptography.BloomFilter.K*
  name: K
  href: api/Neo.Cryptography.BloomFilter.html#Neo_Cryptography_BloomFilter_K_
  commentId: Overload:Neo.Cryptography.BloomFilter.K
  isSpec: "True"
  fullName: Neo.Cryptography.BloomFilter.K
  nameWithType: BloomFilter.K
- uid: Neo.Cryptography.BloomFilter.M
  name: M
  href: api/Neo.Cryptography.BloomFilter.html#Neo_Cryptography_BloomFilter_M
  commentId: P:Neo.Cryptography.BloomFilter.M
  fullName: Neo.Cryptography.BloomFilter.M
  nameWithType: BloomFilter.M
- uid: Neo.Cryptography.BloomFilter.M*
  name: M
  href: api/Neo.Cryptography.BloomFilter.html#Neo_Cryptography_BloomFilter_M_
  commentId: Overload:Neo.Cryptography.BloomFilter.M
  isSpec: "True"
  fullName: Neo.Cryptography.BloomFilter.M
  nameWithType: BloomFilter.M
- uid: Neo.Cryptography.BloomFilter.Tweak
  name: Tweak
  href: api/Neo.Cryptography.BloomFilter.html#Neo_Cryptography_BloomFilter_Tweak
  commentId: P:Neo.Cryptography.BloomFilter.Tweak
  fullName: Neo.Cryptography.BloomFilter.Tweak
  nameWithType: BloomFilter.Tweak
- uid: Neo.Cryptography.BloomFilter.Tweak*
  name: Tweak
  href: api/Neo.Cryptography.BloomFilter.html#Neo_Cryptography_BloomFilter_Tweak_
  commentId: Overload:Neo.Cryptography.BloomFilter.Tweak
  isSpec: "True"
  fullName: Neo.Cryptography.BloomFilter.Tweak
  nameWithType: BloomFilter.Tweak
- uid: Neo.Cryptography.Crypto
  name: Crypto
  href: api/Neo.Cryptography.Crypto.html
  commentId: T:Neo.Cryptography.Crypto
  fullName: Neo.Cryptography.Crypto
  nameWithType: Crypto
- uid: Neo.Cryptography.Crypto.Hash160(System.ReadOnlySpan{System.Byte})
  name: Hash160(ReadOnlySpan<byte>)
  href: api/Neo.Cryptography.Crypto.html#Neo_Cryptography_Crypto_Hash160_System_ReadOnlySpan_System_Byte__
  commentId: M:Neo.Cryptography.Crypto.Hash160(System.ReadOnlySpan{System.Byte})
  name.vb: Hash160(ReadOnlySpan(Of Byte))
  fullName: Neo.Cryptography.Crypto.Hash160(System.ReadOnlySpan<byte>)
  fullName.vb: Neo.Cryptography.Crypto.Hash160(System.ReadOnlySpan(Of Byte))
  nameWithType: Crypto.Hash160(ReadOnlySpan<byte>)
  nameWithType.vb: Crypto.Hash160(ReadOnlySpan(Of Byte))
- uid: Neo.Cryptography.Crypto.Hash160*
  name: Hash160
  href: api/Neo.Cryptography.Crypto.html#Neo_Cryptography_Crypto_Hash160_
  commentId: Overload:Neo.Cryptography.Crypto.Hash160
  isSpec: "True"
  fullName: Neo.Cryptography.Crypto.Hash160
  nameWithType: Crypto.Hash160
- uid: Neo.Cryptography.Crypto.Hash256(System.ReadOnlySpan{System.Byte})
  name: Hash256(ReadOnlySpan<byte>)
  href: api/Neo.Cryptography.Crypto.html#Neo_Cryptography_Crypto_Hash256_System_ReadOnlySpan_System_Byte__
  commentId: M:Neo.Cryptography.Crypto.Hash256(System.ReadOnlySpan{System.Byte})
  name.vb: Hash256(ReadOnlySpan(Of Byte))
  fullName: Neo.Cryptography.Crypto.Hash256(System.ReadOnlySpan<byte>)
  fullName.vb: Neo.Cryptography.Crypto.Hash256(System.ReadOnlySpan(Of Byte))
  nameWithType: Crypto.Hash256(ReadOnlySpan<byte>)
  nameWithType.vb: Crypto.Hash256(ReadOnlySpan(Of Byte))
- uid: Neo.Cryptography.Crypto.Hash256*
  name: Hash256
  href: api/Neo.Cryptography.Crypto.html#Neo_Cryptography_Crypto_Hash256_
  commentId: Overload:Neo.Cryptography.Crypto.Hash256
  isSpec: "True"
  fullName: Neo.Cryptography.Crypto.Hash256
  nameWithType: Crypto.Hash256
- uid: Neo.Cryptography.Crypto.Sign(System.Byte[],System.Byte[],System.Byte[])
  name: Sign(byte[], byte[], byte[])
  href: api/Neo.Cryptography.Crypto.html#Neo_Cryptography_Crypto_Sign_System_Byte___System_Byte___System_Byte___
  commentId: M:Neo.Cryptography.Crypto.Sign(System.Byte[],System.Byte[],System.Byte[])
  name.vb: Sign(Byte(), Byte(), Byte())
  fullName: Neo.Cryptography.Crypto.Sign(byte[], byte[], byte[])
  fullName.vb: Neo.Cryptography.Crypto.Sign(Byte(), Byte(), Byte())
  nameWithType: Crypto.Sign(byte[], byte[], byte[])
  nameWithType.vb: Crypto.Sign(Byte(), Byte(), Byte())
- uid: Neo.Cryptography.Crypto.Sign*
  name: Sign
  href: api/Neo.Cryptography.Crypto.html#Neo_Cryptography_Crypto_Sign_
  commentId: Overload:Neo.Cryptography.Crypto.Sign
  isSpec: "True"
  fullName: Neo.Cryptography.Crypto.Sign
  nameWithType: Crypto.Sign
- uid: Neo.Cryptography.Crypto.VerifySignature(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},Neo.Cryptography.ECC.ECPoint)
  name: VerifySignature(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ECPoint)
  href: api/Neo.Cryptography.Crypto.html#Neo_Cryptography_Crypto_VerifySignature_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__Neo_Cryptography_ECC_ECPoint_
  commentId: M:Neo.Cryptography.Crypto.VerifySignature(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},Neo.Cryptography.ECC.ECPoint)
  name.vb: VerifySignature(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ECPoint)
  fullName: Neo.Cryptography.Crypto.VerifySignature(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, Neo.Cryptography.ECC.ECPoint)
  fullName.vb: Neo.Cryptography.Crypto.VerifySignature(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), Neo.Cryptography.ECC.ECPoint)
  nameWithType: Crypto.VerifySignature(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ECPoint)
  nameWithType.vb: Crypto.VerifySignature(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ECPoint)
- uid: Neo.Cryptography.Crypto.VerifySignature(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},Neo.Cryptography.ECC.ECCurve)
  name: VerifySignature(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ECCurve)
  href: api/Neo.Cryptography.Crypto.html#Neo_Cryptography_Crypto_VerifySignature_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__Neo_Cryptography_ECC_ECCurve_
  commentId: M:Neo.Cryptography.Crypto.VerifySignature(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},Neo.Cryptography.ECC.ECCurve)
  name.vb: VerifySignature(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ECCurve)
  fullName: Neo.Cryptography.Crypto.VerifySignature(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, Neo.Cryptography.ECC.ECCurve)
  fullName.vb: Neo.Cryptography.Crypto.VerifySignature(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), Neo.Cryptography.ECC.ECCurve)
  nameWithType: Crypto.VerifySignature(ReadOnlySpan<byte>, ReadOnlySpan<byte>, ReadOnlySpan<byte>, ECCurve)
  nameWithType.vb: Crypto.VerifySignature(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), ECCurve)
- uid: Neo.Cryptography.Crypto.VerifySignature*
  name: VerifySignature
  href: api/Neo.Cryptography.Crypto.html#Neo_Cryptography_Crypto_VerifySignature_
  commentId: Overload:Neo.Cryptography.Crypto.VerifySignature
  isSpec: "True"
  fullName: Neo.Cryptography.Crypto.VerifySignature
  nameWithType: Crypto.VerifySignature
- uid: Neo.Cryptography.ECC
  name: Neo.Cryptography.ECC
  href: api/Neo.Cryptography.ECC.html
  commentId: N:Neo.Cryptography.ECC
  fullName: Neo.Cryptography.ECC
  nameWithType: Neo.Cryptography.ECC
- uid: Neo.Cryptography.ECC.ECCurve
  name: ECCurve
  href: api/Neo.Cryptography.ECC.ECCurve.html
  commentId: T:Neo.Cryptography.ECC.ECCurve
  fullName: Neo.Cryptography.ECC.ECCurve
  nameWithType: ECCurve
- uid: Neo.Cryptography.ECC.ECCurve.G
  name: G
  href: api/Neo.Cryptography.ECC.ECCurve.html#Neo_Cryptography_ECC_ECCurve_G
  commentId: F:Neo.Cryptography.ECC.ECCurve.G
  fullName: Neo.Cryptography.ECC.ECCurve.G
  nameWithType: ECCurve.G
- uid: Neo.Cryptography.ECC.ECCurve.Infinity
  name: Infinity
  href: api/Neo.Cryptography.ECC.ECCurve.html#Neo_Cryptography_ECC_ECCurve_Infinity
  commentId: F:Neo.Cryptography.ECC.ECCurve.Infinity
  fullName: Neo.Cryptography.ECC.ECCurve.Infinity
  nameWithType: ECCurve.Infinity
- uid: Neo.Cryptography.ECC.ECCurve.N
  name: N
  href: api/Neo.Cryptography.ECC.ECCurve.html#Neo_Cryptography_ECC_ECCurve_N
  commentId: F:Neo.Cryptography.ECC.ECCurve.N
  fullName: Neo.Cryptography.ECC.ECCurve.N
  nameWithType: ECCurve.N
- uid: Neo.Cryptography.ECC.ECCurve.Secp256k1
  name: Secp256k1
  href: api/Neo.Cryptography.ECC.ECCurve.html#Neo_Cryptography_ECC_ECCurve_Secp256k1
  commentId: F:Neo.Cryptography.ECC.ECCurve.Secp256k1
  fullName: Neo.Cryptography.ECC.ECCurve.Secp256k1
  nameWithType: ECCurve.Secp256k1
- uid: Neo.Cryptography.ECC.ECCurve.Secp256r1
  name: Secp256r1
  href: api/Neo.Cryptography.ECC.ECCurve.html#Neo_Cryptography_ECC_ECCurve_Secp256r1
  commentId: F:Neo.Cryptography.ECC.ECCurve.Secp256r1
  fullName: Neo.Cryptography.ECC.ECCurve.Secp256r1
  nameWithType: ECCurve.Secp256r1
- uid: Neo.Cryptography.ECC.ECPoint
  name: ECPoint
  href: api/Neo.Cryptography.ECC.ECPoint.html
  commentId: T:Neo.Cryptography.ECC.ECPoint
  fullName: Neo.Cryptography.ECC.ECPoint
  nameWithType: ECPoint
- uid: Neo.Cryptography.ECC.ECPoint.#ctor
  name: ECPoint()
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint__ctor
  commentId: M:Neo.Cryptography.ECC.ECPoint.#ctor
  name.vb: New()
  fullName: Neo.Cryptography.ECC.ECPoint.ECPoint()
  fullName.vb: Neo.Cryptography.ECC.ECPoint.New()
  nameWithType: ECPoint.ECPoint()
  nameWithType.vb: ECPoint.New()
- uid: Neo.Cryptography.ECC.ECPoint.#ctor*
  name: ECPoint
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint__ctor_
  commentId: Overload:Neo.Cryptography.ECC.ECPoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Cryptography.ECC.ECPoint.ECPoint
  fullName.vb: Neo.Cryptography.ECC.ECPoint.New
  nameWithType: ECPoint.ECPoint
  nameWithType.vb: ECPoint.New
- uid: Neo.Cryptography.ECC.ECPoint.CompareTo(Neo.Cryptography.ECC.ECPoint)
  name: CompareTo(ECPoint)
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_CompareTo_Neo_Cryptography_ECC_ECPoint_
  commentId: M:Neo.Cryptography.ECC.ECPoint.CompareTo(Neo.Cryptography.ECC.ECPoint)
  fullName: Neo.Cryptography.ECC.ECPoint.CompareTo(Neo.Cryptography.ECC.ECPoint)
  nameWithType: ECPoint.CompareTo(ECPoint)
- uid: Neo.Cryptography.ECC.ECPoint.CompareTo*
  name: CompareTo
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_CompareTo_
  commentId: Overload:Neo.Cryptography.ECC.ECPoint.CompareTo
  isSpec: "True"
  fullName: Neo.Cryptography.ECC.ECPoint.CompareTo
  nameWithType: ECPoint.CompareTo
- uid: Neo.Cryptography.ECC.ECPoint.DecodePoint(System.ReadOnlySpan{System.Byte},Neo.Cryptography.ECC.ECCurve)
  name: DecodePoint(ReadOnlySpan<byte>, ECCurve)
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_DecodePoint_System_ReadOnlySpan_System_Byte__Neo_Cryptography_ECC_ECCurve_
  commentId: M:Neo.Cryptography.ECC.ECPoint.DecodePoint(System.ReadOnlySpan{System.Byte},Neo.Cryptography.ECC.ECCurve)
  name.vb: DecodePoint(ReadOnlySpan(Of Byte), ECCurve)
  fullName: Neo.Cryptography.ECC.ECPoint.DecodePoint(System.ReadOnlySpan<byte>, Neo.Cryptography.ECC.ECCurve)
  fullName.vb: Neo.Cryptography.ECC.ECPoint.DecodePoint(System.ReadOnlySpan(Of Byte), Neo.Cryptography.ECC.ECCurve)
  nameWithType: ECPoint.DecodePoint(ReadOnlySpan<byte>, ECCurve)
  nameWithType.vb: ECPoint.DecodePoint(ReadOnlySpan(Of Byte), ECCurve)
- uid: Neo.Cryptography.ECC.ECPoint.DecodePoint*
  name: DecodePoint
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_DecodePoint_
  commentId: Overload:Neo.Cryptography.ECC.ECPoint.DecodePoint
  isSpec: "True"
  fullName: Neo.Cryptography.ECC.ECPoint.DecodePoint
  nameWithType: ECPoint.DecodePoint
- uid: Neo.Cryptography.ECC.ECPoint.DeserializeFrom(Neo.IO.MemoryReader@,Neo.Cryptography.ECC.ECCurve)
  name: DeserializeFrom(ref MemoryReader, ECCurve)
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_DeserializeFrom_Neo_IO_MemoryReader__Neo_Cryptography_ECC_ECCurve_
  commentId: M:Neo.Cryptography.ECC.ECPoint.DeserializeFrom(Neo.IO.MemoryReader@,Neo.Cryptography.ECC.ECCurve)
  name.vb: DeserializeFrom(MemoryReader, ECCurve)
  fullName: Neo.Cryptography.ECC.ECPoint.DeserializeFrom(ref Neo.IO.MemoryReader, Neo.Cryptography.ECC.ECCurve)
  fullName.vb: Neo.Cryptography.ECC.ECPoint.DeserializeFrom(Neo.IO.MemoryReader, Neo.Cryptography.ECC.ECCurve)
  nameWithType: ECPoint.DeserializeFrom(ref MemoryReader, ECCurve)
  nameWithType.vb: ECPoint.DeserializeFrom(MemoryReader, ECCurve)
- uid: Neo.Cryptography.ECC.ECPoint.DeserializeFrom*
  name: DeserializeFrom
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_DeserializeFrom_
  commentId: Overload:Neo.Cryptography.ECC.ECPoint.DeserializeFrom
  isSpec: "True"
  fullName: Neo.Cryptography.ECC.ECPoint.DeserializeFrom
  nameWithType: ECPoint.DeserializeFrom
- uid: Neo.Cryptography.ECC.ECPoint.EncodePoint(System.Boolean)
  name: EncodePoint(bool)
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_EncodePoint_System_Boolean_
  commentId: M:Neo.Cryptography.ECC.ECPoint.EncodePoint(System.Boolean)
  name.vb: EncodePoint(Boolean)
  fullName: Neo.Cryptography.ECC.ECPoint.EncodePoint(bool)
  fullName.vb: Neo.Cryptography.ECC.ECPoint.EncodePoint(Boolean)
  nameWithType: ECPoint.EncodePoint(bool)
  nameWithType.vb: ECPoint.EncodePoint(Boolean)
- uid: Neo.Cryptography.ECC.ECPoint.EncodePoint*
  name: EncodePoint
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_EncodePoint_
  commentId: Overload:Neo.Cryptography.ECC.ECPoint.EncodePoint
  isSpec: "True"
  fullName: Neo.Cryptography.ECC.ECPoint.EncodePoint
  nameWithType: ECPoint.EncodePoint
- uid: Neo.Cryptography.ECC.ECPoint.Equals(Neo.Cryptography.ECC.ECPoint)
  name: Equals(ECPoint)
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_Equals_Neo_Cryptography_ECC_ECPoint_
  commentId: M:Neo.Cryptography.ECC.ECPoint.Equals(Neo.Cryptography.ECC.ECPoint)
  fullName: Neo.Cryptography.ECC.ECPoint.Equals(Neo.Cryptography.ECC.ECPoint)
  nameWithType: ECPoint.Equals(ECPoint)
- uid: Neo.Cryptography.ECC.ECPoint.Equals(System.Object)
  name: Equals(object)
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_Equals_System_Object_
  commentId: M:Neo.Cryptography.ECC.ECPoint.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Neo.Cryptography.ECC.ECPoint.Equals(object)
  fullName.vb: Neo.Cryptography.ECC.ECPoint.Equals(Object)
  nameWithType: ECPoint.Equals(object)
  nameWithType.vb: ECPoint.Equals(Object)
- uid: Neo.Cryptography.ECC.ECPoint.Equals*
  name: Equals
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_Equals_
  commentId: Overload:Neo.Cryptography.ECC.ECPoint.Equals
  isSpec: "True"
  fullName: Neo.Cryptography.ECC.ECPoint.Equals
  nameWithType: ECPoint.Equals
- uid: Neo.Cryptography.ECC.ECPoint.FromBytes(System.Byte[],Neo.Cryptography.ECC.ECCurve)
  name: FromBytes(byte[], ECCurve)
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_FromBytes_System_Byte___Neo_Cryptography_ECC_ECCurve_
  commentId: M:Neo.Cryptography.ECC.ECPoint.FromBytes(System.Byte[],Neo.Cryptography.ECC.ECCurve)
  name.vb: FromBytes(Byte(), ECCurve)
  fullName: Neo.Cryptography.ECC.ECPoint.FromBytes(byte[], Neo.Cryptography.ECC.ECCurve)
  fullName.vb: Neo.Cryptography.ECC.ECPoint.FromBytes(Byte(), Neo.Cryptography.ECC.ECCurve)
  nameWithType: ECPoint.FromBytes(byte[], ECCurve)
  nameWithType.vb: ECPoint.FromBytes(Byte(), ECCurve)
- uid: Neo.Cryptography.ECC.ECPoint.FromBytes*
  name: FromBytes
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_FromBytes_
  commentId: Overload:Neo.Cryptography.ECC.ECPoint.FromBytes
  isSpec: "True"
  fullName: Neo.Cryptography.ECC.ECPoint.FromBytes
  nameWithType: ECPoint.FromBytes
- uid: Neo.Cryptography.ECC.ECPoint.GetHashCode
  name: GetHashCode()
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_GetHashCode
  commentId: M:Neo.Cryptography.ECC.ECPoint.GetHashCode
  fullName: Neo.Cryptography.ECC.ECPoint.GetHashCode()
  nameWithType: ECPoint.GetHashCode()
- uid: Neo.Cryptography.ECC.ECPoint.GetHashCode*
  name: GetHashCode
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_GetHashCode_
  commentId: Overload:Neo.Cryptography.ECC.ECPoint.GetHashCode
  isSpec: "True"
  fullName: Neo.Cryptography.ECC.ECPoint.GetHashCode
  nameWithType: ECPoint.GetHashCode
- uid: Neo.Cryptography.ECC.ECPoint.IsInfinity
  name: IsInfinity
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_IsInfinity
  commentId: P:Neo.Cryptography.ECC.ECPoint.IsInfinity
  fullName: Neo.Cryptography.ECC.ECPoint.IsInfinity
  nameWithType: ECPoint.IsInfinity
- uid: Neo.Cryptography.ECC.ECPoint.IsInfinity*
  name: IsInfinity
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_IsInfinity_
  commentId: Overload:Neo.Cryptography.ECC.ECPoint.IsInfinity
  isSpec: "True"
  fullName: Neo.Cryptography.ECC.ECPoint.IsInfinity
  nameWithType: ECPoint.IsInfinity
- uid: Neo.Cryptography.ECC.ECPoint.Parse(System.String,Neo.Cryptography.ECC.ECCurve)
  name: Parse(string, ECCurve)
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_Parse_System_String_Neo_Cryptography_ECC_ECCurve_
  commentId: M:Neo.Cryptography.ECC.ECPoint.Parse(System.String,Neo.Cryptography.ECC.ECCurve)
  name.vb: Parse(String, ECCurve)
  fullName: Neo.Cryptography.ECC.ECPoint.Parse(string, Neo.Cryptography.ECC.ECCurve)
  fullName.vb: Neo.Cryptography.ECC.ECPoint.Parse(String, Neo.Cryptography.ECC.ECCurve)
  nameWithType: ECPoint.Parse(string, ECCurve)
  nameWithType.vb: ECPoint.Parse(String, ECCurve)
- uid: Neo.Cryptography.ECC.ECPoint.Parse*
  name: Parse
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_Parse_
  commentId: Overload:Neo.Cryptography.ECC.ECPoint.Parse
  isSpec: "True"
  fullName: Neo.Cryptography.ECC.ECPoint.Parse
  nameWithType: ECPoint.Parse
- uid: Neo.Cryptography.ECC.ECPoint.Size
  name: Size
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_Size
  commentId: P:Neo.Cryptography.ECC.ECPoint.Size
  fullName: Neo.Cryptography.ECC.ECPoint.Size
  nameWithType: ECPoint.Size
- uid: Neo.Cryptography.ECC.ECPoint.Size*
  name: Size
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_Size_
  commentId: Overload:Neo.Cryptography.ECC.ECPoint.Size
  isSpec: "True"
  fullName: Neo.Cryptography.ECC.ECPoint.Size
  nameWithType: ECPoint.Size
- uid: Neo.Cryptography.ECC.ECPoint.ToString
  name: ToString()
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_ToString
  commentId: M:Neo.Cryptography.ECC.ECPoint.ToString
  fullName: Neo.Cryptography.ECC.ECPoint.ToString()
  nameWithType: ECPoint.ToString()
- uid: Neo.Cryptography.ECC.ECPoint.ToString*
  name: ToString
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_ToString_
  commentId: Overload:Neo.Cryptography.ECC.ECPoint.ToString
  isSpec: "True"
  fullName: Neo.Cryptography.ECC.ECPoint.ToString
  nameWithType: ECPoint.ToString
- uid: Neo.Cryptography.ECC.ECPoint.TryParse(System.String,Neo.Cryptography.ECC.ECCurve,Neo.Cryptography.ECC.ECPoint@)
  name: TryParse(string, ECCurve, out ECPoint)
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_TryParse_System_String_Neo_Cryptography_ECC_ECCurve_Neo_Cryptography_ECC_ECPoint__
  commentId: M:Neo.Cryptography.ECC.ECPoint.TryParse(System.String,Neo.Cryptography.ECC.ECCurve,Neo.Cryptography.ECC.ECPoint@)
  name.vb: TryParse(String, ECCurve, ECPoint)
  fullName: Neo.Cryptography.ECC.ECPoint.TryParse(string, Neo.Cryptography.ECC.ECCurve, out Neo.Cryptography.ECC.ECPoint)
  fullName.vb: Neo.Cryptography.ECC.ECPoint.TryParse(String, Neo.Cryptography.ECC.ECCurve, Neo.Cryptography.ECC.ECPoint)
  nameWithType: ECPoint.TryParse(string, ECCurve, out ECPoint)
  nameWithType.vb: ECPoint.TryParse(String, ECCurve, ECPoint)
- uid: Neo.Cryptography.ECC.ECPoint.TryParse*
  name: TryParse
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_TryParse_
  commentId: Overload:Neo.Cryptography.ECC.ECPoint.TryParse
  isSpec: "True"
  fullName: Neo.Cryptography.ECC.ECPoint.TryParse
  nameWithType: ECPoint.TryParse
- uid: Neo.Cryptography.ECC.ECPoint.op_Addition(Neo.Cryptography.ECC.ECPoint,Neo.Cryptography.ECC.ECPoint)
  name: operator +(ECPoint, ECPoint)
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_op_Addition_Neo_Cryptography_ECC_ECPoint_Neo_Cryptography_ECC_ECPoint_
  commentId: M:Neo.Cryptography.ECC.ECPoint.op_Addition(Neo.Cryptography.ECC.ECPoint,Neo.Cryptography.ECC.ECPoint)
  name.vb: +(ECPoint, ECPoint)
  fullName: Neo.Cryptography.ECC.ECPoint.operator +(Neo.Cryptography.ECC.ECPoint, Neo.Cryptography.ECC.ECPoint)
  fullName.vb: Neo.Cryptography.ECC.ECPoint.+(Neo.Cryptography.ECC.ECPoint, Neo.Cryptography.ECC.ECPoint)
  nameWithType: ECPoint.operator +(ECPoint, ECPoint)
  nameWithType.vb: ECPoint.+(ECPoint, ECPoint)
- uid: Neo.Cryptography.ECC.ECPoint.op_Addition*
  name: operator +
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_op_Addition_
  commentId: Overload:Neo.Cryptography.ECC.ECPoint.op_Addition
  isSpec: "True"
  name.vb: +
  fullName: Neo.Cryptography.ECC.ECPoint.operator +
  fullName.vb: Neo.Cryptography.ECC.ECPoint.+
  nameWithType: ECPoint.operator +
  nameWithType.vb: ECPoint.+
- uid: Neo.Cryptography.ECC.ECPoint.op_Multiply(Neo.Cryptography.ECC.ECPoint,System.Byte[])
  name: operator *(ECPoint, byte[])
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_op_Multiply_Neo_Cryptography_ECC_ECPoint_System_Byte___
  commentId: M:Neo.Cryptography.ECC.ECPoint.op_Multiply(Neo.Cryptography.ECC.ECPoint,System.Byte[])
  name.vb: '*(ECPoint, Byte())'
  fullName: Neo.Cryptography.ECC.ECPoint.operator *(Neo.Cryptography.ECC.ECPoint, byte[])
  fullName.vb: Neo.Cryptography.ECC.ECPoint.*(Neo.Cryptography.ECC.ECPoint, Byte())
  nameWithType: ECPoint.operator *(ECPoint, byte[])
  nameWithType.vb: ECPoint.*(ECPoint, Byte())
- uid: Neo.Cryptography.ECC.ECPoint.op_Multiply*
  name: operator *
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_op_Multiply_
  commentId: Overload:Neo.Cryptography.ECC.ECPoint.op_Multiply
  isSpec: "True"
  name.vb: '*'
  fullName: Neo.Cryptography.ECC.ECPoint.operator *
  fullName.vb: Neo.Cryptography.ECC.ECPoint.*
  nameWithType: ECPoint.operator *
  nameWithType.vb: ECPoint.*
- uid: Neo.Cryptography.ECC.ECPoint.op_Subtraction(Neo.Cryptography.ECC.ECPoint,Neo.Cryptography.ECC.ECPoint)
  name: operator -(ECPoint, ECPoint)
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_op_Subtraction_Neo_Cryptography_ECC_ECPoint_Neo_Cryptography_ECC_ECPoint_
  commentId: M:Neo.Cryptography.ECC.ECPoint.op_Subtraction(Neo.Cryptography.ECC.ECPoint,Neo.Cryptography.ECC.ECPoint)
  name.vb: -(ECPoint, ECPoint)
  fullName: Neo.Cryptography.ECC.ECPoint.operator -(Neo.Cryptography.ECC.ECPoint, Neo.Cryptography.ECC.ECPoint)
  fullName.vb: Neo.Cryptography.ECC.ECPoint.-(Neo.Cryptography.ECC.ECPoint, Neo.Cryptography.ECC.ECPoint)
  nameWithType: ECPoint.operator -(ECPoint, ECPoint)
  nameWithType.vb: ECPoint.-(ECPoint, ECPoint)
- uid: Neo.Cryptography.ECC.ECPoint.op_Subtraction*
  name: operator -
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_op_Subtraction_
  commentId: Overload:Neo.Cryptography.ECC.ECPoint.op_Subtraction
  isSpec: "True"
  name.vb: '-'
  fullName: Neo.Cryptography.ECC.ECPoint.operator -
  fullName.vb: Neo.Cryptography.ECC.ECPoint.-
  nameWithType: ECPoint.operator -
  nameWithType.vb: ECPoint.-
- uid: Neo.Cryptography.ECC.ECPoint.op_UnaryNegation(Neo.Cryptography.ECC.ECPoint)
  name: operator -(ECPoint)
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_op_UnaryNegation_Neo_Cryptography_ECC_ECPoint_
  commentId: M:Neo.Cryptography.ECC.ECPoint.op_UnaryNegation(Neo.Cryptography.ECC.ECPoint)
  name.vb: -(ECPoint)
  fullName: Neo.Cryptography.ECC.ECPoint.operator -(Neo.Cryptography.ECC.ECPoint)
  fullName.vb: Neo.Cryptography.ECC.ECPoint.-(Neo.Cryptography.ECC.ECPoint)
  nameWithType: ECPoint.operator -(ECPoint)
  nameWithType.vb: ECPoint.-(ECPoint)
- uid: Neo.Cryptography.ECC.ECPoint.op_UnaryNegation*
  name: operator -
  href: api/Neo.Cryptography.ECC.ECPoint.html#Neo_Cryptography_ECC_ECPoint_op_UnaryNegation_
  commentId: Overload:Neo.Cryptography.ECC.ECPoint.op_UnaryNegation
  isSpec: "True"
  name.vb: '-'
  fullName: Neo.Cryptography.ECC.ECPoint.operator -
  fullName.vb: Neo.Cryptography.ECC.ECPoint.-
  nameWithType: ECPoint.operator -
  nameWithType.vb: ECPoint.-
- uid: Neo.Cryptography.Helper
  name: Helper
  href: api/Neo.Cryptography.Helper.html
  commentId: T:Neo.Cryptography.Helper
  fullName: Neo.Cryptography.Helper
  nameWithType: Helper
- uid: Neo.Cryptography.Helper.AES256Decrypt(System.Byte[],System.Byte[],System.Byte[])
  name: AES256Decrypt(byte[], byte[], byte[])
  href: api/Neo.Cryptography.Helper.html#Neo_Cryptography_Helper_AES256Decrypt_System_Byte___System_Byte___System_Byte___
  commentId: M:Neo.Cryptography.Helper.AES256Decrypt(System.Byte[],System.Byte[],System.Byte[])
  name.vb: AES256Decrypt(Byte(), Byte(), Byte())
  fullName: Neo.Cryptography.Helper.AES256Decrypt(byte[], byte[], byte[])
  fullName.vb: Neo.Cryptography.Helper.AES256Decrypt(Byte(), Byte(), Byte())
  nameWithType: Helper.AES256Decrypt(byte[], byte[], byte[])
  nameWithType.vb: Helper.AES256Decrypt(Byte(), Byte(), Byte())
- uid: Neo.Cryptography.Helper.AES256Decrypt*
  name: AES256Decrypt
  href: api/Neo.Cryptography.Helper.html#Neo_Cryptography_Helper_AES256Decrypt_
  commentId: Overload:Neo.Cryptography.Helper.AES256Decrypt
  isSpec: "True"
  fullName: Neo.Cryptography.Helper.AES256Decrypt
  nameWithType: Helper.AES256Decrypt
- uid: Neo.Cryptography.Helper.AES256Encrypt(System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  name: AES256Encrypt(byte[], byte[], byte[], byte[])
  href: api/Neo.Cryptography.Helper.html#Neo_Cryptography_Helper_AES256Encrypt_System_Byte___System_Byte___System_Byte___System_Byte___
  commentId: M:Neo.Cryptography.Helper.AES256Encrypt(System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  name.vb: AES256Encrypt(Byte(), Byte(), Byte(), Byte())
  fullName: Neo.Cryptography.Helper.AES256Encrypt(byte[], byte[], byte[], byte[])
  fullName.vb: Neo.Cryptography.Helper.AES256Encrypt(Byte(), Byte(), Byte(), Byte())
  nameWithType: Helper.AES256Encrypt(byte[], byte[], byte[], byte[])
  nameWithType.vb: Helper.AES256Encrypt(Byte(), Byte(), Byte(), Byte())
- uid: Neo.Cryptography.Helper.AES256Encrypt*
  name: AES256Encrypt
  href: api/Neo.Cryptography.Helper.html#Neo_Cryptography_Helper_AES256Encrypt_
  commentId: Overload:Neo.Cryptography.Helper.AES256Encrypt
  isSpec: "True"
  fullName: Neo.Cryptography.Helper.AES256Encrypt
  nameWithType: Helper.AES256Encrypt
- uid: Neo.Cryptography.Helper.ECDHDeriveKey(Neo.Wallets.KeyPair,Neo.Cryptography.ECC.ECPoint)
  name: ECDHDeriveKey(KeyPair, ECPoint)
  href: api/Neo.Cryptography.Helper.html#Neo_Cryptography_Helper_ECDHDeriveKey_Neo_Wallets_KeyPair_Neo_Cryptography_ECC_ECPoint_
  commentId: M:Neo.Cryptography.Helper.ECDHDeriveKey(Neo.Wallets.KeyPair,Neo.Cryptography.ECC.ECPoint)
  fullName: Neo.Cryptography.Helper.ECDHDeriveKey(Neo.Wallets.KeyPair, Neo.Cryptography.ECC.ECPoint)
  nameWithType: Helper.ECDHDeriveKey(KeyPair, ECPoint)
- uid: Neo.Cryptography.Helper.ECDHDeriveKey*
  name: ECDHDeriveKey
  href: api/Neo.Cryptography.Helper.html#Neo_Cryptography_Helper_ECDHDeriveKey_
  commentId: Overload:Neo.Cryptography.Helper.ECDHDeriveKey
  isSpec: "True"
  fullName: Neo.Cryptography.Helper.ECDHDeriveKey
  nameWithType: Helper.ECDHDeriveKey
- uid: Neo.Cryptography.Helper.Murmur128(System.Byte[],System.UInt32)
  name: Murmur128(byte[], uint)
  href: api/Neo.Cryptography.Helper.html#Neo_Cryptography_Helper_Murmur128_System_Byte___System_UInt32_
  commentId: M:Neo.Cryptography.Helper.Murmur128(System.Byte[],System.UInt32)
  name.vb: Murmur128(Byte(), UInteger)
  fullName: Neo.Cryptography.Helper.Murmur128(byte[], uint)
  fullName.vb: Neo.Cryptography.Helper.Murmur128(Byte(), UInteger)
  nameWithType: Helper.Murmur128(byte[], uint)
  nameWithType.vb: Helper.Murmur128(Byte(), UInteger)
- uid: Neo.Cryptography.Helper.Murmur128(System.ReadOnlySpan{System.Byte},System.UInt32)
  name: Murmur128(ReadOnlySpan<byte>, uint)
  href: api/Neo.Cryptography.Helper.html#Neo_Cryptography_Helper_Murmur128_System_ReadOnlySpan_System_Byte__System_UInt32_
  commentId: M:Neo.Cryptography.Helper.Murmur128(System.ReadOnlySpan{System.Byte},System.UInt32)
  name.vb: Murmur128(ReadOnlySpan(Of Byte), UInteger)
  fullName: Neo.Cryptography.Helper.Murmur128(System.ReadOnlySpan<byte>, uint)
  fullName.vb: Neo.Cryptography.Helper.Murmur128(System.ReadOnlySpan(Of Byte), UInteger)
  nameWithType: Helper.Murmur128(ReadOnlySpan<byte>, uint)
  nameWithType.vb: Helper.Murmur128(ReadOnlySpan(Of Byte), UInteger)
- uid: Neo.Cryptography.Helper.Murmur128*
  name: Murmur128
  href: api/Neo.Cryptography.Helper.html#Neo_Cryptography_Helper_Murmur128_
  commentId: Overload:Neo.Cryptography.Helper.Murmur128
  isSpec: "True"
  fullName: Neo.Cryptography.Helper.Murmur128
  nameWithType: Helper.Murmur128
- uid: Neo.Cryptography.Helper.Murmur32(System.Byte[],System.UInt32)
  name: Murmur32(byte[], uint)
  href: api/Neo.Cryptography.Helper.html#Neo_Cryptography_Helper_Murmur32_System_Byte___System_UInt32_
  commentId: M:Neo.Cryptography.Helper.Murmur32(System.Byte[],System.UInt32)
  name.vb: Murmur32(Byte(), UInteger)
  fullName: Neo.Cryptography.Helper.Murmur32(byte[], uint)
  fullName.vb: Neo.Cryptography.Helper.Murmur32(Byte(), UInteger)
  nameWithType: Helper.Murmur32(byte[], uint)
  nameWithType.vb: Helper.Murmur32(Byte(), UInteger)
- uid: Neo.Cryptography.Helper.Murmur32(System.ReadOnlySpan{System.Byte},System.UInt32)
  name: Murmur32(ReadOnlySpan<byte>, uint)
  href: api/Neo.Cryptography.Helper.html#Neo_Cryptography_Helper_Murmur32_System_ReadOnlySpan_System_Byte__System_UInt32_
  commentId: M:Neo.Cryptography.Helper.Murmur32(System.ReadOnlySpan{System.Byte},System.UInt32)
  name.vb: Murmur32(ReadOnlySpan(Of Byte), UInteger)
  fullName: Neo.Cryptography.Helper.Murmur32(System.ReadOnlySpan<byte>, uint)
  fullName.vb: Neo.Cryptography.Helper.Murmur32(System.ReadOnlySpan(Of Byte), UInteger)
  nameWithType: Helper.Murmur32(ReadOnlySpan<byte>, uint)
  nameWithType.vb: Helper.Murmur32(ReadOnlySpan(Of Byte), UInteger)
- uid: Neo.Cryptography.Helper.Murmur32*
  name: Murmur32
  href: api/Neo.Cryptography.Helper.html#Neo_Cryptography_Helper_Murmur32_
  commentId: Overload:Neo.Cryptography.Helper.Murmur32
  isSpec: "True"
  fullName: Neo.Cryptography.Helper.Murmur32
  nameWithType: Helper.Murmur32
- uid: Neo.Cryptography.Helper.RIPEMD160(System.Byte[])
  name: RIPEMD160(byte[])
  href: api/Neo.Cryptography.Helper.html#Neo_Cryptography_Helper_RIPEMD160_System_Byte___
  commentId: M:Neo.Cryptography.Helper.RIPEMD160(System.Byte[])
  name.vb: RIPEMD160(Byte())
  fullName: Neo.Cryptography.Helper.RIPEMD160(byte[])
  fullName.vb: Neo.Cryptography.Helper.RIPEMD160(Byte())
  nameWithType: Helper.RIPEMD160(byte[])
  nameWithType.vb: Helper.RIPEMD160(Byte())
- uid: Neo.Cryptography.Helper.RIPEMD160(System.ReadOnlySpan{System.Byte})
  name: RIPEMD160(ReadOnlySpan<byte>)
  href: api/Neo.Cryptography.Helper.html#Neo_Cryptography_Helper_RIPEMD160_System_ReadOnlySpan_System_Byte__
  commentId: M:Neo.Cryptography.Helper.RIPEMD160(System.ReadOnlySpan{System.Byte})
  name.vb: RIPEMD160(ReadOnlySpan(Of Byte))
  fullName: Neo.Cryptography.Helper.RIPEMD160(System.ReadOnlySpan<byte>)
  fullName.vb: Neo.Cryptography.Helper.RIPEMD160(System.ReadOnlySpan(Of Byte))
  nameWithType: Helper.RIPEMD160(ReadOnlySpan<byte>)
  nameWithType.vb: Helper.RIPEMD160(ReadOnlySpan(Of Byte))
- uid: Neo.Cryptography.Helper.RIPEMD160*
  name: RIPEMD160
  href: api/Neo.Cryptography.Helper.html#Neo_Cryptography_Helper_RIPEMD160_
  commentId: Overload:Neo.Cryptography.Helper.RIPEMD160
  isSpec: "True"
  fullName: Neo.Cryptography.Helper.RIPEMD160
  nameWithType: Helper.RIPEMD160
- uid: Neo.Cryptography.Helper.Sha256(System.Byte[])
  name: Sha256(byte[])
  href: api/Neo.Cryptography.Helper.html#Neo_Cryptography_Helper_Sha256_System_Byte___
  commentId: M:Neo.Cryptography.Helper.Sha256(System.Byte[])
  name.vb: Sha256(Byte())
  fullName: Neo.Cryptography.Helper.Sha256(byte[])
  fullName.vb: Neo.Cryptography.Helper.Sha256(Byte())
  nameWithType: Helper.Sha256(byte[])
  nameWithType.vb: Helper.Sha256(Byte())
- uid: Neo.Cryptography.Helper.Sha256(System.Byte[],System.Int32,System.Int32)
  name: Sha256(byte[], int, int)
  href: api/Neo.Cryptography.Helper.html#Neo_Cryptography_Helper_Sha256_System_Byte___System_Int32_System_Int32_
  commentId: M:Neo.Cryptography.Helper.Sha256(System.Byte[],System.Int32,System.Int32)
  name.vb: Sha256(Byte(), Integer, Integer)
  fullName: Neo.Cryptography.Helper.Sha256(byte[], int, int)
  fullName.vb: Neo.Cryptography.Helper.Sha256(Byte(), Integer, Integer)
  nameWithType: Helper.Sha256(byte[], int, int)
  nameWithType.vb: Helper.Sha256(Byte(), Integer, Integer)
- uid: Neo.Cryptography.Helper.Sha256(System.ReadOnlySpan{System.Byte})
  name: Sha256(ReadOnlySpan<byte>)
  href: api/Neo.Cryptography.Helper.html#Neo_Cryptography_Helper_Sha256_System_ReadOnlySpan_System_Byte__
  commentId: M:Neo.Cryptography.Helper.Sha256(System.ReadOnlySpan{System.Byte})
  name.vb: Sha256(ReadOnlySpan(Of Byte))
  fullName: Neo.Cryptography.Helper.Sha256(System.ReadOnlySpan<byte>)
  fullName.vb: Neo.Cryptography.Helper.Sha256(System.ReadOnlySpan(Of Byte))
  nameWithType: Helper.Sha256(ReadOnlySpan<byte>)
  nameWithType.vb: Helper.Sha256(ReadOnlySpan(Of Byte))
- uid: Neo.Cryptography.Helper.Sha256(System.Span{System.Byte})
  name: Sha256(Span<byte>)
  href: api/Neo.Cryptography.Helper.html#Neo_Cryptography_Helper_Sha256_System_Span_System_Byte__
  commentId: M:Neo.Cryptography.Helper.Sha256(System.Span{System.Byte})
  name.vb: Sha256(Span(Of Byte))
  fullName: Neo.Cryptography.Helper.Sha256(System.Span<byte>)
  fullName.vb: Neo.Cryptography.Helper.Sha256(System.Span(Of Byte))
  nameWithType: Helper.Sha256(Span<byte>)
  nameWithType.vb: Helper.Sha256(Span(Of Byte))
- uid: Neo.Cryptography.Helper.Sha256*
  name: Sha256
  href: api/Neo.Cryptography.Helper.html#Neo_Cryptography_Helper_Sha256_
  commentId: Overload:Neo.Cryptography.Helper.Sha256
  isSpec: "True"
  fullName: Neo.Cryptography.Helper.Sha256
  nameWithType: Helper.Sha256
- uid: Neo.Cryptography.MerkleTree
  name: MerkleTree
  href: api/Neo.Cryptography.MerkleTree.html
  commentId: T:Neo.Cryptography.MerkleTree
  fullName: Neo.Cryptography.MerkleTree
  nameWithType: MerkleTree
- uid: Neo.Cryptography.MerkleTree.ComputeRoot(Neo.UInt256[])
  name: ComputeRoot(UInt256[])
  href: api/Neo.Cryptography.MerkleTree.html#Neo_Cryptography_MerkleTree_ComputeRoot_Neo_UInt256___
  commentId: M:Neo.Cryptography.MerkleTree.ComputeRoot(Neo.UInt256[])
  name.vb: ComputeRoot(UInt256())
  fullName: Neo.Cryptography.MerkleTree.ComputeRoot(Neo.UInt256[])
  fullName.vb: Neo.Cryptography.MerkleTree.ComputeRoot(Neo.UInt256())
  nameWithType: MerkleTree.ComputeRoot(UInt256[])
  nameWithType.vb: MerkleTree.ComputeRoot(UInt256())
- uid: Neo.Cryptography.MerkleTree.ComputeRoot*
  name: ComputeRoot
  href: api/Neo.Cryptography.MerkleTree.html#Neo_Cryptography_MerkleTree_ComputeRoot_
  commentId: Overload:Neo.Cryptography.MerkleTree.ComputeRoot
  isSpec: "True"
  fullName: Neo.Cryptography.MerkleTree.ComputeRoot
  nameWithType: MerkleTree.ComputeRoot
- uid: Neo.Cryptography.MerkleTree.Depth
  name: Depth
  href: api/Neo.Cryptography.MerkleTree.html#Neo_Cryptography_MerkleTree_Depth
  commentId: P:Neo.Cryptography.MerkleTree.Depth
  fullName: Neo.Cryptography.MerkleTree.Depth
  nameWithType: MerkleTree.Depth
- uid: Neo.Cryptography.MerkleTree.Depth*
  name: Depth
  href: api/Neo.Cryptography.MerkleTree.html#Neo_Cryptography_MerkleTree_Depth_
  commentId: Overload:Neo.Cryptography.MerkleTree.Depth
  isSpec: "True"
  fullName: Neo.Cryptography.MerkleTree.Depth
  nameWithType: MerkleTree.Depth
- uid: Neo.Cryptography.MerkleTree.ToHashArray
  name: ToHashArray()
  href: api/Neo.Cryptography.MerkleTree.html#Neo_Cryptography_MerkleTree_ToHashArray
  commentId: M:Neo.Cryptography.MerkleTree.ToHashArray
  fullName: Neo.Cryptography.MerkleTree.ToHashArray()
  nameWithType: MerkleTree.ToHashArray()
- uid: Neo.Cryptography.MerkleTree.ToHashArray*
  name: ToHashArray
  href: api/Neo.Cryptography.MerkleTree.html#Neo_Cryptography_MerkleTree_ToHashArray_
  commentId: Overload:Neo.Cryptography.MerkleTree.ToHashArray
  isSpec: "True"
  fullName: Neo.Cryptography.MerkleTree.ToHashArray
  nameWithType: MerkleTree.ToHashArray
- uid: Neo.Cryptography.MerkleTree.Trim(System.Collections.BitArray)
  name: Trim(BitArray)
  href: api/Neo.Cryptography.MerkleTree.html#Neo_Cryptography_MerkleTree_Trim_System_Collections_BitArray_
  commentId: M:Neo.Cryptography.MerkleTree.Trim(System.Collections.BitArray)
  fullName: Neo.Cryptography.MerkleTree.Trim(System.Collections.BitArray)
  nameWithType: MerkleTree.Trim(BitArray)
- uid: Neo.Cryptography.MerkleTree.Trim*
  name: Trim
  href: api/Neo.Cryptography.MerkleTree.html#Neo_Cryptography_MerkleTree_Trim_
  commentId: Overload:Neo.Cryptography.MerkleTree.Trim
  isSpec: "True"
  fullName: Neo.Cryptography.MerkleTree.Trim
  nameWithType: MerkleTree.Trim
- uid: Neo.Cryptography.Murmur128
  name: Murmur128
  href: api/Neo.Cryptography.Murmur128.html
  commentId: T:Neo.Cryptography.Murmur128
  fullName: Neo.Cryptography.Murmur128
  nameWithType: Murmur128
- uid: Neo.Cryptography.Murmur128.#ctor(System.UInt32)
  name: Murmur128(uint)
  href: api/Neo.Cryptography.Murmur128.html#Neo_Cryptography_Murmur128__ctor_System_UInt32_
  commentId: M:Neo.Cryptography.Murmur128.#ctor(System.UInt32)
  name.vb: New(UInteger)
  fullName: Neo.Cryptography.Murmur128.Murmur128(uint)
  fullName.vb: Neo.Cryptography.Murmur128.New(UInteger)
  nameWithType: Murmur128.Murmur128(uint)
  nameWithType.vb: Murmur128.New(UInteger)
- uid: Neo.Cryptography.Murmur128.#ctor*
  name: Murmur128
  href: api/Neo.Cryptography.Murmur128.html#Neo_Cryptography_Murmur128__ctor_
  commentId: Overload:Neo.Cryptography.Murmur128.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Cryptography.Murmur128.Murmur128
  fullName.vb: Neo.Cryptography.Murmur128.New
  nameWithType: Murmur128.Murmur128
  nameWithType.vb: Murmur128.New
- uid: Neo.Cryptography.Murmur128.HashCore(System.Byte[],System.Int32,System.Int32)
  name: HashCore(byte[], int, int)
  href: api/Neo.Cryptography.Murmur128.html#Neo_Cryptography_Murmur128_HashCore_System_Byte___System_Int32_System_Int32_
  commentId: M:Neo.Cryptography.Murmur128.HashCore(System.Byte[],System.Int32,System.Int32)
  name.vb: HashCore(Byte(), Integer, Integer)
  fullName: Neo.Cryptography.Murmur128.HashCore(byte[], int, int)
  fullName.vb: Neo.Cryptography.Murmur128.HashCore(Byte(), Integer, Integer)
  nameWithType: Murmur128.HashCore(byte[], int, int)
  nameWithType.vb: Murmur128.HashCore(Byte(), Integer, Integer)
- uid: Neo.Cryptography.Murmur128.HashCore(System.ReadOnlySpan{System.Byte})
  name: HashCore(ReadOnlySpan<byte>)
  href: api/Neo.Cryptography.Murmur128.html#Neo_Cryptography_Murmur128_HashCore_System_ReadOnlySpan_System_Byte__
  commentId: M:Neo.Cryptography.Murmur128.HashCore(System.ReadOnlySpan{System.Byte})
  name.vb: HashCore(ReadOnlySpan(Of Byte))
  fullName: Neo.Cryptography.Murmur128.HashCore(System.ReadOnlySpan<byte>)
  fullName.vb: Neo.Cryptography.Murmur128.HashCore(System.ReadOnlySpan(Of Byte))
  nameWithType: Murmur128.HashCore(ReadOnlySpan<byte>)
  nameWithType.vb: Murmur128.HashCore(ReadOnlySpan(Of Byte))
- uid: Neo.Cryptography.Murmur128.HashCore*
  name: HashCore
  href: api/Neo.Cryptography.Murmur128.html#Neo_Cryptography_Murmur128_HashCore_
  commentId: Overload:Neo.Cryptography.Murmur128.HashCore
  isSpec: "True"
  fullName: Neo.Cryptography.Murmur128.HashCore
  nameWithType: Murmur128.HashCore
- uid: Neo.Cryptography.Murmur128.HashFinal
  name: HashFinal()
  href: api/Neo.Cryptography.Murmur128.html#Neo_Cryptography_Murmur128_HashFinal
  commentId: M:Neo.Cryptography.Murmur128.HashFinal
  fullName: Neo.Cryptography.Murmur128.HashFinal()
  nameWithType: Murmur128.HashFinal()
- uid: Neo.Cryptography.Murmur128.HashFinal*
  name: HashFinal
  href: api/Neo.Cryptography.Murmur128.html#Neo_Cryptography_Murmur128_HashFinal_
  commentId: Overload:Neo.Cryptography.Murmur128.HashFinal
  isSpec: "True"
  fullName: Neo.Cryptography.Murmur128.HashFinal
  nameWithType: Murmur128.HashFinal
- uid: Neo.Cryptography.Murmur128.HashSize
  name: HashSize
  href: api/Neo.Cryptography.Murmur128.html#Neo_Cryptography_Murmur128_HashSize
  commentId: P:Neo.Cryptography.Murmur128.HashSize
  fullName: Neo.Cryptography.Murmur128.HashSize
  nameWithType: Murmur128.HashSize
- uid: Neo.Cryptography.Murmur128.HashSize*
  name: HashSize
  href: api/Neo.Cryptography.Murmur128.html#Neo_Cryptography_Murmur128_HashSize_
  commentId: Overload:Neo.Cryptography.Murmur128.HashSize
  isSpec: "True"
  fullName: Neo.Cryptography.Murmur128.HashSize
  nameWithType: Murmur128.HashSize
- uid: Neo.Cryptography.Murmur128.Initialize
  name: Initialize()
  href: api/Neo.Cryptography.Murmur128.html#Neo_Cryptography_Murmur128_Initialize
  commentId: M:Neo.Cryptography.Murmur128.Initialize
  fullName: Neo.Cryptography.Murmur128.Initialize()
  nameWithType: Murmur128.Initialize()
- uid: Neo.Cryptography.Murmur128.Initialize*
  name: Initialize
  href: api/Neo.Cryptography.Murmur128.html#Neo_Cryptography_Murmur128_Initialize_
  commentId: Overload:Neo.Cryptography.Murmur128.Initialize
  isSpec: "True"
  fullName: Neo.Cryptography.Murmur128.Initialize
  nameWithType: Murmur128.Initialize
- uid: Neo.Cryptography.Murmur128.TryHashFinal(System.Span{System.Byte},System.Int32@)
  name: TryHashFinal(Span<byte>, out int)
  href: api/Neo.Cryptography.Murmur128.html#Neo_Cryptography_Murmur128_TryHashFinal_System_Span_System_Byte__System_Int32__
  commentId: M:Neo.Cryptography.Murmur128.TryHashFinal(System.Span{System.Byte},System.Int32@)
  name.vb: TryHashFinal(Span(Of Byte), Integer)
  fullName: Neo.Cryptography.Murmur128.TryHashFinal(System.Span<byte>, out int)
  fullName.vb: Neo.Cryptography.Murmur128.TryHashFinal(System.Span(Of Byte), Integer)
  nameWithType: Murmur128.TryHashFinal(Span<byte>, out int)
  nameWithType.vb: Murmur128.TryHashFinal(Span(Of Byte), Integer)
- uid: Neo.Cryptography.Murmur128.TryHashFinal*
  name: TryHashFinal
  href: api/Neo.Cryptography.Murmur128.html#Neo_Cryptography_Murmur128_TryHashFinal_
  commentId: Overload:Neo.Cryptography.Murmur128.TryHashFinal
  isSpec: "True"
  fullName: Neo.Cryptography.Murmur128.TryHashFinal
  nameWithType: Murmur128.TryHashFinal
- uid: Neo.Cryptography.Murmur32
  name: Murmur32
  href: api/Neo.Cryptography.Murmur32.html
  commentId: T:Neo.Cryptography.Murmur32
  fullName: Neo.Cryptography.Murmur32
  nameWithType: Murmur32
- uid: Neo.Cryptography.Murmur32.#ctor(System.UInt32)
  name: Murmur32(uint)
  href: api/Neo.Cryptography.Murmur32.html#Neo_Cryptography_Murmur32__ctor_System_UInt32_
  commentId: M:Neo.Cryptography.Murmur32.#ctor(System.UInt32)
  name.vb: New(UInteger)
  fullName: Neo.Cryptography.Murmur32.Murmur32(uint)
  fullName.vb: Neo.Cryptography.Murmur32.New(UInteger)
  nameWithType: Murmur32.Murmur32(uint)
  nameWithType.vb: Murmur32.New(UInteger)
- uid: Neo.Cryptography.Murmur32.#ctor*
  name: Murmur32
  href: api/Neo.Cryptography.Murmur32.html#Neo_Cryptography_Murmur32__ctor_
  commentId: Overload:Neo.Cryptography.Murmur32.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Cryptography.Murmur32.Murmur32
  fullName.vb: Neo.Cryptography.Murmur32.New
  nameWithType: Murmur32.Murmur32
  nameWithType.vb: Murmur32.New
- uid: Neo.Cryptography.Murmur32.HashCore(System.Byte[],System.Int32,System.Int32)
  name: HashCore(byte[], int, int)
  href: api/Neo.Cryptography.Murmur32.html#Neo_Cryptography_Murmur32_HashCore_System_Byte___System_Int32_System_Int32_
  commentId: M:Neo.Cryptography.Murmur32.HashCore(System.Byte[],System.Int32,System.Int32)
  name.vb: HashCore(Byte(), Integer, Integer)
  fullName: Neo.Cryptography.Murmur32.HashCore(byte[], int, int)
  fullName.vb: Neo.Cryptography.Murmur32.HashCore(Byte(), Integer, Integer)
  nameWithType: Murmur32.HashCore(byte[], int, int)
  nameWithType.vb: Murmur32.HashCore(Byte(), Integer, Integer)
- uid: Neo.Cryptography.Murmur32.HashCore(System.ReadOnlySpan{System.Byte})
  name: HashCore(ReadOnlySpan<byte>)
  href: api/Neo.Cryptography.Murmur32.html#Neo_Cryptography_Murmur32_HashCore_System_ReadOnlySpan_System_Byte__
  commentId: M:Neo.Cryptography.Murmur32.HashCore(System.ReadOnlySpan{System.Byte})
  name.vb: HashCore(ReadOnlySpan(Of Byte))
  fullName: Neo.Cryptography.Murmur32.HashCore(System.ReadOnlySpan<byte>)
  fullName.vb: Neo.Cryptography.Murmur32.HashCore(System.ReadOnlySpan(Of Byte))
  nameWithType: Murmur32.HashCore(ReadOnlySpan<byte>)
  nameWithType.vb: Murmur32.HashCore(ReadOnlySpan(Of Byte))
- uid: Neo.Cryptography.Murmur32.HashCore*
  name: HashCore
  href: api/Neo.Cryptography.Murmur32.html#Neo_Cryptography_Murmur32_HashCore_
  commentId: Overload:Neo.Cryptography.Murmur32.HashCore
  isSpec: "True"
  fullName: Neo.Cryptography.Murmur32.HashCore
  nameWithType: Murmur32.HashCore
- uid: Neo.Cryptography.Murmur32.HashFinal
  name: HashFinal()
  href: api/Neo.Cryptography.Murmur32.html#Neo_Cryptography_Murmur32_HashFinal
  commentId: M:Neo.Cryptography.Murmur32.HashFinal
  fullName: Neo.Cryptography.Murmur32.HashFinal()
  nameWithType: Murmur32.HashFinal()
- uid: Neo.Cryptography.Murmur32.HashFinal*
  name: HashFinal
  href: api/Neo.Cryptography.Murmur32.html#Neo_Cryptography_Murmur32_HashFinal_
  commentId: Overload:Neo.Cryptography.Murmur32.HashFinal
  isSpec: "True"
  fullName: Neo.Cryptography.Murmur32.HashFinal
  nameWithType: Murmur32.HashFinal
- uid: Neo.Cryptography.Murmur32.HashSize
  name: HashSize
  href: api/Neo.Cryptography.Murmur32.html#Neo_Cryptography_Murmur32_HashSize
  commentId: P:Neo.Cryptography.Murmur32.HashSize
  fullName: Neo.Cryptography.Murmur32.HashSize
  nameWithType: Murmur32.HashSize
- uid: Neo.Cryptography.Murmur32.HashSize*
  name: HashSize
  href: api/Neo.Cryptography.Murmur32.html#Neo_Cryptography_Murmur32_HashSize_
  commentId: Overload:Neo.Cryptography.Murmur32.HashSize
  isSpec: "True"
  fullName: Neo.Cryptography.Murmur32.HashSize
  nameWithType: Murmur32.HashSize
- uid: Neo.Cryptography.Murmur32.Initialize
  name: Initialize()
  href: api/Neo.Cryptography.Murmur32.html#Neo_Cryptography_Murmur32_Initialize
  commentId: M:Neo.Cryptography.Murmur32.Initialize
  fullName: Neo.Cryptography.Murmur32.Initialize()
  nameWithType: Murmur32.Initialize()
- uid: Neo.Cryptography.Murmur32.Initialize*
  name: Initialize
  href: api/Neo.Cryptography.Murmur32.html#Neo_Cryptography_Murmur32_Initialize_
  commentId: Overload:Neo.Cryptography.Murmur32.Initialize
  isSpec: "True"
  fullName: Neo.Cryptography.Murmur32.Initialize
  nameWithType: Murmur32.Initialize
- uid: Neo.Cryptography.Murmur32.TryHashFinal(System.Span{System.Byte},System.Int32@)
  name: TryHashFinal(Span<byte>, out int)
  href: api/Neo.Cryptography.Murmur32.html#Neo_Cryptography_Murmur32_TryHashFinal_System_Span_System_Byte__System_Int32__
  commentId: M:Neo.Cryptography.Murmur32.TryHashFinal(System.Span{System.Byte},System.Int32@)
  name.vb: TryHashFinal(Span(Of Byte), Integer)
  fullName: Neo.Cryptography.Murmur32.TryHashFinal(System.Span<byte>, out int)
  fullName.vb: Neo.Cryptography.Murmur32.TryHashFinal(System.Span(Of Byte), Integer)
  nameWithType: Murmur32.TryHashFinal(Span<byte>, out int)
  nameWithType.vb: Murmur32.TryHashFinal(Span(Of Byte), Integer)
- uid: Neo.Cryptography.Murmur32.TryHashFinal*
  name: TryHashFinal
  href: api/Neo.Cryptography.Murmur32.html#Neo_Cryptography_Murmur32_TryHashFinal_
  commentId: Overload:Neo.Cryptography.Murmur32.TryHashFinal
  isSpec: "True"
  fullName: Neo.Cryptography.Murmur32.TryHashFinal
  nameWithType: Murmur32.TryHashFinal
- uid: Neo.Cryptography.RIPEMD160Managed
  name: RIPEMD160Managed
  href: api/Neo.Cryptography.RIPEMD160Managed.html
  commentId: T:Neo.Cryptography.RIPEMD160Managed
  fullName: Neo.Cryptography.RIPEMD160Managed
  nameWithType: RIPEMD160Managed
- uid: Neo.Cryptography.RIPEMD160Managed.#ctor
  name: RIPEMD160Managed()
  href: api/Neo.Cryptography.RIPEMD160Managed.html#Neo_Cryptography_RIPEMD160Managed__ctor
  commentId: M:Neo.Cryptography.RIPEMD160Managed.#ctor
  name.vb: New()
  fullName: Neo.Cryptography.RIPEMD160Managed.RIPEMD160Managed()
  fullName.vb: Neo.Cryptography.RIPEMD160Managed.New()
  nameWithType: RIPEMD160Managed.RIPEMD160Managed()
  nameWithType.vb: RIPEMD160Managed.New()
- uid: Neo.Cryptography.RIPEMD160Managed.#ctor*
  name: RIPEMD160Managed
  href: api/Neo.Cryptography.RIPEMD160Managed.html#Neo_Cryptography_RIPEMD160Managed__ctor_
  commentId: Overload:Neo.Cryptography.RIPEMD160Managed.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Cryptography.RIPEMD160Managed.RIPEMD160Managed
  fullName.vb: Neo.Cryptography.RIPEMD160Managed.New
  nameWithType: RIPEMD160Managed.RIPEMD160Managed
  nameWithType.vb: RIPEMD160Managed.New
- uid: Neo.Cryptography.RIPEMD160Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  name: HashCore(byte[], int, int)
  href: api/Neo.Cryptography.RIPEMD160Managed.html#Neo_Cryptography_RIPEMD160Managed_HashCore_System_Byte___System_Int32_System_Int32_
  commentId: M:Neo.Cryptography.RIPEMD160Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  name.vb: HashCore(Byte(), Integer, Integer)
  fullName: Neo.Cryptography.RIPEMD160Managed.HashCore(byte[], int, int)
  fullName.vb: Neo.Cryptography.RIPEMD160Managed.HashCore(Byte(), Integer, Integer)
  nameWithType: RIPEMD160Managed.HashCore(byte[], int, int)
  nameWithType.vb: RIPEMD160Managed.HashCore(Byte(), Integer, Integer)
- uid: Neo.Cryptography.RIPEMD160Managed.HashCore*
  name: HashCore
  href: api/Neo.Cryptography.RIPEMD160Managed.html#Neo_Cryptography_RIPEMD160Managed_HashCore_
  commentId: Overload:Neo.Cryptography.RIPEMD160Managed.HashCore
  isSpec: "True"
  fullName: Neo.Cryptography.RIPEMD160Managed.HashCore
  nameWithType: RIPEMD160Managed.HashCore
- uid: Neo.Cryptography.RIPEMD160Managed.HashFinal
  name: HashFinal()
  href: api/Neo.Cryptography.RIPEMD160Managed.html#Neo_Cryptography_RIPEMD160Managed_HashFinal
  commentId: M:Neo.Cryptography.RIPEMD160Managed.HashFinal
  fullName: Neo.Cryptography.RIPEMD160Managed.HashFinal()
  nameWithType: RIPEMD160Managed.HashFinal()
- uid: Neo.Cryptography.RIPEMD160Managed.HashFinal*
  name: HashFinal
  href: api/Neo.Cryptography.RIPEMD160Managed.html#Neo_Cryptography_RIPEMD160Managed_HashFinal_
  commentId: Overload:Neo.Cryptography.RIPEMD160Managed.HashFinal
  isSpec: "True"
  fullName: Neo.Cryptography.RIPEMD160Managed.HashFinal
  nameWithType: RIPEMD160Managed.HashFinal
- uid: Neo.Cryptography.RIPEMD160Managed.HashSize
  name: HashSize
  href: api/Neo.Cryptography.RIPEMD160Managed.html#Neo_Cryptography_RIPEMD160Managed_HashSize
  commentId: P:Neo.Cryptography.RIPEMD160Managed.HashSize
  fullName: Neo.Cryptography.RIPEMD160Managed.HashSize
  nameWithType: RIPEMD160Managed.HashSize
- uid: Neo.Cryptography.RIPEMD160Managed.HashSize*
  name: HashSize
  href: api/Neo.Cryptography.RIPEMD160Managed.html#Neo_Cryptography_RIPEMD160Managed_HashSize_
  commentId: Overload:Neo.Cryptography.RIPEMD160Managed.HashSize
  isSpec: "True"
  fullName: Neo.Cryptography.RIPEMD160Managed.HashSize
  nameWithType: RIPEMD160Managed.HashSize
- uid: Neo.Cryptography.RIPEMD160Managed.Initialize
  name: Initialize()
  href: api/Neo.Cryptography.RIPEMD160Managed.html#Neo_Cryptography_RIPEMD160Managed_Initialize
  commentId: M:Neo.Cryptography.RIPEMD160Managed.Initialize
  fullName: Neo.Cryptography.RIPEMD160Managed.Initialize()
  nameWithType: RIPEMD160Managed.Initialize()
- uid: Neo.Cryptography.RIPEMD160Managed.Initialize*
  name: Initialize
  href: api/Neo.Cryptography.RIPEMD160Managed.html#Neo_Cryptography_RIPEMD160Managed_Initialize_
  commentId: Overload:Neo.Cryptography.RIPEMD160Managed.Initialize
  isSpec: "True"
  fullName: Neo.Cryptography.RIPEMD160Managed.Initialize
  nameWithType: RIPEMD160Managed.Initialize
- uid: Neo.Hardfork
  name: Hardfork
  href: api/Neo.Hardfork.html
  commentId: T:Neo.Hardfork
  fullName: Neo.Hardfork
  nameWithType: Hardfork
- uid: Neo.Hardfork.HF_Aspidochelone
  name: HF_Aspidochelone
  href: api/Neo.Hardfork.html#Neo_Hardfork_HF_Aspidochelone
  commentId: F:Neo.Hardfork.HF_Aspidochelone
  fullName: Neo.Hardfork.HF_Aspidochelone
  nameWithType: Hardfork.HF_Aspidochelone
- uid: Neo.Hardfork.HF_Basilisk
  name: HF_Basilisk
  href: api/Neo.Hardfork.html#Neo_Hardfork_HF_Basilisk
  commentId: F:Neo.Hardfork.HF_Basilisk
  fullName: Neo.Hardfork.HF_Basilisk
  nameWithType: Hardfork.HF_Basilisk
- uid: Neo.Helper
  name: Helper
  href: api/Neo.Helper.html
  commentId: T:Neo.Helper
  fullName: Neo.Helper
  nameWithType: Helper
- uid: Neo.Helper.Concat(System.Byte[][])
  name: Concat(params byte[][])
  href: api/Neo.Helper.html#Neo_Helper_Concat_System_Byte_____
  commentId: M:Neo.Helper.Concat(System.Byte[][])
  name.vb: Concat(ParamArray Byte()())
  fullName: Neo.Helper.Concat(params byte[][])
  fullName.vb: Neo.Helper.Concat(ParamArray Byte()())
  nameWithType: Helper.Concat(params byte[][])
  nameWithType.vb: Helper.Concat(ParamArray Byte()())
- uid: Neo.Helper.Concat(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name: Concat(ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  href: api/Neo.Helper.html#Neo_Helper_Concat_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  commentId: M:Neo.Helper.Concat(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  name.vb: Concat(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName: Neo.Helper.Concat(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  fullName.vb: Neo.Helper.Concat(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  nameWithType: Helper.Concat(ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType.vb: Helper.Concat(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: Neo.Helper.Concat*
  name: Concat
  href: api/Neo.Helper.html#Neo_Helper_Concat_
  commentId: Overload:Neo.Helper.Concat
  isSpec: "True"
  fullName: Neo.Helper.Concat
  nameWithType: Helper.Concat
- uid: Neo.Helper.HexToBytes(System.String)
  name: HexToBytes(string)
  href: api/Neo.Helper.html#Neo_Helper_HexToBytes_System_String_
  commentId: M:Neo.Helper.HexToBytes(System.String)
  name.vb: HexToBytes(String)
  fullName: Neo.Helper.HexToBytes(string)
  fullName.vb: Neo.Helper.HexToBytes(String)
  nameWithType: Helper.HexToBytes(string)
  nameWithType.vb: Helper.HexToBytes(String)
- uid: Neo.Helper.HexToBytes*
  name: HexToBytes
  href: api/Neo.Helper.html#Neo_Helper_HexToBytes_
  commentId: Overload:Neo.Helper.HexToBytes
  isSpec: "True"
  fullName: Neo.Helper.HexToBytes
  nameWithType: Helper.HexToBytes
- uid: Neo.Helper.Sum(System.Collections.Generic.IEnumerable{System.Numerics.BigInteger})
  name: Sum(IEnumerable<BigInteger>)
  href: api/Neo.Helper.html#Neo_Helper_Sum_System_Collections_Generic_IEnumerable_System_Numerics_BigInteger__
  commentId: M:Neo.Helper.Sum(System.Collections.Generic.IEnumerable{System.Numerics.BigInteger})
  name.vb: Sum(IEnumerable(Of BigInteger))
  fullName: Neo.Helper.Sum(System.Collections.Generic.IEnumerable<System.Numerics.BigInteger>)
  fullName.vb: Neo.Helper.Sum(System.Collections.Generic.IEnumerable(Of System.Numerics.BigInteger))
  nameWithType: Helper.Sum(IEnumerable<BigInteger>)
  nameWithType.vb: Helper.Sum(IEnumerable(Of BigInteger))
- uid: Neo.Helper.Sum*
  name: Sum
  href: api/Neo.Helper.html#Neo_Helper_Sum_
  commentId: Overload:Neo.Helper.Sum
  isSpec: "True"
  fullName: Neo.Helper.Sum
  nameWithType: Helper.Sum
- uid: Neo.Helper.ToByteArrayStandard(System.Numerics.BigInteger)
  name: ToByteArrayStandard(BigInteger)
  href: api/Neo.Helper.html#Neo_Helper_ToByteArrayStandard_System_Numerics_BigInteger_
  commentId: M:Neo.Helper.ToByteArrayStandard(System.Numerics.BigInteger)
  fullName: Neo.Helper.ToByteArrayStandard(System.Numerics.BigInteger)
  nameWithType: Helper.ToByteArrayStandard(BigInteger)
- uid: Neo.Helper.ToByteArrayStandard*
  name: ToByteArrayStandard
  href: api/Neo.Helper.html#Neo_Helper_ToByteArrayStandard_
  commentId: Overload:Neo.Helper.ToByteArrayStandard
  isSpec: "True"
  fullName: Neo.Helper.ToByteArrayStandard
  nameWithType: Helper.ToByteArrayStandard
- uid: Neo.Helper.ToHexString(System.Byte[])
  name: ToHexString(byte[])
  href: api/Neo.Helper.html#Neo_Helper_ToHexString_System_Byte___
  commentId: M:Neo.Helper.ToHexString(System.Byte[])
  name.vb: ToHexString(Byte())
  fullName: Neo.Helper.ToHexString(byte[])
  fullName.vb: Neo.Helper.ToHexString(Byte())
  nameWithType: Helper.ToHexString(byte[])
  nameWithType.vb: Helper.ToHexString(Byte())
- uid: Neo.Helper.ToHexString(System.Byte[],System.Boolean)
  name: ToHexString(byte[], bool)
  href: api/Neo.Helper.html#Neo_Helper_ToHexString_System_Byte___System_Boolean_
  commentId: M:Neo.Helper.ToHexString(System.Byte[],System.Boolean)
  name.vb: ToHexString(Byte(), Boolean)
  fullName: Neo.Helper.ToHexString(byte[], bool)
  fullName.vb: Neo.Helper.ToHexString(Byte(), Boolean)
  nameWithType: Helper.ToHexString(byte[], bool)
  nameWithType.vb: Helper.ToHexString(Byte(), Boolean)
- uid: Neo.Helper.ToHexString(System.ReadOnlySpan{System.Byte})
  name: ToHexString(ReadOnlySpan<byte>)
  href: api/Neo.Helper.html#Neo_Helper_ToHexString_System_ReadOnlySpan_System_Byte__
  commentId: M:Neo.Helper.ToHexString(System.ReadOnlySpan{System.Byte})
  name.vb: ToHexString(ReadOnlySpan(Of Byte))
  fullName: Neo.Helper.ToHexString(System.ReadOnlySpan<byte>)
  fullName.vb: Neo.Helper.ToHexString(System.ReadOnlySpan(Of Byte))
  nameWithType: Helper.ToHexString(ReadOnlySpan<byte>)
  nameWithType.vb: Helper.ToHexString(ReadOnlySpan(Of Byte))
- uid: Neo.Helper.ToHexString*
  name: ToHexString
  href: api/Neo.Helper.html#Neo_Helper_ToHexString_
  commentId: Overload:Neo.Helper.ToHexString
  isSpec: "True"
  fullName: Neo.Helper.ToHexString
  nameWithType: Helper.ToHexString
- uid: Neo.Helper.ToTimestamp(System.DateTime)
  name: ToTimestamp(DateTime)
  href: api/Neo.Helper.html#Neo_Helper_ToTimestamp_System_DateTime_
  commentId: M:Neo.Helper.ToTimestamp(System.DateTime)
  name.vb: ToTimestamp(Date)
  fullName: Neo.Helper.ToTimestamp(System.DateTime)
  fullName.vb: Neo.Helper.ToTimestamp(Date)
  nameWithType: Helper.ToTimestamp(DateTime)
  nameWithType.vb: Helper.ToTimestamp(Date)
- uid: Neo.Helper.ToTimestamp*
  name: ToTimestamp
  href: api/Neo.Helper.html#Neo_Helper_ToTimestamp_
  commentId: Overload:Neo.Helper.ToTimestamp
  isSpec: "True"
  fullName: Neo.Helper.ToTimestamp
  nameWithType: Helper.ToTimestamp
- uid: Neo.Helper.ToTimestampMS(System.DateTime)
  name: ToTimestampMS(DateTime)
  href: api/Neo.Helper.html#Neo_Helper_ToTimestampMS_System_DateTime_
  commentId: M:Neo.Helper.ToTimestampMS(System.DateTime)
  name.vb: ToTimestampMS(Date)
  fullName: Neo.Helper.ToTimestampMS(System.DateTime)
  fullName.vb: Neo.Helper.ToTimestampMS(Date)
  nameWithType: Helper.ToTimestampMS(DateTime)
  nameWithType.vb: Helper.ToTimestampMS(Date)
- uid: Neo.Helper.ToTimestampMS*
  name: ToTimestampMS
  href: api/Neo.Helper.html#Neo_Helper_ToTimestampMS_
  commentId: Overload:Neo.Helper.ToTimestampMS
  isSpec: "True"
  fullName: Neo.Helper.ToTimestampMS
  nameWithType: Helper.ToTimestampMS
- uid: Neo.IO
  name: Neo.IO
  href: api/Neo.IO.html
  commentId: N:Neo.IO
  fullName: Neo.IO
  nameWithType: Neo.IO
- uid: Neo.IO.Helper
  name: Helper
  href: api/Neo.IO.Helper.html
  commentId: T:Neo.IO.Helper
  fullName: Neo.IO.Helper
  nameWithType: Helper
- uid: Neo.IO.Helper.AsSerializable(System.ReadOnlyMemory{System.Byte},System.Type)
  name: AsSerializable(ReadOnlyMemory<byte>, Type)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_AsSerializable_System_ReadOnlyMemory_System_Byte__System_Type_
  commentId: M:Neo.IO.Helper.AsSerializable(System.ReadOnlyMemory{System.Byte},System.Type)
  name.vb: AsSerializable(ReadOnlyMemory(Of Byte), Type)
  fullName: Neo.IO.Helper.AsSerializable(System.ReadOnlyMemory<byte>, System.Type)
  fullName.vb: Neo.IO.Helper.AsSerializable(System.ReadOnlyMemory(Of Byte), System.Type)
  nameWithType: Helper.AsSerializable(ReadOnlyMemory<byte>, Type)
  nameWithType.vb: Helper.AsSerializable(ReadOnlyMemory(Of Byte), Type)
- uid: Neo.IO.Helper.AsSerializable*
  name: AsSerializable
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_AsSerializable_
  commentId: Overload:Neo.IO.Helper.AsSerializable
  isSpec: "True"
  fullName: Neo.IO.Helper.AsSerializable
  nameWithType: Helper.AsSerializable
- uid: Neo.IO.Helper.AsSerializableArray*
  name: AsSerializableArray
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_AsSerializableArray_
  commentId: Overload:Neo.IO.Helper.AsSerializableArray
  isSpec: "True"
  fullName: Neo.IO.Helper.AsSerializableArray
  nameWithType: Helper.AsSerializableArray
- uid: Neo.IO.Helper.AsSerializableArray``1(System.Byte[],System.Int32)
  name: AsSerializableArray<T>(byte[], int)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_AsSerializableArray__1_System_Byte___System_Int32_
  commentId: M:Neo.IO.Helper.AsSerializableArray``1(System.Byte[],System.Int32)
  name.vb: AsSerializableArray(Of T)(Byte(), Integer)
  fullName: Neo.IO.Helper.AsSerializableArray<T>(byte[], int)
  fullName.vb: Neo.IO.Helper.AsSerializableArray(Of T)(Byte(), Integer)
  nameWithType: Helper.AsSerializableArray<T>(byte[], int)
  nameWithType.vb: Helper.AsSerializableArray(Of T)(Byte(), Integer)
- uid: Neo.IO.Helper.AsSerializableArray``1(System.ReadOnlyMemory{System.Byte},System.Int32)
  name: AsSerializableArray<T>(ReadOnlyMemory<byte>, int)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_AsSerializableArray__1_System_ReadOnlyMemory_System_Byte__System_Int32_
  commentId: M:Neo.IO.Helper.AsSerializableArray``1(System.ReadOnlyMemory{System.Byte},System.Int32)
  name.vb: AsSerializableArray(Of T)(ReadOnlyMemory(Of Byte), Integer)
  fullName: Neo.IO.Helper.AsSerializableArray<T>(System.ReadOnlyMemory<byte>, int)
  fullName.vb: Neo.IO.Helper.AsSerializableArray(Of T)(System.ReadOnlyMemory(Of Byte), Integer)
  nameWithType: Helper.AsSerializableArray<T>(ReadOnlyMemory<byte>, int)
  nameWithType.vb: Helper.AsSerializableArray(Of T)(ReadOnlyMemory(Of Byte), Integer)
- uid: Neo.IO.Helper.AsSerializable``1(System.Byte[],System.Int32)
  name: AsSerializable<T>(byte[], int)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_AsSerializable__1_System_Byte___System_Int32_
  commentId: M:Neo.IO.Helper.AsSerializable``1(System.Byte[],System.Int32)
  name.vb: AsSerializable(Of T)(Byte(), Integer)
  fullName: Neo.IO.Helper.AsSerializable<T>(byte[], int)
  fullName.vb: Neo.IO.Helper.AsSerializable(Of T)(Byte(), Integer)
  nameWithType: Helper.AsSerializable<T>(byte[], int)
  nameWithType.vb: Helper.AsSerializable(Of T)(Byte(), Integer)
- uid: Neo.IO.Helper.AsSerializable``1(System.ReadOnlyMemory{System.Byte})
  name: AsSerializable<T>(ReadOnlyMemory<byte>)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_AsSerializable__1_System_ReadOnlyMemory_System_Byte__
  commentId: M:Neo.IO.Helper.AsSerializable``1(System.ReadOnlyMemory{System.Byte})
  name.vb: AsSerializable(Of T)(ReadOnlyMemory(Of Byte))
  fullName: Neo.IO.Helper.AsSerializable<T>(System.ReadOnlyMemory<byte>)
  fullName.vb: Neo.IO.Helper.AsSerializable(Of T)(System.ReadOnlyMemory(Of Byte))
  nameWithType: Helper.AsSerializable<T>(ReadOnlyMemory<byte>)
  nameWithType.vb: Helper.AsSerializable(Of T)(ReadOnlyMemory(Of Byte))
- uid: Neo.IO.Helper.CompressLz4(System.ReadOnlySpan{System.Byte})
  name: CompressLz4(ReadOnlySpan<byte>)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_CompressLz4_System_ReadOnlySpan_System_Byte__
  commentId: M:Neo.IO.Helper.CompressLz4(System.ReadOnlySpan{System.Byte})
  name.vb: CompressLz4(ReadOnlySpan(Of Byte))
  fullName: Neo.IO.Helper.CompressLz4(System.ReadOnlySpan<byte>)
  fullName.vb: Neo.IO.Helper.CompressLz4(System.ReadOnlySpan(Of Byte))
  nameWithType: Helper.CompressLz4(ReadOnlySpan<byte>)
  nameWithType.vb: Helper.CompressLz4(ReadOnlySpan(Of Byte))
- uid: Neo.IO.Helper.CompressLz4*
  name: CompressLz4
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_CompressLz4_
  commentId: Overload:Neo.IO.Helper.CompressLz4
  isSpec: "True"
  fullName: Neo.IO.Helper.CompressLz4
  nameWithType: Helper.CompressLz4
- uid: Neo.IO.Helper.DecompressLz4(System.ReadOnlySpan{System.Byte},System.Int32)
  name: DecompressLz4(ReadOnlySpan<byte>, int)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_DecompressLz4_System_ReadOnlySpan_System_Byte__System_Int32_
  commentId: M:Neo.IO.Helper.DecompressLz4(System.ReadOnlySpan{System.Byte},System.Int32)
  name.vb: DecompressLz4(ReadOnlySpan(Of Byte), Integer)
  fullName: Neo.IO.Helper.DecompressLz4(System.ReadOnlySpan<byte>, int)
  fullName.vb: Neo.IO.Helper.DecompressLz4(System.ReadOnlySpan(Of Byte), Integer)
  nameWithType: Helper.DecompressLz4(ReadOnlySpan<byte>, int)
  nameWithType.vb: Helper.DecompressLz4(ReadOnlySpan(Of Byte), Integer)
- uid: Neo.IO.Helper.DecompressLz4*
  name: DecompressLz4
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_DecompressLz4_
  commentId: Overload:Neo.IO.Helper.DecompressLz4
  isSpec: "True"
  fullName: Neo.IO.Helper.DecompressLz4
  nameWithType: Helper.DecompressLz4
- uid: Neo.IO.Helper.GetVarSize(System.Int32)
  name: GetVarSize(int)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_GetVarSize_System_Int32_
  commentId: M:Neo.IO.Helper.GetVarSize(System.Int32)
  name.vb: GetVarSize(Integer)
  fullName: Neo.IO.Helper.GetVarSize(int)
  fullName.vb: Neo.IO.Helper.GetVarSize(Integer)
  nameWithType: Helper.GetVarSize(int)
  nameWithType.vb: Helper.GetVarSize(Integer)
- uid: Neo.IO.Helper.GetVarSize(System.ReadOnlyMemory{System.Byte})
  name: GetVarSize(ReadOnlyMemory<byte>)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_GetVarSize_System_ReadOnlyMemory_System_Byte__
  commentId: M:Neo.IO.Helper.GetVarSize(System.ReadOnlyMemory{System.Byte})
  name.vb: GetVarSize(ReadOnlyMemory(Of Byte))
  fullName: Neo.IO.Helper.GetVarSize(System.ReadOnlyMemory<byte>)
  fullName.vb: Neo.IO.Helper.GetVarSize(System.ReadOnlyMemory(Of Byte))
  nameWithType: Helper.GetVarSize(ReadOnlyMemory<byte>)
  nameWithType.vb: Helper.GetVarSize(ReadOnlyMemory(Of Byte))
- uid: Neo.IO.Helper.GetVarSize(System.String)
  name: GetVarSize(string)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_GetVarSize_System_String_
  commentId: M:Neo.IO.Helper.GetVarSize(System.String)
  name.vb: GetVarSize(String)
  fullName: Neo.IO.Helper.GetVarSize(string)
  fullName.vb: Neo.IO.Helper.GetVarSize(String)
  nameWithType: Helper.GetVarSize(string)
  nameWithType.vb: Helper.GetVarSize(String)
- uid: Neo.IO.Helper.GetVarSize*
  name: GetVarSize
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_GetVarSize_
  commentId: Overload:Neo.IO.Helper.GetVarSize
  isSpec: "True"
  fullName: Neo.IO.Helper.GetVarSize
  nameWithType: Helper.GetVarSize
- uid: Neo.IO.Helper.GetVarSize``1(System.Collections.Generic.IReadOnlyCollection{``0})
  name: GetVarSize<T>(IReadOnlyCollection<T>)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_GetVarSize__1_System_Collections_Generic_IReadOnlyCollection___0__
  commentId: M:Neo.IO.Helper.GetVarSize``1(System.Collections.Generic.IReadOnlyCollection{``0})
  name.vb: GetVarSize(Of T)(IReadOnlyCollection(Of T))
  fullName: Neo.IO.Helper.GetVarSize<T>(System.Collections.Generic.IReadOnlyCollection<T>)
  fullName.vb: Neo.IO.Helper.GetVarSize(Of T)(System.Collections.Generic.IReadOnlyCollection(Of T))
  nameWithType: Helper.GetVarSize<T>(IReadOnlyCollection<T>)
  nameWithType.vb: Helper.GetVarSize(Of T)(IReadOnlyCollection(Of T))
- uid: Neo.IO.Helper.ReadFixedBytes(System.IO.BinaryReader,System.Int32)
  name: ReadFixedBytes(BinaryReader, int)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_ReadFixedBytes_System_IO_BinaryReader_System_Int32_
  commentId: M:Neo.IO.Helper.ReadFixedBytes(System.IO.BinaryReader,System.Int32)
  name.vb: ReadFixedBytes(BinaryReader, Integer)
  fullName: Neo.IO.Helper.ReadFixedBytes(System.IO.BinaryReader, int)
  fullName.vb: Neo.IO.Helper.ReadFixedBytes(System.IO.BinaryReader, Integer)
  nameWithType: Helper.ReadFixedBytes(BinaryReader, int)
  nameWithType.vb: Helper.ReadFixedBytes(BinaryReader, Integer)
- uid: Neo.IO.Helper.ReadFixedBytes*
  name: ReadFixedBytes
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_ReadFixedBytes_
  commentId: Overload:Neo.IO.Helper.ReadFixedBytes
  isSpec: "True"
  fullName: Neo.IO.Helper.ReadFixedBytes
  nameWithType: Helper.ReadFixedBytes
- uid: Neo.IO.Helper.ReadNullableArray*
  name: ReadNullableArray
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_ReadNullableArray_
  commentId: Overload:Neo.IO.Helper.ReadNullableArray
  isSpec: "True"
  fullName: Neo.IO.Helper.ReadNullableArray
  nameWithType: Helper.ReadNullableArray
- uid: Neo.IO.Helper.ReadNullableArray``1(Neo.IO.MemoryReader@,System.Int32)
  name: ReadNullableArray<T>(ref MemoryReader, int)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_ReadNullableArray__1_Neo_IO_MemoryReader__System_Int32_
  commentId: M:Neo.IO.Helper.ReadNullableArray``1(Neo.IO.MemoryReader@,System.Int32)
  name.vb: ReadNullableArray(Of T)(MemoryReader, Integer)
  fullName: Neo.IO.Helper.ReadNullableArray<T>(ref Neo.IO.MemoryReader, int)
  fullName.vb: Neo.IO.Helper.ReadNullableArray(Of T)(Neo.IO.MemoryReader, Integer)
  nameWithType: Helper.ReadNullableArray<T>(ref MemoryReader, int)
  nameWithType.vb: Helper.ReadNullableArray(Of T)(MemoryReader, Integer)
- uid: Neo.IO.Helper.ReadSerializable*
  name: ReadSerializable
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_ReadSerializable_
  commentId: Overload:Neo.IO.Helper.ReadSerializable
  isSpec: "True"
  fullName: Neo.IO.Helper.ReadSerializable
  nameWithType: Helper.ReadSerializable
- uid: Neo.IO.Helper.ReadSerializableArray*
  name: ReadSerializableArray
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_ReadSerializableArray_
  commentId: Overload:Neo.IO.Helper.ReadSerializableArray
  isSpec: "True"
  fullName: Neo.IO.Helper.ReadSerializableArray
  nameWithType: Helper.ReadSerializableArray
- uid: Neo.IO.Helper.ReadSerializableArray``1(Neo.IO.MemoryReader@,System.Int32)
  name: ReadSerializableArray<T>(ref MemoryReader, int)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_ReadSerializableArray__1_Neo_IO_MemoryReader__System_Int32_
  commentId: M:Neo.IO.Helper.ReadSerializableArray``1(Neo.IO.MemoryReader@,System.Int32)
  name.vb: ReadSerializableArray(Of T)(MemoryReader, Integer)
  fullName: Neo.IO.Helper.ReadSerializableArray<T>(ref Neo.IO.MemoryReader, int)
  fullName.vb: Neo.IO.Helper.ReadSerializableArray(Of T)(Neo.IO.MemoryReader, Integer)
  nameWithType: Helper.ReadSerializableArray<T>(ref MemoryReader, int)
  nameWithType.vb: Helper.ReadSerializableArray(Of T)(MemoryReader, Integer)
- uid: Neo.IO.Helper.ReadSerializable``1(Neo.IO.MemoryReader@)
  name: ReadSerializable<T>(ref MemoryReader)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_ReadSerializable__1_Neo_IO_MemoryReader__
  commentId: M:Neo.IO.Helper.ReadSerializable``1(Neo.IO.MemoryReader@)
  name.vb: ReadSerializable(Of T)(MemoryReader)
  fullName: Neo.IO.Helper.ReadSerializable<T>(ref Neo.IO.MemoryReader)
  fullName.vb: Neo.IO.Helper.ReadSerializable(Of T)(Neo.IO.MemoryReader)
  nameWithType: Helper.ReadSerializable<T>(ref MemoryReader)
  nameWithType.vb: Helper.ReadSerializable(Of T)(MemoryReader)
- uid: Neo.IO.Helper.ReadVarBytes(System.IO.BinaryReader,System.Int32)
  name: ReadVarBytes(BinaryReader, int)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_ReadVarBytes_System_IO_BinaryReader_System_Int32_
  commentId: M:Neo.IO.Helper.ReadVarBytes(System.IO.BinaryReader,System.Int32)
  name.vb: ReadVarBytes(BinaryReader, Integer)
  fullName: Neo.IO.Helper.ReadVarBytes(System.IO.BinaryReader, int)
  fullName.vb: Neo.IO.Helper.ReadVarBytes(System.IO.BinaryReader, Integer)
  nameWithType: Helper.ReadVarBytes(BinaryReader, int)
  nameWithType.vb: Helper.ReadVarBytes(BinaryReader, Integer)
- uid: Neo.IO.Helper.ReadVarBytes*
  name: ReadVarBytes
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_ReadVarBytes_
  commentId: Overload:Neo.IO.Helper.ReadVarBytes
  isSpec: "True"
  fullName: Neo.IO.Helper.ReadVarBytes
  nameWithType: Helper.ReadVarBytes
- uid: Neo.IO.Helper.ReadVarInt(System.IO.BinaryReader,System.UInt64)
  name: ReadVarInt(BinaryReader, ulong)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_ReadVarInt_System_IO_BinaryReader_System_UInt64_
  commentId: M:Neo.IO.Helper.ReadVarInt(System.IO.BinaryReader,System.UInt64)
  name.vb: ReadVarInt(BinaryReader, ULong)
  fullName: Neo.IO.Helper.ReadVarInt(System.IO.BinaryReader, ulong)
  fullName.vb: Neo.IO.Helper.ReadVarInt(System.IO.BinaryReader, ULong)
  nameWithType: Helper.ReadVarInt(BinaryReader, ulong)
  nameWithType.vb: Helper.ReadVarInt(BinaryReader, ULong)
- uid: Neo.IO.Helper.ReadVarInt*
  name: ReadVarInt
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_ReadVarInt_
  commentId: Overload:Neo.IO.Helper.ReadVarInt
  isSpec: "True"
  fullName: Neo.IO.Helper.ReadVarInt
  nameWithType: Helper.ReadVarInt
- uid: Neo.IO.Helper.ToArray(Neo.IO.ISerializable)
  name: ToArray(ISerializable)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_ToArray_Neo_IO_ISerializable_
  commentId: M:Neo.IO.Helper.ToArray(Neo.IO.ISerializable)
  fullName: Neo.IO.Helper.ToArray(Neo.IO.ISerializable)
  nameWithType: Helper.ToArray(ISerializable)
- uid: Neo.IO.Helper.ToArray*
  name: ToArray
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_ToArray_
  commentId: Overload:Neo.IO.Helper.ToArray
  isSpec: "True"
  fullName: Neo.IO.Helper.ToArray
  nameWithType: Helper.ToArray
- uid: Neo.IO.Helper.ToByteArray*
  name: ToByteArray
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_ToByteArray_
  commentId: Overload:Neo.IO.Helper.ToByteArray
  isSpec: "True"
  fullName: Neo.IO.Helper.ToByteArray
  nameWithType: Helper.ToByteArray
- uid: Neo.IO.Helper.ToByteArray``1(System.Collections.Generic.IReadOnlyCollection{``0})
  name: ToByteArray<T>(IReadOnlyCollection<T>)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_ToByteArray__1_System_Collections_Generic_IReadOnlyCollection___0__
  commentId: M:Neo.IO.Helper.ToByteArray``1(System.Collections.Generic.IReadOnlyCollection{``0})
  name.vb: ToByteArray(Of T)(IReadOnlyCollection(Of T))
  fullName: Neo.IO.Helper.ToByteArray<T>(System.Collections.Generic.IReadOnlyCollection<T>)
  fullName.vb: Neo.IO.Helper.ToByteArray(Of T)(System.Collections.Generic.IReadOnlyCollection(Of T))
  nameWithType: Helper.ToByteArray<T>(IReadOnlyCollection<T>)
  nameWithType.vb: Helper.ToByteArray(Of T)(IReadOnlyCollection(Of T))
- uid: Neo.IO.Helper.Write(System.IO.BinaryWriter,Neo.IO.ISerializable)
  name: Write(BinaryWriter, ISerializable)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_Write_System_IO_BinaryWriter_Neo_IO_ISerializable_
  commentId: M:Neo.IO.Helper.Write(System.IO.BinaryWriter,Neo.IO.ISerializable)
  fullName: Neo.IO.Helper.Write(System.IO.BinaryWriter, Neo.IO.ISerializable)
  nameWithType: Helper.Write(BinaryWriter, ISerializable)
- uid: Neo.IO.Helper.Write*
  name: Write
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_Write_
  commentId: Overload:Neo.IO.Helper.Write
  isSpec: "True"
  fullName: Neo.IO.Helper.Write
  nameWithType: Helper.Write
- uid: Neo.IO.Helper.WriteFixedString(System.IO.BinaryWriter,System.String,System.Int32)
  name: WriteFixedString(BinaryWriter, string, int)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_WriteFixedString_System_IO_BinaryWriter_System_String_System_Int32_
  commentId: M:Neo.IO.Helper.WriteFixedString(System.IO.BinaryWriter,System.String,System.Int32)
  name.vb: WriteFixedString(BinaryWriter, String, Integer)
  fullName: Neo.IO.Helper.WriteFixedString(System.IO.BinaryWriter, string, int)
  fullName.vb: Neo.IO.Helper.WriteFixedString(System.IO.BinaryWriter, String, Integer)
  nameWithType: Helper.WriteFixedString(BinaryWriter, string, int)
  nameWithType.vb: Helper.WriteFixedString(BinaryWriter, String, Integer)
- uid: Neo.IO.Helper.WriteFixedString*
  name: WriteFixedString
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_WriteFixedString_
  commentId: Overload:Neo.IO.Helper.WriteFixedString
  isSpec: "True"
  fullName: Neo.IO.Helper.WriteFixedString
  nameWithType: Helper.WriteFixedString
- uid: Neo.IO.Helper.WriteNullableArray*
  name: WriteNullableArray
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_WriteNullableArray_
  commentId: Overload:Neo.IO.Helper.WriteNullableArray
  isSpec: "True"
  fullName: Neo.IO.Helper.WriteNullableArray
  nameWithType: Helper.WriteNullableArray
- uid: Neo.IO.Helper.WriteNullableArray``1(System.IO.BinaryWriter,``0[])
  name: WriteNullableArray<T>(BinaryWriter, T[])
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_WriteNullableArray__1_System_IO_BinaryWriter___0___
  commentId: M:Neo.IO.Helper.WriteNullableArray``1(System.IO.BinaryWriter,``0[])
  name.vb: WriteNullableArray(Of T)(BinaryWriter, T())
  fullName: Neo.IO.Helper.WriteNullableArray<T>(System.IO.BinaryWriter, T[])
  fullName.vb: Neo.IO.Helper.WriteNullableArray(Of T)(System.IO.BinaryWriter, T())
  nameWithType: Helper.WriteNullableArray<T>(BinaryWriter, T[])
  nameWithType.vb: Helper.WriteNullableArray(Of T)(BinaryWriter, T())
- uid: Neo.IO.Helper.WriteVarBytes(System.IO.BinaryWriter,System.ReadOnlySpan{System.Byte})
  name: WriteVarBytes(BinaryWriter, ReadOnlySpan<byte>)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_WriteVarBytes_System_IO_BinaryWriter_System_ReadOnlySpan_System_Byte__
  commentId: M:Neo.IO.Helper.WriteVarBytes(System.IO.BinaryWriter,System.ReadOnlySpan{System.Byte})
  name.vb: WriteVarBytes(BinaryWriter, ReadOnlySpan(Of Byte))
  fullName: Neo.IO.Helper.WriteVarBytes(System.IO.BinaryWriter, System.ReadOnlySpan<byte>)
  fullName.vb: Neo.IO.Helper.WriteVarBytes(System.IO.BinaryWriter, System.ReadOnlySpan(Of Byte))
  nameWithType: Helper.WriteVarBytes(BinaryWriter, ReadOnlySpan<byte>)
  nameWithType.vb: Helper.WriteVarBytes(BinaryWriter, ReadOnlySpan(Of Byte))
- uid: Neo.IO.Helper.WriteVarBytes*
  name: WriteVarBytes
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_WriteVarBytes_
  commentId: Overload:Neo.IO.Helper.WriteVarBytes
  isSpec: "True"
  fullName: Neo.IO.Helper.WriteVarBytes
  nameWithType: Helper.WriteVarBytes
- uid: Neo.IO.Helper.WriteVarInt(System.IO.BinaryWriter,System.Int64)
  name: WriteVarInt(BinaryWriter, long)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_WriteVarInt_System_IO_BinaryWriter_System_Int64_
  commentId: M:Neo.IO.Helper.WriteVarInt(System.IO.BinaryWriter,System.Int64)
  name.vb: WriteVarInt(BinaryWriter, Long)
  fullName: Neo.IO.Helper.WriteVarInt(System.IO.BinaryWriter, long)
  fullName.vb: Neo.IO.Helper.WriteVarInt(System.IO.BinaryWriter, Long)
  nameWithType: Helper.WriteVarInt(BinaryWriter, long)
  nameWithType.vb: Helper.WriteVarInt(BinaryWriter, Long)
- uid: Neo.IO.Helper.WriteVarInt*
  name: WriteVarInt
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_WriteVarInt_
  commentId: Overload:Neo.IO.Helper.WriteVarInt
  isSpec: "True"
  fullName: Neo.IO.Helper.WriteVarInt
  nameWithType: Helper.WriteVarInt
- uid: Neo.IO.Helper.WriteVarString(System.IO.BinaryWriter,System.String)
  name: WriteVarString(BinaryWriter, string)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_WriteVarString_System_IO_BinaryWriter_System_String_
  commentId: M:Neo.IO.Helper.WriteVarString(System.IO.BinaryWriter,System.String)
  name.vb: WriteVarString(BinaryWriter, String)
  fullName: Neo.IO.Helper.WriteVarString(System.IO.BinaryWriter, string)
  fullName.vb: Neo.IO.Helper.WriteVarString(System.IO.BinaryWriter, String)
  nameWithType: Helper.WriteVarString(BinaryWriter, string)
  nameWithType.vb: Helper.WriteVarString(BinaryWriter, String)
- uid: Neo.IO.Helper.WriteVarString*
  name: WriteVarString
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_WriteVarString_
  commentId: Overload:Neo.IO.Helper.WriteVarString
  isSpec: "True"
  fullName: Neo.IO.Helper.WriteVarString
  nameWithType: Helper.WriteVarString
- uid: Neo.IO.Helper.Write``1(System.IO.BinaryWriter,System.Collections.Generic.IReadOnlyCollection{``0})
  name: Write<T>(BinaryWriter, IReadOnlyCollection<T>)
  href: api/Neo.IO.Helper.html#Neo_IO_Helper_Write__1_System_IO_BinaryWriter_System_Collections_Generic_IReadOnlyCollection___0__
  commentId: M:Neo.IO.Helper.Write``1(System.IO.BinaryWriter,System.Collections.Generic.IReadOnlyCollection{``0})
  name.vb: Write(Of T)(BinaryWriter, IReadOnlyCollection(Of T))
  fullName: Neo.IO.Helper.Write<T>(System.IO.BinaryWriter, System.Collections.Generic.IReadOnlyCollection<T>)
  fullName.vb: Neo.IO.Helper.Write(Of T)(System.IO.BinaryWriter, System.Collections.Generic.IReadOnlyCollection(Of T))
  nameWithType: Helper.Write<T>(BinaryWriter, IReadOnlyCollection<T>)
  nameWithType.vb: Helper.Write(Of T)(BinaryWriter, IReadOnlyCollection(Of T))
- uid: Neo.IO.ISerializable
  name: ISerializable
  href: api/Neo.IO.ISerializable.html
  commentId: T:Neo.IO.ISerializable
  fullName: Neo.IO.ISerializable
  nameWithType: ISerializable
- uid: Neo.IO.ISerializable.Deserialize(Neo.IO.MemoryReader@)
  name: Deserialize(ref MemoryReader)
  href: api/Neo.IO.ISerializable.html#Neo_IO_ISerializable_Deserialize_Neo_IO_MemoryReader__
  commentId: M:Neo.IO.ISerializable.Deserialize(Neo.IO.MemoryReader@)
  name.vb: Deserialize(MemoryReader)
  fullName: Neo.IO.ISerializable.Deserialize(ref Neo.IO.MemoryReader)
  fullName.vb: Neo.IO.ISerializable.Deserialize(Neo.IO.MemoryReader)
  nameWithType: ISerializable.Deserialize(ref MemoryReader)
  nameWithType.vb: ISerializable.Deserialize(MemoryReader)
- uid: Neo.IO.ISerializable.Deserialize*
  name: Deserialize
  href: api/Neo.IO.ISerializable.html#Neo_IO_ISerializable_Deserialize_
  commentId: Overload:Neo.IO.ISerializable.Deserialize
  isSpec: "True"
  fullName: Neo.IO.ISerializable.Deserialize
  nameWithType: ISerializable.Deserialize
- uid: Neo.IO.ISerializable.Serialize(System.IO.BinaryWriter)
  name: Serialize(BinaryWriter)
  href: api/Neo.IO.ISerializable.html#Neo_IO_ISerializable_Serialize_System_IO_BinaryWriter_
  commentId: M:Neo.IO.ISerializable.Serialize(System.IO.BinaryWriter)
  fullName: Neo.IO.ISerializable.Serialize(System.IO.BinaryWriter)
  nameWithType: ISerializable.Serialize(BinaryWriter)
- uid: Neo.IO.ISerializable.Serialize*
  name: Serialize
  href: api/Neo.IO.ISerializable.html#Neo_IO_ISerializable_Serialize_
  commentId: Overload:Neo.IO.ISerializable.Serialize
  isSpec: "True"
  fullName: Neo.IO.ISerializable.Serialize
  nameWithType: ISerializable.Serialize
- uid: Neo.IO.ISerializable.Size
  name: Size
  href: api/Neo.IO.ISerializable.html#Neo_IO_ISerializable_Size
  commentId: P:Neo.IO.ISerializable.Size
  fullName: Neo.IO.ISerializable.Size
  nameWithType: ISerializable.Size
- uid: Neo.IO.ISerializable.Size*
  name: Size
  href: api/Neo.IO.ISerializable.html#Neo_IO_ISerializable_Size_
  commentId: Overload:Neo.IO.ISerializable.Size
  isSpec: "True"
  fullName: Neo.IO.ISerializable.Size
  nameWithType: ISerializable.Size
- uid: Neo.IO.MemoryReader
  name: MemoryReader
  href: api/Neo.IO.MemoryReader.html
  commentId: T:Neo.IO.MemoryReader
  fullName: Neo.IO.MemoryReader
  nameWithType: MemoryReader
- uid: Neo.IO.MemoryReader.#ctor(System.ReadOnlyMemory{System.Byte})
  name: MemoryReader(ReadOnlyMemory<byte>)
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader__ctor_System_ReadOnlyMemory_System_Byte__
  commentId: M:Neo.IO.MemoryReader.#ctor(System.ReadOnlyMemory{System.Byte})
  name.vb: New(ReadOnlyMemory(Of Byte))
  fullName: Neo.IO.MemoryReader.MemoryReader(System.ReadOnlyMemory<byte>)
  fullName.vb: Neo.IO.MemoryReader.New(System.ReadOnlyMemory(Of Byte))
  nameWithType: MemoryReader.MemoryReader(ReadOnlyMemory<byte>)
  nameWithType.vb: MemoryReader.New(ReadOnlyMemory(Of Byte))
- uid: Neo.IO.MemoryReader.#ctor*
  name: MemoryReader
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader__ctor_
  commentId: Overload:Neo.IO.MemoryReader.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.IO.MemoryReader.MemoryReader
  fullName.vb: Neo.IO.MemoryReader.New
  nameWithType: MemoryReader.MemoryReader
  nameWithType.vb: MemoryReader.New
- uid: Neo.IO.MemoryReader.Peek
  name: Peek()
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_Peek
  commentId: M:Neo.IO.MemoryReader.Peek
  fullName: Neo.IO.MemoryReader.Peek()
  nameWithType: MemoryReader.Peek()
- uid: Neo.IO.MemoryReader.Peek*
  name: Peek
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_Peek_
  commentId: Overload:Neo.IO.MemoryReader.Peek
  isSpec: "True"
  fullName: Neo.IO.MemoryReader.Peek
  nameWithType: MemoryReader.Peek
- uid: Neo.IO.MemoryReader.Position
  name: Position
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_Position
  commentId: P:Neo.IO.MemoryReader.Position
  fullName: Neo.IO.MemoryReader.Position
  nameWithType: MemoryReader.Position
- uid: Neo.IO.MemoryReader.Position*
  name: Position
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_Position_
  commentId: Overload:Neo.IO.MemoryReader.Position
  isSpec: "True"
  fullName: Neo.IO.MemoryReader.Position
  nameWithType: MemoryReader.Position
- uid: Neo.IO.MemoryReader.ReadBoolean
  name: ReadBoolean()
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadBoolean
  commentId: M:Neo.IO.MemoryReader.ReadBoolean
  fullName: Neo.IO.MemoryReader.ReadBoolean()
  nameWithType: MemoryReader.ReadBoolean()
- uid: Neo.IO.MemoryReader.ReadBoolean*
  name: ReadBoolean
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadBoolean_
  commentId: Overload:Neo.IO.MemoryReader.ReadBoolean
  isSpec: "True"
  fullName: Neo.IO.MemoryReader.ReadBoolean
  nameWithType: MemoryReader.ReadBoolean
- uid: Neo.IO.MemoryReader.ReadByte
  name: ReadByte()
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadByte
  commentId: M:Neo.IO.MemoryReader.ReadByte
  fullName: Neo.IO.MemoryReader.ReadByte()
  nameWithType: MemoryReader.ReadByte()
- uid: Neo.IO.MemoryReader.ReadByte*
  name: ReadByte
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadByte_
  commentId: Overload:Neo.IO.MemoryReader.ReadByte
  isSpec: "True"
  fullName: Neo.IO.MemoryReader.ReadByte
  nameWithType: MemoryReader.ReadByte
- uid: Neo.IO.MemoryReader.ReadFixedString(System.Int32)
  name: ReadFixedString(int)
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadFixedString_System_Int32_
  commentId: M:Neo.IO.MemoryReader.ReadFixedString(System.Int32)
  name.vb: ReadFixedString(Integer)
  fullName: Neo.IO.MemoryReader.ReadFixedString(int)
  fullName.vb: Neo.IO.MemoryReader.ReadFixedString(Integer)
  nameWithType: MemoryReader.ReadFixedString(int)
  nameWithType.vb: MemoryReader.ReadFixedString(Integer)
- uid: Neo.IO.MemoryReader.ReadFixedString*
  name: ReadFixedString
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadFixedString_
  commentId: Overload:Neo.IO.MemoryReader.ReadFixedString
  isSpec: "True"
  fullName: Neo.IO.MemoryReader.ReadFixedString
  nameWithType: MemoryReader.ReadFixedString
- uid: Neo.IO.MemoryReader.ReadInt16
  name: ReadInt16()
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadInt16
  commentId: M:Neo.IO.MemoryReader.ReadInt16
  fullName: Neo.IO.MemoryReader.ReadInt16()
  nameWithType: MemoryReader.ReadInt16()
- uid: Neo.IO.MemoryReader.ReadInt16*
  name: ReadInt16
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadInt16_
  commentId: Overload:Neo.IO.MemoryReader.ReadInt16
  isSpec: "True"
  fullName: Neo.IO.MemoryReader.ReadInt16
  nameWithType: MemoryReader.ReadInt16
- uid: Neo.IO.MemoryReader.ReadInt16BigEndian
  name: ReadInt16BigEndian()
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadInt16BigEndian
  commentId: M:Neo.IO.MemoryReader.ReadInt16BigEndian
  fullName: Neo.IO.MemoryReader.ReadInt16BigEndian()
  nameWithType: MemoryReader.ReadInt16BigEndian()
- uid: Neo.IO.MemoryReader.ReadInt16BigEndian*
  name: ReadInt16BigEndian
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadInt16BigEndian_
  commentId: Overload:Neo.IO.MemoryReader.ReadInt16BigEndian
  isSpec: "True"
  fullName: Neo.IO.MemoryReader.ReadInt16BigEndian
  nameWithType: MemoryReader.ReadInt16BigEndian
- uid: Neo.IO.MemoryReader.ReadInt32
  name: ReadInt32()
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadInt32
  commentId: M:Neo.IO.MemoryReader.ReadInt32
  fullName: Neo.IO.MemoryReader.ReadInt32()
  nameWithType: MemoryReader.ReadInt32()
- uid: Neo.IO.MemoryReader.ReadInt32*
  name: ReadInt32
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadInt32_
  commentId: Overload:Neo.IO.MemoryReader.ReadInt32
  isSpec: "True"
  fullName: Neo.IO.MemoryReader.ReadInt32
  nameWithType: MemoryReader.ReadInt32
- uid: Neo.IO.MemoryReader.ReadInt32BigEndian
  name: ReadInt32BigEndian()
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadInt32BigEndian
  commentId: M:Neo.IO.MemoryReader.ReadInt32BigEndian
  fullName: Neo.IO.MemoryReader.ReadInt32BigEndian()
  nameWithType: MemoryReader.ReadInt32BigEndian()
- uid: Neo.IO.MemoryReader.ReadInt32BigEndian*
  name: ReadInt32BigEndian
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadInt32BigEndian_
  commentId: Overload:Neo.IO.MemoryReader.ReadInt32BigEndian
  isSpec: "True"
  fullName: Neo.IO.MemoryReader.ReadInt32BigEndian
  nameWithType: MemoryReader.ReadInt32BigEndian
- uid: Neo.IO.MemoryReader.ReadInt64
  name: ReadInt64()
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadInt64
  commentId: M:Neo.IO.MemoryReader.ReadInt64
  fullName: Neo.IO.MemoryReader.ReadInt64()
  nameWithType: MemoryReader.ReadInt64()
- uid: Neo.IO.MemoryReader.ReadInt64*
  name: ReadInt64
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadInt64_
  commentId: Overload:Neo.IO.MemoryReader.ReadInt64
  isSpec: "True"
  fullName: Neo.IO.MemoryReader.ReadInt64
  nameWithType: MemoryReader.ReadInt64
- uid: Neo.IO.MemoryReader.ReadInt64BigEndian
  name: ReadInt64BigEndian()
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadInt64BigEndian
  commentId: M:Neo.IO.MemoryReader.ReadInt64BigEndian
  fullName: Neo.IO.MemoryReader.ReadInt64BigEndian()
  nameWithType: MemoryReader.ReadInt64BigEndian()
- uid: Neo.IO.MemoryReader.ReadInt64BigEndian*
  name: ReadInt64BigEndian
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadInt64BigEndian_
  commentId: Overload:Neo.IO.MemoryReader.ReadInt64BigEndian
  isSpec: "True"
  fullName: Neo.IO.MemoryReader.ReadInt64BigEndian
  nameWithType: MemoryReader.ReadInt64BigEndian
- uid: Neo.IO.MemoryReader.ReadMemory(System.Int32)
  name: ReadMemory(int)
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadMemory_System_Int32_
  commentId: M:Neo.IO.MemoryReader.ReadMemory(System.Int32)
  name.vb: ReadMemory(Integer)
  fullName: Neo.IO.MemoryReader.ReadMemory(int)
  fullName.vb: Neo.IO.MemoryReader.ReadMemory(Integer)
  nameWithType: MemoryReader.ReadMemory(int)
  nameWithType.vb: MemoryReader.ReadMemory(Integer)
- uid: Neo.IO.MemoryReader.ReadMemory*
  name: ReadMemory
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadMemory_
  commentId: Overload:Neo.IO.MemoryReader.ReadMemory
  isSpec: "True"
  fullName: Neo.IO.MemoryReader.ReadMemory
  nameWithType: MemoryReader.ReadMemory
- uid: Neo.IO.MemoryReader.ReadSByte
  name: ReadSByte()
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadSByte
  commentId: M:Neo.IO.MemoryReader.ReadSByte
  fullName: Neo.IO.MemoryReader.ReadSByte()
  nameWithType: MemoryReader.ReadSByte()
- uid: Neo.IO.MemoryReader.ReadSByte*
  name: ReadSByte
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadSByte_
  commentId: Overload:Neo.IO.MemoryReader.ReadSByte
  isSpec: "True"
  fullName: Neo.IO.MemoryReader.ReadSByte
  nameWithType: MemoryReader.ReadSByte
- uid: Neo.IO.MemoryReader.ReadToEnd
  name: ReadToEnd()
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadToEnd
  commentId: M:Neo.IO.MemoryReader.ReadToEnd
  fullName: Neo.IO.MemoryReader.ReadToEnd()
  nameWithType: MemoryReader.ReadToEnd()
- uid: Neo.IO.MemoryReader.ReadToEnd*
  name: ReadToEnd
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadToEnd_
  commentId: Overload:Neo.IO.MemoryReader.ReadToEnd
  isSpec: "True"
  fullName: Neo.IO.MemoryReader.ReadToEnd
  nameWithType: MemoryReader.ReadToEnd
- uid: Neo.IO.MemoryReader.ReadUInt16
  name: ReadUInt16()
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadUInt16
  commentId: M:Neo.IO.MemoryReader.ReadUInt16
  fullName: Neo.IO.MemoryReader.ReadUInt16()
  nameWithType: MemoryReader.ReadUInt16()
- uid: Neo.IO.MemoryReader.ReadUInt16*
  name: ReadUInt16
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadUInt16_
  commentId: Overload:Neo.IO.MemoryReader.ReadUInt16
  isSpec: "True"
  fullName: Neo.IO.MemoryReader.ReadUInt16
  nameWithType: MemoryReader.ReadUInt16
- uid: Neo.IO.MemoryReader.ReadUInt16BigEndian
  name: ReadUInt16BigEndian()
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadUInt16BigEndian
  commentId: M:Neo.IO.MemoryReader.ReadUInt16BigEndian
  fullName: Neo.IO.MemoryReader.ReadUInt16BigEndian()
  nameWithType: MemoryReader.ReadUInt16BigEndian()
- uid: Neo.IO.MemoryReader.ReadUInt16BigEndian*
  name: ReadUInt16BigEndian
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadUInt16BigEndian_
  commentId: Overload:Neo.IO.MemoryReader.ReadUInt16BigEndian
  isSpec: "True"
  fullName: Neo.IO.MemoryReader.ReadUInt16BigEndian
  nameWithType: MemoryReader.ReadUInt16BigEndian
- uid: Neo.IO.MemoryReader.ReadUInt32
  name: ReadUInt32()
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadUInt32
  commentId: M:Neo.IO.MemoryReader.ReadUInt32
  fullName: Neo.IO.MemoryReader.ReadUInt32()
  nameWithType: MemoryReader.ReadUInt32()
- uid: Neo.IO.MemoryReader.ReadUInt32*
  name: ReadUInt32
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadUInt32_
  commentId: Overload:Neo.IO.MemoryReader.ReadUInt32
  isSpec: "True"
  fullName: Neo.IO.MemoryReader.ReadUInt32
  nameWithType: MemoryReader.ReadUInt32
- uid: Neo.IO.MemoryReader.ReadUInt32BigEndian
  name: ReadUInt32BigEndian()
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadUInt32BigEndian
  commentId: M:Neo.IO.MemoryReader.ReadUInt32BigEndian
  fullName: Neo.IO.MemoryReader.ReadUInt32BigEndian()
  nameWithType: MemoryReader.ReadUInt32BigEndian()
- uid: Neo.IO.MemoryReader.ReadUInt32BigEndian*
  name: ReadUInt32BigEndian
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadUInt32BigEndian_
  commentId: Overload:Neo.IO.MemoryReader.ReadUInt32BigEndian
  isSpec: "True"
  fullName: Neo.IO.MemoryReader.ReadUInt32BigEndian
  nameWithType: MemoryReader.ReadUInt32BigEndian
- uid: Neo.IO.MemoryReader.ReadUInt64
  name: ReadUInt64()
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadUInt64
  commentId: M:Neo.IO.MemoryReader.ReadUInt64
  fullName: Neo.IO.MemoryReader.ReadUInt64()
  nameWithType: MemoryReader.ReadUInt64()
- uid: Neo.IO.MemoryReader.ReadUInt64*
  name: ReadUInt64
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadUInt64_
  commentId: Overload:Neo.IO.MemoryReader.ReadUInt64
  isSpec: "True"
  fullName: Neo.IO.MemoryReader.ReadUInt64
  nameWithType: MemoryReader.ReadUInt64
- uid: Neo.IO.MemoryReader.ReadUInt64BigEndian
  name: ReadUInt64BigEndian()
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadUInt64BigEndian
  commentId: M:Neo.IO.MemoryReader.ReadUInt64BigEndian
  fullName: Neo.IO.MemoryReader.ReadUInt64BigEndian()
  nameWithType: MemoryReader.ReadUInt64BigEndian()
- uid: Neo.IO.MemoryReader.ReadUInt64BigEndian*
  name: ReadUInt64BigEndian
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadUInt64BigEndian_
  commentId: Overload:Neo.IO.MemoryReader.ReadUInt64BigEndian
  isSpec: "True"
  fullName: Neo.IO.MemoryReader.ReadUInt64BigEndian
  nameWithType: MemoryReader.ReadUInt64BigEndian
- uid: Neo.IO.MemoryReader.ReadVarInt(System.UInt64)
  name: ReadVarInt(ulong)
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadVarInt_System_UInt64_
  commentId: M:Neo.IO.MemoryReader.ReadVarInt(System.UInt64)
  name.vb: ReadVarInt(ULong)
  fullName: Neo.IO.MemoryReader.ReadVarInt(ulong)
  fullName.vb: Neo.IO.MemoryReader.ReadVarInt(ULong)
  nameWithType: MemoryReader.ReadVarInt(ulong)
  nameWithType.vb: MemoryReader.ReadVarInt(ULong)
- uid: Neo.IO.MemoryReader.ReadVarInt*
  name: ReadVarInt
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadVarInt_
  commentId: Overload:Neo.IO.MemoryReader.ReadVarInt
  isSpec: "True"
  fullName: Neo.IO.MemoryReader.ReadVarInt
  nameWithType: MemoryReader.ReadVarInt
- uid: Neo.IO.MemoryReader.ReadVarMemory(System.Int32)
  name: ReadVarMemory(int)
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadVarMemory_System_Int32_
  commentId: M:Neo.IO.MemoryReader.ReadVarMemory(System.Int32)
  name.vb: ReadVarMemory(Integer)
  fullName: Neo.IO.MemoryReader.ReadVarMemory(int)
  fullName.vb: Neo.IO.MemoryReader.ReadVarMemory(Integer)
  nameWithType: MemoryReader.ReadVarMemory(int)
  nameWithType.vb: MemoryReader.ReadVarMemory(Integer)
- uid: Neo.IO.MemoryReader.ReadVarMemory*
  name: ReadVarMemory
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadVarMemory_
  commentId: Overload:Neo.IO.MemoryReader.ReadVarMemory
  isSpec: "True"
  fullName: Neo.IO.MemoryReader.ReadVarMemory
  nameWithType: MemoryReader.ReadVarMemory
- uid: Neo.IO.MemoryReader.ReadVarString(System.Int32)
  name: ReadVarString(int)
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadVarString_System_Int32_
  commentId: M:Neo.IO.MemoryReader.ReadVarString(System.Int32)
  name.vb: ReadVarString(Integer)
  fullName: Neo.IO.MemoryReader.ReadVarString(int)
  fullName.vb: Neo.IO.MemoryReader.ReadVarString(Integer)
  nameWithType: MemoryReader.ReadVarString(int)
  nameWithType.vb: MemoryReader.ReadVarString(Integer)
- uid: Neo.IO.MemoryReader.ReadVarString*
  name: ReadVarString
  href: api/Neo.IO.MemoryReader.html#Neo_IO_MemoryReader_ReadVarString_
  commentId: Overload:Neo.IO.MemoryReader.ReadVarString
  isSpec: "True"
  fullName: Neo.IO.MemoryReader.ReadVarString
  nameWithType: MemoryReader.ReadVarString
- uid: Neo.Json
  name: Neo.Json
  href: api/Neo.Json.html
  commentId: N:Neo.Json
  fullName: Neo.Json
  nameWithType: Neo.Json
- uid: Neo.Json.JArray
  name: JArray
  href: api/Neo.Json.JArray.html
  commentId: T:Neo.Json.JArray
  fullName: Neo.Json.JArray
  nameWithType: JArray
- uid: Neo.Json.JArray.#ctor(Neo.Json.JToken[])
  name: JArray(params JToken?[])
  href: api/Neo.Json.JArray.html#Neo_Json_JArray__ctor_Neo_Json_JToken___
  commentId: M:Neo.Json.JArray.#ctor(Neo.Json.JToken[])
  name.vb: New(ParamArray JToken())
  fullName: Neo.Json.JArray.JArray(params Neo.Json.JToken?[])
  fullName.vb: Neo.Json.JArray.New(ParamArray Neo.Json.JToken())
  nameWithType: JArray.JArray(params JToken?[])
  nameWithType.vb: JArray.New(ParamArray JToken())
- uid: Neo.Json.JArray.#ctor(System.Collections.Generic.IEnumerable{Neo.Json.JToken})
  name: JArray(IEnumerable<JToken?>)
  href: api/Neo.Json.JArray.html#Neo_Json_JArray__ctor_System_Collections_Generic_IEnumerable_Neo_Json_JToken__
  commentId: M:Neo.Json.JArray.#ctor(System.Collections.Generic.IEnumerable{Neo.Json.JToken})
  name.vb: New(IEnumerable(Of JToken))
  fullName: Neo.Json.JArray.JArray(System.Collections.Generic.IEnumerable<Neo.Json.JToken?>)
  fullName.vb: Neo.Json.JArray.New(System.Collections.Generic.IEnumerable(Of Neo.Json.JToken))
  nameWithType: JArray.JArray(IEnumerable<JToken?>)
  nameWithType.vb: JArray.New(IEnumerable(Of JToken))
- uid: Neo.Json.JArray.#ctor*
  name: JArray
  href: api/Neo.Json.JArray.html#Neo_Json_JArray__ctor_
  commentId: Overload:Neo.Json.JArray.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Json.JArray.JArray
  fullName.vb: Neo.Json.JArray.New
  nameWithType: JArray.JArray
  nameWithType.vb: JArray.New
- uid: Neo.Json.JArray.Add(Neo.Json.JToken)
  name: Add(JToken?)
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_Add_Neo_Json_JToken_
  commentId: M:Neo.Json.JArray.Add(Neo.Json.JToken)
  name.vb: Add(JToken)
  fullName: Neo.Json.JArray.Add(Neo.Json.JToken?)
  fullName.vb: Neo.Json.JArray.Add(Neo.Json.JToken)
  nameWithType: JArray.Add(JToken?)
  nameWithType.vb: JArray.Add(JToken)
- uid: Neo.Json.JArray.Add*
  name: Add
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_Add_
  commentId: Overload:Neo.Json.JArray.Add
  isSpec: "True"
  fullName: Neo.Json.JArray.Add
  nameWithType: JArray.Add
- uid: Neo.Json.JArray.AsString
  name: AsString()
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_AsString
  commentId: M:Neo.Json.JArray.AsString
  fullName: Neo.Json.JArray.AsString()
  nameWithType: JArray.AsString()
- uid: Neo.Json.JArray.AsString*
  name: AsString
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_AsString_
  commentId: Overload:Neo.Json.JArray.AsString
  isSpec: "True"
  fullName: Neo.Json.JArray.AsString
  nameWithType: JArray.AsString
- uid: Neo.Json.JArray.Children
  name: Children
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_Children
  commentId: P:Neo.Json.JArray.Children
  fullName: Neo.Json.JArray.Children
  nameWithType: JArray.Children
- uid: Neo.Json.JArray.Children*
  name: Children
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_Children_
  commentId: Overload:Neo.Json.JArray.Children
  isSpec: "True"
  fullName: Neo.Json.JArray.Children
  nameWithType: JArray.Children
- uid: Neo.Json.JArray.Clear
  name: Clear()
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_Clear
  commentId: M:Neo.Json.JArray.Clear
  fullName: Neo.Json.JArray.Clear()
  nameWithType: JArray.Clear()
- uid: Neo.Json.JArray.Clear*
  name: Clear
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_Clear_
  commentId: Overload:Neo.Json.JArray.Clear
  isSpec: "True"
  fullName: Neo.Json.JArray.Clear
  nameWithType: JArray.Clear
- uid: Neo.Json.JArray.Clone
  name: Clone()
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_Clone
  commentId: M:Neo.Json.JArray.Clone
  fullName: Neo.Json.JArray.Clone()
  nameWithType: JArray.Clone()
- uid: Neo.Json.JArray.Clone*
  name: Clone
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_Clone_
  commentId: Overload:Neo.Json.JArray.Clone
  isSpec: "True"
  fullName: Neo.Json.JArray.Clone
  nameWithType: JArray.Clone
- uid: Neo.Json.JArray.Contains(Neo.Json.JToken)
  name: Contains(JToken?)
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_Contains_Neo_Json_JToken_
  commentId: M:Neo.Json.JArray.Contains(Neo.Json.JToken)
  name.vb: Contains(JToken)
  fullName: Neo.Json.JArray.Contains(Neo.Json.JToken?)
  fullName.vb: Neo.Json.JArray.Contains(Neo.Json.JToken)
  nameWithType: JArray.Contains(JToken?)
  nameWithType.vb: JArray.Contains(JToken)
- uid: Neo.Json.JArray.Contains*
  name: Contains
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_Contains_
  commentId: Overload:Neo.Json.JArray.Contains
  isSpec: "True"
  fullName: Neo.Json.JArray.Contains
  nameWithType: JArray.Contains
- uid: Neo.Json.JArray.GetEnumerator
  name: GetEnumerator()
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_GetEnumerator
  commentId: M:Neo.Json.JArray.GetEnumerator
  fullName: Neo.Json.JArray.GetEnumerator()
  nameWithType: JArray.GetEnumerator()
- uid: Neo.Json.JArray.GetEnumerator*
  name: GetEnumerator
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_GetEnumerator_
  commentId: Overload:Neo.Json.JArray.GetEnumerator
  isSpec: "True"
  fullName: Neo.Json.JArray.GetEnumerator
  nameWithType: JArray.GetEnumerator
- uid: Neo.Json.JArray.IndexOf(Neo.Json.JToken)
  name: IndexOf(JToken?)
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_IndexOf_Neo_Json_JToken_
  commentId: M:Neo.Json.JArray.IndexOf(Neo.Json.JToken)
  name.vb: IndexOf(JToken)
  fullName: Neo.Json.JArray.IndexOf(Neo.Json.JToken?)
  fullName.vb: Neo.Json.JArray.IndexOf(Neo.Json.JToken)
  nameWithType: JArray.IndexOf(JToken?)
  nameWithType.vb: JArray.IndexOf(JToken)
- uid: Neo.Json.JArray.IndexOf*
  name: IndexOf
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_IndexOf_
  commentId: Overload:Neo.Json.JArray.IndexOf
  isSpec: "True"
  fullName: Neo.Json.JArray.IndexOf
  nameWithType: JArray.IndexOf
- uid: Neo.Json.JArray.Insert(System.Int32,Neo.Json.JToken)
  name: Insert(int, JToken?)
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_Insert_System_Int32_Neo_Json_JToken_
  commentId: M:Neo.Json.JArray.Insert(System.Int32,Neo.Json.JToken)
  name.vb: Insert(Integer, JToken)
  fullName: Neo.Json.JArray.Insert(int, Neo.Json.JToken?)
  fullName.vb: Neo.Json.JArray.Insert(Integer, Neo.Json.JToken)
  nameWithType: JArray.Insert(int, JToken?)
  nameWithType.vb: JArray.Insert(Integer, JToken)
- uid: Neo.Json.JArray.Insert*
  name: Insert
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_Insert_
  commentId: Overload:Neo.Json.JArray.Insert
  isSpec: "True"
  fullName: Neo.Json.JArray.Insert
  nameWithType: JArray.Insert
- uid: Neo.Json.JArray.IsReadOnly
  name: IsReadOnly
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_IsReadOnly
  commentId: P:Neo.Json.JArray.IsReadOnly
  fullName: Neo.Json.JArray.IsReadOnly
  nameWithType: JArray.IsReadOnly
- uid: Neo.Json.JArray.IsReadOnly*
  name: IsReadOnly
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_IsReadOnly_
  commentId: Overload:Neo.Json.JArray.IsReadOnly
  isSpec: "True"
  fullName: Neo.Json.JArray.IsReadOnly
  nameWithType: JArray.IsReadOnly
- uid: Neo.Json.JArray.Item(System.Int32)
  name: this[int]
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_Item_System_Int32_
  commentId: P:Neo.Json.JArray.Item(System.Int32)
  name.vb: this[](Integer)
  fullName: Neo.Json.JArray.this[int]
  fullName.vb: Neo.Json.JArray.this[](Integer)
  nameWithType: JArray.this[int]
  nameWithType.vb: JArray.this[](Integer)
- uid: Neo.Json.JArray.Item*
  name: this
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_Item_
  commentId: Overload:Neo.Json.JArray.Item
  isSpec: "True"
  name.vb: this[]
  fullName: Neo.Json.JArray.this
  fullName.vb: Neo.Json.JArray.this[]
  nameWithType: JArray.this
  nameWithType.vb: JArray.this[]
- uid: Neo.Json.JArray.Remove(Neo.Json.JToken)
  name: Remove(JToken?)
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_Remove_Neo_Json_JToken_
  commentId: M:Neo.Json.JArray.Remove(Neo.Json.JToken)
  name.vb: Remove(JToken)
  fullName: Neo.Json.JArray.Remove(Neo.Json.JToken?)
  fullName.vb: Neo.Json.JArray.Remove(Neo.Json.JToken)
  nameWithType: JArray.Remove(JToken?)
  nameWithType.vb: JArray.Remove(JToken)
- uid: Neo.Json.JArray.Remove*
  name: Remove
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_Remove_
  commentId: Overload:Neo.Json.JArray.Remove
  isSpec: "True"
  fullName: Neo.Json.JArray.Remove
  nameWithType: JArray.Remove
- uid: Neo.Json.JArray.RemoveAt(System.Int32)
  name: RemoveAt(int)
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_RemoveAt_System_Int32_
  commentId: M:Neo.Json.JArray.RemoveAt(System.Int32)
  name.vb: RemoveAt(Integer)
  fullName: Neo.Json.JArray.RemoveAt(int)
  fullName.vb: Neo.Json.JArray.RemoveAt(Integer)
  nameWithType: JArray.RemoveAt(int)
  nameWithType.vb: JArray.RemoveAt(Integer)
- uid: Neo.Json.JArray.RemoveAt*
  name: RemoveAt
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_RemoveAt_
  commentId: Overload:Neo.Json.JArray.RemoveAt
  isSpec: "True"
  fullName: Neo.Json.JArray.RemoveAt
  nameWithType: JArray.RemoveAt
- uid: Neo.Json.JArray.op_Implicit(Neo.Json.JToken[])~Neo.Json.JArray
  name: implicit operator JArray(JToken?[])
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_op_Implicit_Neo_Json_JToken____Neo_Json_JArray
  commentId: M:Neo.Json.JArray.op_Implicit(Neo.Json.JToken[])~Neo.Json.JArray
  name.vb: CType(JToken())
  fullName: Neo.Json.JArray.implicit operator Neo.Json.JArray(Neo.Json.JToken?[])
  fullName.vb: Neo.Json.JArray.CType(Neo.Json.JToken())
  nameWithType: JArray.implicit operator JArray(JToken?[])
  nameWithType.vb: JArray.CType(JToken())
- uid: Neo.Json.JArray.op_Implicit*
  name: implicit operator
  href: api/Neo.Json.JArray.html#Neo_Json_JArray_op_Implicit_
  commentId: Overload:Neo.Json.JArray.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: Neo.Json.JArray.implicit operator
  fullName.vb: Neo.Json.JArray.CType
  nameWithType: JArray.implicit operator
  nameWithType.vb: JArray.CType
- uid: Neo.Json.JBoolean
  name: JBoolean
  href: api/Neo.Json.JBoolean.html
  commentId: T:Neo.Json.JBoolean
  fullName: Neo.Json.JBoolean
  nameWithType: JBoolean
- uid: Neo.Json.JBoolean.#ctor(System.Boolean)
  name: JBoolean(bool)
  href: api/Neo.Json.JBoolean.html#Neo_Json_JBoolean__ctor_System_Boolean_
  commentId: M:Neo.Json.JBoolean.#ctor(System.Boolean)
  name.vb: New(Boolean)
  fullName: Neo.Json.JBoolean.JBoolean(bool)
  fullName.vb: Neo.Json.JBoolean.New(Boolean)
  nameWithType: JBoolean.JBoolean(bool)
  nameWithType.vb: JBoolean.New(Boolean)
- uid: Neo.Json.JBoolean.#ctor*
  name: JBoolean
  href: api/Neo.Json.JBoolean.html#Neo_Json_JBoolean__ctor_
  commentId: Overload:Neo.Json.JBoolean.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Json.JBoolean.JBoolean
  fullName.vb: Neo.Json.JBoolean.New
  nameWithType: JBoolean.JBoolean
  nameWithType.vb: JBoolean.New
- uid: Neo.Json.JBoolean.AsBoolean
  name: AsBoolean()
  href: api/Neo.Json.JBoolean.html#Neo_Json_JBoolean_AsBoolean
  commentId: M:Neo.Json.JBoolean.AsBoolean
  fullName: Neo.Json.JBoolean.AsBoolean()
  nameWithType: JBoolean.AsBoolean()
- uid: Neo.Json.JBoolean.AsBoolean*
  name: AsBoolean
  href: api/Neo.Json.JBoolean.html#Neo_Json_JBoolean_AsBoolean_
  commentId: Overload:Neo.Json.JBoolean.AsBoolean
  isSpec: "True"
  fullName: Neo.Json.JBoolean.AsBoolean
  nameWithType: JBoolean.AsBoolean
- uid: Neo.Json.JBoolean.AsNumber
  name: AsNumber()
  href: api/Neo.Json.JBoolean.html#Neo_Json_JBoolean_AsNumber
  commentId: M:Neo.Json.JBoolean.AsNumber
  fullName: Neo.Json.JBoolean.AsNumber()
  nameWithType: JBoolean.AsNumber()
- uid: Neo.Json.JBoolean.AsNumber*
  name: AsNumber
  href: api/Neo.Json.JBoolean.html#Neo_Json_JBoolean_AsNumber_
  commentId: Overload:Neo.Json.JBoolean.AsNumber
  isSpec: "True"
  fullName: Neo.Json.JBoolean.AsNumber
  nameWithType: JBoolean.AsNumber
- uid: Neo.Json.JBoolean.AsString
  name: AsString()
  href: api/Neo.Json.JBoolean.html#Neo_Json_JBoolean_AsString
  commentId: M:Neo.Json.JBoolean.AsString
  fullName: Neo.Json.JBoolean.AsString()
  nameWithType: JBoolean.AsString()
- uid: Neo.Json.JBoolean.AsString*
  name: AsString
  href: api/Neo.Json.JBoolean.html#Neo_Json_JBoolean_AsString_
  commentId: Overload:Neo.Json.JBoolean.AsString
  isSpec: "True"
  fullName: Neo.Json.JBoolean.AsString
  nameWithType: JBoolean.AsString
- uid: Neo.Json.JBoolean.Clone
  name: Clone()
  href: api/Neo.Json.JBoolean.html#Neo_Json_JBoolean_Clone
  commentId: M:Neo.Json.JBoolean.Clone
  fullName: Neo.Json.JBoolean.Clone()
  nameWithType: JBoolean.Clone()
- uid: Neo.Json.JBoolean.Clone*
  name: Clone
  href: api/Neo.Json.JBoolean.html#Neo_Json_JBoolean_Clone_
  commentId: Overload:Neo.Json.JBoolean.Clone
  isSpec: "True"
  fullName: Neo.Json.JBoolean.Clone
  nameWithType: JBoolean.Clone
- uid: Neo.Json.JBoolean.GetBoolean
  name: GetBoolean()
  href: api/Neo.Json.JBoolean.html#Neo_Json_JBoolean_GetBoolean
  commentId: M:Neo.Json.JBoolean.GetBoolean
  fullName: Neo.Json.JBoolean.GetBoolean()
  nameWithType: JBoolean.GetBoolean()
- uid: Neo.Json.JBoolean.GetBoolean*
  name: GetBoolean
  href: api/Neo.Json.JBoolean.html#Neo_Json_JBoolean_GetBoolean_
  commentId: Overload:Neo.Json.JBoolean.GetBoolean
  isSpec: "True"
  fullName: Neo.Json.JBoolean.GetBoolean
  nameWithType: JBoolean.GetBoolean
- uid: Neo.Json.JBoolean.ToString
  name: ToString()
  href: api/Neo.Json.JBoolean.html#Neo_Json_JBoolean_ToString
  commentId: M:Neo.Json.JBoolean.ToString
  fullName: Neo.Json.JBoolean.ToString()
  nameWithType: JBoolean.ToString()
- uid: Neo.Json.JBoolean.ToString*
  name: ToString
  href: api/Neo.Json.JBoolean.html#Neo_Json_JBoolean_ToString_
  commentId: Overload:Neo.Json.JBoolean.ToString
  isSpec: "True"
  fullName: Neo.Json.JBoolean.ToString
  nameWithType: JBoolean.ToString
- uid: Neo.Json.JBoolean.Value
  name: Value
  href: api/Neo.Json.JBoolean.html#Neo_Json_JBoolean_Value
  commentId: P:Neo.Json.JBoolean.Value
  fullName: Neo.Json.JBoolean.Value
  nameWithType: JBoolean.Value
- uid: Neo.Json.JBoolean.Value*
  name: Value
  href: api/Neo.Json.JBoolean.html#Neo_Json_JBoolean_Value_
  commentId: Overload:Neo.Json.JBoolean.Value
  isSpec: "True"
  fullName: Neo.Json.JBoolean.Value
  nameWithType: JBoolean.Value
- uid: Neo.Json.JBoolean.op_Implicit(System.Boolean)~Neo.Json.JBoolean
  name: implicit operator JBoolean(bool)
  href: api/Neo.Json.JBoolean.html#Neo_Json_JBoolean_op_Implicit_System_Boolean__Neo_Json_JBoolean
  commentId: M:Neo.Json.JBoolean.op_Implicit(System.Boolean)~Neo.Json.JBoolean
  name.vb: CType(Boolean)
  fullName: Neo.Json.JBoolean.implicit operator Neo.Json.JBoolean(bool)
  fullName.vb: Neo.Json.JBoolean.CType(Boolean)
  nameWithType: JBoolean.implicit operator JBoolean(bool)
  nameWithType.vb: JBoolean.CType(Boolean)
- uid: Neo.Json.JBoolean.op_Implicit*
  name: implicit operator
  href: api/Neo.Json.JBoolean.html#Neo_Json_JBoolean_op_Implicit_
  commentId: Overload:Neo.Json.JBoolean.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: Neo.Json.JBoolean.implicit operator
  fullName.vb: Neo.Json.JBoolean.CType
  nameWithType: JBoolean.implicit operator
  nameWithType.vb: JBoolean.CType
- uid: Neo.Json.JContainer
  name: JContainer
  href: api/Neo.Json.JContainer.html
  commentId: T:Neo.Json.JContainer
  fullName: Neo.Json.JContainer
  nameWithType: JContainer
- uid: Neo.Json.JContainer.Children
  name: Children
  href: api/Neo.Json.JContainer.html#Neo_Json_JContainer_Children
  commentId: P:Neo.Json.JContainer.Children
  fullName: Neo.Json.JContainer.Children
  nameWithType: JContainer.Children
- uid: Neo.Json.JContainer.Children*
  name: Children
  href: api/Neo.Json.JContainer.html#Neo_Json_JContainer_Children_
  commentId: Overload:Neo.Json.JContainer.Children
  isSpec: "True"
  fullName: Neo.Json.JContainer.Children
  nameWithType: JContainer.Children
- uid: Neo.Json.JContainer.Clear
  name: Clear()
  href: api/Neo.Json.JContainer.html#Neo_Json_JContainer_Clear
  commentId: M:Neo.Json.JContainer.Clear
  fullName: Neo.Json.JContainer.Clear()
  nameWithType: JContainer.Clear()
- uid: Neo.Json.JContainer.Clear*
  name: Clear
  href: api/Neo.Json.JContainer.html#Neo_Json_JContainer_Clear_
  commentId: Overload:Neo.Json.JContainer.Clear
  isSpec: "True"
  fullName: Neo.Json.JContainer.Clear
  nameWithType: JContainer.Clear
- uid: Neo.Json.JContainer.CopyTo(Neo.Json.JToken[],System.Int32)
  name: CopyTo(JToken?[], int)
  href: api/Neo.Json.JContainer.html#Neo_Json_JContainer_CopyTo_Neo_Json_JToken___System_Int32_
  commentId: M:Neo.Json.JContainer.CopyTo(Neo.Json.JToken[],System.Int32)
  name.vb: CopyTo(JToken(), Integer)
  fullName: Neo.Json.JContainer.CopyTo(Neo.Json.JToken?[], int)
  fullName.vb: Neo.Json.JContainer.CopyTo(Neo.Json.JToken(), Integer)
  nameWithType: JContainer.CopyTo(JToken?[], int)
  nameWithType.vb: JContainer.CopyTo(JToken(), Integer)
- uid: Neo.Json.JContainer.CopyTo*
  name: CopyTo
  href: api/Neo.Json.JContainer.html#Neo_Json_JContainer_CopyTo_
  commentId: Overload:Neo.Json.JContainer.CopyTo
  isSpec: "True"
  fullName: Neo.Json.JContainer.CopyTo
  nameWithType: JContainer.CopyTo
- uid: Neo.Json.JContainer.Count
  name: Count
  href: api/Neo.Json.JContainer.html#Neo_Json_JContainer_Count
  commentId: P:Neo.Json.JContainer.Count
  fullName: Neo.Json.JContainer.Count
  nameWithType: JContainer.Count
- uid: Neo.Json.JContainer.Count*
  name: Count
  href: api/Neo.Json.JContainer.html#Neo_Json_JContainer_Count_
  commentId: Overload:Neo.Json.JContainer.Count
  isSpec: "True"
  fullName: Neo.Json.JContainer.Count
  nameWithType: JContainer.Count
- uid: Neo.Json.JContainer.Item(System.Int32)
  name: this[int]
  href: api/Neo.Json.JContainer.html#Neo_Json_JContainer_Item_System_Int32_
  commentId: P:Neo.Json.JContainer.Item(System.Int32)
  name.vb: this[](Integer)
  fullName: Neo.Json.JContainer.this[int]
  fullName.vb: Neo.Json.JContainer.this[](Integer)
  nameWithType: JContainer.this[int]
  nameWithType.vb: JContainer.this[](Integer)
- uid: Neo.Json.JContainer.Item*
  name: this
  href: api/Neo.Json.JContainer.html#Neo_Json_JContainer_Item_
  commentId: Overload:Neo.Json.JContainer.Item
  isSpec: "True"
  name.vb: this[]
  fullName: Neo.Json.JContainer.this
  fullName.vb: Neo.Json.JContainer.this[]
  nameWithType: JContainer.this
  nameWithType.vb: JContainer.this[]
- uid: Neo.Json.JNumber
  name: JNumber
  href: api/Neo.Json.JNumber.html
  commentId: T:Neo.Json.JNumber
  fullName: Neo.Json.JNumber
  nameWithType: JNumber
- uid: Neo.Json.JNumber.#ctor(System.Double)
  name: JNumber(double)
  href: api/Neo.Json.JNumber.html#Neo_Json_JNumber__ctor_System_Double_
  commentId: M:Neo.Json.JNumber.#ctor(System.Double)
  name.vb: New(Double)
  fullName: Neo.Json.JNumber.JNumber(double)
  fullName.vb: Neo.Json.JNumber.New(Double)
  nameWithType: JNumber.JNumber(double)
  nameWithType.vb: JNumber.New(Double)
- uid: Neo.Json.JNumber.#ctor*
  name: JNumber
  href: api/Neo.Json.JNumber.html#Neo_Json_JNumber__ctor_
  commentId: Overload:Neo.Json.JNumber.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Json.JNumber.JNumber
  fullName.vb: Neo.Json.JNumber.New
  nameWithType: JNumber.JNumber
  nameWithType.vb: JNumber.New
- uid: Neo.Json.JNumber.AsBoolean
  name: AsBoolean()
  href: api/Neo.Json.JNumber.html#Neo_Json_JNumber_AsBoolean
  commentId: M:Neo.Json.JNumber.AsBoolean
  fullName: Neo.Json.JNumber.AsBoolean()
  nameWithType: JNumber.AsBoolean()
- uid: Neo.Json.JNumber.AsBoolean*
  name: AsBoolean
  href: api/Neo.Json.JNumber.html#Neo_Json_JNumber_AsBoolean_
  commentId: Overload:Neo.Json.JNumber.AsBoolean
  isSpec: "True"
  fullName: Neo.Json.JNumber.AsBoolean
  nameWithType: JNumber.AsBoolean
- uid: Neo.Json.JNumber.AsEnum*
  name: AsEnum
  href: api/Neo.Json.JNumber.html#Neo_Json_JNumber_AsEnum_
  commentId: Overload:Neo.Json.JNumber.AsEnum
  isSpec: "True"
  fullName: Neo.Json.JNumber.AsEnum
  nameWithType: JNumber.AsEnum
- uid: Neo.Json.JNumber.AsEnum``1(``0,System.Boolean)
  name: AsEnum<T>(T, bool)
  href: api/Neo.Json.JNumber.html#Neo_Json_JNumber_AsEnum__1___0_System_Boolean_
  commentId: M:Neo.Json.JNumber.AsEnum``1(``0,System.Boolean)
  name.vb: AsEnum(Of T)(T, Boolean)
  fullName: Neo.Json.JNumber.AsEnum<T>(T, bool)
  fullName.vb: Neo.Json.JNumber.AsEnum(Of T)(T, Boolean)
  nameWithType: JNumber.AsEnum<T>(T, bool)
  nameWithType.vb: JNumber.AsEnum(Of T)(T, Boolean)
- uid: Neo.Json.JNumber.AsNumber
  name: AsNumber()
  href: api/Neo.Json.JNumber.html#Neo_Json_JNumber_AsNumber
  commentId: M:Neo.Json.JNumber.AsNumber
  fullName: Neo.Json.JNumber.AsNumber()
  nameWithType: JNumber.AsNumber()
- uid: Neo.Json.JNumber.AsNumber*
  name: AsNumber
  href: api/Neo.Json.JNumber.html#Neo_Json_JNumber_AsNumber_
  commentId: Overload:Neo.Json.JNumber.AsNumber
  isSpec: "True"
  fullName: Neo.Json.JNumber.AsNumber
  nameWithType: JNumber.AsNumber
- uid: Neo.Json.JNumber.AsString
  name: AsString()
  href: api/Neo.Json.JNumber.html#Neo_Json_JNumber_AsString
  commentId: M:Neo.Json.JNumber.AsString
  fullName: Neo.Json.JNumber.AsString()
  nameWithType: JNumber.AsString()
- uid: Neo.Json.JNumber.AsString*
  name: AsString
  href: api/Neo.Json.JNumber.html#Neo_Json_JNumber_AsString_
  commentId: Overload:Neo.Json.JNumber.AsString
  isSpec: "True"
  fullName: Neo.Json.JNumber.AsString
  nameWithType: JNumber.AsString
- uid: Neo.Json.JNumber.Clone
  name: Clone()
  href: api/Neo.Json.JNumber.html#Neo_Json_JNumber_Clone
  commentId: M:Neo.Json.JNumber.Clone
  fullName: Neo.Json.JNumber.Clone()
  nameWithType: JNumber.Clone()
- uid: Neo.Json.JNumber.Clone*
  name: Clone
  href: api/Neo.Json.JNumber.html#Neo_Json_JNumber_Clone_
  commentId: Overload:Neo.Json.JNumber.Clone
  isSpec: "True"
  fullName: Neo.Json.JNumber.Clone
  nameWithType: JNumber.Clone
- uid: Neo.Json.JNumber.GetEnum*
  name: GetEnum
  href: api/Neo.Json.JNumber.html#Neo_Json_JNumber_GetEnum_
  commentId: Overload:Neo.Json.JNumber.GetEnum
  isSpec: "True"
  fullName: Neo.Json.JNumber.GetEnum
  nameWithType: JNumber.GetEnum
- uid: Neo.Json.JNumber.GetEnum``1(System.Boolean)
  name: GetEnum<T>(bool)
  href: api/Neo.Json.JNumber.html#Neo_Json_JNumber_GetEnum__1_System_Boolean_
  commentId: M:Neo.Json.JNumber.GetEnum``1(System.Boolean)
  name.vb: GetEnum(Of T)(Boolean)
  fullName: Neo.Json.JNumber.GetEnum<T>(bool)
  fullName.vb: Neo.Json.JNumber.GetEnum(Of T)(Boolean)
  nameWithType: JNumber.GetEnum<T>(bool)
  nameWithType.vb: JNumber.GetEnum(Of T)(Boolean)
- uid: Neo.Json.JNumber.GetNumber
  name: GetNumber()
  href: api/Neo.Json.JNumber.html#Neo_Json_JNumber_GetNumber
  commentId: M:Neo.Json.JNumber.GetNumber
  fullName: Neo.Json.JNumber.GetNumber()
  nameWithType: JNumber.GetNumber()
- uid: Neo.Json.JNumber.GetNumber*
  name: GetNumber
  href: api/Neo.Json.JNumber.html#Neo_Json_JNumber_GetNumber_
  commentId: Overload:Neo.Json.JNumber.GetNumber
  isSpec: "True"
  fullName: Neo.Json.JNumber.GetNumber
  nameWithType: JNumber.GetNumber
- uid: Neo.Json.JNumber.MAX_SAFE_INTEGER
  name: MAX_SAFE_INTEGER
  href: api/Neo.Json.JNumber.html#Neo_Json_JNumber_MAX_SAFE_INTEGER
  commentId: F:Neo.Json.JNumber.MAX_SAFE_INTEGER
  fullName: Neo.Json.JNumber.MAX_SAFE_INTEGER
  nameWithType: JNumber.MAX_SAFE_INTEGER
- uid: Neo.Json.JNumber.MIN_SAFE_INTEGER
  name: MIN_SAFE_INTEGER
  href: api/Neo.Json.JNumber.html#Neo_Json_JNumber_MIN_SAFE_INTEGER
  commentId: F:Neo.Json.JNumber.MIN_SAFE_INTEGER
  fullName: Neo.Json.JNumber.MIN_SAFE_INTEGER
  nameWithType: JNumber.MIN_SAFE_INTEGER
- uid: Neo.Json.JNumber.ToString
  name: ToString()
  href: api/Neo.Json.JNumber.html#Neo_Json_JNumber_ToString
  commentId: M:Neo.Json.JNumber.ToString
  fullName: Neo.Json.JNumber.ToString()
  nameWithType: JNumber.ToString()
- uid: Neo.Json.JNumber.ToString*
  name: ToString
  href: api/Neo.Json.JNumber.html#Neo_Json_JNumber_ToString_
  commentId: Overload:Neo.Json.JNumber.ToString
  isSpec: "True"
  fullName: Neo.Json.JNumber.ToString
  nameWithType: JNumber.ToString
- uid: Neo.Json.JNumber.Value
  name: Value
  href: api/Neo.Json.JNumber.html#Neo_Json_JNumber_Value
  commentId: P:Neo.Json.JNumber.Value
  fullName: Neo.Json.JNumber.Value
  nameWithType: JNumber.Value
- uid: Neo.Json.JNumber.Value*
  name: Value
  href: api/Neo.Json.JNumber.html#Neo_Json_JNumber_Value_
  commentId: Overload:Neo.Json.JNumber.Value
  isSpec: "True"
  fullName: Neo.Json.JNumber.Value
  nameWithType: JNumber.Value
- uid: Neo.Json.JNumber.op_Implicit(System.Double)~Neo.Json.JNumber
  name: implicit operator JNumber(double)
  href: api/Neo.Json.JNumber.html#Neo_Json_JNumber_op_Implicit_System_Double__Neo_Json_JNumber
  commentId: M:Neo.Json.JNumber.op_Implicit(System.Double)~Neo.Json.JNumber
  name.vb: CType(Double)
  fullName: Neo.Json.JNumber.implicit operator Neo.Json.JNumber(double)
  fullName.vb: Neo.Json.JNumber.CType(Double)
  nameWithType: JNumber.implicit operator JNumber(double)
  nameWithType.vb: JNumber.CType(Double)
- uid: Neo.Json.JNumber.op_Implicit*
  name: implicit operator
  href: api/Neo.Json.JNumber.html#Neo_Json_JNumber_op_Implicit_
  commentId: Overload:Neo.Json.JNumber.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: Neo.Json.JNumber.implicit operator
  fullName.vb: Neo.Json.JNumber.CType
  nameWithType: JNumber.implicit operator
  nameWithType.vb: JNumber.CType
- uid: Neo.Json.JObject
  name: JObject
  href: api/Neo.Json.JObject.html
  commentId: T:Neo.Json.JObject
  fullName: Neo.Json.JObject
  nameWithType: JObject
- uid: Neo.Json.JObject.Children
  name: Children
  href: api/Neo.Json.JObject.html#Neo_Json_JObject_Children
  commentId: P:Neo.Json.JObject.Children
  fullName: Neo.Json.JObject.Children
  nameWithType: JObject.Children
- uid: Neo.Json.JObject.Children*
  name: Children
  href: api/Neo.Json.JObject.html#Neo_Json_JObject_Children_
  commentId: Overload:Neo.Json.JObject.Children
  isSpec: "True"
  fullName: Neo.Json.JObject.Children
  nameWithType: JObject.Children
- uid: Neo.Json.JObject.Clear
  name: Clear()
  href: api/Neo.Json.JObject.html#Neo_Json_JObject_Clear
  commentId: M:Neo.Json.JObject.Clear
  fullName: Neo.Json.JObject.Clear()
  nameWithType: JObject.Clear()
- uid: Neo.Json.JObject.Clear*
  name: Clear
  href: api/Neo.Json.JObject.html#Neo_Json_JObject_Clear_
  commentId: Overload:Neo.Json.JObject.Clear
  isSpec: "True"
  fullName: Neo.Json.JObject.Clear
  nameWithType: JObject.Clear
- uid: Neo.Json.JObject.Clone
  name: Clone()
  href: api/Neo.Json.JObject.html#Neo_Json_JObject_Clone
  commentId: M:Neo.Json.JObject.Clone
  fullName: Neo.Json.JObject.Clone()
  nameWithType: JObject.Clone()
- uid: Neo.Json.JObject.Clone*
  name: Clone
  href: api/Neo.Json.JObject.html#Neo_Json_JObject_Clone_
  commentId: Overload:Neo.Json.JObject.Clone
  isSpec: "True"
  fullName: Neo.Json.JObject.Clone
  nameWithType: JObject.Clone
- uid: Neo.Json.JObject.ContainsProperty(System.String)
  name: ContainsProperty(string)
  href: api/Neo.Json.JObject.html#Neo_Json_JObject_ContainsProperty_System_String_
  commentId: M:Neo.Json.JObject.ContainsProperty(System.String)
  name.vb: ContainsProperty(String)
  fullName: Neo.Json.JObject.ContainsProperty(string)
  fullName.vb: Neo.Json.JObject.ContainsProperty(String)
  nameWithType: JObject.ContainsProperty(string)
  nameWithType.vb: JObject.ContainsProperty(String)
- uid: Neo.Json.JObject.ContainsProperty*
  name: ContainsProperty
  href: api/Neo.Json.JObject.html#Neo_Json_JObject_ContainsProperty_
  commentId: Overload:Neo.Json.JObject.ContainsProperty
  isSpec: "True"
  fullName: Neo.Json.JObject.ContainsProperty
  nameWithType: JObject.ContainsProperty
- uid: Neo.Json.JObject.Item(System.String)
  name: this[string]
  href: api/Neo.Json.JObject.html#Neo_Json_JObject_Item_System_String_
  commentId: P:Neo.Json.JObject.Item(System.String)
  name.vb: this[](String)
  fullName: Neo.Json.JObject.this[string]
  fullName.vb: Neo.Json.JObject.this[](String)
  nameWithType: JObject.this[string]
  nameWithType.vb: JObject.this[](String)
- uid: Neo.Json.JObject.Item*
  name: this
  href: api/Neo.Json.JObject.html#Neo_Json_JObject_Item_
  commentId: Overload:Neo.Json.JObject.Item
  isSpec: "True"
  name.vb: this[]
  fullName: Neo.Json.JObject.this
  fullName.vb: Neo.Json.JObject.this[]
  nameWithType: JObject.this
  nameWithType.vb: JObject.this[]
- uid: Neo.Json.JObject.Properties
  name: Properties
  href: api/Neo.Json.JObject.html#Neo_Json_JObject_Properties
  commentId: P:Neo.Json.JObject.Properties
  fullName: Neo.Json.JObject.Properties
  nameWithType: JObject.Properties
- uid: Neo.Json.JObject.Properties*
  name: Properties
  href: api/Neo.Json.JObject.html#Neo_Json_JObject_Properties_
  commentId: Overload:Neo.Json.JObject.Properties
  isSpec: "True"
  fullName: Neo.Json.JObject.Properties
  nameWithType: JObject.Properties
- uid: Neo.Json.JString
  name: JString
  href: api/Neo.Json.JString.html
  commentId: T:Neo.Json.JString
  fullName: Neo.Json.JString
  nameWithType: JString
- uid: Neo.Json.JString.#ctor(System.String)
  name: JString(string)
  href: api/Neo.Json.JString.html#Neo_Json_JString__ctor_System_String_
  commentId: M:Neo.Json.JString.#ctor(System.String)
  name.vb: New(String)
  fullName: Neo.Json.JString.JString(string)
  fullName.vb: Neo.Json.JString.New(String)
  nameWithType: JString.JString(string)
  nameWithType.vb: JString.New(String)
- uid: Neo.Json.JString.#ctor*
  name: JString
  href: api/Neo.Json.JString.html#Neo_Json_JString__ctor_
  commentId: Overload:Neo.Json.JString.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Json.JString.JString
  fullName.vb: Neo.Json.JString.New
  nameWithType: JString.JString
  nameWithType.vb: JString.New
- uid: Neo.Json.JString.AsBoolean
  name: AsBoolean()
  href: api/Neo.Json.JString.html#Neo_Json_JString_AsBoolean
  commentId: M:Neo.Json.JString.AsBoolean
  fullName: Neo.Json.JString.AsBoolean()
  nameWithType: JString.AsBoolean()
- uid: Neo.Json.JString.AsBoolean*
  name: AsBoolean
  href: api/Neo.Json.JString.html#Neo_Json_JString_AsBoolean_
  commentId: Overload:Neo.Json.JString.AsBoolean
  isSpec: "True"
  fullName: Neo.Json.JString.AsBoolean
  nameWithType: JString.AsBoolean
- uid: Neo.Json.JString.AsEnum*
  name: AsEnum
  href: api/Neo.Json.JString.html#Neo_Json_JString_AsEnum_
  commentId: Overload:Neo.Json.JString.AsEnum
  isSpec: "True"
  fullName: Neo.Json.JString.AsEnum
  nameWithType: JString.AsEnum
- uid: Neo.Json.JString.AsEnum``1(``0,System.Boolean)
  name: AsEnum<T>(T, bool)
  href: api/Neo.Json.JString.html#Neo_Json_JString_AsEnum__1___0_System_Boolean_
  commentId: M:Neo.Json.JString.AsEnum``1(``0,System.Boolean)
  name.vb: AsEnum(Of T)(T, Boolean)
  fullName: Neo.Json.JString.AsEnum<T>(T, bool)
  fullName.vb: Neo.Json.JString.AsEnum(Of T)(T, Boolean)
  nameWithType: JString.AsEnum<T>(T, bool)
  nameWithType.vb: JString.AsEnum(Of T)(T, Boolean)
- uid: Neo.Json.JString.AsNumber
  name: AsNumber()
  href: api/Neo.Json.JString.html#Neo_Json_JString_AsNumber
  commentId: M:Neo.Json.JString.AsNumber
  fullName: Neo.Json.JString.AsNumber()
  nameWithType: JString.AsNumber()
- uid: Neo.Json.JString.AsNumber*
  name: AsNumber
  href: api/Neo.Json.JString.html#Neo_Json_JString_AsNumber_
  commentId: Overload:Neo.Json.JString.AsNumber
  isSpec: "True"
  fullName: Neo.Json.JString.AsNumber
  nameWithType: JString.AsNumber
- uid: Neo.Json.JString.AsString
  name: AsString()
  href: api/Neo.Json.JString.html#Neo_Json_JString_AsString
  commentId: M:Neo.Json.JString.AsString
  fullName: Neo.Json.JString.AsString()
  nameWithType: JString.AsString()
- uid: Neo.Json.JString.AsString*
  name: AsString
  href: api/Neo.Json.JString.html#Neo_Json_JString_AsString_
  commentId: Overload:Neo.Json.JString.AsString
  isSpec: "True"
  fullName: Neo.Json.JString.AsString
  nameWithType: JString.AsString
- uid: Neo.Json.JString.Clone
  name: Clone()
  href: api/Neo.Json.JString.html#Neo_Json_JString_Clone
  commentId: M:Neo.Json.JString.Clone
  fullName: Neo.Json.JString.Clone()
  nameWithType: JString.Clone()
- uid: Neo.Json.JString.Clone*
  name: Clone
  href: api/Neo.Json.JString.html#Neo_Json_JString_Clone_
  commentId: Overload:Neo.Json.JString.Clone
  isSpec: "True"
  fullName: Neo.Json.JString.Clone
  nameWithType: JString.Clone
- uid: Neo.Json.JString.GetEnum*
  name: GetEnum
  href: api/Neo.Json.JString.html#Neo_Json_JString_GetEnum_
  commentId: Overload:Neo.Json.JString.GetEnum
  isSpec: "True"
  fullName: Neo.Json.JString.GetEnum
  nameWithType: JString.GetEnum
- uid: Neo.Json.JString.GetEnum``1(System.Boolean)
  name: GetEnum<T>(bool)
  href: api/Neo.Json.JString.html#Neo_Json_JString_GetEnum__1_System_Boolean_
  commentId: M:Neo.Json.JString.GetEnum``1(System.Boolean)
  name.vb: GetEnum(Of T)(Boolean)
  fullName: Neo.Json.JString.GetEnum<T>(bool)
  fullName.vb: Neo.Json.JString.GetEnum(Of T)(Boolean)
  nameWithType: JString.GetEnum<T>(bool)
  nameWithType.vb: JString.GetEnum(Of T)(Boolean)
- uid: Neo.Json.JString.GetString
  name: GetString()
  href: api/Neo.Json.JString.html#Neo_Json_JString_GetString
  commentId: M:Neo.Json.JString.GetString
  fullName: Neo.Json.JString.GetString()
  nameWithType: JString.GetString()
- uid: Neo.Json.JString.GetString*
  name: GetString
  href: api/Neo.Json.JString.html#Neo_Json_JString_GetString_
  commentId: Overload:Neo.Json.JString.GetString
  isSpec: "True"
  fullName: Neo.Json.JString.GetString
  nameWithType: JString.GetString
- uid: Neo.Json.JString.Value
  name: Value
  href: api/Neo.Json.JString.html#Neo_Json_JString_Value
  commentId: P:Neo.Json.JString.Value
  fullName: Neo.Json.JString.Value
  nameWithType: JString.Value
- uid: Neo.Json.JString.Value*
  name: Value
  href: api/Neo.Json.JString.html#Neo_Json_JString_Value_
  commentId: Overload:Neo.Json.JString.Value
  isSpec: "True"
  fullName: Neo.Json.JString.Value
  nameWithType: JString.Value
- uid: Neo.Json.JString.op_Implicit(System.Enum)~Neo.Json.JString
  name: implicit operator JString(Enum)
  href: api/Neo.Json.JString.html#Neo_Json_JString_op_Implicit_System_Enum__Neo_Json_JString
  commentId: M:Neo.Json.JString.op_Implicit(System.Enum)~Neo.Json.JString
  name.vb: CType(Enum)
  fullName: Neo.Json.JString.implicit operator Neo.Json.JString(System.Enum)
  fullName.vb: Neo.Json.JString.CType(System.Enum)
  nameWithType: JString.implicit operator JString(Enum)
  nameWithType.vb: JString.CType(Enum)
- uid: Neo.Json.JString.op_Implicit(System.String)~Neo.Json.JString
  name: implicit operator JString?(string?)
  href: api/Neo.Json.JString.html#Neo_Json_JString_op_Implicit_System_String__Neo_Json_JString
  commentId: M:Neo.Json.JString.op_Implicit(System.String)~Neo.Json.JString
  name.vb: CType(String)
  fullName: Neo.Json.JString.implicit operator Neo.Json.JString?(string?)
  fullName.vb: Neo.Json.JString.CType(String)
  nameWithType: JString.implicit operator JString?(string?)
  nameWithType.vb: JString.CType(String)
- uid: Neo.Json.JString.op_Implicit*
  name: implicit operator
  href: api/Neo.Json.JString.html#Neo_Json_JString_op_Implicit_
  commentId: Overload:Neo.Json.JString.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: Neo.Json.JString.implicit operator
  fullName.vb: Neo.Json.JString.CType
  nameWithType: JString.implicit operator
  nameWithType.vb: JString.CType
- uid: Neo.Json.JToken
  name: JToken
  href: api/Neo.Json.JToken.html
  commentId: T:Neo.Json.JToken
  fullName: Neo.Json.JToken
  nameWithType: JToken
- uid: Neo.Json.JToken.AsBoolean
  name: AsBoolean()
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_AsBoolean
  commentId: M:Neo.Json.JToken.AsBoolean
  fullName: Neo.Json.JToken.AsBoolean()
  nameWithType: JToken.AsBoolean()
- uid: Neo.Json.JToken.AsBoolean*
  name: AsBoolean
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_AsBoolean_
  commentId: Overload:Neo.Json.JToken.AsBoolean
  isSpec: "True"
  fullName: Neo.Json.JToken.AsBoolean
  nameWithType: JToken.AsBoolean
- uid: Neo.Json.JToken.AsEnum*
  name: AsEnum
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_AsEnum_
  commentId: Overload:Neo.Json.JToken.AsEnum
  isSpec: "True"
  fullName: Neo.Json.JToken.AsEnum
  nameWithType: JToken.AsEnum
- uid: Neo.Json.JToken.AsEnum``1(``0,System.Boolean)
  name: AsEnum<T>(T, bool)
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_AsEnum__1___0_System_Boolean_
  commentId: M:Neo.Json.JToken.AsEnum``1(``0,System.Boolean)
  name.vb: AsEnum(Of T)(T, Boolean)
  fullName: Neo.Json.JToken.AsEnum<T>(T, bool)
  fullName.vb: Neo.Json.JToken.AsEnum(Of T)(T, Boolean)
  nameWithType: JToken.AsEnum<T>(T, bool)
  nameWithType.vb: JToken.AsEnum(Of T)(T, Boolean)
- uid: Neo.Json.JToken.AsNumber
  name: AsNumber()
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_AsNumber
  commentId: M:Neo.Json.JToken.AsNumber
  fullName: Neo.Json.JToken.AsNumber()
  nameWithType: JToken.AsNumber()
- uid: Neo.Json.JToken.AsNumber*
  name: AsNumber
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_AsNumber_
  commentId: Overload:Neo.Json.JToken.AsNumber
  isSpec: "True"
  fullName: Neo.Json.JToken.AsNumber
  nameWithType: JToken.AsNumber
- uid: Neo.Json.JToken.AsString
  name: AsString()
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_AsString
  commentId: M:Neo.Json.JToken.AsString
  fullName: Neo.Json.JToken.AsString()
  nameWithType: JToken.AsString()
- uid: Neo.Json.JToken.AsString*
  name: AsString
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_AsString_
  commentId: Overload:Neo.Json.JToken.AsString
  isSpec: "True"
  fullName: Neo.Json.JToken.AsString
  nameWithType: JToken.AsString
- uid: Neo.Json.JToken.Clone
  name: Clone()
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_Clone
  commentId: M:Neo.Json.JToken.Clone
  fullName: Neo.Json.JToken.Clone()
  nameWithType: JToken.Clone()
- uid: Neo.Json.JToken.Clone*
  name: Clone
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_Clone_
  commentId: Overload:Neo.Json.JToken.Clone
  isSpec: "True"
  fullName: Neo.Json.JToken.Clone
  nameWithType: JToken.Clone
- uid: Neo.Json.JToken.GetBoolean
  name: GetBoolean()
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_GetBoolean
  commentId: M:Neo.Json.JToken.GetBoolean
  fullName: Neo.Json.JToken.GetBoolean()
  nameWithType: JToken.GetBoolean()
- uid: Neo.Json.JToken.GetBoolean*
  name: GetBoolean
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_GetBoolean_
  commentId: Overload:Neo.Json.JToken.GetBoolean
  isSpec: "True"
  fullName: Neo.Json.JToken.GetBoolean
  nameWithType: JToken.GetBoolean
- uid: Neo.Json.JToken.GetEnum*
  name: GetEnum
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_GetEnum_
  commentId: Overload:Neo.Json.JToken.GetEnum
  isSpec: "True"
  fullName: Neo.Json.JToken.GetEnum
  nameWithType: JToken.GetEnum
- uid: Neo.Json.JToken.GetEnum``1(System.Boolean)
  name: GetEnum<T>(bool)
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_GetEnum__1_System_Boolean_
  commentId: M:Neo.Json.JToken.GetEnum``1(System.Boolean)
  name.vb: GetEnum(Of T)(Boolean)
  fullName: Neo.Json.JToken.GetEnum<T>(bool)
  fullName.vb: Neo.Json.JToken.GetEnum(Of T)(Boolean)
  nameWithType: JToken.GetEnum<T>(bool)
  nameWithType.vb: JToken.GetEnum(Of T)(Boolean)
- uid: Neo.Json.JToken.GetInt32
  name: GetInt32()
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_GetInt32
  commentId: M:Neo.Json.JToken.GetInt32
  fullName: Neo.Json.JToken.GetInt32()
  nameWithType: JToken.GetInt32()
- uid: Neo.Json.JToken.GetInt32*
  name: GetInt32
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_GetInt32_
  commentId: Overload:Neo.Json.JToken.GetInt32
  isSpec: "True"
  fullName: Neo.Json.JToken.GetInt32
  nameWithType: JToken.GetInt32
- uid: Neo.Json.JToken.GetNumber
  name: GetNumber()
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_GetNumber
  commentId: M:Neo.Json.JToken.GetNumber
  fullName: Neo.Json.JToken.GetNumber()
  nameWithType: JToken.GetNumber()
- uid: Neo.Json.JToken.GetNumber*
  name: GetNumber
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_GetNumber_
  commentId: Overload:Neo.Json.JToken.GetNumber
  isSpec: "True"
  fullName: Neo.Json.JToken.GetNumber
  nameWithType: JToken.GetNumber
- uid: Neo.Json.JToken.GetString
  name: GetString()
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_GetString
  commentId: M:Neo.Json.JToken.GetString
  fullName: Neo.Json.JToken.GetString()
  nameWithType: JToken.GetString()
- uid: Neo.Json.JToken.GetString*
  name: GetString
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_GetString_
  commentId: Overload:Neo.Json.JToken.GetString
  isSpec: "True"
  fullName: Neo.Json.JToken.GetString
  nameWithType: JToken.GetString
- uid: Neo.Json.JToken.Item(System.Int32)
  name: this[int]
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_Item_System_Int32_
  commentId: P:Neo.Json.JToken.Item(System.Int32)
  name.vb: this[](Integer)
  fullName: Neo.Json.JToken.this[int]
  fullName.vb: Neo.Json.JToken.this[](Integer)
  nameWithType: JToken.this[int]
  nameWithType.vb: JToken.this[](Integer)
- uid: Neo.Json.JToken.Item(System.String)
  name: this[string]
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_Item_System_String_
  commentId: P:Neo.Json.JToken.Item(System.String)
  name.vb: this[](String)
  fullName: Neo.Json.JToken.this[string]
  fullName.vb: Neo.Json.JToken.this[](String)
  nameWithType: JToken.this[string]
  nameWithType.vb: JToken.this[](String)
- uid: Neo.Json.JToken.Item*
  name: this
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_Item_
  commentId: Overload:Neo.Json.JToken.Item
  isSpec: "True"
  name.vb: this[]
  fullName: Neo.Json.JToken.this
  fullName.vb: Neo.Json.JToken.this[]
  nameWithType: JToken.this
  nameWithType.vb: JToken.this[]
- uid: Neo.Json.JToken.JsonPath(System.String)
  name: JsonPath(string)
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_JsonPath_System_String_
  commentId: M:Neo.Json.JToken.JsonPath(System.String)
  name.vb: JsonPath(String)
  fullName: Neo.Json.JToken.JsonPath(string)
  fullName.vb: Neo.Json.JToken.JsonPath(String)
  nameWithType: JToken.JsonPath(string)
  nameWithType.vb: JToken.JsonPath(String)
- uid: Neo.Json.JToken.JsonPath*
  name: JsonPath
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_JsonPath_
  commentId: Overload:Neo.Json.JToken.JsonPath
  isSpec: "True"
  fullName: Neo.Json.JToken.JsonPath
  nameWithType: JToken.JsonPath
- uid: Neo.Json.JToken.Null
  name: "Null"
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_Null
  commentId: F:Neo.Json.JToken.Null
  fullName: Neo.Json.JToken.Null
  nameWithType: JToken.Null
- uid: Neo.Json.JToken.Parse(System.ReadOnlySpan{System.Byte},System.Int32)
  name: Parse(ReadOnlySpan<byte>, int)
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_Parse_System_ReadOnlySpan_System_Byte__System_Int32_
  commentId: M:Neo.Json.JToken.Parse(System.ReadOnlySpan{System.Byte},System.Int32)
  name.vb: Parse(ReadOnlySpan(Of Byte), Integer)
  fullName: Neo.Json.JToken.Parse(System.ReadOnlySpan<byte>, int)
  fullName.vb: Neo.Json.JToken.Parse(System.ReadOnlySpan(Of Byte), Integer)
  nameWithType: JToken.Parse(ReadOnlySpan<byte>, int)
  nameWithType.vb: JToken.Parse(ReadOnlySpan(Of Byte), Integer)
- uid: Neo.Json.JToken.Parse(System.String,System.Int32)
  name: Parse(string, int)
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_Parse_System_String_System_Int32_
  commentId: M:Neo.Json.JToken.Parse(System.String,System.Int32)
  name.vb: Parse(String, Integer)
  fullName: Neo.Json.JToken.Parse(string, int)
  fullName.vb: Neo.Json.JToken.Parse(String, Integer)
  nameWithType: JToken.Parse(string, int)
  nameWithType.vb: JToken.Parse(String, Integer)
- uid: Neo.Json.JToken.Parse*
  name: Parse
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_Parse_
  commentId: Overload:Neo.Json.JToken.Parse
  isSpec: "True"
  fullName: Neo.Json.JToken.Parse
  nameWithType: JToken.Parse
- uid: Neo.Json.JToken.ToByteArray(System.Boolean)
  name: ToByteArray(bool)
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_ToByteArray_System_Boolean_
  commentId: M:Neo.Json.JToken.ToByteArray(System.Boolean)
  name.vb: ToByteArray(Boolean)
  fullName: Neo.Json.JToken.ToByteArray(bool)
  fullName.vb: Neo.Json.JToken.ToByteArray(Boolean)
  nameWithType: JToken.ToByteArray(bool)
  nameWithType.vb: JToken.ToByteArray(Boolean)
- uid: Neo.Json.JToken.ToByteArray*
  name: ToByteArray
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_ToByteArray_
  commentId: Overload:Neo.Json.JToken.ToByteArray
  isSpec: "True"
  fullName: Neo.Json.JToken.ToByteArray
  nameWithType: JToken.ToByteArray
- uid: Neo.Json.JToken.ToString
  name: ToString()
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_ToString
  commentId: M:Neo.Json.JToken.ToString
  fullName: Neo.Json.JToken.ToString()
  nameWithType: JToken.ToString()
- uid: Neo.Json.JToken.ToString(System.Boolean)
  name: ToString(bool)
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_ToString_System_Boolean_
  commentId: M:Neo.Json.JToken.ToString(System.Boolean)
  name.vb: ToString(Boolean)
  fullName: Neo.Json.JToken.ToString(bool)
  fullName.vb: Neo.Json.JToken.ToString(Boolean)
  nameWithType: JToken.ToString(bool)
  nameWithType.vb: JToken.ToString(Boolean)
- uid: Neo.Json.JToken.ToString*
  name: ToString
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_ToString_
  commentId: Overload:Neo.Json.JToken.ToString
  isSpec: "True"
  fullName: Neo.Json.JToken.ToString
  nameWithType: JToken.ToString
- uid: Neo.Json.JToken.op_Implicit(Neo.Json.JToken[])~Neo.Json.JToken
  name: implicit operator JToken(JToken?[])
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_op_Implicit_Neo_Json_JToken____Neo_Json_JToken
  commentId: M:Neo.Json.JToken.op_Implicit(Neo.Json.JToken[])~Neo.Json.JToken
  name.vb: CType(JToken())
  fullName: Neo.Json.JToken.implicit operator Neo.Json.JToken(Neo.Json.JToken?[])
  fullName.vb: Neo.Json.JToken.CType(Neo.Json.JToken())
  nameWithType: JToken.implicit operator JToken(JToken?[])
  nameWithType.vb: JToken.CType(JToken())
- uid: Neo.Json.JToken.op_Implicit(System.Boolean)~Neo.Json.JToken
  name: implicit operator JToken(bool)
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_op_Implicit_System_Boolean__Neo_Json_JToken
  commentId: M:Neo.Json.JToken.op_Implicit(System.Boolean)~Neo.Json.JToken
  name.vb: CType(Boolean)
  fullName: Neo.Json.JToken.implicit operator Neo.Json.JToken(bool)
  fullName.vb: Neo.Json.JToken.CType(Boolean)
  nameWithType: JToken.implicit operator JToken(bool)
  nameWithType.vb: JToken.CType(Boolean)
- uid: Neo.Json.JToken.op_Implicit(System.Double)~Neo.Json.JToken
  name: implicit operator JToken(double)
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_op_Implicit_System_Double__Neo_Json_JToken
  commentId: M:Neo.Json.JToken.op_Implicit(System.Double)~Neo.Json.JToken
  name.vb: CType(Double)
  fullName: Neo.Json.JToken.implicit operator Neo.Json.JToken(double)
  fullName.vb: Neo.Json.JToken.CType(Double)
  nameWithType: JToken.implicit operator JToken(double)
  nameWithType.vb: JToken.CType(Double)
- uid: Neo.Json.JToken.op_Implicit(System.Enum)~Neo.Json.JToken
  name: implicit operator JToken(Enum)
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_op_Implicit_System_Enum__Neo_Json_JToken
  commentId: M:Neo.Json.JToken.op_Implicit(System.Enum)~Neo.Json.JToken
  name.vb: CType(Enum)
  fullName: Neo.Json.JToken.implicit operator Neo.Json.JToken(System.Enum)
  fullName.vb: Neo.Json.JToken.CType(System.Enum)
  nameWithType: JToken.implicit operator JToken(Enum)
  nameWithType.vb: JToken.CType(Enum)
- uid: Neo.Json.JToken.op_Implicit(System.String)~Neo.Json.JToken
  name: implicit operator JToken?(string?)
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_op_Implicit_System_String__Neo_Json_JToken
  commentId: M:Neo.Json.JToken.op_Implicit(System.String)~Neo.Json.JToken
  name.vb: CType(String)
  fullName: Neo.Json.JToken.implicit operator Neo.Json.JToken?(string?)
  fullName.vb: Neo.Json.JToken.CType(String)
  nameWithType: JToken.implicit operator JToken?(string?)
  nameWithType.vb: JToken.CType(String)
- uid: Neo.Json.JToken.op_Implicit*
  name: implicit operator
  href: api/Neo.Json.JToken.html#Neo_Json_JToken_op_Implicit_
  commentId: Overload:Neo.Json.JToken.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: Neo.Json.JToken.implicit operator
  fullName.vb: Neo.Json.JToken.CType
  nameWithType: JToken.implicit operator
  nameWithType.vb: JToken.CType
- uid: Neo.Ledger
  name: Neo.Ledger
  href: api/Neo.Ledger.html
  commentId: N:Neo.Ledger
  fullName: Neo.Ledger
  nameWithType: Neo.Ledger
- uid: Neo.Ledger.Blockchain
  name: Blockchain
  href: api/Neo.Ledger.Blockchain.html
  commentId: T:Neo.Ledger.Blockchain
  fullName: Neo.Ledger.Blockchain
  nameWithType: Blockchain
- uid: Neo.Ledger.Blockchain.#ctor(Neo.NeoSystem)
  name: Blockchain(NeoSystem)
  href: api/Neo.Ledger.Blockchain.html#Neo_Ledger_Blockchain__ctor_Neo_NeoSystem_
  commentId: M:Neo.Ledger.Blockchain.#ctor(Neo.NeoSystem)
  name.vb: New(NeoSystem)
  fullName: Neo.Ledger.Blockchain.Blockchain(Neo.NeoSystem)
  fullName.vb: Neo.Ledger.Blockchain.New(Neo.NeoSystem)
  nameWithType: Blockchain.Blockchain(NeoSystem)
  nameWithType.vb: Blockchain.New(NeoSystem)
- uid: Neo.Ledger.Blockchain.#ctor*
  name: Blockchain
  href: api/Neo.Ledger.Blockchain.html#Neo_Ledger_Blockchain__ctor_
  commentId: Overload:Neo.Ledger.Blockchain.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Ledger.Blockchain.Blockchain
  fullName.vb: Neo.Ledger.Blockchain.New
  nameWithType: Blockchain.Blockchain
  nameWithType.vb: Blockchain.New
- uid: Neo.Ledger.Blockchain.ApplicationExecuted
  name: Blockchain.ApplicationExecuted
  href: api/Neo.Ledger.Blockchain.ApplicationExecuted.html
  commentId: T:Neo.Ledger.Blockchain.ApplicationExecuted
  fullName: Neo.Ledger.Blockchain.ApplicationExecuted
  nameWithType: Blockchain.ApplicationExecuted
- uid: Neo.Ledger.Blockchain.ApplicationExecuted.Exception
  name: Exception
  href: api/Neo.Ledger.Blockchain.ApplicationExecuted.html#Neo_Ledger_Blockchain_ApplicationExecuted_Exception
  commentId: P:Neo.Ledger.Blockchain.ApplicationExecuted.Exception
  fullName: Neo.Ledger.Blockchain.ApplicationExecuted.Exception
  nameWithType: Blockchain.ApplicationExecuted.Exception
- uid: Neo.Ledger.Blockchain.ApplicationExecuted.Exception*
  name: Exception
  href: api/Neo.Ledger.Blockchain.ApplicationExecuted.html#Neo_Ledger_Blockchain_ApplicationExecuted_Exception_
  commentId: Overload:Neo.Ledger.Blockchain.ApplicationExecuted.Exception
  isSpec: "True"
  fullName: Neo.Ledger.Blockchain.ApplicationExecuted.Exception
  nameWithType: Blockchain.ApplicationExecuted.Exception
- uid: Neo.Ledger.Blockchain.ApplicationExecuted.GasConsumed
  name: GasConsumed
  href: api/Neo.Ledger.Blockchain.ApplicationExecuted.html#Neo_Ledger_Blockchain_ApplicationExecuted_GasConsumed
  commentId: P:Neo.Ledger.Blockchain.ApplicationExecuted.GasConsumed
  fullName: Neo.Ledger.Blockchain.ApplicationExecuted.GasConsumed
  nameWithType: Blockchain.ApplicationExecuted.GasConsumed
- uid: Neo.Ledger.Blockchain.ApplicationExecuted.GasConsumed*
  name: GasConsumed
  href: api/Neo.Ledger.Blockchain.ApplicationExecuted.html#Neo_Ledger_Blockchain_ApplicationExecuted_GasConsumed_
  commentId: Overload:Neo.Ledger.Blockchain.ApplicationExecuted.GasConsumed
  isSpec: "True"
  fullName: Neo.Ledger.Blockchain.ApplicationExecuted.GasConsumed
  nameWithType: Blockchain.ApplicationExecuted.GasConsumed
- uid: Neo.Ledger.Blockchain.ApplicationExecuted.Notifications
  name: Notifications
  href: api/Neo.Ledger.Blockchain.ApplicationExecuted.html#Neo_Ledger_Blockchain_ApplicationExecuted_Notifications
  commentId: P:Neo.Ledger.Blockchain.ApplicationExecuted.Notifications
  fullName: Neo.Ledger.Blockchain.ApplicationExecuted.Notifications
  nameWithType: Blockchain.ApplicationExecuted.Notifications
- uid: Neo.Ledger.Blockchain.ApplicationExecuted.Notifications*
  name: Notifications
  href: api/Neo.Ledger.Blockchain.ApplicationExecuted.html#Neo_Ledger_Blockchain_ApplicationExecuted_Notifications_
  commentId: Overload:Neo.Ledger.Blockchain.ApplicationExecuted.Notifications
  isSpec: "True"
  fullName: Neo.Ledger.Blockchain.ApplicationExecuted.Notifications
  nameWithType: Blockchain.ApplicationExecuted.Notifications
- uid: Neo.Ledger.Blockchain.ApplicationExecuted.Stack
  name: Stack
  href: api/Neo.Ledger.Blockchain.ApplicationExecuted.html#Neo_Ledger_Blockchain_ApplicationExecuted_Stack
  commentId: P:Neo.Ledger.Blockchain.ApplicationExecuted.Stack
  fullName: Neo.Ledger.Blockchain.ApplicationExecuted.Stack
  nameWithType: Blockchain.ApplicationExecuted.Stack
- uid: Neo.Ledger.Blockchain.ApplicationExecuted.Stack*
  name: Stack
  href: api/Neo.Ledger.Blockchain.ApplicationExecuted.html#Neo_Ledger_Blockchain_ApplicationExecuted_Stack_
  commentId: Overload:Neo.Ledger.Blockchain.ApplicationExecuted.Stack
  isSpec: "True"
  fullName: Neo.Ledger.Blockchain.ApplicationExecuted.Stack
  nameWithType: Blockchain.ApplicationExecuted.Stack
- uid: Neo.Ledger.Blockchain.ApplicationExecuted.Transaction
  name: Transaction
  href: api/Neo.Ledger.Blockchain.ApplicationExecuted.html#Neo_Ledger_Blockchain_ApplicationExecuted_Transaction
  commentId: P:Neo.Ledger.Blockchain.ApplicationExecuted.Transaction
  fullName: Neo.Ledger.Blockchain.ApplicationExecuted.Transaction
  nameWithType: Blockchain.ApplicationExecuted.Transaction
- uid: Neo.Ledger.Blockchain.ApplicationExecuted.Transaction*
  name: Transaction
  href: api/Neo.Ledger.Blockchain.ApplicationExecuted.html#Neo_Ledger_Blockchain_ApplicationExecuted_Transaction_
  commentId: Overload:Neo.Ledger.Blockchain.ApplicationExecuted.Transaction
  isSpec: "True"
  fullName: Neo.Ledger.Blockchain.ApplicationExecuted.Transaction
  nameWithType: Blockchain.ApplicationExecuted.Transaction
- uid: Neo.Ledger.Blockchain.ApplicationExecuted.Trigger
  name: Trigger
  href: api/Neo.Ledger.Blockchain.ApplicationExecuted.html#Neo_Ledger_Blockchain_ApplicationExecuted_Trigger
  commentId: P:Neo.Ledger.Blockchain.ApplicationExecuted.Trigger
  fullName: Neo.Ledger.Blockchain.ApplicationExecuted.Trigger
  nameWithType: Blockchain.ApplicationExecuted.Trigger
- uid: Neo.Ledger.Blockchain.ApplicationExecuted.Trigger*
  name: Trigger
  href: api/Neo.Ledger.Blockchain.ApplicationExecuted.html#Neo_Ledger_Blockchain_ApplicationExecuted_Trigger_
  commentId: Overload:Neo.Ledger.Blockchain.ApplicationExecuted.Trigger
  isSpec: "True"
  fullName: Neo.Ledger.Blockchain.ApplicationExecuted.Trigger
  nameWithType: Blockchain.ApplicationExecuted.Trigger
- uid: Neo.Ledger.Blockchain.ApplicationExecuted.VMState
  name: VMState
  href: api/Neo.Ledger.Blockchain.ApplicationExecuted.html#Neo_Ledger_Blockchain_ApplicationExecuted_VMState
  commentId: P:Neo.Ledger.Blockchain.ApplicationExecuted.VMState
  fullName: Neo.Ledger.Blockchain.ApplicationExecuted.VMState
  nameWithType: Blockchain.ApplicationExecuted.VMState
- uid: Neo.Ledger.Blockchain.ApplicationExecuted.VMState*
  name: VMState
  href: api/Neo.Ledger.Blockchain.ApplicationExecuted.html#Neo_Ledger_Blockchain_ApplicationExecuted_VMState_
  commentId: Overload:Neo.Ledger.Blockchain.ApplicationExecuted.VMState
  isSpec: "True"
  fullName: Neo.Ledger.Blockchain.ApplicationExecuted.VMState
  nameWithType: Blockchain.ApplicationExecuted.VMState
- uid: Neo.Ledger.Blockchain.Committed
  name: Committed
  href: api/Neo.Ledger.Blockchain.html#Neo_Ledger_Blockchain_Committed
  commentId: E:Neo.Ledger.Blockchain.Committed
  fullName: Neo.Ledger.Blockchain.Committed
  nameWithType: Blockchain.Committed
- uid: Neo.Ledger.Blockchain.Committing
  name: Committing
  href: api/Neo.Ledger.Blockchain.html#Neo_Ledger_Blockchain_Committing
  commentId: E:Neo.Ledger.Blockchain.Committing
  fullName: Neo.Ledger.Blockchain.Committing
  nameWithType: Blockchain.Committing
- uid: Neo.Ledger.Blockchain.FillCompleted
  name: Blockchain.FillCompleted
  href: api/Neo.Ledger.Blockchain.FillCompleted.html
  commentId: T:Neo.Ledger.Blockchain.FillCompleted
  fullName: Neo.Ledger.Blockchain.FillCompleted
  nameWithType: Blockchain.FillCompleted
- uid: Neo.Ledger.Blockchain.FillMemoryPool
  name: Blockchain.FillMemoryPool
  href: api/Neo.Ledger.Blockchain.FillMemoryPool.html
  commentId: T:Neo.Ledger.Blockchain.FillMemoryPool
  fullName: Neo.Ledger.Blockchain.FillMemoryPool
  nameWithType: Blockchain.FillMemoryPool
- uid: Neo.Ledger.Blockchain.FillMemoryPool.Transactions
  name: Transactions
  href: api/Neo.Ledger.Blockchain.FillMemoryPool.html#Neo_Ledger_Blockchain_FillMemoryPool_Transactions
  commentId: P:Neo.Ledger.Blockchain.FillMemoryPool.Transactions
  fullName: Neo.Ledger.Blockchain.FillMemoryPool.Transactions
  nameWithType: Blockchain.FillMemoryPool.Transactions
- uid: Neo.Ledger.Blockchain.FillMemoryPool.Transactions*
  name: Transactions
  href: api/Neo.Ledger.Blockchain.FillMemoryPool.html#Neo_Ledger_Blockchain_FillMemoryPool_Transactions_
  commentId: Overload:Neo.Ledger.Blockchain.FillMemoryPool.Transactions
  isSpec: "True"
  fullName: Neo.Ledger.Blockchain.FillMemoryPool.Transactions
  nameWithType: Blockchain.FillMemoryPool.Transactions
- uid: Neo.Ledger.Blockchain.Import
  name: Blockchain.Import
  href: api/Neo.Ledger.Blockchain.Import.html
  commentId: T:Neo.Ledger.Blockchain.Import
  fullName: Neo.Ledger.Blockchain.Import
  nameWithType: Blockchain.Import
- uid: Neo.Ledger.Blockchain.Import.Blocks
  name: Blocks
  href: api/Neo.Ledger.Blockchain.Import.html#Neo_Ledger_Blockchain_Import_Blocks
  commentId: P:Neo.Ledger.Blockchain.Import.Blocks
  fullName: Neo.Ledger.Blockchain.Import.Blocks
  nameWithType: Blockchain.Import.Blocks
- uid: Neo.Ledger.Blockchain.Import.Blocks*
  name: Blocks
  href: api/Neo.Ledger.Blockchain.Import.html#Neo_Ledger_Blockchain_Import_Blocks_
  commentId: Overload:Neo.Ledger.Blockchain.Import.Blocks
  isSpec: "True"
  fullName: Neo.Ledger.Blockchain.Import.Blocks
  nameWithType: Blockchain.Import.Blocks
- uid: Neo.Ledger.Blockchain.Import.Verify
  name: Verify
  href: api/Neo.Ledger.Blockchain.Import.html#Neo_Ledger_Blockchain_Import_Verify
  commentId: P:Neo.Ledger.Blockchain.Import.Verify
  fullName: Neo.Ledger.Blockchain.Import.Verify
  nameWithType: Blockchain.Import.Verify
- uid: Neo.Ledger.Blockchain.Import.Verify*
  name: Verify
  href: api/Neo.Ledger.Blockchain.Import.html#Neo_Ledger_Blockchain_Import_Verify_
  commentId: Overload:Neo.Ledger.Blockchain.Import.Verify
  isSpec: "True"
  fullName: Neo.Ledger.Blockchain.Import.Verify
  nameWithType: Blockchain.Import.Verify
- uid: Neo.Ledger.Blockchain.ImportCompleted
  name: Blockchain.ImportCompleted
  href: api/Neo.Ledger.Blockchain.ImportCompleted.html
  commentId: T:Neo.Ledger.Blockchain.ImportCompleted
  fullName: Neo.Ledger.Blockchain.ImportCompleted
  nameWithType: Blockchain.ImportCompleted
- uid: Neo.Ledger.Blockchain.OnReceive(System.Object)
  name: OnReceive(object)
  href: api/Neo.Ledger.Blockchain.html#Neo_Ledger_Blockchain_OnReceive_System_Object_
  commentId: M:Neo.Ledger.Blockchain.OnReceive(System.Object)
  name.vb: OnReceive(Object)
  fullName: Neo.Ledger.Blockchain.OnReceive(object)
  fullName.vb: Neo.Ledger.Blockchain.OnReceive(Object)
  nameWithType: Blockchain.OnReceive(object)
  nameWithType.vb: Blockchain.OnReceive(Object)
- uid: Neo.Ledger.Blockchain.OnReceive*
  name: OnReceive
  href: api/Neo.Ledger.Blockchain.html#Neo_Ledger_Blockchain_OnReceive_
  commentId: Overload:Neo.Ledger.Blockchain.OnReceive
  isSpec: "True"
  fullName: Neo.Ledger.Blockchain.OnReceive
  nameWithType: Blockchain.OnReceive
- uid: Neo.Ledger.Blockchain.PersistCompleted
  name: Blockchain.PersistCompleted
  href: api/Neo.Ledger.Blockchain.PersistCompleted.html
  commentId: T:Neo.Ledger.Blockchain.PersistCompleted
  fullName: Neo.Ledger.Blockchain.PersistCompleted
  nameWithType: Blockchain.PersistCompleted
- uid: Neo.Ledger.Blockchain.PersistCompleted.Block
  name: Block
  href: api/Neo.Ledger.Blockchain.PersistCompleted.html#Neo_Ledger_Blockchain_PersistCompleted_Block
  commentId: P:Neo.Ledger.Blockchain.PersistCompleted.Block
  fullName: Neo.Ledger.Blockchain.PersistCompleted.Block
  nameWithType: Blockchain.PersistCompleted.Block
- uid: Neo.Ledger.Blockchain.PersistCompleted.Block*
  name: Block
  href: api/Neo.Ledger.Blockchain.PersistCompleted.html#Neo_Ledger_Blockchain_PersistCompleted_Block_
  commentId: Overload:Neo.Ledger.Blockchain.PersistCompleted.Block
  isSpec: "True"
  fullName: Neo.Ledger.Blockchain.PersistCompleted.Block
  nameWithType: Blockchain.PersistCompleted.Block
- uid: Neo.Ledger.Blockchain.Props(Neo.NeoSystem)
  name: Props(NeoSystem)
  href: api/Neo.Ledger.Blockchain.html#Neo_Ledger_Blockchain_Props_Neo_NeoSystem_
  commentId: M:Neo.Ledger.Blockchain.Props(Neo.NeoSystem)
  fullName: Neo.Ledger.Blockchain.Props(Neo.NeoSystem)
  nameWithType: Blockchain.Props(NeoSystem)
- uid: Neo.Ledger.Blockchain.Props*
  name: Props
  href: api/Neo.Ledger.Blockchain.html#Neo_Ledger_Blockchain_Props_
  commentId: Overload:Neo.Ledger.Blockchain.Props
  isSpec: "True"
  fullName: Neo.Ledger.Blockchain.Props
  nameWithType: Blockchain.Props
- uid: Neo.Ledger.Blockchain.RelayResult
  name: Blockchain.RelayResult
  href: api/Neo.Ledger.Blockchain.RelayResult.html
  commentId: T:Neo.Ledger.Blockchain.RelayResult
  fullName: Neo.Ledger.Blockchain.RelayResult
  nameWithType: Blockchain.RelayResult
- uid: Neo.Ledger.Blockchain.RelayResult.Inventory
  name: Inventory
  href: api/Neo.Ledger.Blockchain.RelayResult.html#Neo_Ledger_Blockchain_RelayResult_Inventory
  commentId: P:Neo.Ledger.Blockchain.RelayResult.Inventory
  fullName: Neo.Ledger.Blockchain.RelayResult.Inventory
  nameWithType: Blockchain.RelayResult.Inventory
- uid: Neo.Ledger.Blockchain.RelayResult.Inventory*
  name: Inventory
  href: api/Neo.Ledger.Blockchain.RelayResult.html#Neo_Ledger_Blockchain_RelayResult_Inventory_
  commentId: Overload:Neo.Ledger.Blockchain.RelayResult.Inventory
  isSpec: "True"
  fullName: Neo.Ledger.Blockchain.RelayResult.Inventory
  nameWithType: Blockchain.RelayResult.Inventory
- uid: Neo.Ledger.Blockchain.RelayResult.Result
  name: Result
  href: api/Neo.Ledger.Blockchain.RelayResult.html#Neo_Ledger_Blockchain_RelayResult_Result
  commentId: P:Neo.Ledger.Blockchain.RelayResult.Result
  fullName: Neo.Ledger.Blockchain.RelayResult.Result
  nameWithType: Blockchain.RelayResult.Result
- uid: Neo.Ledger.Blockchain.RelayResult.Result*
  name: Result
  href: api/Neo.Ledger.Blockchain.RelayResult.html#Neo_Ledger_Blockchain_RelayResult_Result_
  commentId: Overload:Neo.Ledger.Blockchain.RelayResult.Result
  isSpec: "True"
  fullName: Neo.Ledger.Blockchain.RelayResult.Result
  nameWithType: Blockchain.RelayResult.Result
- uid: Neo.Ledger.Blockchain.Reverify
  name: Blockchain.Reverify
  href: api/Neo.Ledger.Blockchain.Reverify.html
  commentId: T:Neo.Ledger.Blockchain.Reverify
  fullName: Neo.Ledger.Blockchain.Reverify
  nameWithType: Blockchain.Reverify
- uid: Neo.Ledger.Blockchain.Reverify.Inventories
  name: Inventories
  href: api/Neo.Ledger.Blockchain.Reverify.html#Neo_Ledger_Blockchain_Reverify_Inventories
  commentId: P:Neo.Ledger.Blockchain.Reverify.Inventories
  fullName: Neo.Ledger.Blockchain.Reverify.Inventories
  nameWithType: Blockchain.Reverify.Inventories
- uid: Neo.Ledger.Blockchain.Reverify.Inventories*
  name: Inventories
  href: api/Neo.Ledger.Blockchain.Reverify.html#Neo_Ledger_Blockchain_Reverify_Inventories_
  commentId: Overload:Neo.Ledger.Blockchain.Reverify.Inventories
  isSpec: "True"
  fullName: Neo.Ledger.Blockchain.Reverify.Inventories
  nameWithType: Blockchain.Reverify.Inventories
- uid: Neo.Ledger.CommittedHandler
  name: CommittedHandler
  href: api/Neo.Ledger.CommittedHandler.html
  commentId: T:Neo.Ledger.CommittedHandler
  fullName: Neo.Ledger.CommittedHandler
  nameWithType: CommittedHandler
- uid: Neo.Ledger.CommittingHandler
  name: CommittingHandler
  href: api/Neo.Ledger.CommittingHandler.html
  commentId: T:Neo.Ledger.CommittingHandler
  fullName: Neo.Ledger.CommittingHandler
  nameWithType: CommittingHandler
- uid: Neo.Ledger.HeaderCache
  name: HeaderCache
  href: api/Neo.Ledger.HeaderCache.html
  commentId: T:Neo.Ledger.HeaderCache
  fullName: Neo.Ledger.HeaderCache
  nameWithType: HeaderCache
- uid: Neo.Ledger.HeaderCache.Count
  name: Count
  href: api/Neo.Ledger.HeaderCache.html#Neo_Ledger_HeaderCache_Count
  commentId: P:Neo.Ledger.HeaderCache.Count
  fullName: Neo.Ledger.HeaderCache.Count
  nameWithType: HeaderCache.Count
- uid: Neo.Ledger.HeaderCache.Count*
  name: Count
  href: api/Neo.Ledger.HeaderCache.html#Neo_Ledger_HeaderCache_Count_
  commentId: Overload:Neo.Ledger.HeaderCache.Count
  isSpec: "True"
  fullName: Neo.Ledger.HeaderCache.Count
  nameWithType: HeaderCache.Count
- uid: Neo.Ledger.HeaderCache.Dispose
  name: Dispose()
  href: api/Neo.Ledger.HeaderCache.html#Neo_Ledger_HeaderCache_Dispose
  commentId: M:Neo.Ledger.HeaderCache.Dispose
  fullName: Neo.Ledger.HeaderCache.Dispose()
  nameWithType: HeaderCache.Dispose()
- uid: Neo.Ledger.HeaderCache.Dispose*
  name: Dispose
  href: api/Neo.Ledger.HeaderCache.html#Neo_Ledger_HeaderCache_Dispose_
  commentId: Overload:Neo.Ledger.HeaderCache.Dispose
  isSpec: "True"
  fullName: Neo.Ledger.HeaderCache.Dispose
  nameWithType: HeaderCache.Dispose
- uid: Neo.Ledger.HeaderCache.Full
  name: Full
  href: api/Neo.Ledger.HeaderCache.html#Neo_Ledger_HeaderCache_Full
  commentId: P:Neo.Ledger.HeaderCache.Full
  fullName: Neo.Ledger.HeaderCache.Full
  nameWithType: HeaderCache.Full
- uid: Neo.Ledger.HeaderCache.Full*
  name: Full
  href: api/Neo.Ledger.HeaderCache.html#Neo_Ledger_HeaderCache_Full_
  commentId: Overload:Neo.Ledger.HeaderCache.Full
  isSpec: "True"
  fullName: Neo.Ledger.HeaderCache.Full
  nameWithType: HeaderCache.Full
- uid: Neo.Ledger.HeaderCache.GetEnumerator
  name: GetEnumerator()
  href: api/Neo.Ledger.HeaderCache.html#Neo_Ledger_HeaderCache_GetEnumerator
  commentId: M:Neo.Ledger.HeaderCache.GetEnumerator
  fullName: Neo.Ledger.HeaderCache.GetEnumerator()
  nameWithType: HeaderCache.GetEnumerator()
- uid: Neo.Ledger.HeaderCache.GetEnumerator*
  name: GetEnumerator
  href: api/Neo.Ledger.HeaderCache.html#Neo_Ledger_HeaderCache_GetEnumerator_
  commentId: Overload:Neo.Ledger.HeaderCache.GetEnumerator
  isSpec: "True"
  fullName: Neo.Ledger.HeaderCache.GetEnumerator
  nameWithType: HeaderCache.GetEnumerator
- uid: Neo.Ledger.HeaderCache.Item(System.UInt32)
  name: this[uint]
  href: api/Neo.Ledger.HeaderCache.html#Neo_Ledger_HeaderCache_Item_System_UInt32_
  commentId: P:Neo.Ledger.HeaderCache.Item(System.UInt32)
  name.vb: this[](UInteger)
  fullName: Neo.Ledger.HeaderCache.this[uint]
  fullName.vb: Neo.Ledger.HeaderCache.this[](UInteger)
  nameWithType: HeaderCache.this[uint]
  nameWithType.vb: HeaderCache.this[](UInteger)
- uid: Neo.Ledger.HeaderCache.Item*
  name: this
  href: api/Neo.Ledger.HeaderCache.html#Neo_Ledger_HeaderCache_Item_
  commentId: Overload:Neo.Ledger.HeaderCache.Item
  isSpec: "True"
  name.vb: this[]
  fullName: Neo.Ledger.HeaderCache.this
  fullName.vb: Neo.Ledger.HeaderCache.this[]
  nameWithType: HeaderCache.this
  nameWithType.vb: HeaderCache.this[]
- uid: Neo.Ledger.HeaderCache.Last
  name: Last
  href: api/Neo.Ledger.HeaderCache.html#Neo_Ledger_HeaderCache_Last
  commentId: P:Neo.Ledger.HeaderCache.Last
  fullName: Neo.Ledger.HeaderCache.Last
  nameWithType: HeaderCache.Last
- uid: Neo.Ledger.HeaderCache.Last*
  name: Last
  href: api/Neo.Ledger.HeaderCache.html#Neo_Ledger_HeaderCache_Last_
  commentId: Overload:Neo.Ledger.HeaderCache.Last
  isSpec: "True"
  fullName: Neo.Ledger.HeaderCache.Last
  nameWithType: HeaderCache.Last
- uid: Neo.Ledger.MemoryPool
  name: MemoryPool
  href: api/Neo.Ledger.MemoryPool.html
  commentId: T:Neo.Ledger.MemoryPool
  fullName: Neo.Ledger.MemoryPool
  nameWithType: MemoryPool
- uid: Neo.Ledger.MemoryPool.#ctor(Neo.NeoSystem)
  name: MemoryPool(NeoSystem)
  href: api/Neo.Ledger.MemoryPool.html#Neo_Ledger_MemoryPool__ctor_Neo_NeoSystem_
  commentId: M:Neo.Ledger.MemoryPool.#ctor(Neo.NeoSystem)
  name.vb: New(NeoSystem)
  fullName: Neo.Ledger.MemoryPool.MemoryPool(Neo.NeoSystem)
  fullName.vb: Neo.Ledger.MemoryPool.New(Neo.NeoSystem)
  nameWithType: MemoryPool.MemoryPool(NeoSystem)
  nameWithType.vb: MemoryPool.New(NeoSystem)
- uid: Neo.Ledger.MemoryPool.#ctor*
  name: MemoryPool
  href: api/Neo.Ledger.MemoryPool.html#Neo_Ledger_MemoryPool__ctor_
  commentId: Overload:Neo.Ledger.MemoryPool.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Ledger.MemoryPool.MemoryPool
  fullName.vb: Neo.Ledger.MemoryPool.New
  nameWithType: MemoryPool.MemoryPool
  nameWithType.vb: MemoryPool.New
- uid: Neo.Ledger.MemoryPool.Capacity
  name: Capacity
  href: api/Neo.Ledger.MemoryPool.html#Neo_Ledger_MemoryPool_Capacity
  commentId: P:Neo.Ledger.MemoryPool.Capacity
  fullName: Neo.Ledger.MemoryPool.Capacity
  nameWithType: MemoryPool.Capacity
- uid: Neo.Ledger.MemoryPool.Capacity*
  name: Capacity
  href: api/Neo.Ledger.MemoryPool.html#Neo_Ledger_MemoryPool_Capacity_
  commentId: Overload:Neo.Ledger.MemoryPool.Capacity
  isSpec: "True"
  fullName: Neo.Ledger.MemoryPool.Capacity
  nameWithType: MemoryPool.Capacity
- uid: Neo.Ledger.MemoryPool.ContainsKey(Neo.UInt256)
  name: ContainsKey(UInt256)
  href: api/Neo.Ledger.MemoryPool.html#Neo_Ledger_MemoryPool_ContainsKey_Neo_UInt256_
  commentId: M:Neo.Ledger.MemoryPool.ContainsKey(Neo.UInt256)
  fullName: Neo.Ledger.MemoryPool.ContainsKey(Neo.UInt256)
  nameWithType: MemoryPool.ContainsKey(UInt256)
- uid: Neo.Ledger.MemoryPool.ContainsKey*
  name: ContainsKey
  href: api/Neo.Ledger.MemoryPool.html#Neo_Ledger_MemoryPool_ContainsKey_
  commentId: Overload:Neo.Ledger.MemoryPool.ContainsKey
  isSpec: "True"
  fullName: Neo.Ledger.MemoryPool.ContainsKey
  nameWithType: MemoryPool.ContainsKey
- uid: Neo.Ledger.MemoryPool.Count
  name: Count
  href: api/Neo.Ledger.MemoryPool.html#Neo_Ledger_MemoryPool_Count
  commentId: P:Neo.Ledger.MemoryPool.Count
  fullName: Neo.Ledger.MemoryPool.Count
  nameWithType: MemoryPool.Count
- uid: Neo.Ledger.MemoryPool.Count*
  name: Count
  href: api/Neo.Ledger.MemoryPool.html#Neo_Ledger_MemoryPool_Count_
  commentId: Overload:Neo.Ledger.MemoryPool.Count
  isSpec: "True"
  fullName: Neo.Ledger.MemoryPool.Count
  nameWithType: MemoryPool.Count
- uid: Neo.Ledger.MemoryPool.GetEnumerator
  name: GetEnumerator()
  href: api/Neo.Ledger.MemoryPool.html#Neo_Ledger_MemoryPool_GetEnumerator
  commentId: M:Neo.Ledger.MemoryPool.GetEnumerator
  fullName: Neo.Ledger.MemoryPool.GetEnumerator()
  nameWithType: MemoryPool.GetEnumerator()
- uid: Neo.Ledger.MemoryPool.GetEnumerator*
  name: GetEnumerator
  href: api/Neo.Ledger.MemoryPool.html#Neo_Ledger_MemoryPool_GetEnumerator_
  commentId: Overload:Neo.Ledger.MemoryPool.GetEnumerator
  isSpec: "True"
  fullName: Neo.Ledger.MemoryPool.GetEnumerator
  nameWithType: MemoryPool.GetEnumerator
- uid: Neo.Ledger.MemoryPool.GetSortedVerifiedTransactions
  name: GetSortedVerifiedTransactions()
  href: api/Neo.Ledger.MemoryPool.html#Neo_Ledger_MemoryPool_GetSortedVerifiedTransactions
  commentId: M:Neo.Ledger.MemoryPool.GetSortedVerifiedTransactions
  fullName: Neo.Ledger.MemoryPool.GetSortedVerifiedTransactions()
  nameWithType: MemoryPool.GetSortedVerifiedTransactions()
- uid: Neo.Ledger.MemoryPool.GetSortedVerifiedTransactions*
  name: GetSortedVerifiedTransactions
  href: api/Neo.Ledger.MemoryPool.html#Neo_Ledger_MemoryPool_GetSortedVerifiedTransactions_
  commentId: Overload:Neo.Ledger.MemoryPool.GetSortedVerifiedTransactions
  isSpec: "True"
  fullName: Neo.Ledger.MemoryPool.GetSortedVerifiedTransactions
  nameWithType: MemoryPool.GetSortedVerifiedTransactions
- uid: Neo.Ledger.MemoryPool.GetVerifiedAndUnverifiedTransactions(System.Collections.Generic.IEnumerable{Neo.Network.P2P.Payloads.Transaction}@,System.Collections.Generic.IEnumerable{Neo.Network.P2P.Payloads.Transaction}@)
  name: GetVerifiedAndUnverifiedTransactions(out IEnumerable<Transaction>, out IEnumerable<Transaction>)
  href: api/Neo.Ledger.MemoryPool.html#Neo_Ledger_MemoryPool_GetVerifiedAndUnverifiedTransactions_System_Collections_Generic_IEnumerable_Neo_Network_P2P_Payloads_Transaction___System_Collections_Generic_IEnumerable_Neo_Network_P2P_Payloads_Transaction___
  commentId: M:Neo.Ledger.MemoryPool.GetVerifiedAndUnverifiedTransactions(System.Collections.Generic.IEnumerable{Neo.Network.P2P.Payloads.Transaction}@,System.Collections.Generic.IEnumerable{Neo.Network.P2P.Payloads.Transaction}@)
  name.vb: GetVerifiedAndUnverifiedTransactions(IEnumerable(Of Transaction), IEnumerable(Of Transaction))
  fullName: Neo.Ledger.MemoryPool.GetVerifiedAndUnverifiedTransactions(out System.Collections.Generic.IEnumerable<Neo.Network.P2P.Payloads.Transaction>, out System.Collections.Generic.IEnumerable<Neo.Network.P2P.Payloads.Transaction>)
  fullName.vb: Neo.Ledger.MemoryPool.GetVerifiedAndUnverifiedTransactions(System.Collections.Generic.IEnumerable(Of Neo.Network.P2P.Payloads.Transaction), System.Collections.Generic.IEnumerable(Of Neo.Network.P2P.Payloads.Transaction))
  nameWithType: MemoryPool.GetVerifiedAndUnverifiedTransactions(out IEnumerable<Transaction>, out IEnumerable<Transaction>)
  nameWithType.vb: MemoryPool.GetVerifiedAndUnverifiedTransactions(IEnumerable(Of Transaction), IEnumerable(Of Transaction))
- uid: Neo.Ledger.MemoryPool.GetVerifiedAndUnverifiedTransactions*
  name: GetVerifiedAndUnverifiedTransactions
  href: api/Neo.Ledger.MemoryPool.html#Neo_Ledger_MemoryPool_GetVerifiedAndUnverifiedTransactions_
  commentId: Overload:Neo.Ledger.MemoryPool.GetVerifiedAndUnverifiedTransactions
  isSpec: "True"
  fullName: Neo.Ledger.MemoryPool.GetVerifiedAndUnverifiedTransactions
  nameWithType: MemoryPool.GetVerifiedAndUnverifiedTransactions
- uid: Neo.Ledger.MemoryPool.GetVerifiedTransactions
  name: GetVerifiedTransactions()
  href: api/Neo.Ledger.MemoryPool.html#Neo_Ledger_MemoryPool_GetVerifiedTransactions
  commentId: M:Neo.Ledger.MemoryPool.GetVerifiedTransactions
  fullName: Neo.Ledger.MemoryPool.GetVerifiedTransactions()
  nameWithType: MemoryPool.GetVerifiedTransactions()
- uid: Neo.Ledger.MemoryPool.GetVerifiedTransactions*
  name: GetVerifiedTransactions
  href: api/Neo.Ledger.MemoryPool.html#Neo_Ledger_MemoryPool_GetVerifiedTransactions_
  commentId: Overload:Neo.Ledger.MemoryPool.GetVerifiedTransactions
  isSpec: "True"
  fullName: Neo.Ledger.MemoryPool.GetVerifiedTransactions
  nameWithType: MemoryPool.GetVerifiedTransactions
- uid: Neo.Ledger.MemoryPool.TransactionAdded
  name: TransactionAdded
  href: api/Neo.Ledger.MemoryPool.html#Neo_Ledger_MemoryPool_TransactionAdded
  commentId: E:Neo.Ledger.MemoryPool.TransactionAdded
  fullName: Neo.Ledger.MemoryPool.TransactionAdded
  nameWithType: MemoryPool.TransactionAdded
- uid: Neo.Ledger.MemoryPool.TransactionRemoved
  name: TransactionRemoved
  href: api/Neo.Ledger.MemoryPool.html#Neo_Ledger_MemoryPool_TransactionRemoved
  commentId: E:Neo.Ledger.MemoryPool.TransactionRemoved
  fullName: Neo.Ledger.MemoryPool.TransactionRemoved
  nameWithType: MemoryPool.TransactionRemoved
- uid: Neo.Ledger.MemoryPool.TryGetValue(Neo.UInt256,Neo.Network.P2P.Payloads.Transaction@)
  name: TryGetValue(UInt256, out Transaction)
  href: api/Neo.Ledger.MemoryPool.html#Neo_Ledger_MemoryPool_TryGetValue_Neo_UInt256_Neo_Network_P2P_Payloads_Transaction__
  commentId: M:Neo.Ledger.MemoryPool.TryGetValue(Neo.UInt256,Neo.Network.P2P.Payloads.Transaction@)
  name.vb: TryGetValue(UInt256, Transaction)
  fullName: Neo.Ledger.MemoryPool.TryGetValue(Neo.UInt256, out Neo.Network.P2P.Payloads.Transaction)
  fullName.vb: Neo.Ledger.MemoryPool.TryGetValue(Neo.UInt256, Neo.Network.P2P.Payloads.Transaction)
  nameWithType: MemoryPool.TryGetValue(UInt256, out Transaction)
  nameWithType.vb: MemoryPool.TryGetValue(UInt256, Transaction)
- uid: Neo.Ledger.MemoryPool.TryGetValue*
  name: TryGetValue
  href: api/Neo.Ledger.MemoryPool.html#Neo_Ledger_MemoryPool_TryGetValue_
  commentId: Overload:Neo.Ledger.MemoryPool.TryGetValue
  isSpec: "True"
  fullName: Neo.Ledger.MemoryPool.TryGetValue
  nameWithType: MemoryPool.TryGetValue
- uid: Neo.Ledger.MemoryPool.UnVerifiedCount
  name: UnVerifiedCount
  href: api/Neo.Ledger.MemoryPool.html#Neo_Ledger_MemoryPool_UnVerifiedCount
  commentId: P:Neo.Ledger.MemoryPool.UnVerifiedCount
  fullName: Neo.Ledger.MemoryPool.UnVerifiedCount
  nameWithType: MemoryPool.UnVerifiedCount
- uid: Neo.Ledger.MemoryPool.UnVerifiedCount*
  name: UnVerifiedCount
  href: api/Neo.Ledger.MemoryPool.html#Neo_Ledger_MemoryPool_UnVerifiedCount_
  commentId: Overload:Neo.Ledger.MemoryPool.UnVerifiedCount
  isSpec: "True"
  fullName: Neo.Ledger.MemoryPool.UnVerifiedCount
  nameWithType: MemoryPool.UnVerifiedCount
- uid: Neo.Ledger.MemoryPool.VerifiedCount
  name: VerifiedCount
  href: api/Neo.Ledger.MemoryPool.html#Neo_Ledger_MemoryPool_VerifiedCount
  commentId: P:Neo.Ledger.MemoryPool.VerifiedCount
  fullName: Neo.Ledger.MemoryPool.VerifiedCount
  nameWithType: MemoryPool.VerifiedCount
- uid: Neo.Ledger.MemoryPool.VerifiedCount*
  name: VerifiedCount
  href: api/Neo.Ledger.MemoryPool.html#Neo_Ledger_MemoryPool_VerifiedCount_
  commentId: Overload:Neo.Ledger.MemoryPool.VerifiedCount
  isSpec: "True"
  fullName: Neo.Ledger.MemoryPool.VerifiedCount
  nameWithType: MemoryPool.VerifiedCount
- uid: Neo.Ledger.TransactionRemovalReason
  name: TransactionRemovalReason
  href: api/Neo.Ledger.TransactionRemovalReason.html
  commentId: T:Neo.Ledger.TransactionRemovalReason
  fullName: Neo.Ledger.TransactionRemovalReason
  nameWithType: TransactionRemovalReason
- uid: Neo.Ledger.TransactionRemovalReason.CapacityExceeded
  name: CapacityExceeded
  href: api/Neo.Ledger.TransactionRemovalReason.html#Neo_Ledger_TransactionRemovalReason_CapacityExceeded
  commentId: F:Neo.Ledger.TransactionRemovalReason.CapacityExceeded
  fullName: Neo.Ledger.TransactionRemovalReason.CapacityExceeded
  nameWithType: TransactionRemovalReason.CapacityExceeded
- uid: Neo.Ledger.TransactionRemovalReason.Conflict
  name: Conflict
  href: api/Neo.Ledger.TransactionRemovalReason.html#Neo_Ledger_TransactionRemovalReason_Conflict
  commentId: F:Neo.Ledger.TransactionRemovalReason.Conflict
  fullName: Neo.Ledger.TransactionRemovalReason.Conflict
  nameWithType: TransactionRemovalReason.Conflict
- uid: Neo.Ledger.TransactionRemovalReason.NoLongerValid
  name: NoLongerValid
  href: api/Neo.Ledger.TransactionRemovalReason.html#Neo_Ledger_TransactionRemovalReason_NoLongerValid
  commentId: F:Neo.Ledger.TransactionRemovalReason.NoLongerValid
  fullName: Neo.Ledger.TransactionRemovalReason.NoLongerValid
  nameWithType: TransactionRemovalReason.NoLongerValid
- uid: Neo.Ledger.TransactionRemovedEventArgs
  name: TransactionRemovedEventArgs
  href: api/Neo.Ledger.TransactionRemovedEventArgs.html
  commentId: T:Neo.Ledger.TransactionRemovedEventArgs
  fullName: Neo.Ledger.TransactionRemovedEventArgs
  nameWithType: TransactionRemovedEventArgs
- uid: Neo.Ledger.TransactionRemovedEventArgs.Reason
  name: Reason
  href: api/Neo.Ledger.TransactionRemovedEventArgs.html#Neo_Ledger_TransactionRemovedEventArgs_Reason
  commentId: P:Neo.Ledger.TransactionRemovedEventArgs.Reason
  fullName: Neo.Ledger.TransactionRemovedEventArgs.Reason
  nameWithType: TransactionRemovedEventArgs.Reason
- uid: Neo.Ledger.TransactionRemovedEventArgs.Reason*
  name: Reason
  href: api/Neo.Ledger.TransactionRemovedEventArgs.html#Neo_Ledger_TransactionRemovedEventArgs_Reason_
  commentId: Overload:Neo.Ledger.TransactionRemovedEventArgs.Reason
  isSpec: "True"
  fullName: Neo.Ledger.TransactionRemovedEventArgs.Reason
  nameWithType: TransactionRemovedEventArgs.Reason
- uid: Neo.Ledger.TransactionRemovedEventArgs.Transactions
  name: Transactions
  href: api/Neo.Ledger.TransactionRemovedEventArgs.html#Neo_Ledger_TransactionRemovedEventArgs_Transactions
  commentId: P:Neo.Ledger.TransactionRemovedEventArgs.Transactions
  fullName: Neo.Ledger.TransactionRemovedEventArgs.Transactions
  nameWithType: TransactionRemovedEventArgs.Transactions
- uid: Neo.Ledger.TransactionRemovedEventArgs.Transactions*
  name: Transactions
  href: api/Neo.Ledger.TransactionRemovedEventArgs.html#Neo_Ledger_TransactionRemovedEventArgs_Transactions_
  commentId: Overload:Neo.Ledger.TransactionRemovedEventArgs.Transactions
  isSpec: "True"
  fullName: Neo.Ledger.TransactionRemovedEventArgs.Transactions
  nameWithType: TransactionRemovedEventArgs.Transactions
- uid: Neo.Ledger.TransactionVerificationContext
  name: TransactionVerificationContext
  href: api/Neo.Ledger.TransactionVerificationContext.html
  commentId: T:Neo.Ledger.TransactionVerificationContext
  fullName: Neo.Ledger.TransactionVerificationContext
  nameWithType: TransactionVerificationContext
- uid: Neo.Ledger.TransactionVerificationContext.AddTransaction(Neo.Network.P2P.Payloads.Transaction)
  name: AddTransaction(Transaction)
  href: api/Neo.Ledger.TransactionVerificationContext.html#Neo_Ledger_TransactionVerificationContext_AddTransaction_Neo_Network_P2P_Payloads_Transaction_
  commentId: M:Neo.Ledger.TransactionVerificationContext.AddTransaction(Neo.Network.P2P.Payloads.Transaction)
  fullName: Neo.Ledger.TransactionVerificationContext.AddTransaction(Neo.Network.P2P.Payloads.Transaction)
  nameWithType: TransactionVerificationContext.AddTransaction(Transaction)
- uid: Neo.Ledger.TransactionVerificationContext.AddTransaction*
  name: AddTransaction
  href: api/Neo.Ledger.TransactionVerificationContext.html#Neo_Ledger_TransactionVerificationContext_AddTransaction_
  commentId: Overload:Neo.Ledger.TransactionVerificationContext.AddTransaction
  isSpec: "True"
  fullName: Neo.Ledger.TransactionVerificationContext.AddTransaction
  nameWithType: TransactionVerificationContext.AddTransaction
- uid: Neo.Ledger.TransactionVerificationContext.CheckTransaction(Neo.Network.P2P.Payloads.Transaction,System.Collections.Generic.IEnumerable{Neo.Network.P2P.Payloads.Transaction},Neo.Persistence.DataCache)
  name: CheckTransaction(Transaction, IEnumerable<Transaction>, DataCache)
  href: api/Neo.Ledger.TransactionVerificationContext.html#Neo_Ledger_TransactionVerificationContext_CheckTransaction_Neo_Network_P2P_Payloads_Transaction_System_Collections_Generic_IEnumerable_Neo_Network_P2P_Payloads_Transaction__Neo_Persistence_DataCache_
  commentId: M:Neo.Ledger.TransactionVerificationContext.CheckTransaction(Neo.Network.P2P.Payloads.Transaction,System.Collections.Generic.IEnumerable{Neo.Network.P2P.Payloads.Transaction},Neo.Persistence.DataCache)
  name.vb: CheckTransaction(Transaction, IEnumerable(Of Transaction), DataCache)
  fullName: Neo.Ledger.TransactionVerificationContext.CheckTransaction(Neo.Network.P2P.Payloads.Transaction, System.Collections.Generic.IEnumerable<Neo.Network.P2P.Payloads.Transaction>, Neo.Persistence.DataCache)
  fullName.vb: Neo.Ledger.TransactionVerificationContext.CheckTransaction(Neo.Network.P2P.Payloads.Transaction, System.Collections.Generic.IEnumerable(Of Neo.Network.P2P.Payloads.Transaction), Neo.Persistence.DataCache)
  nameWithType: TransactionVerificationContext.CheckTransaction(Transaction, IEnumerable<Transaction>, DataCache)
  nameWithType.vb: TransactionVerificationContext.CheckTransaction(Transaction, IEnumerable(Of Transaction), DataCache)
- uid: Neo.Ledger.TransactionVerificationContext.CheckTransaction*
  name: CheckTransaction
  href: api/Neo.Ledger.TransactionVerificationContext.html#Neo_Ledger_TransactionVerificationContext_CheckTransaction_
  commentId: Overload:Neo.Ledger.TransactionVerificationContext.CheckTransaction
  isSpec: "True"
  fullName: Neo.Ledger.TransactionVerificationContext.CheckTransaction
  nameWithType: TransactionVerificationContext.CheckTransaction
- uid: Neo.Ledger.TransactionVerificationContext.RemoveTransaction(Neo.Network.P2P.Payloads.Transaction)
  name: RemoveTransaction(Transaction)
  href: api/Neo.Ledger.TransactionVerificationContext.html#Neo_Ledger_TransactionVerificationContext_RemoveTransaction_Neo_Network_P2P_Payloads_Transaction_
  commentId: M:Neo.Ledger.TransactionVerificationContext.RemoveTransaction(Neo.Network.P2P.Payloads.Transaction)
  fullName: Neo.Ledger.TransactionVerificationContext.RemoveTransaction(Neo.Network.P2P.Payloads.Transaction)
  nameWithType: TransactionVerificationContext.RemoveTransaction(Transaction)
- uid: Neo.Ledger.TransactionVerificationContext.RemoveTransaction*
  name: RemoveTransaction
  href: api/Neo.Ledger.TransactionVerificationContext.html#Neo_Ledger_TransactionVerificationContext_RemoveTransaction_
  commentId: Overload:Neo.Ledger.TransactionVerificationContext.RemoveTransaction
  isSpec: "True"
  fullName: Neo.Ledger.TransactionVerificationContext.RemoveTransaction
  nameWithType: TransactionVerificationContext.RemoveTransaction
- uid: Neo.Ledger.VerifyResult
  name: VerifyResult
  href: api/Neo.Ledger.VerifyResult.html
  commentId: T:Neo.Ledger.VerifyResult
  fullName: Neo.Ledger.VerifyResult
  nameWithType: VerifyResult
- uid: Neo.Ledger.VerifyResult.AlreadyExists
  name: AlreadyExists
  href: api/Neo.Ledger.VerifyResult.html#Neo_Ledger_VerifyResult_AlreadyExists
  commentId: F:Neo.Ledger.VerifyResult.AlreadyExists
  fullName: Neo.Ledger.VerifyResult.AlreadyExists
  nameWithType: VerifyResult.AlreadyExists
- uid: Neo.Ledger.VerifyResult.Expired
  name: Expired
  href: api/Neo.Ledger.VerifyResult.html#Neo_Ledger_VerifyResult_Expired
  commentId: F:Neo.Ledger.VerifyResult.Expired
  fullName: Neo.Ledger.VerifyResult.Expired
  nameWithType: VerifyResult.Expired
- uid: Neo.Ledger.VerifyResult.HasConflicts
  name: HasConflicts
  href: api/Neo.Ledger.VerifyResult.html#Neo_Ledger_VerifyResult_HasConflicts
  commentId: F:Neo.Ledger.VerifyResult.HasConflicts
  fullName: Neo.Ledger.VerifyResult.HasConflicts
  nameWithType: VerifyResult.HasConflicts
- uid: Neo.Ledger.VerifyResult.InsufficientFunds
  name: InsufficientFunds
  href: api/Neo.Ledger.VerifyResult.html#Neo_Ledger_VerifyResult_InsufficientFunds
  commentId: F:Neo.Ledger.VerifyResult.InsufficientFunds
  fullName: Neo.Ledger.VerifyResult.InsufficientFunds
  nameWithType: VerifyResult.InsufficientFunds
- uid: Neo.Ledger.VerifyResult.Invalid
  name: Invalid
  href: api/Neo.Ledger.VerifyResult.html#Neo_Ledger_VerifyResult_Invalid
  commentId: F:Neo.Ledger.VerifyResult.Invalid
  fullName: Neo.Ledger.VerifyResult.Invalid
  nameWithType: VerifyResult.Invalid
- uid: Neo.Ledger.VerifyResult.InvalidAttribute
  name: InvalidAttribute
  href: api/Neo.Ledger.VerifyResult.html#Neo_Ledger_VerifyResult_InvalidAttribute
  commentId: F:Neo.Ledger.VerifyResult.InvalidAttribute
  fullName: Neo.Ledger.VerifyResult.InvalidAttribute
  nameWithType: VerifyResult.InvalidAttribute
- uid: Neo.Ledger.VerifyResult.InvalidScript
  name: InvalidScript
  href: api/Neo.Ledger.VerifyResult.html#Neo_Ledger_VerifyResult_InvalidScript
  commentId: F:Neo.Ledger.VerifyResult.InvalidScript
  fullName: Neo.Ledger.VerifyResult.InvalidScript
  nameWithType: VerifyResult.InvalidScript
- uid: Neo.Ledger.VerifyResult.InvalidSignature
  name: InvalidSignature
  href: api/Neo.Ledger.VerifyResult.html#Neo_Ledger_VerifyResult_InvalidSignature
  commentId: F:Neo.Ledger.VerifyResult.InvalidSignature
  fullName: Neo.Ledger.VerifyResult.InvalidSignature
  nameWithType: VerifyResult.InvalidSignature
- uid: Neo.Ledger.VerifyResult.OutOfMemory
  name: OutOfMemory
  href: api/Neo.Ledger.VerifyResult.html#Neo_Ledger_VerifyResult_OutOfMemory
  commentId: F:Neo.Ledger.VerifyResult.OutOfMemory
  fullName: Neo.Ledger.VerifyResult.OutOfMemory
  nameWithType: VerifyResult.OutOfMemory
- uid: Neo.Ledger.VerifyResult.OverSize
  name: OverSize
  href: api/Neo.Ledger.VerifyResult.html#Neo_Ledger_VerifyResult_OverSize
  commentId: F:Neo.Ledger.VerifyResult.OverSize
  fullName: Neo.Ledger.VerifyResult.OverSize
  nameWithType: VerifyResult.OverSize
- uid: Neo.Ledger.VerifyResult.PolicyFail
  name: PolicyFail
  href: api/Neo.Ledger.VerifyResult.html#Neo_Ledger_VerifyResult_PolicyFail
  commentId: F:Neo.Ledger.VerifyResult.PolicyFail
  fullName: Neo.Ledger.VerifyResult.PolicyFail
  nameWithType: VerifyResult.PolicyFail
- uid: Neo.Ledger.VerifyResult.Succeed
  name: Succeed
  href: api/Neo.Ledger.VerifyResult.html#Neo_Ledger_VerifyResult_Succeed
  commentId: F:Neo.Ledger.VerifyResult.Succeed
  fullName: Neo.Ledger.VerifyResult.Succeed
  nameWithType: VerifyResult.Succeed
- uid: Neo.Ledger.VerifyResult.UnableToVerify
  name: UnableToVerify
  href: api/Neo.Ledger.VerifyResult.html#Neo_Ledger_VerifyResult_UnableToVerify
  commentId: F:Neo.Ledger.VerifyResult.UnableToVerify
  fullName: Neo.Ledger.VerifyResult.UnableToVerify
  nameWithType: VerifyResult.UnableToVerify
- uid: Neo.Ledger.VerifyResult.Unknown
  name: Unknown
  href: api/Neo.Ledger.VerifyResult.html#Neo_Ledger_VerifyResult_Unknown
  commentId: F:Neo.Ledger.VerifyResult.Unknown
  fullName: Neo.Ledger.VerifyResult.Unknown
  nameWithType: VerifyResult.Unknown
- uid: Neo.LogEventHandler
  name: LogEventHandler
  href: api/Neo.LogEventHandler.html
  commentId: T:Neo.LogEventHandler
  fullName: Neo.LogEventHandler
  nameWithType: LogEventHandler
- uid: Neo.LogLevel
  name: LogLevel
  href: api/Neo.LogLevel.html
  commentId: T:Neo.LogLevel
  fullName: Neo.LogLevel
  nameWithType: LogLevel
- uid: Neo.LogLevel.Debug
  name: Debug
  href: api/Neo.LogLevel.html#Neo_LogLevel_Debug
  commentId: F:Neo.LogLevel.Debug
  fullName: Neo.LogLevel.Debug
  nameWithType: LogLevel.Debug
- uid: Neo.LogLevel.Error
  name: Error
  href: api/Neo.LogLevel.html#Neo_LogLevel_Error
  commentId: F:Neo.LogLevel.Error
  fullName: Neo.LogLevel.Error
  nameWithType: LogLevel.Error
- uid: Neo.LogLevel.Fatal
  name: Fatal
  href: api/Neo.LogLevel.html#Neo_LogLevel_Fatal
  commentId: F:Neo.LogLevel.Fatal
  fullName: Neo.LogLevel.Fatal
  nameWithType: LogLevel.Fatal
- uid: Neo.LogLevel.Info
  name: Info
  href: api/Neo.LogLevel.html#Neo_LogLevel_Info
  commentId: F:Neo.LogLevel.Info
  fullName: Neo.LogLevel.Info
  nameWithType: LogLevel.Info
- uid: Neo.LogLevel.Warning
  name: Warning
  href: api/Neo.LogLevel.html#Neo_LogLevel_Warning
  commentId: F:Neo.LogLevel.Warning
  fullName: Neo.LogLevel.Warning
  nameWithType: LogLevel.Warning
- uid: Neo.NeoSystem
  name: NeoSystem
  href: api/Neo.NeoSystem.html
  commentId: T:Neo.NeoSystem
  fullName: Neo.NeoSystem
  nameWithType: NeoSystem
- uid: Neo.NeoSystem.#ctor(Neo.ProtocolSettings,System.String,System.String)
  name: NeoSystem(ProtocolSettings, string, string)
  href: api/Neo.NeoSystem.html#Neo_NeoSystem__ctor_Neo_ProtocolSettings_System_String_System_String_
  commentId: M:Neo.NeoSystem.#ctor(Neo.ProtocolSettings,System.String,System.String)
  name.vb: New(ProtocolSettings, String, String)
  fullName: Neo.NeoSystem.NeoSystem(Neo.ProtocolSettings, string, string)
  fullName.vb: Neo.NeoSystem.New(Neo.ProtocolSettings, String, String)
  nameWithType: NeoSystem.NeoSystem(ProtocolSettings, string, string)
  nameWithType.vb: NeoSystem.New(ProtocolSettings, String, String)
- uid: Neo.NeoSystem.#ctor*
  name: NeoSystem
  href: api/Neo.NeoSystem.html#Neo_NeoSystem__ctor_
  commentId: Overload:Neo.NeoSystem.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.NeoSystem.NeoSystem
  fullName.vb: Neo.NeoSystem.New
  nameWithType: NeoSystem.NeoSystem
  nameWithType.vb: NeoSystem.New
- uid: Neo.NeoSystem.ActorSystem
  name: ActorSystem
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_ActorSystem
  commentId: P:Neo.NeoSystem.ActorSystem
  fullName: Neo.NeoSystem.ActorSystem
  nameWithType: NeoSystem.ActorSystem
- uid: Neo.NeoSystem.ActorSystem*
  name: ActorSystem
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_ActorSystem_
  commentId: Overload:Neo.NeoSystem.ActorSystem
  isSpec: "True"
  fullName: Neo.NeoSystem.ActorSystem
  nameWithType: NeoSystem.ActorSystem
- uid: Neo.NeoSystem.AddService(System.Object)
  name: AddService(object)
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_AddService_System_Object_
  commentId: M:Neo.NeoSystem.AddService(System.Object)
  name.vb: AddService(Object)
  fullName: Neo.NeoSystem.AddService(object)
  fullName.vb: Neo.NeoSystem.AddService(Object)
  nameWithType: NeoSystem.AddService(object)
  nameWithType.vb: NeoSystem.AddService(Object)
- uid: Neo.NeoSystem.AddService*
  name: AddService
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_AddService_
  commentId: Overload:Neo.NeoSystem.AddService
  isSpec: "True"
  fullName: Neo.NeoSystem.AddService
  nameWithType: NeoSystem.AddService
- uid: Neo.NeoSystem.Blockchain
  name: Blockchain
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_Blockchain
  commentId: P:Neo.NeoSystem.Blockchain
  fullName: Neo.NeoSystem.Blockchain
  nameWithType: NeoSystem.Blockchain
- uid: Neo.NeoSystem.Blockchain*
  name: Blockchain
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_Blockchain_
  commentId: Overload:Neo.NeoSystem.Blockchain
  isSpec: "True"
  fullName: Neo.NeoSystem.Blockchain
  nameWithType: NeoSystem.Blockchain
- uid: Neo.NeoSystem.ContainsConflictHash(Neo.UInt256,System.Collections.Generic.IEnumerable{Neo.UInt160})
  name: ContainsConflictHash(UInt256, IEnumerable<UInt160>)
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_ContainsConflictHash_Neo_UInt256_System_Collections_Generic_IEnumerable_Neo_UInt160__
  commentId: M:Neo.NeoSystem.ContainsConflictHash(Neo.UInt256,System.Collections.Generic.IEnumerable{Neo.UInt160})
  name.vb: ContainsConflictHash(UInt256, IEnumerable(Of UInt160))
  fullName: Neo.NeoSystem.ContainsConflictHash(Neo.UInt256, System.Collections.Generic.IEnumerable<Neo.UInt160>)
  fullName.vb: Neo.NeoSystem.ContainsConflictHash(Neo.UInt256, System.Collections.Generic.IEnumerable(Of Neo.UInt160))
  nameWithType: NeoSystem.ContainsConflictHash(UInt256, IEnumerable<UInt160>)
  nameWithType.vb: NeoSystem.ContainsConflictHash(UInt256, IEnumerable(Of UInt160))
- uid: Neo.NeoSystem.ContainsConflictHash*
  name: ContainsConflictHash
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_ContainsConflictHash_
  commentId: Overload:Neo.NeoSystem.ContainsConflictHash
  isSpec: "True"
  fullName: Neo.NeoSystem.ContainsConflictHash
  nameWithType: NeoSystem.ContainsConflictHash
- uid: Neo.NeoSystem.ContainsTransaction(Neo.UInt256)
  name: ContainsTransaction(UInt256)
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_ContainsTransaction_Neo_UInt256_
  commentId: M:Neo.NeoSystem.ContainsTransaction(Neo.UInt256)
  fullName: Neo.NeoSystem.ContainsTransaction(Neo.UInt256)
  nameWithType: NeoSystem.ContainsTransaction(UInt256)
- uid: Neo.NeoSystem.ContainsTransaction*
  name: ContainsTransaction
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_ContainsTransaction_
  commentId: Overload:Neo.NeoSystem.ContainsTransaction
  isSpec: "True"
  fullName: Neo.NeoSystem.ContainsTransaction
  nameWithType: NeoSystem.ContainsTransaction
- uid: Neo.NeoSystem.CreateGenesisBlock(Neo.ProtocolSettings)
  name: CreateGenesisBlock(ProtocolSettings)
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_CreateGenesisBlock_Neo_ProtocolSettings_
  commentId: M:Neo.NeoSystem.CreateGenesisBlock(Neo.ProtocolSettings)
  fullName: Neo.NeoSystem.CreateGenesisBlock(Neo.ProtocolSettings)
  nameWithType: NeoSystem.CreateGenesisBlock(ProtocolSettings)
- uid: Neo.NeoSystem.CreateGenesisBlock*
  name: CreateGenesisBlock
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_CreateGenesisBlock_
  commentId: Overload:Neo.NeoSystem.CreateGenesisBlock
  isSpec: "True"
  fullName: Neo.NeoSystem.CreateGenesisBlock
  nameWithType: NeoSystem.CreateGenesisBlock
- uid: Neo.NeoSystem.Dispose
  name: Dispose()
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_Dispose
  commentId: M:Neo.NeoSystem.Dispose
  fullName: Neo.NeoSystem.Dispose()
  nameWithType: NeoSystem.Dispose()
- uid: Neo.NeoSystem.Dispose*
  name: Dispose
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_Dispose_
  commentId: Overload:Neo.NeoSystem.Dispose
  isSpec: "True"
  fullName: Neo.NeoSystem.Dispose
  nameWithType: NeoSystem.Dispose
- uid: Neo.NeoSystem.EnsureStopped(Akka.Actor.IActorRef)
  name: EnsureStopped(IActorRef)
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_EnsureStopped_Akka_Actor_IActorRef_
  commentId: M:Neo.NeoSystem.EnsureStopped(Akka.Actor.IActorRef)
  fullName: Neo.NeoSystem.EnsureStopped(Akka.Actor.IActorRef)
  nameWithType: NeoSystem.EnsureStopped(IActorRef)
- uid: Neo.NeoSystem.EnsureStopped*
  name: EnsureStopped
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_EnsureStopped_
  commentId: Overload:Neo.NeoSystem.EnsureStopped
  isSpec: "True"
  fullName: Neo.NeoSystem.EnsureStopped
  nameWithType: NeoSystem.EnsureStopped
- uid: Neo.NeoSystem.GenesisBlock
  name: GenesisBlock
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_GenesisBlock
  commentId: P:Neo.NeoSystem.GenesisBlock
  fullName: Neo.NeoSystem.GenesisBlock
  nameWithType: NeoSystem.GenesisBlock
- uid: Neo.NeoSystem.GenesisBlock*
  name: GenesisBlock
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_GenesisBlock_
  commentId: Overload:Neo.NeoSystem.GenesisBlock
  isSpec: "True"
  fullName: Neo.NeoSystem.GenesisBlock
  nameWithType: NeoSystem.GenesisBlock
- uid: Neo.NeoSystem.GetService*
  name: GetService
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_GetService_
  commentId: Overload:Neo.NeoSystem.GetService
  isSpec: "True"
  fullName: Neo.NeoSystem.GetService
  nameWithType: NeoSystem.GetService
- uid: Neo.NeoSystem.GetService``1(System.Func{``0,System.Boolean})
  name: GetService<T>(Func<T, bool>)
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_GetService__1_System_Func___0_System_Boolean__
  commentId: M:Neo.NeoSystem.GetService``1(System.Func{``0,System.Boolean})
  name.vb: GetService(Of T)(Func(Of T, Boolean))
  fullName: Neo.NeoSystem.GetService<T>(System.Func<T, bool>)
  fullName.vb: Neo.NeoSystem.GetService(Of T)(System.Func(Of T, Boolean))
  nameWithType: NeoSystem.GetService<T>(Func<T, bool>)
  nameWithType.vb: NeoSystem.GetService(Of T)(Func(Of T, Boolean))
- uid: Neo.NeoSystem.GetSnapshot
  name: GetSnapshot()
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_GetSnapshot
  commentId: M:Neo.NeoSystem.GetSnapshot
  fullName: Neo.NeoSystem.GetSnapshot()
  nameWithType: NeoSystem.GetSnapshot()
- uid: Neo.NeoSystem.GetSnapshot*
  name: GetSnapshot
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_GetSnapshot_
  commentId: Overload:Neo.NeoSystem.GetSnapshot
  isSpec: "True"
  fullName: Neo.NeoSystem.GetSnapshot
  nameWithType: NeoSystem.GetSnapshot
- uid: Neo.NeoSystem.HeaderCache
  name: HeaderCache
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_HeaderCache
  commentId: P:Neo.NeoSystem.HeaderCache
  fullName: Neo.NeoSystem.HeaderCache
  nameWithType: NeoSystem.HeaderCache
- uid: Neo.NeoSystem.HeaderCache*
  name: HeaderCache
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_HeaderCache_
  commentId: Overload:Neo.NeoSystem.HeaderCache
  isSpec: "True"
  fullName: Neo.NeoSystem.HeaderCache
  nameWithType: NeoSystem.HeaderCache
- uid: Neo.NeoSystem.LoadStore(System.String)
  name: LoadStore(string)
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_LoadStore_System_String_
  commentId: M:Neo.NeoSystem.LoadStore(System.String)
  name.vb: LoadStore(String)
  fullName: Neo.NeoSystem.LoadStore(string)
  fullName.vb: Neo.NeoSystem.LoadStore(String)
  nameWithType: NeoSystem.LoadStore(string)
  nameWithType.vb: NeoSystem.LoadStore(String)
- uid: Neo.NeoSystem.LoadStore*
  name: LoadStore
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_LoadStore_
  commentId: Overload:Neo.NeoSystem.LoadStore
  isSpec: "True"
  fullName: Neo.NeoSystem.LoadStore
  nameWithType: NeoSystem.LoadStore
- uid: Neo.NeoSystem.LocalNode
  name: LocalNode
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_LocalNode
  commentId: P:Neo.NeoSystem.LocalNode
  fullName: Neo.NeoSystem.LocalNode
  nameWithType: NeoSystem.LocalNode
- uid: Neo.NeoSystem.LocalNode*
  name: LocalNode
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_LocalNode_
  commentId: Overload:Neo.NeoSystem.LocalNode
  isSpec: "True"
  fullName: Neo.NeoSystem.LocalNode
  nameWithType: NeoSystem.LocalNode
- uid: Neo.NeoSystem.MemPool
  name: MemPool
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_MemPool
  commentId: P:Neo.NeoSystem.MemPool
  fullName: Neo.NeoSystem.MemPool
  nameWithType: NeoSystem.MemPool
- uid: Neo.NeoSystem.MemPool*
  name: MemPool
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_MemPool_
  commentId: Overload:Neo.NeoSystem.MemPool
  isSpec: "True"
  fullName: Neo.NeoSystem.MemPool
  nameWithType: NeoSystem.MemPool
- uid: Neo.NeoSystem.ResumeNodeStartup
  name: ResumeNodeStartup()
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_ResumeNodeStartup
  commentId: M:Neo.NeoSystem.ResumeNodeStartup
  fullName: Neo.NeoSystem.ResumeNodeStartup()
  nameWithType: NeoSystem.ResumeNodeStartup()
- uid: Neo.NeoSystem.ResumeNodeStartup*
  name: ResumeNodeStartup
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_ResumeNodeStartup_
  commentId: Overload:Neo.NeoSystem.ResumeNodeStartup
  isSpec: "True"
  fullName: Neo.NeoSystem.ResumeNodeStartup
  nameWithType: NeoSystem.ResumeNodeStartup
- uid: Neo.NeoSystem.ServiceAdded
  name: ServiceAdded
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_ServiceAdded
  commentId: E:Neo.NeoSystem.ServiceAdded
  fullName: Neo.NeoSystem.ServiceAdded
  nameWithType: NeoSystem.ServiceAdded
- uid: Neo.NeoSystem.Settings
  name: Settings
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_Settings
  commentId: P:Neo.NeoSystem.Settings
  fullName: Neo.NeoSystem.Settings
  nameWithType: NeoSystem.Settings
- uid: Neo.NeoSystem.Settings*
  name: Settings
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_Settings_
  commentId: Overload:Neo.NeoSystem.Settings
  isSpec: "True"
  fullName: Neo.NeoSystem.Settings
  nameWithType: NeoSystem.Settings
- uid: Neo.NeoSystem.StartNode(Neo.Network.P2P.ChannelsConfig)
  name: StartNode(ChannelsConfig)
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_StartNode_Neo_Network_P2P_ChannelsConfig_
  commentId: M:Neo.NeoSystem.StartNode(Neo.Network.P2P.ChannelsConfig)
  fullName: Neo.NeoSystem.StartNode(Neo.Network.P2P.ChannelsConfig)
  nameWithType: NeoSystem.StartNode(ChannelsConfig)
- uid: Neo.NeoSystem.StartNode*
  name: StartNode
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_StartNode_
  commentId: Overload:Neo.NeoSystem.StartNode
  isSpec: "True"
  fullName: Neo.NeoSystem.StartNode
  nameWithType: NeoSystem.StartNode
- uid: Neo.NeoSystem.StoreView
  name: StoreView
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_StoreView
  commentId: P:Neo.NeoSystem.StoreView
  fullName: Neo.NeoSystem.StoreView
  nameWithType: NeoSystem.StoreView
- uid: Neo.NeoSystem.StoreView*
  name: StoreView
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_StoreView_
  commentId: Overload:Neo.NeoSystem.StoreView
  isSpec: "True"
  fullName: Neo.NeoSystem.StoreView
  nameWithType: NeoSystem.StoreView
- uid: Neo.NeoSystem.SuspendNodeStartup
  name: SuspendNodeStartup()
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_SuspendNodeStartup
  commentId: M:Neo.NeoSystem.SuspendNodeStartup
  fullName: Neo.NeoSystem.SuspendNodeStartup()
  nameWithType: NeoSystem.SuspendNodeStartup()
- uid: Neo.NeoSystem.SuspendNodeStartup*
  name: SuspendNodeStartup
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_SuspendNodeStartup_
  commentId: Overload:Neo.NeoSystem.SuspendNodeStartup
  isSpec: "True"
  fullName: Neo.NeoSystem.SuspendNodeStartup
  nameWithType: NeoSystem.SuspendNodeStartup
- uid: Neo.NeoSystem.TaskManager
  name: TaskManager
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_TaskManager
  commentId: P:Neo.NeoSystem.TaskManager
  fullName: Neo.NeoSystem.TaskManager
  nameWithType: NeoSystem.TaskManager
- uid: Neo.NeoSystem.TaskManager*
  name: TaskManager
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_TaskManager_
  commentId: Overload:Neo.NeoSystem.TaskManager
  isSpec: "True"
  fullName: Neo.NeoSystem.TaskManager
  nameWithType: NeoSystem.TaskManager
- uid: Neo.NeoSystem.TxRouter
  name: TxRouter
  href: api/Neo.NeoSystem.html#Neo_NeoSystem_TxRouter
  commentId: F:Neo.NeoSystem.TxRouter
  fullName: Neo.NeoSystem.TxRouter
  nameWithType: NeoSystem.TxRouter
- uid: Neo.Network
  name: Neo.Network
  href: api/Neo.Network.html
  commentId: N:Neo.Network
  fullName: Neo.Network
  nameWithType: Neo.Network
- uid: Neo.Network.P2P
  name: Neo.Network.P2P
  href: api/Neo.Network.P2P.html
  commentId: N:Neo.Network.P2P
  fullName: Neo.Network.P2P
  nameWithType: Neo.Network.P2P
- uid: Neo.Network.P2P.Capabilities
  name: Neo.Network.P2P.Capabilities
  href: api/Neo.Network.P2P.Capabilities.html
  commentId: N:Neo.Network.P2P.Capabilities
  fullName: Neo.Network.P2P.Capabilities
  nameWithType: Neo.Network.P2P.Capabilities
- uid: Neo.Network.P2P.Capabilities.FullNodeCapability
  name: FullNodeCapability
  href: api/Neo.Network.P2P.Capabilities.FullNodeCapability.html
  commentId: T:Neo.Network.P2P.Capabilities.FullNodeCapability
  fullName: Neo.Network.P2P.Capabilities.FullNodeCapability
  nameWithType: FullNodeCapability
- uid: Neo.Network.P2P.Capabilities.FullNodeCapability.#ctor(System.UInt32)
  name: FullNodeCapability(uint)
  href: api/Neo.Network.P2P.Capabilities.FullNodeCapability.html#Neo_Network_P2P_Capabilities_FullNodeCapability__ctor_System_UInt32_
  commentId: M:Neo.Network.P2P.Capabilities.FullNodeCapability.#ctor(System.UInt32)
  name.vb: New(UInteger)
  fullName: Neo.Network.P2P.Capabilities.FullNodeCapability.FullNodeCapability(uint)
  fullName.vb: Neo.Network.P2P.Capabilities.FullNodeCapability.New(UInteger)
  nameWithType: FullNodeCapability.FullNodeCapability(uint)
  nameWithType.vb: FullNodeCapability.New(UInteger)
- uid: Neo.Network.P2P.Capabilities.FullNodeCapability.#ctor*
  name: FullNodeCapability
  href: api/Neo.Network.P2P.Capabilities.FullNodeCapability.html#Neo_Network_P2P_Capabilities_FullNodeCapability__ctor_
  commentId: Overload:Neo.Network.P2P.Capabilities.FullNodeCapability.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Network.P2P.Capabilities.FullNodeCapability.FullNodeCapability
  fullName.vb: Neo.Network.P2P.Capabilities.FullNodeCapability.New
  nameWithType: FullNodeCapability.FullNodeCapability
  nameWithType.vb: FullNodeCapability.New
- uid: Neo.Network.P2P.Capabilities.FullNodeCapability.DeserializeWithoutType(Neo.IO.MemoryReader@)
  name: DeserializeWithoutType(ref MemoryReader)
  href: api/Neo.Network.P2P.Capabilities.FullNodeCapability.html#Neo_Network_P2P_Capabilities_FullNodeCapability_DeserializeWithoutType_Neo_IO_MemoryReader__
  commentId: M:Neo.Network.P2P.Capabilities.FullNodeCapability.DeserializeWithoutType(Neo.IO.MemoryReader@)
  name.vb: DeserializeWithoutType(MemoryReader)
  fullName: Neo.Network.P2P.Capabilities.FullNodeCapability.DeserializeWithoutType(ref Neo.IO.MemoryReader)
  fullName.vb: Neo.Network.P2P.Capabilities.FullNodeCapability.DeserializeWithoutType(Neo.IO.MemoryReader)
  nameWithType: FullNodeCapability.DeserializeWithoutType(ref MemoryReader)
  nameWithType.vb: FullNodeCapability.DeserializeWithoutType(MemoryReader)
- uid: Neo.Network.P2P.Capabilities.FullNodeCapability.DeserializeWithoutType*
  name: DeserializeWithoutType
  href: api/Neo.Network.P2P.Capabilities.FullNodeCapability.html#Neo_Network_P2P_Capabilities_FullNodeCapability_DeserializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Capabilities.FullNodeCapability.DeserializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Capabilities.FullNodeCapability.DeserializeWithoutType
  nameWithType: FullNodeCapability.DeserializeWithoutType
- uid: Neo.Network.P2P.Capabilities.FullNodeCapability.SerializeWithoutType(System.IO.BinaryWriter)
  name: SerializeWithoutType(BinaryWriter)
  href: api/Neo.Network.P2P.Capabilities.FullNodeCapability.html#Neo_Network_P2P_Capabilities_FullNodeCapability_SerializeWithoutType_System_IO_BinaryWriter_
  commentId: M:Neo.Network.P2P.Capabilities.FullNodeCapability.SerializeWithoutType(System.IO.BinaryWriter)
  fullName: Neo.Network.P2P.Capabilities.FullNodeCapability.SerializeWithoutType(System.IO.BinaryWriter)
  nameWithType: FullNodeCapability.SerializeWithoutType(BinaryWriter)
- uid: Neo.Network.P2P.Capabilities.FullNodeCapability.SerializeWithoutType*
  name: SerializeWithoutType
  href: api/Neo.Network.P2P.Capabilities.FullNodeCapability.html#Neo_Network_P2P_Capabilities_FullNodeCapability_SerializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Capabilities.FullNodeCapability.SerializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Capabilities.FullNodeCapability.SerializeWithoutType
  nameWithType: FullNodeCapability.SerializeWithoutType
- uid: Neo.Network.P2P.Capabilities.FullNodeCapability.Size
  name: Size
  href: api/Neo.Network.P2P.Capabilities.FullNodeCapability.html#Neo_Network_P2P_Capabilities_FullNodeCapability_Size
  commentId: P:Neo.Network.P2P.Capabilities.FullNodeCapability.Size
  fullName: Neo.Network.P2P.Capabilities.FullNodeCapability.Size
  nameWithType: FullNodeCapability.Size
- uid: Neo.Network.P2P.Capabilities.FullNodeCapability.Size*
  name: Size
  href: api/Neo.Network.P2P.Capabilities.FullNodeCapability.html#Neo_Network_P2P_Capabilities_FullNodeCapability_Size_
  commentId: Overload:Neo.Network.P2P.Capabilities.FullNodeCapability.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Capabilities.FullNodeCapability.Size
  nameWithType: FullNodeCapability.Size
- uid: Neo.Network.P2P.Capabilities.FullNodeCapability.StartHeight
  name: StartHeight
  href: api/Neo.Network.P2P.Capabilities.FullNodeCapability.html#Neo_Network_P2P_Capabilities_FullNodeCapability_StartHeight
  commentId: F:Neo.Network.P2P.Capabilities.FullNodeCapability.StartHeight
  fullName: Neo.Network.P2P.Capabilities.FullNodeCapability.StartHeight
  nameWithType: FullNodeCapability.StartHeight
- uid: Neo.Network.P2P.Capabilities.NodeCapability
  name: NodeCapability
  href: api/Neo.Network.P2P.Capabilities.NodeCapability.html
  commentId: T:Neo.Network.P2P.Capabilities.NodeCapability
  fullName: Neo.Network.P2P.Capabilities.NodeCapability
  nameWithType: NodeCapability
- uid: Neo.Network.P2P.Capabilities.NodeCapability.#ctor(Neo.Network.P2P.Capabilities.NodeCapabilityType)
  name: NodeCapability(NodeCapabilityType)
  href: api/Neo.Network.P2P.Capabilities.NodeCapability.html#Neo_Network_P2P_Capabilities_NodeCapability__ctor_Neo_Network_P2P_Capabilities_NodeCapabilityType_
  commentId: M:Neo.Network.P2P.Capabilities.NodeCapability.#ctor(Neo.Network.P2P.Capabilities.NodeCapabilityType)
  name.vb: New(NodeCapabilityType)
  fullName: Neo.Network.P2P.Capabilities.NodeCapability.NodeCapability(Neo.Network.P2P.Capabilities.NodeCapabilityType)
  fullName.vb: Neo.Network.P2P.Capabilities.NodeCapability.New(Neo.Network.P2P.Capabilities.NodeCapabilityType)
  nameWithType: NodeCapability.NodeCapability(NodeCapabilityType)
  nameWithType.vb: NodeCapability.New(NodeCapabilityType)
- uid: Neo.Network.P2P.Capabilities.NodeCapability.#ctor*
  name: NodeCapability
  href: api/Neo.Network.P2P.Capabilities.NodeCapability.html#Neo_Network_P2P_Capabilities_NodeCapability__ctor_
  commentId: Overload:Neo.Network.P2P.Capabilities.NodeCapability.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Network.P2P.Capabilities.NodeCapability.NodeCapability
  fullName.vb: Neo.Network.P2P.Capabilities.NodeCapability.New
  nameWithType: NodeCapability.NodeCapability
  nameWithType.vb: NodeCapability.New
- uid: Neo.Network.P2P.Capabilities.NodeCapability.DeserializeFrom(Neo.IO.MemoryReader@)
  name: DeserializeFrom(ref MemoryReader)
  href: api/Neo.Network.P2P.Capabilities.NodeCapability.html#Neo_Network_P2P_Capabilities_NodeCapability_DeserializeFrom_Neo_IO_MemoryReader__
  commentId: M:Neo.Network.P2P.Capabilities.NodeCapability.DeserializeFrom(Neo.IO.MemoryReader@)
  name.vb: DeserializeFrom(MemoryReader)
  fullName: Neo.Network.P2P.Capabilities.NodeCapability.DeserializeFrom(ref Neo.IO.MemoryReader)
  fullName.vb: Neo.Network.P2P.Capabilities.NodeCapability.DeserializeFrom(Neo.IO.MemoryReader)
  nameWithType: NodeCapability.DeserializeFrom(ref MemoryReader)
  nameWithType.vb: NodeCapability.DeserializeFrom(MemoryReader)
- uid: Neo.Network.P2P.Capabilities.NodeCapability.DeserializeFrom*
  name: DeserializeFrom
  href: api/Neo.Network.P2P.Capabilities.NodeCapability.html#Neo_Network_P2P_Capabilities_NodeCapability_DeserializeFrom_
  commentId: Overload:Neo.Network.P2P.Capabilities.NodeCapability.DeserializeFrom
  isSpec: "True"
  fullName: Neo.Network.P2P.Capabilities.NodeCapability.DeserializeFrom
  nameWithType: NodeCapability.DeserializeFrom
- uid: Neo.Network.P2P.Capabilities.NodeCapability.DeserializeWithoutType(Neo.IO.MemoryReader@)
  name: DeserializeWithoutType(ref MemoryReader)
  href: api/Neo.Network.P2P.Capabilities.NodeCapability.html#Neo_Network_P2P_Capabilities_NodeCapability_DeserializeWithoutType_Neo_IO_MemoryReader__
  commentId: M:Neo.Network.P2P.Capabilities.NodeCapability.DeserializeWithoutType(Neo.IO.MemoryReader@)
  name.vb: DeserializeWithoutType(MemoryReader)
  fullName: Neo.Network.P2P.Capabilities.NodeCapability.DeserializeWithoutType(ref Neo.IO.MemoryReader)
  fullName.vb: Neo.Network.P2P.Capabilities.NodeCapability.DeserializeWithoutType(Neo.IO.MemoryReader)
  nameWithType: NodeCapability.DeserializeWithoutType(ref MemoryReader)
  nameWithType.vb: NodeCapability.DeserializeWithoutType(MemoryReader)
- uid: Neo.Network.P2P.Capabilities.NodeCapability.DeserializeWithoutType*
  name: DeserializeWithoutType
  href: api/Neo.Network.P2P.Capabilities.NodeCapability.html#Neo_Network_P2P_Capabilities_NodeCapability_DeserializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Capabilities.NodeCapability.DeserializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Capabilities.NodeCapability.DeserializeWithoutType
  nameWithType: NodeCapability.DeserializeWithoutType
- uid: Neo.Network.P2P.Capabilities.NodeCapability.SerializeWithoutType(System.IO.BinaryWriter)
  name: SerializeWithoutType(BinaryWriter)
  href: api/Neo.Network.P2P.Capabilities.NodeCapability.html#Neo_Network_P2P_Capabilities_NodeCapability_SerializeWithoutType_System_IO_BinaryWriter_
  commentId: M:Neo.Network.P2P.Capabilities.NodeCapability.SerializeWithoutType(System.IO.BinaryWriter)
  fullName: Neo.Network.P2P.Capabilities.NodeCapability.SerializeWithoutType(System.IO.BinaryWriter)
  nameWithType: NodeCapability.SerializeWithoutType(BinaryWriter)
- uid: Neo.Network.P2P.Capabilities.NodeCapability.SerializeWithoutType*
  name: SerializeWithoutType
  href: api/Neo.Network.P2P.Capabilities.NodeCapability.html#Neo_Network_P2P_Capabilities_NodeCapability_SerializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Capabilities.NodeCapability.SerializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Capabilities.NodeCapability.SerializeWithoutType
  nameWithType: NodeCapability.SerializeWithoutType
- uid: Neo.Network.P2P.Capabilities.NodeCapability.Size
  name: Size
  href: api/Neo.Network.P2P.Capabilities.NodeCapability.html#Neo_Network_P2P_Capabilities_NodeCapability_Size
  commentId: P:Neo.Network.P2P.Capabilities.NodeCapability.Size
  fullName: Neo.Network.P2P.Capabilities.NodeCapability.Size
  nameWithType: NodeCapability.Size
- uid: Neo.Network.P2P.Capabilities.NodeCapability.Size*
  name: Size
  href: api/Neo.Network.P2P.Capabilities.NodeCapability.html#Neo_Network_P2P_Capabilities_NodeCapability_Size_
  commentId: Overload:Neo.Network.P2P.Capabilities.NodeCapability.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Capabilities.NodeCapability.Size
  nameWithType: NodeCapability.Size
- uid: Neo.Network.P2P.Capabilities.NodeCapability.Type
  name: Type
  href: api/Neo.Network.P2P.Capabilities.NodeCapability.html#Neo_Network_P2P_Capabilities_NodeCapability_Type
  commentId: F:Neo.Network.P2P.Capabilities.NodeCapability.Type
  fullName: Neo.Network.P2P.Capabilities.NodeCapability.Type
  nameWithType: NodeCapability.Type
- uid: Neo.Network.P2P.Capabilities.NodeCapabilityType
  name: NodeCapabilityType
  href: api/Neo.Network.P2P.Capabilities.NodeCapabilityType.html
  commentId: T:Neo.Network.P2P.Capabilities.NodeCapabilityType
  fullName: Neo.Network.P2P.Capabilities.NodeCapabilityType
  nameWithType: NodeCapabilityType
- uid: Neo.Network.P2P.Capabilities.NodeCapabilityType.FullNode
  name: FullNode
  href: api/Neo.Network.P2P.Capabilities.NodeCapabilityType.html#Neo_Network_P2P_Capabilities_NodeCapabilityType_FullNode
  commentId: F:Neo.Network.P2P.Capabilities.NodeCapabilityType.FullNode
  fullName: Neo.Network.P2P.Capabilities.NodeCapabilityType.FullNode
  nameWithType: NodeCapabilityType.FullNode
- uid: Neo.Network.P2P.Capabilities.NodeCapabilityType.TcpServer
  name: TcpServer
  href: api/Neo.Network.P2P.Capabilities.NodeCapabilityType.html#Neo_Network_P2P_Capabilities_NodeCapabilityType_TcpServer
  commentId: F:Neo.Network.P2P.Capabilities.NodeCapabilityType.TcpServer
  fullName: Neo.Network.P2P.Capabilities.NodeCapabilityType.TcpServer
  nameWithType: NodeCapabilityType.TcpServer
- uid: Neo.Network.P2P.Capabilities.NodeCapabilityType.WsServer
  name: WsServer
  href: api/Neo.Network.P2P.Capabilities.NodeCapabilityType.html#Neo_Network_P2P_Capabilities_NodeCapabilityType_WsServer
  commentId: F:Neo.Network.P2P.Capabilities.NodeCapabilityType.WsServer
  fullName: Neo.Network.P2P.Capabilities.NodeCapabilityType.WsServer
  nameWithType: NodeCapabilityType.WsServer
- uid: Neo.Network.P2P.Capabilities.ServerCapability
  name: ServerCapability
  href: api/Neo.Network.P2P.Capabilities.ServerCapability.html
  commentId: T:Neo.Network.P2P.Capabilities.ServerCapability
  fullName: Neo.Network.P2P.Capabilities.ServerCapability
  nameWithType: ServerCapability
- uid: Neo.Network.P2P.Capabilities.ServerCapability.#ctor(Neo.Network.P2P.Capabilities.NodeCapabilityType,System.UInt16)
  name: ServerCapability(NodeCapabilityType, ushort)
  href: api/Neo.Network.P2P.Capabilities.ServerCapability.html#Neo_Network_P2P_Capabilities_ServerCapability__ctor_Neo_Network_P2P_Capabilities_NodeCapabilityType_System_UInt16_
  commentId: M:Neo.Network.P2P.Capabilities.ServerCapability.#ctor(Neo.Network.P2P.Capabilities.NodeCapabilityType,System.UInt16)
  name.vb: New(NodeCapabilityType, UShort)
  fullName: Neo.Network.P2P.Capabilities.ServerCapability.ServerCapability(Neo.Network.P2P.Capabilities.NodeCapabilityType, ushort)
  fullName.vb: Neo.Network.P2P.Capabilities.ServerCapability.New(Neo.Network.P2P.Capabilities.NodeCapabilityType, UShort)
  nameWithType: ServerCapability.ServerCapability(NodeCapabilityType, ushort)
  nameWithType.vb: ServerCapability.New(NodeCapabilityType, UShort)
- uid: Neo.Network.P2P.Capabilities.ServerCapability.#ctor*
  name: ServerCapability
  href: api/Neo.Network.P2P.Capabilities.ServerCapability.html#Neo_Network_P2P_Capabilities_ServerCapability__ctor_
  commentId: Overload:Neo.Network.P2P.Capabilities.ServerCapability.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Network.P2P.Capabilities.ServerCapability.ServerCapability
  fullName.vb: Neo.Network.P2P.Capabilities.ServerCapability.New
  nameWithType: ServerCapability.ServerCapability
  nameWithType.vb: ServerCapability.New
- uid: Neo.Network.P2P.Capabilities.ServerCapability.DeserializeWithoutType(Neo.IO.MemoryReader@)
  name: DeserializeWithoutType(ref MemoryReader)
  href: api/Neo.Network.P2P.Capabilities.ServerCapability.html#Neo_Network_P2P_Capabilities_ServerCapability_DeserializeWithoutType_Neo_IO_MemoryReader__
  commentId: M:Neo.Network.P2P.Capabilities.ServerCapability.DeserializeWithoutType(Neo.IO.MemoryReader@)
  name.vb: DeserializeWithoutType(MemoryReader)
  fullName: Neo.Network.P2P.Capabilities.ServerCapability.DeserializeWithoutType(ref Neo.IO.MemoryReader)
  fullName.vb: Neo.Network.P2P.Capabilities.ServerCapability.DeserializeWithoutType(Neo.IO.MemoryReader)
  nameWithType: ServerCapability.DeserializeWithoutType(ref MemoryReader)
  nameWithType.vb: ServerCapability.DeserializeWithoutType(MemoryReader)
- uid: Neo.Network.P2P.Capabilities.ServerCapability.DeserializeWithoutType*
  name: DeserializeWithoutType
  href: api/Neo.Network.P2P.Capabilities.ServerCapability.html#Neo_Network_P2P_Capabilities_ServerCapability_DeserializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Capabilities.ServerCapability.DeserializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Capabilities.ServerCapability.DeserializeWithoutType
  nameWithType: ServerCapability.DeserializeWithoutType
- uid: Neo.Network.P2P.Capabilities.ServerCapability.Port
  name: Port
  href: api/Neo.Network.P2P.Capabilities.ServerCapability.html#Neo_Network_P2P_Capabilities_ServerCapability_Port
  commentId: F:Neo.Network.P2P.Capabilities.ServerCapability.Port
  fullName: Neo.Network.P2P.Capabilities.ServerCapability.Port
  nameWithType: ServerCapability.Port
- uid: Neo.Network.P2P.Capabilities.ServerCapability.SerializeWithoutType(System.IO.BinaryWriter)
  name: SerializeWithoutType(BinaryWriter)
  href: api/Neo.Network.P2P.Capabilities.ServerCapability.html#Neo_Network_P2P_Capabilities_ServerCapability_SerializeWithoutType_System_IO_BinaryWriter_
  commentId: M:Neo.Network.P2P.Capabilities.ServerCapability.SerializeWithoutType(System.IO.BinaryWriter)
  fullName: Neo.Network.P2P.Capabilities.ServerCapability.SerializeWithoutType(System.IO.BinaryWriter)
  nameWithType: ServerCapability.SerializeWithoutType(BinaryWriter)
- uid: Neo.Network.P2P.Capabilities.ServerCapability.SerializeWithoutType*
  name: SerializeWithoutType
  href: api/Neo.Network.P2P.Capabilities.ServerCapability.html#Neo_Network_P2P_Capabilities_ServerCapability_SerializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Capabilities.ServerCapability.SerializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Capabilities.ServerCapability.SerializeWithoutType
  nameWithType: ServerCapability.SerializeWithoutType
- uid: Neo.Network.P2P.Capabilities.ServerCapability.Size
  name: Size
  href: api/Neo.Network.P2P.Capabilities.ServerCapability.html#Neo_Network_P2P_Capabilities_ServerCapability_Size
  commentId: P:Neo.Network.P2P.Capabilities.ServerCapability.Size
  fullName: Neo.Network.P2P.Capabilities.ServerCapability.Size
  nameWithType: ServerCapability.Size
- uid: Neo.Network.P2P.Capabilities.ServerCapability.Size*
  name: Size
  href: api/Neo.Network.P2P.Capabilities.ServerCapability.html#Neo_Network_P2P_Capabilities_ServerCapability_Size_
  commentId: Overload:Neo.Network.P2P.Capabilities.ServerCapability.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Capabilities.ServerCapability.Size
  nameWithType: ServerCapability.Size
- uid: Neo.Network.P2P.ChannelsConfig
  name: ChannelsConfig
  href: api/Neo.Network.P2P.ChannelsConfig.html
  commentId: T:Neo.Network.P2P.ChannelsConfig
  fullName: Neo.Network.P2P.ChannelsConfig
  nameWithType: ChannelsConfig
- uid: Neo.Network.P2P.ChannelsConfig.MaxConnections
  name: MaxConnections
  href: api/Neo.Network.P2P.ChannelsConfig.html#Neo_Network_P2P_ChannelsConfig_MaxConnections
  commentId: P:Neo.Network.P2P.ChannelsConfig.MaxConnections
  fullName: Neo.Network.P2P.ChannelsConfig.MaxConnections
  nameWithType: ChannelsConfig.MaxConnections
- uid: Neo.Network.P2P.ChannelsConfig.MaxConnections*
  name: MaxConnections
  href: api/Neo.Network.P2P.ChannelsConfig.html#Neo_Network_P2P_ChannelsConfig_MaxConnections_
  commentId: Overload:Neo.Network.P2P.ChannelsConfig.MaxConnections
  isSpec: "True"
  fullName: Neo.Network.P2P.ChannelsConfig.MaxConnections
  nameWithType: ChannelsConfig.MaxConnections
- uid: Neo.Network.P2P.ChannelsConfig.MaxConnectionsPerAddress
  name: MaxConnectionsPerAddress
  href: api/Neo.Network.P2P.ChannelsConfig.html#Neo_Network_P2P_ChannelsConfig_MaxConnectionsPerAddress
  commentId: P:Neo.Network.P2P.ChannelsConfig.MaxConnectionsPerAddress
  fullName: Neo.Network.P2P.ChannelsConfig.MaxConnectionsPerAddress
  nameWithType: ChannelsConfig.MaxConnectionsPerAddress
- uid: Neo.Network.P2P.ChannelsConfig.MaxConnectionsPerAddress*
  name: MaxConnectionsPerAddress
  href: api/Neo.Network.P2P.ChannelsConfig.html#Neo_Network_P2P_ChannelsConfig_MaxConnectionsPerAddress_
  commentId: Overload:Neo.Network.P2P.ChannelsConfig.MaxConnectionsPerAddress
  isSpec: "True"
  fullName: Neo.Network.P2P.ChannelsConfig.MaxConnectionsPerAddress
  nameWithType: ChannelsConfig.MaxConnectionsPerAddress
- uid: Neo.Network.P2P.ChannelsConfig.MinDesiredConnections
  name: MinDesiredConnections
  href: api/Neo.Network.P2P.ChannelsConfig.html#Neo_Network_P2P_ChannelsConfig_MinDesiredConnections
  commentId: P:Neo.Network.P2P.ChannelsConfig.MinDesiredConnections
  fullName: Neo.Network.P2P.ChannelsConfig.MinDesiredConnections
  nameWithType: ChannelsConfig.MinDesiredConnections
- uid: Neo.Network.P2P.ChannelsConfig.MinDesiredConnections*
  name: MinDesiredConnections
  href: api/Neo.Network.P2P.ChannelsConfig.html#Neo_Network_P2P_ChannelsConfig_MinDesiredConnections_
  commentId: Overload:Neo.Network.P2P.ChannelsConfig.MinDesiredConnections
  isSpec: "True"
  fullName: Neo.Network.P2P.ChannelsConfig.MinDesiredConnections
  nameWithType: ChannelsConfig.MinDesiredConnections
- uid: Neo.Network.P2P.ChannelsConfig.Tcp
  name: Tcp
  href: api/Neo.Network.P2P.ChannelsConfig.html#Neo_Network_P2P_ChannelsConfig_Tcp
  commentId: P:Neo.Network.P2P.ChannelsConfig.Tcp
  fullName: Neo.Network.P2P.ChannelsConfig.Tcp
  nameWithType: ChannelsConfig.Tcp
- uid: Neo.Network.P2P.ChannelsConfig.Tcp*
  name: Tcp
  href: api/Neo.Network.P2P.ChannelsConfig.html#Neo_Network_P2P_ChannelsConfig_Tcp_
  commentId: Overload:Neo.Network.P2P.ChannelsConfig.Tcp
  isSpec: "True"
  fullName: Neo.Network.P2P.ChannelsConfig.Tcp
  nameWithType: ChannelsConfig.Tcp
- uid: Neo.Network.P2P.ChannelsConfig.WebSocket
  name: WebSocket
  href: api/Neo.Network.P2P.ChannelsConfig.html#Neo_Network_P2P_ChannelsConfig_WebSocket
  commentId: P:Neo.Network.P2P.ChannelsConfig.WebSocket
  fullName: Neo.Network.P2P.ChannelsConfig.WebSocket
  nameWithType: ChannelsConfig.WebSocket
- uid: Neo.Network.P2P.ChannelsConfig.WebSocket*
  name: WebSocket
  href: api/Neo.Network.P2P.ChannelsConfig.html#Neo_Network_P2P_ChannelsConfig_WebSocket_
  commentId: Overload:Neo.Network.P2P.ChannelsConfig.WebSocket
  isSpec: "True"
  fullName: Neo.Network.P2P.ChannelsConfig.WebSocket
  nameWithType: ChannelsConfig.WebSocket
- uid: Neo.Network.P2P.Connection
  name: Connection
  href: api/Neo.Network.P2P.Connection.html
  commentId: T:Neo.Network.P2P.Connection
  fullName: Neo.Network.P2P.Connection
  nameWithType: Connection
- uid: Neo.Network.P2P.Connection.#ctor(System.Object,System.Net.IPEndPoint,System.Net.IPEndPoint)
  name: Connection(object, IPEndPoint, IPEndPoint)
  href: api/Neo.Network.P2P.Connection.html#Neo_Network_P2P_Connection__ctor_System_Object_System_Net_IPEndPoint_System_Net_IPEndPoint_
  commentId: M:Neo.Network.P2P.Connection.#ctor(System.Object,System.Net.IPEndPoint,System.Net.IPEndPoint)
  name.vb: New(Object, IPEndPoint, IPEndPoint)
  fullName: Neo.Network.P2P.Connection.Connection(object, System.Net.IPEndPoint, System.Net.IPEndPoint)
  fullName.vb: Neo.Network.P2P.Connection.New(Object, System.Net.IPEndPoint, System.Net.IPEndPoint)
  nameWithType: Connection.Connection(object, IPEndPoint, IPEndPoint)
  nameWithType.vb: Connection.New(Object, IPEndPoint, IPEndPoint)
- uid: Neo.Network.P2P.Connection.#ctor*
  name: Connection
  href: api/Neo.Network.P2P.Connection.html#Neo_Network_P2P_Connection__ctor_
  commentId: Overload:Neo.Network.P2P.Connection.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Network.P2P.Connection.Connection
  fullName.vb: Neo.Network.P2P.Connection.New
  nameWithType: Connection.Connection
  nameWithType.vb: Connection.New
- uid: Neo.Network.P2P.Connection.Disconnect(System.Boolean)
  name: Disconnect(bool)
  href: api/Neo.Network.P2P.Connection.html#Neo_Network_P2P_Connection_Disconnect_System_Boolean_
  commentId: M:Neo.Network.P2P.Connection.Disconnect(System.Boolean)
  name.vb: Disconnect(Boolean)
  fullName: Neo.Network.P2P.Connection.Disconnect(bool)
  fullName.vb: Neo.Network.P2P.Connection.Disconnect(Boolean)
  nameWithType: Connection.Disconnect(bool)
  nameWithType.vb: Connection.Disconnect(Boolean)
- uid: Neo.Network.P2P.Connection.Disconnect*
  name: Disconnect
  href: api/Neo.Network.P2P.Connection.html#Neo_Network_P2P_Connection_Disconnect_
  commentId: Overload:Neo.Network.P2P.Connection.Disconnect
  isSpec: "True"
  fullName: Neo.Network.P2P.Connection.Disconnect
  nameWithType: Connection.Disconnect
- uid: Neo.Network.P2P.Connection.Local
  name: Local
  href: api/Neo.Network.P2P.Connection.html#Neo_Network_P2P_Connection_Local
  commentId: P:Neo.Network.P2P.Connection.Local
  fullName: Neo.Network.P2P.Connection.Local
  nameWithType: Connection.Local
- uid: Neo.Network.P2P.Connection.Local*
  name: Local
  href: api/Neo.Network.P2P.Connection.html#Neo_Network_P2P_Connection_Local_
  commentId: Overload:Neo.Network.P2P.Connection.Local
  isSpec: "True"
  fullName: Neo.Network.P2P.Connection.Local
  nameWithType: Connection.Local
- uid: Neo.Network.P2P.Connection.OnAck
  name: OnAck()
  href: api/Neo.Network.P2P.Connection.html#Neo_Network_P2P_Connection_OnAck
  commentId: M:Neo.Network.P2P.Connection.OnAck
  fullName: Neo.Network.P2P.Connection.OnAck()
  nameWithType: Connection.OnAck()
- uid: Neo.Network.P2P.Connection.OnAck*
  name: OnAck
  href: api/Neo.Network.P2P.Connection.html#Neo_Network_P2P_Connection_OnAck_
  commentId: Overload:Neo.Network.P2P.Connection.OnAck
  isSpec: "True"
  fullName: Neo.Network.P2P.Connection.OnAck
  nameWithType: Connection.OnAck
- uid: Neo.Network.P2P.Connection.OnData(Akka.IO.ByteString)
  name: OnData(ByteString)
  href: api/Neo.Network.P2P.Connection.html#Neo_Network_P2P_Connection_OnData_Akka_IO_ByteString_
  commentId: M:Neo.Network.P2P.Connection.OnData(Akka.IO.ByteString)
  fullName: Neo.Network.P2P.Connection.OnData(Akka.IO.ByteString)
  nameWithType: Connection.OnData(ByteString)
- uid: Neo.Network.P2P.Connection.OnData*
  name: OnData
  href: api/Neo.Network.P2P.Connection.html#Neo_Network_P2P_Connection_OnData_
  commentId: Overload:Neo.Network.P2P.Connection.OnData
  isSpec: "True"
  fullName: Neo.Network.P2P.Connection.OnData
  nameWithType: Connection.OnData
- uid: Neo.Network.P2P.Connection.OnReceive(System.Object)
  name: OnReceive(object)
  href: api/Neo.Network.P2P.Connection.html#Neo_Network_P2P_Connection_OnReceive_System_Object_
  commentId: M:Neo.Network.P2P.Connection.OnReceive(System.Object)
  name.vb: OnReceive(Object)
  fullName: Neo.Network.P2P.Connection.OnReceive(object)
  fullName.vb: Neo.Network.P2P.Connection.OnReceive(Object)
  nameWithType: Connection.OnReceive(object)
  nameWithType.vb: Connection.OnReceive(Object)
- uid: Neo.Network.P2P.Connection.OnReceive*
  name: OnReceive
  href: api/Neo.Network.P2P.Connection.html#Neo_Network_P2P_Connection_OnReceive_
  commentId: Overload:Neo.Network.P2P.Connection.OnReceive
  isSpec: "True"
  fullName: Neo.Network.P2P.Connection.OnReceive
  nameWithType: Connection.OnReceive
- uid: Neo.Network.P2P.Connection.PostStop
  name: PostStop()
  href: api/Neo.Network.P2P.Connection.html#Neo_Network_P2P_Connection_PostStop
  commentId: M:Neo.Network.P2P.Connection.PostStop
  fullName: Neo.Network.P2P.Connection.PostStop()
  nameWithType: Connection.PostStop()
- uid: Neo.Network.P2P.Connection.PostStop*
  name: PostStop
  href: api/Neo.Network.P2P.Connection.html#Neo_Network_P2P_Connection_PostStop_
  commentId: Overload:Neo.Network.P2P.Connection.PostStop
  isSpec: "True"
  fullName: Neo.Network.P2P.Connection.PostStop
  nameWithType: Connection.PostStop
- uid: Neo.Network.P2P.Connection.Remote
  name: Remote
  href: api/Neo.Network.P2P.Connection.html#Neo_Network_P2P_Connection_Remote
  commentId: P:Neo.Network.P2P.Connection.Remote
  fullName: Neo.Network.P2P.Connection.Remote
  nameWithType: Connection.Remote
- uid: Neo.Network.P2P.Connection.Remote*
  name: Remote
  href: api/Neo.Network.P2P.Connection.html#Neo_Network_P2P_Connection_Remote_
  commentId: Overload:Neo.Network.P2P.Connection.Remote
  isSpec: "True"
  fullName: Neo.Network.P2P.Connection.Remote
  nameWithType: Connection.Remote
- uid: Neo.Network.P2P.Connection.SendData(Akka.IO.ByteString)
  name: SendData(ByteString)
  href: api/Neo.Network.P2P.Connection.html#Neo_Network_P2P_Connection_SendData_Akka_IO_ByteString_
  commentId: M:Neo.Network.P2P.Connection.SendData(Akka.IO.ByteString)
  fullName: Neo.Network.P2P.Connection.SendData(Akka.IO.ByteString)
  nameWithType: Connection.SendData(ByteString)
- uid: Neo.Network.P2P.Connection.SendData*
  name: SendData
  href: api/Neo.Network.P2P.Connection.html#Neo_Network_P2P_Connection_SendData_
  commentId: Overload:Neo.Network.P2P.Connection.SendData
  isSpec: "True"
  fullName: Neo.Network.P2P.Connection.SendData
  nameWithType: Connection.SendData
- uid: Neo.Network.P2P.Helper
  name: Helper
  href: api/Neo.Network.P2P.Helper.html
  commentId: T:Neo.Network.P2P.Helper
  fullName: Neo.Network.P2P.Helper
  nameWithType: Helper
- uid: Neo.Network.P2P.Helper.CalculateHash(Neo.Network.P2P.Payloads.IVerifiable)
  name: CalculateHash(IVerifiable)
  href: api/Neo.Network.P2P.Helper.html#Neo_Network_P2P_Helper_CalculateHash_Neo_Network_P2P_Payloads_IVerifiable_
  commentId: M:Neo.Network.P2P.Helper.CalculateHash(Neo.Network.P2P.Payloads.IVerifiable)
  fullName: Neo.Network.P2P.Helper.CalculateHash(Neo.Network.P2P.Payloads.IVerifiable)
  nameWithType: Helper.CalculateHash(IVerifiable)
- uid: Neo.Network.P2P.Helper.CalculateHash*
  name: CalculateHash
  href: api/Neo.Network.P2P.Helper.html#Neo_Network_P2P_Helper_CalculateHash_
  commentId: Overload:Neo.Network.P2P.Helper.CalculateHash
  isSpec: "True"
  fullName: Neo.Network.P2P.Helper.CalculateHash
  nameWithType: Helper.CalculateHash
- uid: Neo.Network.P2P.Helper.GetSignData(Neo.Network.P2P.Payloads.IVerifiable,System.UInt32)
  name: GetSignData(IVerifiable, uint)
  href: api/Neo.Network.P2P.Helper.html#Neo_Network_P2P_Helper_GetSignData_Neo_Network_P2P_Payloads_IVerifiable_System_UInt32_
  commentId: M:Neo.Network.P2P.Helper.GetSignData(Neo.Network.P2P.Payloads.IVerifiable,System.UInt32)
  name.vb: GetSignData(IVerifiable, UInteger)
  fullName: Neo.Network.P2P.Helper.GetSignData(Neo.Network.P2P.Payloads.IVerifiable, uint)
  fullName.vb: Neo.Network.P2P.Helper.GetSignData(Neo.Network.P2P.Payloads.IVerifiable, UInteger)
  nameWithType: Helper.GetSignData(IVerifiable, uint)
  nameWithType.vb: Helper.GetSignData(IVerifiable, UInteger)
- uid: Neo.Network.P2P.Helper.GetSignData*
  name: GetSignData
  href: api/Neo.Network.P2P.Helper.html#Neo_Network_P2P_Helper_GetSignData_
  commentId: Overload:Neo.Network.P2P.Helper.GetSignData
  isSpec: "True"
  fullName: Neo.Network.P2P.Helper.GetSignData
  nameWithType: Helper.GetSignData
- uid: Neo.Network.P2P.LocalNode
  name: LocalNode
  href: api/Neo.Network.P2P.LocalNode.html
  commentId: T:Neo.Network.P2P.LocalNode
  fullName: Neo.Network.P2P.LocalNode
  nameWithType: LocalNode
- uid: Neo.Network.P2P.LocalNode.#ctor(Neo.NeoSystem)
  name: LocalNode(NeoSystem)
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode__ctor_Neo_NeoSystem_
  commentId: M:Neo.Network.P2P.LocalNode.#ctor(Neo.NeoSystem)
  name.vb: New(NeoSystem)
  fullName: Neo.Network.P2P.LocalNode.LocalNode(Neo.NeoSystem)
  fullName.vb: Neo.Network.P2P.LocalNode.New(Neo.NeoSystem)
  nameWithType: LocalNode.LocalNode(NeoSystem)
  nameWithType.vb: LocalNode.New(NeoSystem)
- uid: Neo.Network.P2P.LocalNode.#ctor*
  name: LocalNode
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode__ctor_
  commentId: Overload:Neo.Network.P2P.LocalNode.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Network.P2P.LocalNode.LocalNode
  fullName.vb: Neo.Network.P2P.LocalNode.New
  nameWithType: LocalNode.LocalNode
  nameWithType.vb: LocalNode.New
- uid: Neo.Network.P2P.LocalNode.AllowNewConnection(Akka.Actor.IActorRef,Neo.Network.P2P.RemoteNode)
  name: AllowNewConnection(IActorRef, RemoteNode)
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode_AllowNewConnection_Akka_Actor_IActorRef_Neo_Network_P2P_RemoteNode_
  commentId: M:Neo.Network.P2P.LocalNode.AllowNewConnection(Akka.Actor.IActorRef,Neo.Network.P2P.RemoteNode)
  fullName: Neo.Network.P2P.LocalNode.AllowNewConnection(Akka.Actor.IActorRef, Neo.Network.P2P.RemoteNode)
  nameWithType: LocalNode.AllowNewConnection(IActorRef, RemoteNode)
- uid: Neo.Network.P2P.LocalNode.AllowNewConnection*
  name: AllowNewConnection
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode_AllowNewConnection_
  commentId: Overload:Neo.Network.P2P.LocalNode.AllowNewConnection
  isSpec: "True"
  fullName: Neo.Network.P2P.LocalNode.AllowNewConnection
  nameWithType: LocalNode.AllowNewConnection
- uid: Neo.Network.P2P.LocalNode.ConnectedCount
  name: ConnectedCount
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode_ConnectedCount
  commentId: P:Neo.Network.P2P.LocalNode.ConnectedCount
  fullName: Neo.Network.P2P.LocalNode.ConnectedCount
  nameWithType: LocalNode.ConnectedCount
- uid: Neo.Network.P2P.LocalNode.ConnectedCount*
  name: ConnectedCount
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode_ConnectedCount_
  commentId: Overload:Neo.Network.P2P.LocalNode.ConnectedCount
  isSpec: "True"
  fullName: Neo.Network.P2P.LocalNode.ConnectedCount
  nameWithType: LocalNode.ConnectedCount
- uid: Neo.Network.P2P.LocalNode.GetInstance
  name: LocalNode.GetInstance
  href: api/Neo.Network.P2P.LocalNode.GetInstance.html
  commentId: T:Neo.Network.P2P.LocalNode.GetInstance
  fullName: Neo.Network.P2P.LocalNode.GetInstance
  nameWithType: LocalNode.GetInstance
- uid: Neo.Network.P2P.LocalNode.GetRemoteNodes
  name: GetRemoteNodes()
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode_GetRemoteNodes
  commentId: M:Neo.Network.P2P.LocalNode.GetRemoteNodes
  fullName: Neo.Network.P2P.LocalNode.GetRemoteNodes()
  nameWithType: LocalNode.GetRemoteNodes()
- uid: Neo.Network.P2P.LocalNode.GetRemoteNodes*
  name: GetRemoteNodes
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode_GetRemoteNodes_
  commentId: Overload:Neo.Network.P2P.LocalNode.GetRemoteNodes
  isSpec: "True"
  fullName: Neo.Network.P2P.LocalNode.GetRemoteNodes
  nameWithType: LocalNode.GetRemoteNodes
- uid: Neo.Network.P2P.LocalNode.GetUnconnectedPeers
  name: GetUnconnectedPeers()
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode_GetUnconnectedPeers
  commentId: M:Neo.Network.P2P.LocalNode.GetUnconnectedPeers
  fullName: Neo.Network.P2P.LocalNode.GetUnconnectedPeers()
  nameWithType: LocalNode.GetUnconnectedPeers()
- uid: Neo.Network.P2P.LocalNode.GetUnconnectedPeers*
  name: GetUnconnectedPeers
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode_GetUnconnectedPeers_
  commentId: Overload:Neo.Network.P2P.LocalNode.GetUnconnectedPeers
  isSpec: "True"
  fullName: Neo.Network.P2P.LocalNode.GetUnconnectedPeers
  nameWithType: LocalNode.GetUnconnectedPeers
- uid: Neo.Network.P2P.LocalNode.NeedMorePeers(System.Int32)
  name: NeedMorePeers(int)
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode_NeedMorePeers_System_Int32_
  commentId: M:Neo.Network.P2P.LocalNode.NeedMorePeers(System.Int32)
  name.vb: NeedMorePeers(Integer)
  fullName: Neo.Network.P2P.LocalNode.NeedMorePeers(int)
  fullName.vb: Neo.Network.P2P.LocalNode.NeedMorePeers(Integer)
  nameWithType: LocalNode.NeedMorePeers(int)
  nameWithType.vb: LocalNode.NeedMorePeers(Integer)
- uid: Neo.Network.P2P.LocalNode.NeedMorePeers*
  name: NeedMorePeers
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode_NeedMorePeers_
  commentId: Overload:Neo.Network.P2P.LocalNode.NeedMorePeers
  isSpec: "True"
  fullName: Neo.Network.P2P.LocalNode.NeedMorePeers
  nameWithType: LocalNode.NeedMorePeers
- uid: Neo.Network.P2P.LocalNode.Nonce
  name: Nonce
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode_Nonce
  commentId: F:Neo.Network.P2P.LocalNode.Nonce
  fullName: Neo.Network.P2P.LocalNode.Nonce
  nameWithType: LocalNode.Nonce
- uid: Neo.Network.P2P.LocalNode.OnReceive(System.Object)
  name: OnReceive(object)
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode_OnReceive_System_Object_
  commentId: M:Neo.Network.P2P.LocalNode.OnReceive(System.Object)
  name.vb: OnReceive(Object)
  fullName: Neo.Network.P2P.LocalNode.OnReceive(object)
  fullName.vb: Neo.Network.P2P.LocalNode.OnReceive(Object)
  nameWithType: LocalNode.OnReceive(object)
  nameWithType.vb: LocalNode.OnReceive(Object)
- uid: Neo.Network.P2P.LocalNode.OnReceive*
  name: OnReceive
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode_OnReceive_
  commentId: Overload:Neo.Network.P2P.LocalNode.OnReceive
  isSpec: "True"
  fullName: Neo.Network.P2P.LocalNode.OnReceive
  nameWithType: LocalNode.OnReceive
- uid: Neo.Network.P2P.LocalNode.OnTcpConnected(Akka.Actor.IActorRef)
  name: OnTcpConnected(IActorRef)
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode_OnTcpConnected_Akka_Actor_IActorRef_
  commentId: M:Neo.Network.P2P.LocalNode.OnTcpConnected(Akka.Actor.IActorRef)
  fullName: Neo.Network.P2P.LocalNode.OnTcpConnected(Akka.Actor.IActorRef)
  nameWithType: LocalNode.OnTcpConnected(IActorRef)
- uid: Neo.Network.P2P.LocalNode.OnTcpConnected*
  name: OnTcpConnected
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode_OnTcpConnected_
  commentId: Overload:Neo.Network.P2P.LocalNode.OnTcpConnected
  isSpec: "True"
  fullName: Neo.Network.P2P.LocalNode.OnTcpConnected
  nameWithType: LocalNode.OnTcpConnected
- uid: Neo.Network.P2P.LocalNode.Props(Neo.NeoSystem)
  name: Props(NeoSystem)
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode_Props_Neo_NeoSystem_
  commentId: M:Neo.Network.P2P.LocalNode.Props(Neo.NeoSystem)
  fullName: Neo.Network.P2P.LocalNode.Props(Neo.NeoSystem)
  nameWithType: LocalNode.Props(NeoSystem)
- uid: Neo.Network.P2P.LocalNode.Props*
  name: Props
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode_Props_
  commentId: Overload:Neo.Network.P2P.LocalNode.Props
  isSpec: "True"
  fullName: Neo.Network.P2P.LocalNode.Props
  nameWithType: LocalNode.Props
- uid: Neo.Network.P2P.LocalNode.ProtocolProps(System.Object,System.Net.IPEndPoint,System.Net.IPEndPoint)
  name: ProtocolProps(object, IPEndPoint, IPEndPoint)
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode_ProtocolProps_System_Object_System_Net_IPEndPoint_System_Net_IPEndPoint_
  commentId: M:Neo.Network.P2P.LocalNode.ProtocolProps(System.Object,System.Net.IPEndPoint,System.Net.IPEndPoint)
  name.vb: ProtocolProps(Object, IPEndPoint, IPEndPoint)
  fullName: Neo.Network.P2P.LocalNode.ProtocolProps(object, System.Net.IPEndPoint, System.Net.IPEndPoint)
  fullName.vb: Neo.Network.P2P.LocalNode.ProtocolProps(Object, System.Net.IPEndPoint, System.Net.IPEndPoint)
  nameWithType: LocalNode.ProtocolProps(object, IPEndPoint, IPEndPoint)
  nameWithType.vb: LocalNode.ProtocolProps(Object, IPEndPoint, IPEndPoint)
- uid: Neo.Network.P2P.LocalNode.ProtocolProps*
  name: ProtocolProps
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode_ProtocolProps_
  commentId: Overload:Neo.Network.P2P.LocalNode.ProtocolProps
  isSpec: "True"
  fullName: Neo.Network.P2P.LocalNode.ProtocolProps
  nameWithType: LocalNode.ProtocolProps
- uid: Neo.Network.P2P.LocalNode.ProtocolVersion
  name: ProtocolVersion
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode_ProtocolVersion
  commentId: F:Neo.Network.P2P.LocalNode.ProtocolVersion
  fullName: Neo.Network.P2P.LocalNode.ProtocolVersion
  nameWithType: LocalNode.ProtocolVersion
- uid: Neo.Network.P2P.LocalNode.RelayDirectly
  name: LocalNode.RelayDirectly
  href: api/Neo.Network.P2P.LocalNode.RelayDirectly.html
  commentId: T:Neo.Network.P2P.LocalNode.RelayDirectly
  fullName: Neo.Network.P2P.LocalNode.RelayDirectly
  nameWithType: LocalNode.RelayDirectly
- uid: Neo.Network.P2P.LocalNode.RelayDirectly.Inventory
  name: Inventory
  href: api/Neo.Network.P2P.LocalNode.RelayDirectly.html#Neo_Network_P2P_LocalNode_RelayDirectly_Inventory
  commentId: F:Neo.Network.P2P.LocalNode.RelayDirectly.Inventory
  fullName: Neo.Network.P2P.LocalNode.RelayDirectly.Inventory
  nameWithType: LocalNode.RelayDirectly.Inventory
- uid: Neo.Network.P2P.LocalNode.SendDirectly
  name: LocalNode.SendDirectly
  href: api/Neo.Network.P2P.LocalNode.SendDirectly.html
  commentId: T:Neo.Network.P2P.LocalNode.SendDirectly
  fullName: Neo.Network.P2P.LocalNode.SendDirectly
  nameWithType: LocalNode.SendDirectly
- uid: Neo.Network.P2P.LocalNode.SendDirectly.Inventory
  name: Inventory
  href: api/Neo.Network.P2P.LocalNode.SendDirectly.html#Neo_Network_P2P_LocalNode_SendDirectly_Inventory
  commentId: F:Neo.Network.P2P.LocalNode.SendDirectly.Inventory
  fullName: Neo.Network.P2P.LocalNode.SendDirectly.Inventory
  nameWithType: LocalNode.SendDirectly.Inventory
- uid: Neo.Network.P2P.LocalNode.UnconnectedCount
  name: UnconnectedCount
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode_UnconnectedCount
  commentId: P:Neo.Network.P2P.LocalNode.UnconnectedCount
  fullName: Neo.Network.P2P.LocalNode.UnconnectedCount
  nameWithType: LocalNode.UnconnectedCount
- uid: Neo.Network.P2P.LocalNode.UnconnectedCount*
  name: UnconnectedCount
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode_UnconnectedCount_
  commentId: Overload:Neo.Network.P2P.LocalNode.UnconnectedCount
  isSpec: "True"
  fullName: Neo.Network.P2P.LocalNode.UnconnectedCount
  nameWithType: LocalNode.UnconnectedCount
- uid: Neo.Network.P2P.LocalNode.UserAgent
  name: UserAgent
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode_UserAgent
  commentId: P:Neo.Network.P2P.LocalNode.UserAgent
  fullName: Neo.Network.P2P.LocalNode.UserAgent
  nameWithType: LocalNode.UserAgent
- uid: Neo.Network.P2P.LocalNode.UserAgent*
  name: UserAgent
  href: api/Neo.Network.P2P.LocalNode.html#Neo_Network_P2P_LocalNode_UserAgent_
  commentId: Overload:Neo.Network.P2P.LocalNode.UserAgent
  isSpec: "True"
  fullName: Neo.Network.P2P.LocalNode.UserAgent
  nameWithType: LocalNode.UserAgent
- uid: Neo.Network.P2P.Message
  name: Message
  href: api/Neo.Network.P2P.Message.html
  commentId: T:Neo.Network.P2P.Message
  fullName: Neo.Network.P2P.Message
  nameWithType: Message
- uid: Neo.Network.P2P.Message.Command
  name: Command
  href: api/Neo.Network.P2P.Message.html#Neo_Network_P2P_Message_Command
  commentId: F:Neo.Network.P2P.Message.Command
  fullName: Neo.Network.P2P.Message.Command
  nameWithType: Message.Command
- uid: Neo.Network.P2P.Message.Create(Neo.Network.P2P.MessageCommand,Neo.IO.ISerializable)
  name: Create(MessageCommand, ISerializable)
  href: api/Neo.Network.P2P.Message.html#Neo_Network_P2P_Message_Create_Neo_Network_P2P_MessageCommand_Neo_IO_ISerializable_
  commentId: M:Neo.Network.P2P.Message.Create(Neo.Network.P2P.MessageCommand,Neo.IO.ISerializable)
  fullName: Neo.Network.P2P.Message.Create(Neo.Network.P2P.MessageCommand, Neo.IO.ISerializable)
  nameWithType: Message.Create(MessageCommand, ISerializable)
- uid: Neo.Network.P2P.Message.Create*
  name: Create
  href: api/Neo.Network.P2P.Message.html#Neo_Network_P2P_Message_Create_
  commentId: Overload:Neo.Network.P2P.Message.Create
  isSpec: "True"
  fullName: Neo.Network.P2P.Message.Create
  nameWithType: Message.Create
- uid: Neo.Network.P2P.Message.Flags
  name: Flags
  href: api/Neo.Network.P2P.Message.html#Neo_Network_P2P_Message_Flags
  commentId: F:Neo.Network.P2P.Message.Flags
  fullName: Neo.Network.P2P.Message.Flags
  nameWithType: Message.Flags
- uid: Neo.Network.P2P.Message.Payload
  name: Payload
  href: api/Neo.Network.P2P.Message.html#Neo_Network_P2P_Message_Payload
  commentId: F:Neo.Network.P2P.Message.Payload
  fullName: Neo.Network.P2P.Message.Payload
  nameWithType: Message.Payload
- uid: Neo.Network.P2P.Message.PayloadMaxSize
  name: PayloadMaxSize
  href: api/Neo.Network.P2P.Message.html#Neo_Network_P2P_Message_PayloadMaxSize
  commentId: F:Neo.Network.P2P.Message.PayloadMaxSize
  fullName: Neo.Network.P2P.Message.PayloadMaxSize
  nameWithType: Message.PayloadMaxSize
- uid: Neo.Network.P2P.Message.Size
  name: Size
  href: api/Neo.Network.P2P.Message.html#Neo_Network_P2P_Message_Size
  commentId: P:Neo.Network.P2P.Message.Size
  fullName: Neo.Network.P2P.Message.Size
  nameWithType: Message.Size
- uid: Neo.Network.P2P.Message.Size*
  name: Size
  href: api/Neo.Network.P2P.Message.html#Neo_Network_P2P_Message_Size_
  commentId: Overload:Neo.Network.P2P.Message.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Message.Size
  nameWithType: Message.Size
- uid: Neo.Network.P2P.MessageCommand
  name: MessageCommand
  href: api/Neo.Network.P2P.MessageCommand.html
  commentId: T:Neo.Network.P2P.MessageCommand
  fullName: Neo.Network.P2P.MessageCommand
  nameWithType: MessageCommand
- uid: Neo.Network.P2P.MessageCommand.Addr
  name: Addr
  href: api/Neo.Network.P2P.MessageCommand.html#Neo_Network_P2P_MessageCommand_Addr
  commentId: F:Neo.Network.P2P.MessageCommand.Addr
  fullName: Neo.Network.P2P.MessageCommand.Addr
  nameWithType: MessageCommand.Addr
- uid: Neo.Network.P2P.MessageCommand.Alert
  name: Alert
  href: api/Neo.Network.P2P.MessageCommand.html#Neo_Network_P2P_MessageCommand_Alert
  commentId: F:Neo.Network.P2P.MessageCommand.Alert
  fullName: Neo.Network.P2P.MessageCommand.Alert
  nameWithType: MessageCommand.Alert
- uid: Neo.Network.P2P.MessageCommand.Block
  name: Block
  href: api/Neo.Network.P2P.MessageCommand.html#Neo_Network_P2P_MessageCommand_Block
  commentId: F:Neo.Network.P2P.MessageCommand.Block
  fullName: Neo.Network.P2P.MessageCommand.Block
  nameWithType: MessageCommand.Block
- uid: Neo.Network.P2P.MessageCommand.Extensible
  name: Extensible
  href: api/Neo.Network.P2P.MessageCommand.html#Neo_Network_P2P_MessageCommand_Extensible
  commentId: F:Neo.Network.P2P.MessageCommand.Extensible
  fullName: Neo.Network.P2P.MessageCommand.Extensible
  nameWithType: MessageCommand.Extensible
- uid: Neo.Network.P2P.MessageCommand.FilterAdd
  name: FilterAdd
  href: api/Neo.Network.P2P.MessageCommand.html#Neo_Network_P2P_MessageCommand_FilterAdd
  commentId: F:Neo.Network.P2P.MessageCommand.FilterAdd
  fullName: Neo.Network.P2P.MessageCommand.FilterAdd
  nameWithType: MessageCommand.FilterAdd
- uid: Neo.Network.P2P.MessageCommand.FilterClear
  name: FilterClear
  href: api/Neo.Network.P2P.MessageCommand.html#Neo_Network_P2P_MessageCommand_FilterClear
  commentId: F:Neo.Network.P2P.MessageCommand.FilterClear
  fullName: Neo.Network.P2P.MessageCommand.FilterClear
  nameWithType: MessageCommand.FilterClear
- uid: Neo.Network.P2P.MessageCommand.FilterLoad
  name: FilterLoad
  href: api/Neo.Network.P2P.MessageCommand.html#Neo_Network_P2P_MessageCommand_FilterLoad
  commentId: F:Neo.Network.P2P.MessageCommand.FilterLoad
  fullName: Neo.Network.P2P.MessageCommand.FilterLoad
  nameWithType: MessageCommand.FilterLoad
- uid: Neo.Network.P2P.MessageCommand.GetAddr
  name: GetAddr
  href: api/Neo.Network.P2P.MessageCommand.html#Neo_Network_P2P_MessageCommand_GetAddr
  commentId: F:Neo.Network.P2P.MessageCommand.GetAddr
  fullName: Neo.Network.P2P.MessageCommand.GetAddr
  nameWithType: MessageCommand.GetAddr
- uid: Neo.Network.P2P.MessageCommand.GetBlockByIndex
  name: GetBlockByIndex
  href: api/Neo.Network.P2P.MessageCommand.html#Neo_Network_P2P_MessageCommand_GetBlockByIndex
  commentId: F:Neo.Network.P2P.MessageCommand.GetBlockByIndex
  fullName: Neo.Network.P2P.MessageCommand.GetBlockByIndex
  nameWithType: MessageCommand.GetBlockByIndex
- uid: Neo.Network.P2P.MessageCommand.GetBlocks
  name: GetBlocks
  href: api/Neo.Network.P2P.MessageCommand.html#Neo_Network_P2P_MessageCommand_GetBlocks
  commentId: F:Neo.Network.P2P.MessageCommand.GetBlocks
  fullName: Neo.Network.P2P.MessageCommand.GetBlocks
  nameWithType: MessageCommand.GetBlocks
- uid: Neo.Network.P2P.MessageCommand.GetData
  name: GetData
  href: api/Neo.Network.P2P.MessageCommand.html#Neo_Network_P2P_MessageCommand_GetData
  commentId: F:Neo.Network.P2P.MessageCommand.GetData
  fullName: Neo.Network.P2P.MessageCommand.GetData
  nameWithType: MessageCommand.GetData
- uid: Neo.Network.P2P.MessageCommand.GetHeaders
  name: GetHeaders
  href: api/Neo.Network.P2P.MessageCommand.html#Neo_Network_P2P_MessageCommand_GetHeaders
  commentId: F:Neo.Network.P2P.MessageCommand.GetHeaders
  fullName: Neo.Network.P2P.MessageCommand.GetHeaders
  nameWithType: MessageCommand.GetHeaders
- uid: Neo.Network.P2P.MessageCommand.Headers
  name: Headers
  href: api/Neo.Network.P2P.MessageCommand.html#Neo_Network_P2P_MessageCommand_Headers
  commentId: F:Neo.Network.P2P.MessageCommand.Headers
  fullName: Neo.Network.P2P.MessageCommand.Headers
  nameWithType: MessageCommand.Headers
- uid: Neo.Network.P2P.MessageCommand.Inv
  name: Inv
  href: api/Neo.Network.P2P.MessageCommand.html#Neo_Network_P2P_MessageCommand_Inv
  commentId: F:Neo.Network.P2P.MessageCommand.Inv
  fullName: Neo.Network.P2P.MessageCommand.Inv
  nameWithType: MessageCommand.Inv
- uid: Neo.Network.P2P.MessageCommand.Mempool
  name: Mempool
  href: api/Neo.Network.P2P.MessageCommand.html#Neo_Network_P2P_MessageCommand_Mempool
  commentId: F:Neo.Network.P2P.MessageCommand.Mempool
  fullName: Neo.Network.P2P.MessageCommand.Mempool
  nameWithType: MessageCommand.Mempool
- uid: Neo.Network.P2P.MessageCommand.MerkleBlock
  name: MerkleBlock
  href: api/Neo.Network.P2P.MessageCommand.html#Neo_Network_P2P_MessageCommand_MerkleBlock
  commentId: F:Neo.Network.P2P.MessageCommand.MerkleBlock
  fullName: Neo.Network.P2P.MessageCommand.MerkleBlock
  nameWithType: MessageCommand.MerkleBlock
- uid: Neo.Network.P2P.MessageCommand.NotFound
  name: NotFound
  href: api/Neo.Network.P2P.MessageCommand.html#Neo_Network_P2P_MessageCommand_NotFound
  commentId: F:Neo.Network.P2P.MessageCommand.NotFound
  fullName: Neo.Network.P2P.MessageCommand.NotFound
  nameWithType: MessageCommand.NotFound
- uid: Neo.Network.P2P.MessageCommand.Ping
  name: Ping
  href: api/Neo.Network.P2P.MessageCommand.html#Neo_Network_P2P_MessageCommand_Ping
  commentId: F:Neo.Network.P2P.MessageCommand.Ping
  fullName: Neo.Network.P2P.MessageCommand.Ping
  nameWithType: MessageCommand.Ping
- uid: Neo.Network.P2P.MessageCommand.Pong
  name: Pong
  href: api/Neo.Network.P2P.MessageCommand.html#Neo_Network_P2P_MessageCommand_Pong
  commentId: F:Neo.Network.P2P.MessageCommand.Pong
  fullName: Neo.Network.P2P.MessageCommand.Pong
  nameWithType: MessageCommand.Pong
- uid: Neo.Network.P2P.MessageCommand.Reject
  name: Reject
  href: api/Neo.Network.P2P.MessageCommand.html#Neo_Network_P2P_MessageCommand_Reject
  commentId: F:Neo.Network.P2P.MessageCommand.Reject
  fullName: Neo.Network.P2P.MessageCommand.Reject
  nameWithType: MessageCommand.Reject
- uid: Neo.Network.P2P.MessageCommand.Transaction
  name: Transaction
  href: api/Neo.Network.P2P.MessageCommand.html#Neo_Network_P2P_MessageCommand_Transaction
  commentId: F:Neo.Network.P2P.MessageCommand.Transaction
  fullName: Neo.Network.P2P.MessageCommand.Transaction
  nameWithType: MessageCommand.Transaction
- uid: Neo.Network.P2P.MessageCommand.Verack
  name: Verack
  href: api/Neo.Network.P2P.MessageCommand.html#Neo_Network_P2P_MessageCommand_Verack
  commentId: F:Neo.Network.P2P.MessageCommand.Verack
  fullName: Neo.Network.P2P.MessageCommand.Verack
  nameWithType: MessageCommand.Verack
- uid: Neo.Network.P2P.MessageCommand.Version
  name: Version
  href: api/Neo.Network.P2P.MessageCommand.html#Neo_Network_P2P_MessageCommand_Version
  commentId: F:Neo.Network.P2P.MessageCommand.Version
  fullName: Neo.Network.P2P.MessageCommand.Version
  nameWithType: MessageCommand.Version
- uid: Neo.Network.P2P.MessageFlags
  name: MessageFlags
  href: api/Neo.Network.P2P.MessageFlags.html
  commentId: T:Neo.Network.P2P.MessageFlags
  fullName: Neo.Network.P2P.MessageFlags
  nameWithType: MessageFlags
- uid: Neo.Network.P2P.MessageFlags.Compressed
  name: Compressed
  href: api/Neo.Network.P2P.MessageFlags.html#Neo_Network_P2P_MessageFlags_Compressed
  commentId: F:Neo.Network.P2P.MessageFlags.Compressed
  fullName: Neo.Network.P2P.MessageFlags.Compressed
  nameWithType: MessageFlags.Compressed
- uid: Neo.Network.P2P.MessageFlags.None
  name: None
  href: api/Neo.Network.P2P.MessageFlags.html#Neo_Network_P2P_MessageFlags_None
  commentId: F:Neo.Network.P2P.MessageFlags.None
  fullName: Neo.Network.P2P.MessageFlags.None
  nameWithType: MessageFlags.None
- uid: Neo.Network.P2P.MessageReceivedHandler
  name: MessageReceivedHandler
  href: api/Neo.Network.P2P.MessageReceivedHandler.html
  commentId: T:Neo.Network.P2P.MessageReceivedHandler
  fullName: Neo.Network.P2P.MessageReceivedHandler
  nameWithType: MessageReceivedHandler
- uid: Neo.Network.P2P.Payloads
  name: Neo.Network.P2P.Payloads
  href: api/Neo.Network.P2P.Payloads.html
  commentId: N:Neo.Network.P2P.Payloads
  fullName: Neo.Network.P2P.Payloads
  nameWithType: Neo.Network.P2P.Payloads
- uid: Neo.Network.P2P.Payloads.AddrPayload
  name: AddrPayload
  href: api/Neo.Network.P2P.Payloads.AddrPayload.html
  commentId: T:Neo.Network.P2P.Payloads.AddrPayload
  fullName: Neo.Network.P2P.Payloads.AddrPayload
  nameWithType: AddrPayload
- uid: Neo.Network.P2P.Payloads.AddrPayload.AddressList
  name: AddressList
  href: api/Neo.Network.P2P.Payloads.AddrPayload.html#Neo_Network_P2P_Payloads_AddrPayload_AddressList
  commentId: F:Neo.Network.P2P.Payloads.AddrPayload.AddressList
  fullName: Neo.Network.P2P.Payloads.AddrPayload.AddressList
  nameWithType: AddrPayload.AddressList
- uid: Neo.Network.P2P.Payloads.AddrPayload.Create(Neo.Network.P2P.Payloads.NetworkAddressWithTime[])
  name: Create(params NetworkAddressWithTime[])
  href: api/Neo.Network.P2P.Payloads.AddrPayload.html#Neo_Network_P2P_Payloads_AddrPayload_Create_Neo_Network_P2P_Payloads_NetworkAddressWithTime___
  commentId: M:Neo.Network.P2P.Payloads.AddrPayload.Create(Neo.Network.P2P.Payloads.NetworkAddressWithTime[])
  name.vb: Create(ParamArray NetworkAddressWithTime())
  fullName: Neo.Network.P2P.Payloads.AddrPayload.Create(params Neo.Network.P2P.Payloads.NetworkAddressWithTime[])
  fullName.vb: Neo.Network.P2P.Payloads.AddrPayload.Create(ParamArray Neo.Network.P2P.Payloads.NetworkAddressWithTime())
  nameWithType: AddrPayload.Create(params NetworkAddressWithTime[])
  nameWithType.vb: AddrPayload.Create(ParamArray NetworkAddressWithTime())
- uid: Neo.Network.P2P.Payloads.AddrPayload.Create*
  name: Create
  href: api/Neo.Network.P2P.Payloads.AddrPayload.html#Neo_Network_P2P_Payloads_AddrPayload_Create_
  commentId: Overload:Neo.Network.P2P.Payloads.AddrPayload.Create
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.AddrPayload.Create
  nameWithType: AddrPayload.Create
- uid: Neo.Network.P2P.Payloads.AddrPayload.MaxCountToSend
  name: MaxCountToSend
  href: api/Neo.Network.P2P.Payloads.AddrPayload.html#Neo_Network_P2P_Payloads_AddrPayload_MaxCountToSend
  commentId: F:Neo.Network.P2P.Payloads.AddrPayload.MaxCountToSend
  fullName: Neo.Network.P2P.Payloads.AddrPayload.MaxCountToSend
  nameWithType: AddrPayload.MaxCountToSend
- uid: Neo.Network.P2P.Payloads.AddrPayload.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.AddrPayload.html#Neo_Network_P2P_Payloads_AddrPayload_Size
  commentId: P:Neo.Network.P2P.Payloads.AddrPayload.Size
  fullName: Neo.Network.P2P.Payloads.AddrPayload.Size
  nameWithType: AddrPayload.Size
- uid: Neo.Network.P2P.Payloads.AddrPayload.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.AddrPayload.html#Neo_Network_P2P_Payloads_AddrPayload_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.AddrPayload.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.AddrPayload.Size
  nameWithType: AddrPayload.Size
- uid: Neo.Network.P2P.Payloads.Block
  name: Block
  href: api/Neo.Network.P2P.Payloads.Block.html
  commentId: T:Neo.Network.P2P.Payloads.Block
  fullName: Neo.Network.P2P.Payloads.Block
  nameWithType: Block
- uid: Neo.Network.P2P.Payloads.Block.Deserialize(Neo.IO.MemoryReader@)
  name: Deserialize(ref MemoryReader)
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_Deserialize_Neo_IO_MemoryReader__
  commentId: M:Neo.Network.P2P.Payloads.Block.Deserialize(Neo.IO.MemoryReader@)
  name.vb: Deserialize(MemoryReader)
  fullName: Neo.Network.P2P.Payloads.Block.Deserialize(ref Neo.IO.MemoryReader)
  fullName.vb: Neo.Network.P2P.Payloads.Block.Deserialize(Neo.IO.MemoryReader)
  nameWithType: Block.Deserialize(ref MemoryReader)
  nameWithType.vb: Block.Deserialize(MemoryReader)
- uid: Neo.Network.P2P.Payloads.Block.Deserialize*
  name: Deserialize
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_Deserialize_
  commentId: Overload:Neo.Network.P2P.Payloads.Block.Deserialize
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Block.Deserialize
  nameWithType: Block.Deserialize
- uid: Neo.Network.P2P.Payloads.Block.Equals(Neo.Network.P2P.Payloads.Block)
  name: Equals(Block)
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_Equals_Neo_Network_P2P_Payloads_Block_
  commentId: M:Neo.Network.P2P.Payloads.Block.Equals(Neo.Network.P2P.Payloads.Block)
  fullName: Neo.Network.P2P.Payloads.Block.Equals(Neo.Network.P2P.Payloads.Block)
  nameWithType: Block.Equals(Block)
- uid: Neo.Network.P2P.Payloads.Block.Equals(System.Object)
  name: Equals(object)
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_Equals_System_Object_
  commentId: M:Neo.Network.P2P.Payloads.Block.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Neo.Network.P2P.Payloads.Block.Equals(object)
  fullName.vb: Neo.Network.P2P.Payloads.Block.Equals(Object)
  nameWithType: Block.Equals(object)
  nameWithType.vb: Block.Equals(Object)
- uid: Neo.Network.P2P.Payloads.Block.Equals*
  name: Equals
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_Equals_
  commentId: Overload:Neo.Network.P2P.Payloads.Block.Equals
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Block.Equals
  nameWithType: Block.Equals
- uid: Neo.Network.P2P.Payloads.Block.GetHashCode
  name: GetHashCode()
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_GetHashCode
  commentId: M:Neo.Network.P2P.Payloads.Block.GetHashCode
  fullName: Neo.Network.P2P.Payloads.Block.GetHashCode()
  nameWithType: Block.GetHashCode()
- uid: Neo.Network.P2P.Payloads.Block.GetHashCode*
  name: GetHashCode
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_GetHashCode_
  commentId: Overload:Neo.Network.P2P.Payloads.Block.GetHashCode
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Block.GetHashCode
  nameWithType: Block.GetHashCode
- uid: Neo.Network.P2P.Payloads.Block.Hash
  name: Hash
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_Hash
  commentId: P:Neo.Network.P2P.Payloads.Block.Hash
  fullName: Neo.Network.P2P.Payloads.Block.Hash
  nameWithType: Block.Hash
- uid: Neo.Network.P2P.Payloads.Block.Hash*
  name: Hash
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_Hash_
  commentId: Overload:Neo.Network.P2P.Payloads.Block.Hash
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Block.Hash
  nameWithType: Block.Hash
- uid: Neo.Network.P2P.Payloads.Block.Header
  name: Header
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_Header
  commentId: F:Neo.Network.P2P.Payloads.Block.Header
  fullName: Neo.Network.P2P.Payloads.Block.Header
  nameWithType: Block.Header
- uid: Neo.Network.P2P.Payloads.Block.Index
  name: Index
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_Index
  commentId: P:Neo.Network.P2P.Payloads.Block.Index
  fullName: Neo.Network.P2P.Payloads.Block.Index
  nameWithType: Block.Index
- uid: Neo.Network.P2P.Payloads.Block.Index*
  name: Index
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_Index_
  commentId: Overload:Neo.Network.P2P.Payloads.Block.Index
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Block.Index
  nameWithType: Block.Index
- uid: Neo.Network.P2P.Payloads.Block.MerkleRoot
  name: MerkleRoot
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_MerkleRoot
  commentId: P:Neo.Network.P2P.Payloads.Block.MerkleRoot
  fullName: Neo.Network.P2P.Payloads.Block.MerkleRoot
  nameWithType: Block.MerkleRoot
- uid: Neo.Network.P2P.Payloads.Block.MerkleRoot*
  name: MerkleRoot
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_MerkleRoot_
  commentId: Overload:Neo.Network.P2P.Payloads.Block.MerkleRoot
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Block.MerkleRoot
  nameWithType: Block.MerkleRoot
- uid: Neo.Network.P2P.Payloads.Block.NextConsensus
  name: NextConsensus
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_NextConsensus
  commentId: P:Neo.Network.P2P.Payloads.Block.NextConsensus
  fullName: Neo.Network.P2P.Payloads.Block.NextConsensus
  nameWithType: Block.NextConsensus
- uid: Neo.Network.P2P.Payloads.Block.NextConsensus*
  name: NextConsensus
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_NextConsensus_
  commentId: Overload:Neo.Network.P2P.Payloads.Block.NextConsensus
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Block.NextConsensus
  nameWithType: Block.NextConsensus
- uid: Neo.Network.P2P.Payloads.Block.Nonce
  name: Nonce
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_Nonce
  commentId: P:Neo.Network.P2P.Payloads.Block.Nonce
  fullName: Neo.Network.P2P.Payloads.Block.Nonce
  nameWithType: Block.Nonce
- uid: Neo.Network.P2P.Payloads.Block.Nonce*
  name: Nonce
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_Nonce_
  commentId: Overload:Neo.Network.P2P.Payloads.Block.Nonce
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Block.Nonce
  nameWithType: Block.Nonce
- uid: Neo.Network.P2P.Payloads.Block.PrevHash
  name: PrevHash
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_PrevHash
  commentId: P:Neo.Network.P2P.Payloads.Block.PrevHash
  fullName: Neo.Network.P2P.Payloads.Block.PrevHash
  nameWithType: Block.PrevHash
- uid: Neo.Network.P2P.Payloads.Block.PrevHash*
  name: PrevHash
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_PrevHash_
  commentId: Overload:Neo.Network.P2P.Payloads.Block.PrevHash
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Block.PrevHash
  nameWithType: Block.PrevHash
- uid: Neo.Network.P2P.Payloads.Block.PrimaryIndex
  name: PrimaryIndex
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_PrimaryIndex
  commentId: P:Neo.Network.P2P.Payloads.Block.PrimaryIndex
  fullName: Neo.Network.P2P.Payloads.Block.PrimaryIndex
  nameWithType: Block.PrimaryIndex
- uid: Neo.Network.P2P.Payloads.Block.PrimaryIndex*
  name: PrimaryIndex
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_PrimaryIndex_
  commentId: Overload:Neo.Network.P2P.Payloads.Block.PrimaryIndex
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Block.PrimaryIndex
  nameWithType: Block.PrimaryIndex
- uid: Neo.Network.P2P.Payloads.Block.Serialize(System.IO.BinaryWriter)
  name: Serialize(BinaryWriter)
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_Serialize_System_IO_BinaryWriter_
  commentId: M:Neo.Network.P2P.Payloads.Block.Serialize(System.IO.BinaryWriter)
  fullName: Neo.Network.P2P.Payloads.Block.Serialize(System.IO.BinaryWriter)
  nameWithType: Block.Serialize(BinaryWriter)
- uid: Neo.Network.P2P.Payloads.Block.Serialize*
  name: Serialize
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_Serialize_
  commentId: Overload:Neo.Network.P2P.Payloads.Block.Serialize
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Block.Serialize
  nameWithType: Block.Serialize
- uid: Neo.Network.P2P.Payloads.Block.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_Size
  commentId: P:Neo.Network.P2P.Payloads.Block.Size
  fullName: Neo.Network.P2P.Payloads.Block.Size
  nameWithType: Block.Size
- uid: Neo.Network.P2P.Payloads.Block.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.Block.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Block.Size
  nameWithType: Block.Size
- uid: Neo.Network.P2P.Payloads.Block.Timestamp
  name: Timestamp
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_Timestamp
  commentId: P:Neo.Network.P2P.Payloads.Block.Timestamp
  fullName: Neo.Network.P2P.Payloads.Block.Timestamp
  nameWithType: Block.Timestamp
- uid: Neo.Network.P2P.Payloads.Block.Timestamp*
  name: Timestamp
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_Timestamp_
  commentId: Overload:Neo.Network.P2P.Payloads.Block.Timestamp
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Block.Timestamp
  nameWithType: Block.Timestamp
- uid: Neo.Network.P2P.Payloads.Block.ToJson(Neo.ProtocolSettings)
  name: ToJson(ProtocolSettings)
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_ToJson_Neo_ProtocolSettings_
  commentId: M:Neo.Network.P2P.Payloads.Block.ToJson(Neo.ProtocolSettings)
  fullName: Neo.Network.P2P.Payloads.Block.ToJson(Neo.ProtocolSettings)
  nameWithType: Block.ToJson(ProtocolSettings)
- uid: Neo.Network.P2P.Payloads.Block.ToJson*
  name: ToJson
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_ToJson_
  commentId: Overload:Neo.Network.P2P.Payloads.Block.ToJson
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Block.ToJson
  nameWithType: Block.ToJson
- uid: Neo.Network.P2P.Payloads.Block.Transactions
  name: Transactions
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_Transactions
  commentId: F:Neo.Network.P2P.Payloads.Block.Transactions
  fullName: Neo.Network.P2P.Payloads.Block.Transactions
  nameWithType: Block.Transactions
- uid: Neo.Network.P2P.Payloads.Block.Version
  name: Version
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_Version
  commentId: P:Neo.Network.P2P.Payloads.Block.Version
  fullName: Neo.Network.P2P.Payloads.Block.Version
  nameWithType: Block.Version
- uid: Neo.Network.P2P.Payloads.Block.Version*
  name: Version
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_Version_
  commentId: Overload:Neo.Network.P2P.Payloads.Block.Version
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Block.Version
  nameWithType: Block.Version
- uid: Neo.Network.P2P.Payloads.Block.Witness
  name: Witness
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_Witness
  commentId: P:Neo.Network.P2P.Payloads.Block.Witness
  fullName: Neo.Network.P2P.Payloads.Block.Witness
  nameWithType: Block.Witness
- uid: Neo.Network.P2P.Payloads.Block.Witness*
  name: Witness
  href: api/Neo.Network.P2P.Payloads.Block.html#Neo_Network_P2P_Payloads_Block_Witness_
  commentId: Overload:Neo.Network.P2P.Payloads.Block.Witness
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Block.Witness
  nameWithType: Block.Witness
- uid: Neo.Network.P2P.Payloads.Conditions
  name: Neo.Network.P2P.Payloads.Conditions
  href: api/Neo.Network.P2P.Payloads.Conditions.html
  commentId: N:Neo.Network.P2P.Payloads.Conditions
  fullName: Neo.Network.P2P.Payloads.Conditions
  nameWithType: Neo.Network.P2P.Payloads.Conditions
- uid: Neo.Network.P2P.Payloads.Conditions.AndCondition
  name: AndCondition
  href: api/Neo.Network.P2P.Payloads.Conditions.AndCondition.html
  commentId: T:Neo.Network.P2P.Payloads.Conditions.AndCondition
  fullName: Neo.Network.P2P.Payloads.Conditions.AndCondition
  nameWithType: AndCondition
- uid: Neo.Network.P2P.Payloads.Conditions.AndCondition.DeserializeWithoutType(Neo.IO.MemoryReader@,System.Int32)
  name: DeserializeWithoutType(ref MemoryReader, int)
  href: api/Neo.Network.P2P.Payloads.Conditions.AndCondition.html#Neo_Network_P2P_Payloads_Conditions_AndCondition_DeserializeWithoutType_Neo_IO_MemoryReader__System_Int32_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.AndCondition.DeserializeWithoutType(Neo.IO.MemoryReader@,System.Int32)
  name.vb: DeserializeWithoutType(MemoryReader, Integer)
  fullName: Neo.Network.P2P.Payloads.Conditions.AndCondition.DeserializeWithoutType(ref Neo.IO.MemoryReader, int)
  fullName.vb: Neo.Network.P2P.Payloads.Conditions.AndCondition.DeserializeWithoutType(Neo.IO.MemoryReader, Integer)
  nameWithType: AndCondition.DeserializeWithoutType(ref MemoryReader, int)
  nameWithType.vb: AndCondition.DeserializeWithoutType(MemoryReader, Integer)
- uid: Neo.Network.P2P.Payloads.Conditions.AndCondition.DeserializeWithoutType*
  name: DeserializeWithoutType
  href: api/Neo.Network.P2P.Payloads.Conditions.AndCondition.html#Neo_Network_P2P_Payloads_Conditions_AndCondition_DeserializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.AndCondition.DeserializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.AndCondition.DeserializeWithoutType
  nameWithType: AndCondition.DeserializeWithoutType
- uid: Neo.Network.P2P.Payloads.Conditions.AndCondition.Expressions
  name: Expressions
  href: api/Neo.Network.P2P.Payloads.Conditions.AndCondition.html#Neo_Network_P2P_Payloads_Conditions_AndCondition_Expressions
  commentId: F:Neo.Network.P2P.Payloads.Conditions.AndCondition.Expressions
  fullName: Neo.Network.P2P.Payloads.Conditions.AndCondition.Expressions
  nameWithType: AndCondition.Expressions
- uid: Neo.Network.P2P.Payloads.Conditions.AndCondition.Match(Neo.SmartContract.ApplicationEngine)
  name: Match(ApplicationEngine)
  href: api/Neo.Network.P2P.Payloads.Conditions.AndCondition.html#Neo_Network_P2P_Payloads_Conditions_AndCondition_Match_Neo_SmartContract_ApplicationEngine_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.AndCondition.Match(Neo.SmartContract.ApplicationEngine)
  fullName: Neo.Network.P2P.Payloads.Conditions.AndCondition.Match(Neo.SmartContract.ApplicationEngine)
  nameWithType: AndCondition.Match(ApplicationEngine)
- uid: Neo.Network.P2P.Payloads.Conditions.AndCondition.Match*
  name: Match
  href: api/Neo.Network.P2P.Payloads.Conditions.AndCondition.html#Neo_Network_P2P_Payloads_Conditions_AndCondition_Match_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.AndCondition.Match
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.AndCondition.Match
  nameWithType: AndCondition.Match
- uid: Neo.Network.P2P.Payloads.Conditions.AndCondition.SerializeWithoutType(System.IO.BinaryWriter)
  name: SerializeWithoutType(BinaryWriter)
  href: api/Neo.Network.P2P.Payloads.Conditions.AndCondition.html#Neo_Network_P2P_Payloads_Conditions_AndCondition_SerializeWithoutType_System_IO_BinaryWriter_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.AndCondition.SerializeWithoutType(System.IO.BinaryWriter)
  fullName: Neo.Network.P2P.Payloads.Conditions.AndCondition.SerializeWithoutType(System.IO.BinaryWriter)
  nameWithType: AndCondition.SerializeWithoutType(BinaryWriter)
- uid: Neo.Network.P2P.Payloads.Conditions.AndCondition.SerializeWithoutType*
  name: SerializeWithoutType
  href: api/Neo.Network.P2P.Payloads.Conditions.AndCondition.html#Neo_Network_P2P_Payloads_Conditions_AndCondition_SerializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.AndCondition.SerializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.AndCondition.SerializeWithoutType
  nameWithType: AndCondition.SerializeWithoutType
- uid: Neo.Network.P2P.Payloads.Conditions.AndCondition.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.Conditions.AndCondition.html#Neo_Network_P2P_Payloads_Conditions_AndCondition_Size
  commentId: P:Neo.Network.P2P.Payloads.Conditions.AndCondition.Size
  fullName: Neo.Network.P2P.Payloads.Conditions.AndCondition.Size
  nameWithType: AndCondition.Size
- uid: Neo.Network.P2P.Payloads.Conditions.AndCondition.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.Conditions.AndCondition.html#Neo_Network_P2P_Payloads_Conditions_AndCondition_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.AndCondition.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.AndCondition.Size
  nameWithType: AndCondition.Size
- uid: Neo.Network.P2P.Payloads.Conditions.AndCondition.ToJson
  name: ToJson()
  href: api/Neo.Network.P2P.Payloads.Conditions.AndCondition.html#Neo_Network_P2P_Payloads_Conditions_AndCondition_ToJson
  commentId: M:Neo.Network.P2P.Payloads.Conditions.AndCondition.ToJson
  fullName: Neo.Network.P2P.Payloads.Conditions.AndCondition.ToJson()
  nameWithType: AndCondition.ToJson()
- uid: Neo.Network.P2P.Payloads.Conditions.AndCondition.ToJson*
  name: ToJson
  href: api/Neo.Network.P2P.Payloads.Conditions.AndCondition.html#Neo_Network_P2P_Payloads_Conditions_AndCondition_ToJson_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.AndCondition.ToJson
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.AndCondition.ToJson
  nameWithType: AndCondition.ToJson
- uid: Neo.Network.P2P.Payloads.Conditions.AndCondition.ToStackItem(Neo.VM.ReferenceCounter)
  name: ToStackItem(ReferenceCounter)
  href: api/Neo.Network.P2P.Payloads.Conditions.AndCondition.html#Neo_Network_P2P_Payloads_Conditions_AndCondition_ToStackItem_Neo_VM_ReferenceCounter_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.AndCondition.ToStackItem(Neo.VM.ReferenceCounter)
  fullName: Neo.Network.P2P.Payloads.Conditions.AndCondition.ToStackItem(Neo.VM.ReferenceCounter)
  nameWithType: AndCondition.ToStackItem(ReferenceCounter)
- uid: Neo.Network.P2P.Payloads.Conditions.AndCondition.ToStackItem*
  name: ToStackItem
  href: api/Neo.Network.P2P.Payloads.Conditions.AndCondition.html#Neo_Network_P2P_Payloads_Conditions_AndCondition_ToStackItem_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.AndCondition.ToStackItem
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.AndCondition.ToStackItem
  nameWithType: AndCondition.ToStackItem
- uid: Neo.Network.P2P.Payloads.Conditions.AndCondition.Type
  name: Type
  href: api/Neo.Network.P2P.Payloads.Conditions.AndCondition.html#Neo_Network_P2P_Payloads_Conditions_AndCondition_Type
  commentId: P:Neo.Network.P2P.Payloads.Conditions.AndCondition.Type
  fullName: Neo.Network.P2P.Payloads.Conditions.AndCondition.Type
  nameWithType: AndCondition.Type
- uid: Neo.Network.P2P.Payloads.Conditions.AndCondition.Type*
  name: Type
  href: api/Neo.Network.P2P.Payloads.Conditions.AndCondition.html#Neo_Network_P2P_Payloads_Conditions_AndCondition_Type_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.AndCondition.Type
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.AndCondition.Type
  nameWithType: AndCondition.Type
- uid: Neo.Network.P2P.Payloads.Conditions.BooleanCondition
  name: BooleanCondition
  href: api/Neo.Network.P2P.Payloads.Conditions.BooleanCondition.html
  commentId: T:Neo.Network.P2P.Payloads.Conditions.BooleanCondition
  fullName: Neo.Network.P2P.Payloads.Conditions.BooleanCondition
  nameWithType: BooleanCondition
- uid: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.DeserializeWithoutType(Neo.IO.MemoryReader@,System.Int32)
  name: DeserializeWithoutType(ref MemoryReader, int)
  href: api/Neo.Network.P2P.Payloads.Conditions.BooleanCondition.html#Neo_Network_P2P_Payloads_Conditions_BooleanCondition_DeserializeWithoutType_Neo_IO_MemoryReader__System_Int32_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.BooleanCondition.DeserializeWithoutType(Neo.IO.MemoryReader@,System.Int32)
  name.vb: DeserializeWithoutType(MemoryReader, Integer)
  fullName: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.DeserializeWithoutType(ref Neo.IO.MemoryReader, int)
  fullName.vb: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.DeserializeWithoutType(Neo.IO.MemoryReader, Integer)
  nameWithType: BooleanCondition.DeserializeWithoutType(ref MemoryReader, int)
  nameWithType.vb: BooleanCondition.DeserializeWithoutType(MemoryReader, Integer)
- uid: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.DeserializeWithoutType*
  name: DeserializeWithoutType
  href: api/Neo.Network.P2P.Payloads.Conditions.BooleanCondition.html#Neo_Network_P2P_Payloads_Conditions_BooleanCondition_DeserializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.BooleanCondition.DeserializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.DeserializeWithoutType
  nameWithType: BooleanCondition.DeserializeWithoutType
- uid: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.Expression
  name: Expression
  href: api/Neo.Network.P2P.Payloads.Conditions.BooleanCondition.html#Neo_Network_P2P_Payloads_Conditions_BooleanCondition_Expression
  commentId: F:Neo.Network.P2P.Payloads.Conditions.BooleanCondition.Expression
  fullName: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.Expression
  nameWithType: BooleanCondition.Expression
- uid: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.Match(Neo.SmartContract.ApplicationEngine)
  name: Match(ApplicationEngine)
  href: api/Neo.Network.P2P.Payloads.Conditions.BooleanCondition.html#Neo_Network_P2P_Payloads_Conditions_BooleanCondition_Match_Neo_SmartContract_ApplicationEngine_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.BooleanCondition.Match(Neo.SmartContract.ApplicationEngine)
  fullName: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.Match(Neo.SmartContract.ApplicationEngine)
  nameWithType: BooleanCondition.Match(ApplicationEngine)
- uid: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.Match*
  name: Match
  href: api/Neo.Network.P2P.Payloads.Conditions.BooleanCondition.html#Neo_Network_P2P_Payloads_Conditions_BooleanCondition_Match_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.BooleanCondition.Match
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.Match
  nameWithType: BooleanCondition.Match
- uid: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.SerializeWithoutType(System.IO.BinaryWriter)
  name: SerializeWithoutType(BinaryWriter)
  href: api/Neo.Network.P2P.Payloads.Conditions.BooleanCondition.html#Neo_Network_P2P_Payloads_Conditions_BooleanCondition_SerializeWithoutType_System_IO_BinaryWriter_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.BooleanCondition.SerializeWithoutType(System.IO.BinaryWriter)
  fullName: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.SerializeWithoutType(System.IO.BinaryWriter)
  nameWithType: BooleanCondition.SerializeWithoutType(BinaryWriter)
- uid: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.SerializeWithoutType*
  name: SerializeWithoutType
  href: api/Neo.Network.P2P.Payloads.Conditions.BooleanCondition.html#Neo_Network_P2P_Payloads_Conditions_BooleanCondition_SerializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.BooleanCondition.SerializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.SerializeWithoutType
  nameWithType: BooleanCondition.SerializeWithoutType
- uid: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.Conditions.BooleanCondition.html#Neo_Network_P2P_Payloads_Conditions_BooleanCondition_Size
  commentId: P:Neo.Network.P2P.Payloads.Conditions.BooleanCondition.Size
  fullName: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.Size
  nameWithType: BooleanCondition.Size
- uid: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.Conditions.BooleanCondition.html#Neo_Network_P2P_Payloads_Conditions_BooleanCondition_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.BooleanCondition.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.Size
  nameWithType: BooleanCondition.Size
- uid: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.ToJson
  name: ToJson()
  href: api/Neo.Network.P2P.Payloads.Conditions.BooleanCondition.html#Neo_Network_P2P_Payloads_Conditions_BooleanCondition_ToJson
  commentId: M:Neo.Network.P2P.Payloads.Conditions.BooleanCondition.ToJson
  fullName: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.ToJson()
  nameWithType: BooleanCondition.ToJson()
- uid: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.ToJson*
  name: ToJson
  href: api/Neo.Network.P2P.Payloads.Conditions.BooleanCondition.html#Neo_Network_P2P_Payloads_Conditions_BooleanCondition_ToJson_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.BooleanCondition.ToJson
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.ToJson
  nameWithType: BooleanCondition.ToJson
- uid: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.ToStackItem(Neo.VM.ReferenceCounter)
  name: ToStackItem(ReferenceCounter)
  href: api/Neo.Network.P2P.Payloads.Conditions.BooleanCondition.html#Neo_Network_P2P_Payloads_Conditions_BooleanCondition_ToStackItem_Neo_VM_ReferenceCounter_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.BooleanCondition.ToStackItem(Neo.VM.ReferenceCounter)
  fullName: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.ToStackItem(Neo.VM.ReferenceCounter)
  nameWithType: BooleanCondition.ToStackItem(ReferenceCounter)
- uid: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.ToStackItem*
  name: ToStackItem
  href: api/Neo.Network.P2P.Payloads.Conditions.BooleanCondition.html#Neo_Network_P2P_Payloads_Conditions_BooleanCondition_ToStackItem_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.BooleanCondition.ToStackItem
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.ToStackItem
  nameWithType: BooleanCondition.ToStackItem
- uid: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.Type
  name: Type
  href: api/Neo.Network.P2P.Payloads.Conditions.BooleanCondition.html#Neo_Network_P2P_Payloads_Conditions_BooleanCondition_Type
  commentId: P:Neo.Network.P2P.Payloads.Conditions.BooleanCondition.Type
  fullName: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.Type
  nameWithType: BooleanCondition.Type
- uid: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.Type*
  name: Type
  href: api/Neo.Network.P2P.Payloads.Conditions.BooleanCondition.html#Neo_Network_P2P_Payloads_Conditions_BooleanCondition_Type_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.BooleanCondition.Type
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.BooleanCondition.Type
  nameWithType: BooleanCondition.Type
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition
  name: CalledByContractCondition
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.html
  commentId: T:Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition
  nameWithType: CalledByContractCondition
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.DeserializeWithoutType(Neo.IO.MemoryReader@,System.Int32)
  name: DeserializeWithoutType(ref MemoryReader, int)
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByContractCondition_DeserializeWithoutType_Neo_IO_MemoryReader__System_Int32_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.DeserializeWithoutType(Neo.IO.MemoryReader@,System.Int32)
  name.vb: DeserializeWithoutType(MemoryReader, Integer)
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.DeserializeWithoutType(ref Neo.IO.MemoryReader, int)
  fullName.vb: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.DeserializeWithoutType(Neo.IO.MemoryReader, Integer)
  nameWithType: CalledByContractCondition.DeserializeWithoutType(ref MemoryReader, int)
  nameWithType.vb: CalledByContractCondition.DeserializeWithoutType(MemoryReader, Integer)
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.DeserializeWithoutType*
  name: DeserializeWithoutType
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByContractCondition_DeserializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.DeserializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.DeserializeWithoutType
  nameWithType: CalledByContractCondition.DeserializeWithoutType
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.Hash
  name: Hash
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByContractCondition_Hash
  commentId: F:Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.Hash
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.Hash
  nameWithType: CalledByContractCondition.Hash
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.Match(Neo.SmartContract.ApplicationEngine)
  name: Match(ApplicationEngine)
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByContractCondition_Match_Neo_SmartContract_ApplicationEngine_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.Match(Neo.SmartContract.ApplicationEngine)
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.Match(Neo.SmartContract.ApplicationEngine)
  nameWithType: CalledByContractCondition.Match(ApplicationEngine)
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.Match*
  name: Match
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByContractCondition_Match_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.Match
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.Match
  nameWithType: CalledByContractCondition.Match
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.SerializeWithoutType(System.IO.BinaryWriter)
  name: SerializeWithoutType(BinaryWriter)
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByContractCondition_SerializeWithoutType_System_IO_BinaryWriter_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.SerializeWithoutType(System.IO.BinaryWriter)
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.SerializeWithoutType(System.IO.BinaryWriter)
  nameWithType: CalledByContractCondition.SerializeWithoutType(BinaryWriter)
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.SerializeWithoutType*
  name: SerializeWithoutType
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByContractCondition_SerializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.SerializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.SerializeWithoutType
  nameWithType: CalledByContractCondition.SerializeWithoutType
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByContractCondition_Size
  commentId: P:Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.Size
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.Size
  nameWithType: CalledByContractCondition.Size
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByContractCondition_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.Size
  nameWithType: CalledByContractCondition.Size
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.ToJson
  name: ToJson()
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByContractCondition_ToJson
  commentId: M:Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.ToJson
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.ToJson()
  nameWithType: CalledByContractCondition.ToJson()
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.ToJson*
  name: ToJson
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByContractCondition_ToJson_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.ToJson
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.ToJson
  nameWithType: CalledByContractCondition.ToJson
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.ToStackItem(Neo.VM.ReferenceCounter)
  name: ToStackItem(ReferenceCounter)
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByContractCondition_ToStackItem_Neo_VM_ReferenceCounter_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.ToStackItem(Neo.VM.ReferenceCounter)
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.ToStackItem(Neo.VM.ReferenceCounter)
  nameWithType: CalledByContractCondition.ToStackItem(ReferenceCounter)
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.ToStackItem*
  name: ToStackItem
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByContractCondition_ToStackItem_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.ToStackItem
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.ToStackItem
  nameWithType: CalledByContractCondition.ToStackItem
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.Type
  name: Type
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByContractCondition_Type
  commentId: P:Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.Type
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.Type
  nameWithType: CalledByContractCondition.Type
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.Type*
  name: Type
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByContractCondition_Type_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.Type
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByContractCondition.Type
  nameWithType: CalledByContractCondition.Type
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition
  name: CalledByEntryCondition
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.html
  commentId: T:Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition
  nameWithType: CalledByEntryCondition
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.DeserializeWithoutType(Neo.IO.MemoryReader@,System.Int32)
  name: DeserializeWithoutType(ref MemoryReader, int)
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByEntryCondition_DeserializeWithoutType_Neo_IO_MemoryReader__System_Int32_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.DeserializeWithoutType(Neo.IO.MemoryReader@,System.Int32)
  name.vb: DeserializeWithoutType(MemoryReader, Integer)
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.DeserializeWithoutType(ref Neo.IO.MemoryReader, int)
  fullName.vb: Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.DeserializeWithoutType(Neo.IO.MemoryReader, Integer)
  nameWithType: CalledByEntryCondition.DeserializeWithoutType(ref MemoryReader, int)
  nameWithType.vb: CalledByEntryCondition.DeserializeWithoutType(MemoryReader, Integer)
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.DeserializeWithoutType*
  name: DeserializeWithoutType
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByEntryCondition_DeserializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.DeserializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.DeserializeWithoutType
  nameWithType: CalledByEntryCondition.DeserializeWithoutType
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.Match(Neo.SmartContract.ApplicationEngine)
  name: Match(ApplicationEngine)
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByEntryCondition_Match_Neo_SmartContract_ApplicationEngine_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.Match(Neo.SmartContract.ApplicationEngine)
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.Match(Neo.SmartContract.ApplicationEngine)
  nameWithType: CalledByEntryCondition.Match(ApplicationEngine)
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.Match*
  name: Match
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByEntryCondition_Match_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.Match
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.Match
  nameWithType: CalledByEntryCondition.Match
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.SerializeWithoutType(System.IO.BinaryWriter)
  name: SerializeWithoutType(BinaryWriter)
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByEntryCondition_SerializeWithoutType_System_IO_BinaryWriter_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.SerializeWithoutType(System.IO.BinaryWriter)
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.SerializeWithoutType(System.IO.BinaryWriter)
  nameWithType: CalledByEntryCondition.SerializeWithoutType(BinaryWriter)
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.SerializeWithoutType*
  name: SerializeWithoutType
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByEntryCondition_SerializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.SerializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.SerializeWithoutType
  nameWithType: CalledByEntryCondition.SerializeWithoutType
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.Type
  name: Type
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByEntryCondition_Type
  commentId: P:Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.Type
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.Type
  nameWithType: CalledByEntryCondition.Type
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.Type*
  name: Type
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByEntryCondition_Type_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.Type
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByEntryCondition.Type
  nameWithType: CalledByEntryCondition.Type
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition
  name: CalledByGroupCondition
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.html
  commentId: T:Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition
  nameWithType: CalledByGroupCondition
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.DeserializeWithoutType(Neo.IO.MemoryReader@,System.Int32)
  name: DeserializeWithoutType(ref MemoryReader, int)
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByGroupCondition_DeserializeWithoutType_Neo_IO_MemoryReader__System_Int32_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.DeserializeWithoutType(Neo.IO.MemoryReader@,System.Int32)
  name.vb: DeserializeWithoutType(MemoryReader, Integer)
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.DeserializeWithoutType(ref Neo.IO.MemoryReader, int)
  fullName.vb: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.DeserializeWithoutType(Neo.IO.MemoryReader, Integer)
  nameWithType: CalledByGroupCondition.DeserializeWithoutType(ref MemoryReader, int)
  nameWithType.vb: CalledByGroupCondition.DeserializeWithoutType(MemoryReader, Integer)
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.DeserializeWithoutType*
  name: DeserializeWithoutType
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByGroupCondition_DeserializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.DeserializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.DeserializeWithoutType
  nameWithType: CalledByGroupCondition.DeserializeWithoutType
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.Group
  name: Group
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByGroupCondition_Group
  commentId: F:Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.Group
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.Group
  nameWithType: CalledByGroupCondition.Group
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.Match(Neo.SmartContract.ApplicationEngine)
  name: Match(ApplicationEngine)
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByGroupCondition_Match_Neo_SmartContract_ApplicationEngine_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.Match(Neo.SmartContract.ApplicationEngine)
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.Match(Neo.SmartContract.ApplicationEngine)
  nameWithType: CalledByGroupCondition.Match(ApplicationEngine)
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.Match*
  name: Match
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByGroupCondition_Match_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.Match
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.Match
  nameWithType: CalledByGroupCondition.Match
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.SerializeWithoutType(System.IO.BinaryWriter)
  name: SerializeWithoutType(BinaryWriter)
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByGroupCondition_SerializeWithoutType_System_IO_BinaryWriter_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.SerializeWithoutType(System.IO.BinaryWriter)
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.SerializeWithoutType(System.IO.BinaryWriter)
  nameWithType: CalledByGroupCondition.SerializeWithoutType(BinaryWriter)
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.SerializeWithoutType*
  name: SerializeWithoutType
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByGroupCondition_SerializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.SerializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.SerializeWithoutType
  nameWithType: CalledByGroupCondition.SerializeWithoutType
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByGroupCondition_Size
  commentId: P:Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.Size
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.Size
  nameWithType: CalledByGroupCondition.Size
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByGroupCondition_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.Size
  nameWithType: CalledByGroupCondition.Size
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.ToJson
  name: ToJson()
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByGroupCondition_ToJson
  commentId: M:Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.ToJson
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.ToJson()
  nameWithType: CalledByGroupCondition.ToJson()
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.ToJson*
  name: ToJson
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByGroupCondition_ToJson_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.ToJson
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.ToJson
  nameWithType: CalledByGroupCondition.ToJson
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.ToStackItem(Neo.VM.ReferenceCounter)
  name: ToStackItem(ReferenceCounter)
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByGroupCondition_ToStackItem_Neo_VM_ReferenceCounter_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.ToStackItem(Neo.VM.ReferenceCounter)
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.ToStackItem(Neo.VM.ReferenceCounter)
  nameWithType: CalledByGroupCondition.ToStackItem(ReferenceCounter)
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.ToStackItem*
  name: ToStackItem
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByGroupCondition_ToStackItem_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.ToStackItem
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.ToStackItem
  nameWithType: CalledByGroupCondition.ToStackItem
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.Type
  name: Type
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByGroupCondition_Type
  commentId: P:Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.Type
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.Type
  nameWithType: CalledByGroupCondition.Type
- uid: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.Type*
  name: Type
  href: api/Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.html#Neo_Network_P2P_Payloads_Conditions_CalledByGroupCondition_Type_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.Type
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.CalledByGroupCondition.Type
  nameWithType: CalledByGroupCondition.Type
- uid: Neo.Network.P2P.Payloads.Conditions.GroupCondition
  name: GroupCondition
  href: api/Neo.Network.P2P.Payloads.Conditions.GroupCondition.html
  commentId: T:Neo.Network.P2P.Payloads.Conditions.GroupCondition
  fullName: Neo.Network.P2P.Payloads.Conditions.GroupCondition
  nameWithType: GroupCondition
- uid: Neo.Network.P2P.Payloads.Conditions.GroupCondition.DeserializeWithoutType(Neo.IO.MemoryReader@,System.Int32)
  name: DeserializeWithoutType(ref MemoryReader, int)
  href: api/Neo.Network.P2P.Payloads.Conditions.GroupCondition.html#Neo_Network_P2P_Payloads_Conditions_GroupCondition_DeserializeWithoutType_Neo_IO_MemoryReader__System_Int32_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.GroupCondition.DeserializeWithoutType(Neo.IO.MemoryReader@,System.Int32)
  name.vb: DeserializeWithoutType(MemoryReader, Integer)
  fullName: Neo.Network.P2P.Payloads.Conditions.GroupCondition.DeserializeWithoutType(ref Neo.IO.MemoryReader, int)
  fullName.vb: Neo.Network.P2P.Payloads.Conditions.GroupCondition.DeserializeWithoutType(Neo.IO.MemoryReader, Integer)
  nameWithType: GroupCondition.DeserializeWithoutType(ref MemoryReader, int)
  nameWithType.vb: GroupCondition.DeserializeWithoutType(MemoryReader, Integer)
- uid: Neo.Network.P2P.Payloads.Conditions.GroupCondition.DeserializeWithoutType*
  name: DeserializeWithoutType
  href: api/Neo.Network.P2P.Payloads.Conditions.GroupCondition.html#Neo_Network_P2P_Payloads_Conditions_GroupCondition_DeserializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.GroupCondition.DeserializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.GroupCondition.DeserializeWithoutType
  nameWithType: GroupCondition.DeserializeWithoutType
- uid: Neo.Network.P2P.Payloads.Conditions.GroupCondition.Group
  name: Group
  href: api/Neo.Network.P2P.Payloads.Conditions.GroupCondition.html#Neo_Network_P2P_Payloads_Conditions_GroupCondition_Group
  commentId: F:Neo.Network.P2P.Payloads.Conditions.GroupCondition.Group
  fullName: Neo.Network.P2P.Payloads.Conditions.GroupCondition.Group
  nameWithType: GroupCondition.Group
- uid: Neo.Network.P2P.Payloads.Conditions.GroupCondition.Match(Neo.SmartContract.ApplicationEngine)
  name: Match(ApplicationEngine)
  href: api/Neo.Network.P2P.Payloads.Conditions.GroupCondition.html#Neo_Network_P2P_Payloads_Conditions_GroupCondition_Match_Neo_SmartContract_ApplicationEngine_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.GroupCondition.Match(Neo.SmartContract.ApplicationEngine)
  fullName: Neo.Network.P2P.Payloads.Conditions.GroupCondition.Match(Neo.SmartContract.ApplicationEngine)
  nameWithType: GroupCondition.Match(ApplicationEngine)
- uid: Neo.Network.P2P.Payloads.Conditions.GroupCondition.Match*
  name: Match
  href: api/Neo.Network.P2P.Payloads.Conditions.GroupCondition.html#Neo_Network_P2P_Payloads_Conditions_GroupCondition_Match_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.GroupCondition.Match
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.GroupCondition.Match
  nameWithType: GroupCondition.Match
- uid: Neo.Network.P2P.Payloads.Conditions.GroupCondition.SerializeWithoutType(System.IO.BinaryWriter)
  name: SerializeWithoutType(BinaryWriter)
  href: api/Neo.Network.P2P.Payloads.Conditions.GroupCondition.html#Neo_Network_P2P_Payloads_Conditions_GroupCondition_SerializeWithoutType_System_IO_BinaryWriter_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.GroupCondition.SerializeWithoutType(System.IO.BinaryWriter)
  fullName: Neo.Network.P2P.Payloads.Conditions.GroupCondition.SerializeWithoutType(System.IO.BinaryWriter)
  nameWithType: GroupCondition.SerializeWithoutType(BinaryWriter)
- uid: Neo.Network.P2P.Payloads.Conditions.GroupCondition.SerializeWithoutType*
  name: SerializeWithoutType
  href: api/Neo.Network.P2P.Payloads.Conditions.GroupCondition.html#Neo_Network_P2P_Payloads_Conditions_GroupCondition_SerializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.GroupCondition.SerializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.GroupCondition.SerializeWithoutType
  nameWithType: GroupCondition.SerializeWithoutType
- uid: Neo.Network.P2P.Payloads.Conditions.GroupCondition.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.Conditions.GroupCondition.html#Neo_Network_P2P_Payloads_Conditions_GroupCondition_Size
  commentId: P:Neo.Network.P2P.Payloads.Conditions.GroupCondition.Size
  fullName: Neo.Network.P2P.Payloads.Conditions.GroupCondition.Size
  nameWithType: GroupCondition.Size
- uid: Neo.Network.P2P.Payloads.Conditions.GroupCondition.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.Conditions.GroupCondition.html#Neo_Network_P2P_Payloads_Conditions_GroupCondition_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.GroupCondition.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.GroupCondition.Size
  nameWithType: GroupCondition.Size
- uid: Neo.Network.P2P.Payloads.Conditions.GroupCondition.ToJson
  name: ToJson()
  href: api/Neo.Network.P2P.Payloads.Conditions.GroupCondition.html#Neo_Network_P2P_Payloads_Conditions_GroupCondition_ToJson
  commentId: M:Neo.Network.P2P.Payloads.Conditions.GroupCondition.ToJson
  fullName: Neo.Network.P2P.Payloads.Conditions.GroupCondition.ToJson()
  nameWithType: GroupCondition.ToJson()
- uid: Neo.Network.P2P.Payloads.Conditions.GroupCondition.ToJson*
  name: ToJson
  href: api/Neo.Network.P2P.Payloads.Conditions.GroupCondition.html#Neo_Network_P2P_Payloads_Conditions_GroupCondition_ToJson_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.GroupCondition.ToJson
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.GroupCondition.ToJson
  nameWithType: GroupCondition.ToJson
- uid: Neo.Network.P2P.Payloads.Conditions.GroupCondition.ToStackItem(Neo.VM.ReferenceCounter)
  name: ToStackItem(ReferenceCounter)
  href: api/Neo.Network.P2P.Payloads.Conditions.GroupCondition.html#Neo_Network_P2P_Payloads_Conditions_GroupCondition_ToStackItem_Neo_VM_ReferenceCounter_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.GroupCondition.ToStackItem(Neo.VM.ReferenceCounter)
  fullName: Neo.Network.P2P.Payloads.Conditions.GroupCondition.ToStackItem(Neo.VM.ReferenceCounter)
  nameWithType: GroupCondition.ToStackItem(ReferenceCounter)
- uid: Neo.Network.P2P.Payloads.Conditions.GroupCondition.ToStackItem*
  name: ToStackItem
  href: api/Neo.Network.P2P.Payloads.Conditions.GroupCondition.html#Neo_Network_P2P_Payloads_Conditions_GroupCondition_ToStackItem_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.GroupCondition.ToStackItem
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.GroupCondition.ToStackItem
  nameWithType: GroupCondition.ToStackItem
- uid: Neo.Network.P2P.Payloads.Conditions.GroupCondition.Type
  name: Type
  href: api/Neo.Network.P2P.Payloads.Conditions.GroupCondition.html#Neo_Network_P2P_Payloads_Conditions_GroupCondition_Type
  commentId: P:Neo.Network.P2P.Payloads.Conditions.GroupCondition.Type
  fullName: Neo.Network.P2P.Payloads.Conditions.GroupCondition.Type
  nameWithType: GroupCondition.Type
- uid: Neo.Network.P2P.Payloads.Conditions.GroupCondition.Type*
  name: Type
  href: api/Neo.Network.P2P.Payloads.Conditions.GroupCondition.html#Neo_Network_P2P_Payloads_Conditions_GroupCondition_Type_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.GroupCondition.Type
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.GroupCondition.Type
  nameWithType: GroupCondition.Type
- uid: Neo.Network.P2P.Payloads.Conditions.NotCondition
  name: NotCondition
  href: api/Neo.Network.P2P.Payloads.Conditions.NotCondition.html
  commentId: T:Neo.Network.P2P.Payloads.Conditions.NotCondition
  fullName: Neo.Network.P2P.Payloads.Conditions.NotCondition
  nameWithType: NotCondition
- uid: Neo.Network.P2P.Payloads.Conditions.NotCondition.DeserializeWithoutType(Neo.IO.MemoryReader@,System.Int32)
  name: DeserializeWithoutType(ref MemoryReader, int)
  href: api/Neo.Network.P2P.Payloads.Conditions.NotCondition.html#Neo_Network_P2P_Payloads_Conditions_NotCondition_DeserializeWithoutType_Neo_IO_MemoryReader__System_Int32_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.NotCondition.DeserializeWithoutType(Neo.IO.MemoryReader@,System.Int32)
  name.vb: DeserializeWithoutType(MemoryReader, Integer)
  fullName: Neo.Network.P2P.Payloads.Conditions.NotCondition.DeserializeWithoutType(ref Neo.IO.MemoryReader, int)
  fullName.vb: Neo.Network.P2P.Payloads.Conditions.NotCondition.DeserializeWithoutType(Neo.IO.MemoryReader, Integer)
  nameWithType: NotCondition.DeserializeWithoutType(ref MemoryReader, int)
  nameWithType.vb: NotCondition.DeserializeWithoutType(MemoryReader, Integer)
- uid: Neo.Network.P2P.Payloads.Conditions.NotCondition.DeserializeWithoutType*
  name: DeserializeWithoutType
  href: api/Neo.Network.P2P.Payloads.Conditions.NotCondition.html#Neo_Network_P2P_Payloads_Conditions_NotCondition_DeserializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.NotCondition.DeserializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.NotCondition.DeserializeWithoutType
  nameWithType: NotCondition.DeserializeWithoutType
- uid: Neo.Network.P2P.Payloads.Conditions.NotCondition.Expression
  name: Expression
  href: api/Neo.Network.P2P.Payloads.Conditions.NotCondition.html#Neo_Network_P2P_Payloads_Conditions_NotCondition_Expression
  commentId: F:Neo.Network.P2P.Payloads.Conditions.NotCondition.Expression
  fullName: Neo.Network.P2P.Payloads.Conditions.NotCondition.Expression
  nameWithType: NotCondition.Expression
- uid: Neo.Network.P2P.Payloads.Conditions.NotCondition.Match(Neo.SmartContract.ApplicationEngine)
  name: Match(ApplicationEngine)
  href: api/Neo.Network.P2P.Payloads.Conditions.NotCondition.html#Neo_Network_P2P_Payloads_Conditions_NotCondition_Match_Neo_SmartContract_ApplicationEngine_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.NotCondition.Match(Neo.SmartContract.ApplicationEngine)
  fullName: Neo.Network.P2P.Payloads.Conditions.NotCondition.Match(Neo.SmartContract.ApplicationEngine)
  nameWithType: NotCondition.Match(ApplicationEngine)
- uid: Neo.Network.P2P.Payloads.Conditions.NotCondition.Match*
  name: Match
  href: api/Neo.Network.P2P.Payloads.Conditions.NotCondition.html#Neo_Network_P2P_Payloads_Conditions_NotCondition_Match_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.NotCondition.Match
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.NotCondition.Match
  nameWithType: NotCondition.Match
- uid: Neo.Network.P2P.Payloads.Conditions.NotCondition.SerializeWithoutType(System.IO.BinaryWriter)
  name: SerializeWithoutType(BinaryWriter)
  href: api/Neo.Network.P2P.Payloads.Conditions.NotCondition.html#Neo_Network_P2P_Payloads_Conditions_NotCondition_SerializeWithoutType_System_IO_BinaryWriter_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.NotCondition.SerializeWithoutType(System.IO.BinaryWriter)
  fullName: Neo.Network.P2P.Payloads.Conditions.NotCondition.SerializeWithoutType(System.IO.BinaryWriter)
  nameWithType: NotCondition.SerializeWithoutType(BinaryWriter)
- uid: Neo.Network.P2P.Payloads.Conditions.NotCondition.SerializeWithoutType*
  name: SerializeWithoutType
  href: api/Neo.Network.P2P.Payloads.Conditions.NotCondition.html#Neo_Network_P2P_Payloads_Conditions_NotCondition_SerializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.NotCondition.SerializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.NotCondition.SerializeWithoutType
  nameWithType: NotCondition.SerializeWithoutType
- uid: Neo.Network.P2P.Payloads.Conditions.NotCondition.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.Conditions.NotCondition.html#Neo_Network_P2P_Payloads_Conditions_NotCondition_Size
  commentId: P:Neo.Network.P2P.Payloads.Conditions.NotCondition.Size
  fullName: Neo.Network.P2P.Payloads.Conditions.NotCondition.Size
  nameWithType: NotCondition.Size
- uid: Neo.Network.P2P.Payloads.Conditions.NotCondition.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.Conditions.NotCondition.html#Neo_Network_P2P_Payloads_Conditions_NotCondition_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.NotCondition.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.NotCondition.Size
  nameWithType: NotCondition.Size
- uid: Neo.Network.P2P.Payloads.Conditions.NotCondition.ToJson
  name: ToJson()
  href: api/Neo.Network.P2P.Payloads.Conditions.NotCondition.html#Neo_Network_P2P_Payloads_Conditions_NotCondition_ToJson
  commentId: M:Neo.Network.P2P.Payloads.Conditions.NotCondition.ToJson
  fullName: Neo.Network.P2P.Payloads.Conditions.NotCondition.ToJson()
  nameWithType: NotCondition.ToJson()
- uid: Neo.Network.P2P.Payloads.Conditions.NotCondition.ToJson*
  name: ToJson
  href: api/Neo.Network.P2P.Payloads.Conditions.NotCondition.html#Neo_Network_P2P_Payloads_Conditions_NotCondition_ToJson_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.NotCondition.ToJson
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.NotCondition.ToJson
  nameWithType: NotCondition.ToJson
- uid: Neo.Network.P2P.Payloads.Conditions.NotCondition.ToStackItem(Neo.VM.ReferenceCounter)
  name: ToStackItem(ReferenceCounter)
  href: api/Neo.Network.P2P.Payloads.Conditions.NotCondition.html#Neo_Network_P2P_Payloads_Conditions_NotCondition_ToStackItem_Neo_VM_ReferenceCounter_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.NotCondition.ToStackItem(Neo.VM.ReferenceCounter)
  fullName: Neo.Network.P2P.Payloads.Conditions.NotCondition.ToStackItem(Neo.VM.ReferenceCounter)
  nameWithType: NotCondition.ToStackItem(ReferenceCounter)
- uid: Neo.Network.P2P.Payloads.Conditions.NotCondition.ToStackItem*
  name: ToStackItem
  href: api/Neo.Network.P2P.Payloads.Conditions.NotCondition.html#Neo_Network_P2P_Payloads_Conditions_NotCondition_ToStackItem_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.NotCondition.ToStackItem
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.NotCondition.ToStackItem
  nameWithType: NotCondition.ToStackItem
- uid: Neo.Network.P2P.Payloads.Conditions.NotCondition.Type
  name: Type
  href: api/Neo.Network.P2P.Payloads.Conditions.NotCondition.html#Neo_Network_P2P_Payloads_Conditions_NotCondition_Type
  commentId: P:Neo.Network.P2P.Payloads.Conditions.NotCondition.Type
  fullName: Neo.Network.P2P.Payloads.Conditions.NotCondition.Type
  nameWithType: NotCondition.Type
- uid: Neo.Network.P2P.Payloads.Conditions.NotCondition.Type*
  name: Type
  href: api/Neo.Network.P2P.Payloads.Conditions.NotCondition.html#Neo_Network_P2P_Payloads_Conditions_NotCondition_Type_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.NotCondition.Type
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.NotCondition.Type
  nameWithType: NotCondition.Type
- uid: Neo.Network.P2P.Payloads.Conditions.OrCondition
  name: OrCondition
  href: api/Neo.Network.P2P.Payloads.Conditions.OrCondition.html
  commentId: T:Neo.Network.P2P.Payloads.Conditions.OrCondition
  fullName: Neo.Network.P2P.Payloads.Conditions.OrCondition
  nameWithType: OrCondition
- uid: Neo.Network.P2P.Payloads.Conditions.OrCondition.DeserializeWithoutType(Neo.IO.MemoryReader@,System.Int32)
  name: DeserializeWithoutType(ref MemoryReader, int)
  href: api/Neo.Network.P2P.Payloads.Conditions.OrCondition.html#Neo_Network_P2P_Payloads_Conditions_OrCondition_DeserializeWithoutType_Neo_IO_MemoryReader__System_Int32_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.OrCondition.DeserializeWithoutType(Neo.IO.MemoryReader@,System.Int32)
  name.vb: DeserializeWithoutType(MemoryReader, Integer)
  fullName: Neo.Network.P2P.Payloads.Conditions.OrCondition.DeserializeWithoutType(ref Neo.IO.MemoryReader, int)
  fullName.vb: Neo.Network.P2P.Payloads.Conditions.OrCondition.DeserializeWithoutType(Neo.IO.MemoryReader, Integer)
  nameWithType: OrCondition.DeserializeWithoutType(ref MemoryReader, int)
  nameWithType.vb: OrCondition.DeserializeWithoutType(MemoryReader, Integer)
- uid: Neo.Network.P2P.Payloads.Conditions.OrCondition.DeserializeWithoutType*
  name: DeserializeWithoutType
  href: api/Neo.Network.P2P.Payloads.Conditions.OrCondition.html#Neo_Network_P2P_Payloads_Conditions_OrCondition_DeserializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.OrCondition.DeserializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.OrCondition.DeserializeWithoutType
  nameWithType: OrCondition.DeserializeWithoutType
- uid: Neo.Network.P2P.Payloads.Conditions.OrCondition.Expressions
  name: Expressions
  href: api/Neo.Network.P2P.Payloads.Conditions.OrCondition.html#Neo_Network_P2P_Payloads_Conditions_OrCondition_Expressions
  commentId: F:Neo.Network.P2P.Payloads.Conditions.OrCondition.Expressions
  fullName: Neo.Network.P2P.Payloads.Conditions.OrCondition.Expressions
  nameWithType: OrCondition.Expressions
- uid: Neo.Network.P2P.Payloads.Conditions.OrCondition.Match(Neo.SmartContract.ApplicationEngine)
  name: Match(ApplicationEngine)
  href: api/Neo.Network.P2P.Payloads.Conditions.OrCondition.html#Neo_Network_P2P_Payloads_Conditions_OrCondition_Match_Neo_SmartContract_ApplicationEngine_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.OrCondition.Match(Neo.SmartContract.ApplicationEngine)
  fullName: Neo.Network.P2P.Payloads.Conditions.OrCondition.Match(Neo.SmartContract.ApplicationEngine)
  nameWithType: OrCondition.Match(ApplicationEngine)
- uid: Neo.Network.P2P.Payloads.Conditions.OrCondition.Match*
  name: Match
  href: api/Neo.Network.P2P.Payloads.Conditions.OrCondition.html#Neo_Network_P2P_Payloads_Conditions_OrCondition_Match_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.OrCondition.Match
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.OrCondition.Match
  nameWithType: OrCondition.Match
- uid: Neo.Network.P2P.Payloads.Conditions.OrCondition.SerializeWithoutType(System.IO.BinaryWriter)
  name: SerializeWithoutType(BinaryWriter)
  href: api/Neo.Network.P2P.Payloads.Conditions.OrCondition.html#Neo_Network_P2P_Payloads_Conditions_OrCondition_SerializeWithoutType_System_IO_BinaryWriter_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.OrCondition.SerializeWithoutType(System.IO.BinaryWriter)
  fullName: Neo.Network.P2P.Payloads.Conditions.OrCondition.SerializeWithoutType(System.IO.BinaryWriter)
  nameWithType: OrCondition.SerializeWithoutType(BinaryWriter)
- uid: Neo.Network.P2P.Payloads.Conditions.OrCondition.SerializeWithoutType*
  name: SerializeWithoutType
  href: api/Neo.Network.P2P.Payloads.Conditions.OrCondition.html#Neo_Network_P2P_Payloads_Conditions_OrCondition_SerializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.OrCondition.SerializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.OrCondition.SerializeWithoutType
  nameWithType: OrCondition.SerializeWithoutType
- uid: Neo.Network.P2P.Payloads.Conditions.OrCondition.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.Conditions.OrCondition.html#Neo_Network_P2P_Payloads_Conditions_OrCondition_Size
  commentId: P:Neo.Network.P2P.Payloads.Conditions.OrCondition.Size
  fullName: Neo.Network.P2P.Payloads.Conditions.OrCondition.Size
  nameWithType: OrCondition.Size
- uid: Neo.Network.P2P.Payloads.Conditions.OrCondition.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.Conditions.OrCondition.html#Neo_Network_P2P_Payloads_Conditions_OrCondition_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.OrCondition.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.OrCondition.Size
  nameWithType: OrCondition.Size
- uid: Neo.Network.P2P.Payloads.Conditions.OrCondition.ToJson
  name: ToJson()
  href: api/Neo.Network.P2P.Payloads.Conditions.OrCondition.html#Neo_Network_P2P_Payloads_Conditions_OrCondition_ToJson
  commentId: M:Neo.Network.P2P.Payloads.Conditions.OrCondition.ToJson
  fullName: Neo.Network.P2P.Payloads.Conditions.OrCondition.ToJson()
  nameWithType: OrCondition.ToJson()
- uid: Neo.Network.P2P.Payloads.Conditions.OrCondition.ToJson*
  name: ToJson
  href: api/Neo.Network.P2P.Payloads.Conditions.OrCondition.html#Neo_Network_P2P_Payloads_Conditions_OrCondition_ToJson_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.OrCondition.ToJson
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.OrCondition.ToJson
  nameWithType: OrCondition.ToJson
- uid: Neo.Network.P2P.Payloads.Conditions.OrCondition.ToStackItem(Neo.VM.ReferenceCounter)
  name: ToStackItem(ReferenceCounter)
  href: api/Neo.Network.P2P.Payloads.Conditions.OrCondition.html#Neo_Network_P2P_Payloads_Conditions_OrCondition_ToStackItem_Neo_VM_ReferenceCounter_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.OrCondition.ToStackItem(Neo.VM.ReferenceCounter)
  fullName: Neo.Network.P2P.Payloads.Conditions.OrCondition.ToStackItem(Neo.VM.ReferenceCounter)
  nameWithType: OrCondition.ToStackItem(ReferenceCounter)
- uid: Neo.Network.P2P.Payloads.Conditions.OrCondition.ToStackItem*
  name: ToStackItem
  href: api/Neo.Network.P2P.Payloads.Conditions.OrCondition.html#Neo_Network_P2P_Payloads_Conditions_OrCondition_ToStackItem_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.OrCondition.ToStackItem
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.OrCondition.ToStackItem
  nameWithType: OrCondition.ToStackItem
- uid: Neo.Network.P2P.Payloads.Conditions.OrCondition.Type
  name: Type
  href: api/Neo.Network.P2P.Payloads.Conditions.OrCondition.html#Neo_Network_P2P_Payloads_Conditions_OrCondition_Type
  commentId: P:Neo.Network.P2P.Payloads.Conditions.OrCondition.Type
  fullName: Neo.Network.P2P.Payloads.Conditions.OrCondition.Type
  nameWithType: OrCondition.Type
- uid: Neo.Network.P2P.Payloads.Conditions.OrCondition.Type*
  name: Type
  href: api/Neo.Network.P2P.Payloads.Conditions.OrCondition.html#Neo_Network_P2P_Payloads_Conditions_OrCondition_Type_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.OrCondition.Type
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.OrCondition.Type
  nameWithType: OrCondition.Type
- uid: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition
  name: ScriptHashCondition
  href: api/Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.html
  commentId: T:Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition
  fullName: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition
  nameWithType: ScriptHashCondition
- uid: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.DeserializeWithoutType(Neo.IO.MemoryReader@,System.Int32)
  name: DeserializeWithoutType(ref MemoryReader, int)
  href: api/Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.html#Neo_Network_P2P_Payloads_Conditions_ScriptHashCondition_DeserializeWithoutType_Neo_IO_MemoryReader__System_Int32_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.DeserializeWithoutType(Neo.IO.MemoryReader@,System.Int32)
  name.vb: DeserializeWithoutType(MemoryReader, Integer)
  fullName: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.DeserializeWithoutType(ref Neo.IO.MemoryReader, int)
  fullName.vb: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.DeserializeWithoutType(Neo.IO.MemoryReader, Integer)
  nameWithType: ScriptHashCondition.DeserializeWithoutType(ref MemoryReader, int)
  nameWithType.vb: ScriptHashCondition.DeserializeWithoutType(MemoryReader, Integer)
- uid: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.DeserializeWithoutType*
  name: DeserializeWithoutType
  href: api/Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.html#Neo_Network_P2P_Payloads_Conditions_ScriptHashCondition_DeserializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.DeserializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.DeserializeWithoutType
  nameWithType: ScriptHashCondition.DeserializeWithoutType
- uid: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.Hash
  name: Hash
  href: api/Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.html#Neo_Network_P2P_Payloads_Conditions_ScriptHashCondition_Hash
  commentId: F:Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.Hash
  fullName: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.Hash
  nameWithType: ScriptHashCondition.Hash
- uid: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.Match(Neo.SmartContract.ApplicationEngine)
  name: Match(ApplicationEngine)
  href: api/Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.html#Neo_Network_P2P_Payloads_Conditions_ScriptHashCondition_Match_Neo_SmartContract_ApplicationEngine_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.Match(Neo.SmartContract.ApplicationEngine)
  fullName: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.Match(Neo.SmartContract.ApplicationEngine)
  nameWithType: ScriptHashCondition.Match(ApplicationEngine)
- uid: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.Match*
  name: Match
  href: api/Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.html#Neo_Network_P2P_Payloads_Conditions_ScriptHashCondition_Match_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.Match
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.Match
  nameWithType: ScriptHashCondition.Match
- uid: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.SerializeWithoutType(System.IO.BinaryWriter)
  name: SerializeWithoutType(BinaryWriter)
  href: api/Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.html#Neo_Network_P2P_Payloads_Conditions_ScriptHashCondition_SerializeWithoutType_System_IO_BinaryWriter_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.SerializeWithoutType(System.IO.BinaryWriter)
  fullName: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.SerializeWithoutType(System.IO.BinaryWriter)
  nameWithType: ScriptHashCondition.SerializeWithoutType(BinaryWriter)
- uid: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.SerializeWithoutType*
  name: SerializeWithoutType
  href: api/Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.html#Neo_Network_P2P_Payloads_Conditions_ScriptHashCondition_SerializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.SerializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.SerializeWithoutType
  nameWithType: ScriptHashCondition.SerializeWithoutType
- uid: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.html#Neo_Network_P2P_Payloads_Conditions_ScriptHashCondition_Size
  commentId: P:Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.Size
  fullName: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.Size
  nameWithType: ScriptHashCondition.Size
- uid: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.html#Neo_Network_P2P_Payloads_Conditions_ScriptHashCondition_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.Size
  nameWithType: ScriptHashCondition.Size
- uid: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.ToJson
  name: ToJson()
  href: api/Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.html#Neo_Network_P2P_Payloads_Conditions_ScriptHashCondition_ToJson
  commentId: M:Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.ToJson
  fullName: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.ToJson()
  nameWithType: ScriptHashCondition.ToJson()
- uid: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.ToJson*
  name: ToJson
  href: api/Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.html#Neo_Network_P2P_Payloads_Conditions_ScriptHashCondition_ToJson_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.ToJson
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.ToJson
  nameWithType: ScriptHashCondition.ToJson
- uid: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.ToStackItem(Neo.VM.ReferenceCounter)
  name: ToStackItem(ReferenceCounter)
  href: api/Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.html#Neo_Network_P2P_Payloads_Conditions_ScriptHashCondition_ToStackItem_Neo_VM_ReferenceCounter_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.ToStackItem(Neo.VM.ReferenceCounter)
  fullName: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.ToStackItem(Neo.VM.ReferenceCounter)
  nameWithType: ScriptHashCondition.ToStackItem(ReferenceCounter)
- uid: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.ToStackItem*
  name: ToStackItem
  href: api/Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.html#Neo_Network_P2P_Payloads_Conditions_ScriptHashCondition_ToStackItem_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.ToStackItem
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.ToStackItem
  nameWithType: ScriptHashCondition.ToStackItem
- uid: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.Type
  name: Type
  href: api/Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.html#Neo_Network_P2P_Payloads_Conditions_ScriptHashCondition_Type
  commentId: P:Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.Type
  fullName: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.Type
  nameWithType: ScriptHashCondition.Type
- uid: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.Type*
  name: Type
  href: api/Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.html#Neo_Network_P2P_Payloads_Conditions_ScriptHashCondition_Type_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.Type
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.ScriptHashCondition.Type
  nameWithType: ScriptHashCondition.Type
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessCondition
  name: WitnessCondition
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessCondition.html
  commentId: T:Neo.Network.P2P.Payloads.Conditions.WitnessCondition
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessCondition
  nameWithType: WitnessCondition
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.DeserializeConditions(Neo.IO.MemoryReader@,System.Int32)
  name: DeserializeConditions(ref MemoryReader, int)
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessCondition.html#Neo_Network_P2P_Payloads_Conditions_WitnessCondition_DeserializeConditions_Neo_IO_MemoryReader__System_Int32_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.WitnessCondition.DeserializeConditions(Neo.IO.MemoryReader@,System.Int32)
  name.vb: DeserializeConditions(MemoryReader, Integer)
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.DeserializeConditions(ref Neo.IO.MemoryReader, int)
  fullName.vb: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.DeserializeConditions(Neo.IO.MemoryReader, Integer)
  nameWithType: WitnessCondition.DeserializeConditions(ref MemoryReader, int)
  nameWithType.vb: WitnessCondition.DeserializeConditions(MemoryReader, Integer)
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.DeserializeConditions*
  name: DeserializeConditions
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessCondition.html#Neo_Network_P2P_Payloads_Conditions_WitnessCondition_DeserializeConditions_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.WitnessCondition.DeserializeConditions
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.DeserializeConditions
  nameWithType: WitnessCondition.DeserializeConditions
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.DeserializeFrom(Neo.IO.MemoryReader@,System.Int32)
  name: DeserializeFrom(ref MemoryReader, int)
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessCondition.html#Neo_Network_P2P_Payloads_Conditions_WitnessCondition_DeserializeFrom_Neo_IO_MemoryReader__System_Int32_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.WitnessCondition.DeserializeFrom(Neo.IO.MemoryReader@,System.Int32)
  name.vb: DeserializeFrom(MemoryReader, Integer)
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.DeserializeFrom(ref Neo.IO.MemoryReader, int)
  fullName.vb: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.DeserializeFrom(Neo.IO.MemoryReader, Integer)
  nameWithType: WitnessCondition.DeserializeFrom(ref MemoryReader, int)
  nameWithType.vb: WitnessCondition.DeserializeFrom(MemoryReader, Integer)
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.DeserializeFrom*
  name: DeserializeFrom
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessCondition.html#Neo_Network_P2P_Payloads_Conditions_WitnessCondition_DeserializeFrom_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.WitnessCondition.DeserializeFrom
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.DeserializeFrom
  nameWithType: WitnessCondition.DeserializeFrom
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.DeserializeWithoutType(Neo.IO.MemoryReader@,System.Int32)
  name: DeserializeWithoutType(ref MemoryReader, int)
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessCondition.html#Neo_Network_P2P_Payloads_Conditions_WitnessCondition_DeserializeWithoutType_Neo_IO_MemoryReader__System_Int32_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.WitnessCondition.DeserializeWithoutType(Neo.IO.MemoryReader@,System.Int32)
  name.vb: DeserializeWithoutType(MemoryReader, Integer)
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.DeserializeWithoutType(ref Neo.IO.MemoryReader, int)
  fullName.vb: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.DeserializeWithoutType(Neo.IO.MemoryReader, Integer)
  nameWithType: WitnessCondition.DeserializeWithoutType(ref MemoryReader, int)
  nameWithType.vb: WitnessCondition.DeserializeWithoutType(MemoryReader, Integer)
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.DeserializeWithoutType*
  name: DeserializeWithoutType
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessCondition.html#Neo_Network_P2P_Payloads_Conditions_WitnessCondition_DeserializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.WitnessCondition.DeserializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.DeserializeWithoutType
  nameWithType: WitnessCondition.DeserializeWithoutType
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.FromJson(Neo.Json.JObject)
  name: FromJson(JObject)
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessCondition.html#Neo_Network_P2P_Payloads_Conditions_WitnessCondition_FromJson_Neo_Json_JObject_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.WitnessCondition.FromJson(Neo.Json.JObject)
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.FromJson(Neo.Json.JObject)
  nameWithType: WitnessCondition.FromJson(JObject)
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.FromJson*
  name: FromJson
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessCondition.html#Neo_Network_P2P_Payloads_Conditions_WitnessCondition_FromJson_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.WitnessCondition.FromJson
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.FromJson
  nameWithType: WitnessCondition.FromJson
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.Match(Neo.SmartContract.ApplicationEngine)
  name: Match(ApplicationEngine)
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessCondition.html#Neo_Network_P2P_Payloads_Conditions_WitnessCondition_Match_Neo_SmartContract_ApplicationEngine_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.WitnessCondition.Match(Neo.SmartContract.ApplicationEngine)
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.Match(Neo.SmartContract.ApplicationEngine)
  nameWithType: WitnessCondition.Match(ApplicationEngine)
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.Match*
  name: Match
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessCondition.html#Neo_Network_P2P_Payloads_Conditions_WitnessCondition_Match_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.WitnessCondition.Match
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.Match
  nameWithType: WitnessCondition.Match
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.SerializeWithoutType(System.IO.BinaryWriter)
  name: SerializeWithoutType(BinaryWriter)
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessCondition.html#Neo_Network_P2P_Payloads_Conditions_WitnessCondition_SerializeWithoutType_System_IO_BinaryWriter_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.WitnessCondition.SerializeWithoutType(System.IO.BinaryWriter)
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.SerializeWithoutType(System.IO.BinaryWriter)
  nameWithType: WitnessCondition.SerializeWithoutType(BinaryWriter)
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.SerializeWithoutType*
  name: SerializeWithoutType
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessCondition.html#Neo_Network_P2P_Payloads_Conditions_WitnessCondition_SerializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.WitnessCondition.SerializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.SerializeWithoutType
  nameWithType: WitnessCondition.SerializeWithoutType
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessCondition.html#Neo_Network_P2P_Payloads_Conditions_WitnessCondition_Size
  commentId: P:Neo.Network.P2P.Payloads.Conditions.WitnessCondition.Size
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.Size
  nameWithType: WitnessCondition.Size
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessCondition.html#Neo_Network_P2P_Payloads_Conditions_WitnessCondition_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.WitnessCondition.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.Size
  nameWithType: WitnessCondition.Size
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.ToJson
  name: ToJson()
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessCondition.html#Neo_Network_P2P_Payloads_Conditions_WitnessCondition_ToJson
  commentId: M:Neo.Network.P2P.Payloads.Conditions.WitnessCondition.ToJson
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.ToJson()
  nameWithType: WitnessCondition.ToJson()
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.ToJson*
  name: ToJson
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessCondition.html#Neo_Network_P2P_Payloads_Conditions_WitnessCondition_ToJson_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.WitnessCondition.ToJson
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.ToJson
  nameWithType: WitnessCondition.ToJson
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.ToStackItem(Neo.VM.ReferenceCounter)
  name: ToStackItem(ReferenceCounter)
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessCondition.html#Neo_Network_P2P_Payloads_Conditions_WitnessCondition_ToStackItem_Neo_VM_ReferenceCounter_
  commentId: M:Neo.Network.P2P.Payloads.Conditions.WitnessCondition.ToStackItem(Neo.VM.ReferenceCounter)
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.ToStackItem(Neo.VM.ReferenceCounter)
  nameWithType: WitnessCondition.ToStackItem(ReferenceCounter)
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.ToStackItem*
  name: ToStackItem
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessCondition.html#Neo_Network_P2P_Payloads_Conditions_WitnessCondition_ToStackItem_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.WitnessCondition.ToStackItem
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.ToStackItem
  nameWithType: WitnessCondition.ToStackItem
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.Type
  name: Type
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessCondition.html#Neo_Network_P2P_Payloads_Conditions_WitnessCondition_Type
  commentId: P:Neo.Network.P2P.Payloads.Conditions.WitnessCondition.Type
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.Type
  nameWithType: WitnessCondition.Type
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.Type*
  name: Type
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessCondition.html#Neo_Network_P2P_Payloads_Conditions_WitnessCondition_Type_
  commentId: Overload:Neo.Network.P2P.Payloads.Conditions.WitnessCondition.Type
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessCondition.Type
  nameWithType: WitnessCondition.Type
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessConditionType
  name: WitnessConditionType
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.html
  commentId: T:Neo.Network.P2P.Payloads.Conditions.WitnessConditionType
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessConditionType
  nameWithType: WitnessConditionType
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.And
  name: And
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.html#Neo_Network_P2P_Payloads_Conditions_WitnessConditionType_And
  commentId: F:Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.And
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.And
  nameWithType: WitnessConditionType.And
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.Boolean
  name: Boolean
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.html#Neo_Network_P2P_Payloads_Conditions_WitnessConditionType_Boolean
  commentId: F:Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.Boolean
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.Boolean
  nameWithType: WitnessConditionType.Boolean
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.CalledByContract
  name: CalledByContract
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.html#Neo_Network_P2P_Payloads_Conditions_WitnessConditionType_CalledByContract
  commentId: F:Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.CalledByContract
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.CalledByContract
  nameWithType: WitnessConditionType.CalledByContract
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.CalledByEntry
  name: CalledByEntry
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.html#Neo_Network_P2P_Payloads_Conditions_WitnessConditionType_CalledByEntry
  commentId: F:Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.CalledByEntry
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.CalledByEntry
  nameWithType: WitnessConditionType.CalledByEntry
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.CalledByGroup
  name: CalledByGroup
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.html#Neo_Network_P2P_Payloads_Conditions_WitnessConditionType_CalledByGroup
  commentId: F:Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.CalledByGroup
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.CalledByGroup
  nameWithType: WitnessConditionType.CalledByGroup
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.Group
  name: Group
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.html#Neo_Network_P2P_Payloads_Conditions_WitnessConditionType_Group
  commentId: F:Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.Group
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.Group
  nameWithType: WitnessConditionType.Group
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.Not
  name: Not
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.html#Neo_Network_P2P_Payloads_Conditions_WitnessConditionType_Not
  commentId: F:Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.Not
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.Not
  nameWithType: WitnessConditionType.Not
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.Or
  name: Or
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.html#Neo_Network_P2P_Payloads_Conditions_WitnessConditionType_Or
  commentId: F:Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.Or
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.Or
  nameWithType: WitnessConditionType.Or
- uid: Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.ScriptHash
  name: ScriptHash
  href: api/Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.html#Neo_Network_P2P_Payloads_Conditions_WitnessConditionType_ScriptHash
  commentId: F:Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.ScriptHash
  fullName: Neo.Network.P2P.Payloads.Conditions.WitnessConditionType.ScriptHash
  nameWithType: WitnessConditionType.ScriptHash
- uid: Neo.Network.P2P.Payloads.Conflicts
  name: Conflicts
  href: api/Neo.Network.P2P.Payloads.Conflicts.html
  commentId: T:Neo.Network.P2P.Payloads.Conflicts
  fullName: Neo.Network.P2P.Payloads.Conflicts
  nameWithType: Conflicts
- uid: Neo.Network.P2P.Payloads.Conflicts.AllowMultiple
  name: AllowMultiple
  href: api/Neo.Network.P2P.Payloads.Conflicts.html#Neo_Network_P2P_Payloads_Conflicts_AllowMultiple
  commentId: P:Neo.Network.P2P.Payloads.Conflicts.AllowMultiple
  fullName: Neo.Network.P2P.Payloads.Conflicts.AllowMultiple
  nameWithType: Conflicts.AllowMultiple
- uid: Neo.Network.P2P.Payloads.Conflicts.AllowMultiple*
  name: AllowMultiple
  href: api/Neo.Network.P2P.Payloads.Conflicts.html#Neo_Network_P2P_Payloads_Conflicts_AllowMultiple_
  commentId: Overload:Neo.Network.P2P.Payloads.Conflicts.AllowMultiple
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conflicts.AllowMultiple
  nameWithType: Conflicts.AllowMultiple
- uid: Neo.Network.P2P.Payloads.Conflicts.CalculateNetworkFee(Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.Transaction)
  name: CalculateNetworkFee(DataCache, Transaction)
  href: api/Neo.Network.P2P.Payloads.Conflicts.html#Neo_Network_P2P_Payloads_Conflicts_CalculateNetworkFee_Neo_Persistence_DataCache_Neo_Network_P2P_Payloads_Transaction_
  commentId: M:Neo.Network.P2P.Payloads.Conflicts.CalculateNetworkFee(Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.Transaction)
  fullName: Neo.Network.P2P.Payloads.Conflicts.CalculateNetworkFee(Neo.Persistence.DataCache, Neo.Network.P2P.Payloads.Transaction)
  nameWithType: Conflicts.CalculateNetworkFee(DataCache, Transaction)
- uid: Neo.Network.P2P.Payloads.Conflicts.CalculateNetworkFee*
  name: CalculateNetworkFee
  href: api/Neo.Network.P2P.Payloads.Conflicts.html#Neo_Network_P2P_Payloads_Conflicts_CalculateNetworkFee_
  commentId: Overload:Neo.Network.P2P.Payloads.Conflicts.CalculateNetworkFee
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conflicts.CalculateNetworkFee
  nameWithType: Conflicts.CalculateNetworkFee
- uid: Neo.Network.P2P.Payloads.Conflicts.DeserializeWithoutType(Neo.IO.MemoryReader@)
  name: DeserializeWithoutType(ref MemoryReader)
  href: api/Neo.Network.P2P.Payloads.Conflicts.html#Neo_Network_P2P_Payloads_Conflicts_DeserializeWithoutType_Neo_IO_MemoryReader__
  commentId: M:Neo.Network.P2P.Payloads.Conflicts.DeserializeWithoutType(Neo.IO.MemoryReader@)
  name.vb: DeserializeWithoutType(MemoryReader)
  fullName: Neo.Network.P2P.Payloads.Conflicts.DeserializeWithoutType(ref Neo.IO.MemoryReader)
  fullName.vb: Neo.Network.P2P.Payloads.Conflicts.DeserializeWithoutType(Neo.IO.MemoryReader)
  nameWithType: Conflicts.DeserializeWithoutType(ref MemoryReader)
  nameWithType.vb: Conflicts.DeserializeWithoutType(MemoryReader)
- uid: Neo.Network.P2P.Payloads.Conflicts.DeserializeWithoutType*
  name: DeserializeWithoutType
  href: api/Neo.Network.P2P.Payloads.Conflicts.html#Neo_Network_P2P_Payloads_Conflicts_DeserializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.Conflicts.DeserializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conflicts.DeserializeWithoutType
  nameWithType: Conflicts.DeserializeWithoutType
- uid: Neo.Network.P2P.Payloads.Conflicts.Hash
  name: Hash
  href: api/Neo.Network.P2P.Payloads.Conflicts.html#Neo_Network_P2P_Payloads_Conflicts_Hash
  commentId: F:Neo.Network.P2P.Payloads.Conflicts.Hash
  fullName: Neo.Network.P2P.Payloads.Conflicts.Hash
  nameWithType: Conflicts.Hash
- uid: Neo.Network.P2P.Payloads.Conflicts.SerializeWithoutType(System.IO.BinaryWriter)
  name: SerializeWithoutType(BinaryWriter)
  href: api/Neo.Network.P2P.Payloads.Conflicts.html#Neo_Network_P2P_Payloads_Conflicts_SerializeWithoutType_System_IO_BinaryWriter_
  commentId: M:Neo.Network.P2P.Payloads.Conflicts.SerializeWithoutType(System.IO.BinaryWriter)
  fullName: Neo.Network.P2P.Payloads.Conflicts.SerializeWithoutType(System.IO.BinaryWriter)
  nameWithType: Conflicts.SerializeWithoutType(BinaryWriter)
- uid: Neo.Network.P2P.Payloads.Conflicts.SerializeWithoutType*
  name: SerializeWithoutType
  href: api/Neo.Network.P2P.Payloads.Conflicts.html#Neo_Network_P2P_Payloads_Conflicts_SerializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.Conflicts.SerializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conflicts.SerializeWithoutType
  nameWithType: Conflicts.SerializeWithoutType
- uid: Neo.Network.P2P.Payloads.Conflicts.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.Conflicts.html#Neo_Network_P2P_Payloads_Conflicts_Size
  commentId: P:Neo.Network.P2P.Payloads.Conflicts.Size
  fullName: Neo.Network.P2P.Payloads.Conflicts.Size
  nameWithType: Conflicts.Size
- uid: Neo.Network.P2P.Payloads.Conflicts.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.Conflicts.html#Neo_Network_P2P_Payloads_Conflicts_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.Conflicts.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conflicts.Size
  nameWithType: Conflicts.Size
- uid: Neo.Network.P2P.Payloads.Conflicts.ToJson
  name: ToJson()
  href: api/Neo.Network.P2P.Payloads.Conflicts.html#Neo_Network_P2P_Payloads_Conflicts_ToJson
  commentId: M:Neo.Network.P2P.Payloads.Conflicts.ToJson
  fullName: Neo.Network.P2P.Payloads.Conflicts.ToJson()
  nameWithType: Conflicts.ToJson()
- uid: Neo.Network.P2P.Payloads.Conflicts.ToJson*
  name: ToJson
  href: api/Neo.Network.P2P.Payloads.Conflicts.html#Neo_Network_P2P_Payloads_Conflicts_ToJson_
  commentId: Overload:Neo.Network.P2P.Payloads.Conflicts.ToJson
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conflicts.ToJson
  nameWithType: Conflicts.ToJson
- uid: Neo.Network.P2P.Payloads.Conflicts.Type
  name: Type
  href: api/Neo.Network.P2P.Payloads.Conflicts.html#Neo_Network_P2P_Payloads_Conflicts_Type
  commentId: P:Neo.Network.P2P.Payloads.Conflicts.Type
  fullName: Neo.Network.P2P.Payloads.Conflicts.Type
  nameWithType: Conflicts.Type
- uid: Neo.Network.P2P.Payloads.Conflicts.Type*
  name: Type
  href: api/Neo.Network.P2P.Payloads.Conflicts.html#Neo_Network_P2P_Payloads_Conflicts_Type_
  commentId: Overload:Neo.Network.P2P.Payloads.Conflicts.Type
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conflicts.Type
  nameWithType: Conflicts.Type
- uid: Neo.Network.P2P.Payloads.Conflicts.Verify(Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.Transaction)
  name: Verify(DataCache, Transaction)
  href: api/Neo.Network.P2P.Payloads.Conflicts.html#Neo_Network_P2P_Payloads_Conflicts_Verify_Neo_Persistence_DataCache_Neo_Network_P2P_Payloads_Transaction_
  commentId: M:Neo.Network.P2P.Payloads.Conflicts.Verify(Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.Transaction)
  fullName: Neo.Network.P2P.Payloads.Conflicts.Verify(Neo.Persistence.DataCache, Neo.Network.P2P.Payloads.Transaction)
  nameWithType: Conflicts.Verify(DataCache, Transaction)
- uid: Neo.Network.P2P.Payloads.Conflicts.Verify*
  name: Verify
  href: api/Neo.Network.P2P.Payloads.Conflicts.html#Neo_Network_P2P_Payloads_Conflicts_Verify_
  commentId: Overload:Neo.Network.P2P.Payloads.Conflicts.Verify
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Conflicts.Verify
  nameWithType: Conflicts.Verify
- uid: Neo.Network.P2P.Payloads.ExtensiblePayload
  name: ExtensiblePayload
  href: api/Neo.Network.P2P.Payloads.ExtensiblePayload.html
  commentId: T:Neo.Network.P2P.Payloads.ExtensiblePayload
  fullName: Neo.Network.P2P.Payloads.ExtensiblePayload
  nameWithType: ExtensiblePayload
- uid: Neo.Network.P2P.Payloads.ExtensiblePayload.Category
  name: Category
  href: api/Neo.Network.P2P.Payloads.ExtensiblePayload.html#Neo_Network_P2P_Payloads_ExtensiblePayload_Category
  commentId: F:Neo.Network.P2P.Payloads.ExtensiblePayload.Category
  fullName: Neo.Network.P2P.Payloads.ExtensiblePayload.Category
  nameWithType: ExtensiblePayload.Category
- uid: Neo.Network.P2P.Payloads.ExtensiblePayload.Data
  name: Data
  href: api/Neo.Network.P2P.Payloads.ExtensiblePayload.html#Neo_Network_P2P_Payloads_ExtensiblePayload_Data
  commentId: F:Neo.Network.P2P.Payloads.ExtensiblePayload.Data
  fullName: Neo.Network.P2P.Payloads.ExtensiblePayload.Data
  nameWithType: ExtensiblePayload.Data
- uid: Neo.Network.P2P.Payloads.ExtensiblePayload.Hash
  name: Hash
  href: api/Neo.Network.P2P.Payloads.ExtensiblePayload.html#Neo_Network_P2P_Payloads_ExtensiblePayload_Hash
  commentId: P:Neo.Network.P2P.Payloads.ExtensiblePayload.Hash
  fullName: Neo.Network.P2P.Payloads.ExtensiblePayload.Hash
  nameWithType: ExtensiblePayload.Hash
- uid: Neo.Network.P2P.Payloads.ExtensiblePayload.Hash*
  name: Hash
  href: api/Neo.Network.P2P.Payloads.ExtensiblePayload.html#Neo_Network_P2P_Payloads_ExtensiblePayload_Hash_
  commentId: Overload:Neo.Network.P2P.Payloads.ExtensiblePayload.Hash
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.ExtensiblePayload.Hash
  nameWithType: ExtensiblePayload.Hash
- uid: Neo.Network.P2P.Payloads.ExtensiblePayload.Sender
  name: Sender
  href: api/Neo.Network.P2P.Payloads.ExtensiblePayload.html#Neo_Network_P2P_Payloads_ExtensiblePayload_Sender
  commentId: F:Neo.Network.P2P.Payloads.ExtensiblePayload.Sender
  fullName: Neo.Network.P2P.Payloads.ExtensiblePayload.Sender
  nameWithType: ExtensiblePayload.Sender
- uid: Neo.Network.P2P.Payloads.ExtensiblePayload.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.ExtensiblePayload.html#Neo_Network_P2P_Payloads_ExtensiblePayload_Size
  commentId: P:Neo.Network.P2P.Payloads.ExtensiblePayload.Size
  fullName: Neo.Network.P2P.Payloads.ExtensiblePayload.Size
  nameWithType: ExtensiblePayload.Size
- uid: Neo.Network.P2P.Payloads.ExtensiblePayload.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.ExtensiblePayload.html#Neo_Network_P2P_Payloads_ExtensiblePayload_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.ExtensiblePayload.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.ExtensiblePayload.Size
  nameWithType: ExtensiblePayload.Size
- uid: Neo.Network.P2P.Payloads.ExtensiblePayload.ValidBlockEnd
  name: ValidBlockEnd
  href: api/Neo.Network.P2P.Payloads.ExtensiblePayload.html#Neo_Network_P2P_Payloads_ExtensiblePayload_ValidBlockEnd
  commentId: F:Neo.Network.P2P.Payloads.ExtensiblePayload.ValidBlockEnd
  fullName: Neo.Network.P2P.Payloads.ExtensiblePayload.ValidBlockEnd
  nameWithType: ExtensiblePayload.ValidBlockEnd
- uid: Neo.Network.P2P.Payloads.ExtensiblePayload.ValidBlockStart
  name: ValidBlockStart
  href: api/Neo.Network.P2P.Payloads.ExtensiblePayload.html#Neo_Network_P2P_Payloads_ExtensiblePayload_ValidBlockStart
  commentId: F:Neo.Network.P2P.Payloads.ExtensiblePayload.ValidBlockStart
  fullName: Neo.Network.P2P.Payloads.ExtensiblePayload.ValidBlockStart
  nameWithType: ExtensiblePayload.ValidBlockStart
- uid: Neo.Network.P2P.Payloads.ExtensiblePayload.Witness
  name: Witness
  href: api/Neo.Network.P2P.Payloads.ExtensiblePayload.html#Neo_Network_P2P_Payloads_ExtensiblePayload_Witness
  commentId: F:Neo.Network.P2P.Payloads.ExtensiblePayload.Witness
  fullName: Neo.Network.P2P.Payloads.ExtensiblePayload.Witness
  nameWithType: ExtensiblePayload.Witness
- uid: Neo.Network.P2P.Payloads.FilterAddPayload
  name: FilterAddPayload
  href: api/Neo.Network.P2P.Payloads.FilterAddPayload.html
  commentId: T:Neo.Network.P2P.Payloads.FilterAddPayload
  fullName: Neo.Network.P2P.Payloads.FilterAddPayload
  nameWithType: FilterAddPayload
- uid: Neo.Network.P2P.Payloads.FilterAddPayload.Data
  name: Data
  href: api/Neo.Network.P2P.Payloads.FilterAddPayload.html#Neo_Network_P2P_Payloads_FilterAddPayload_Data
  commentId: F:Neo.Network.P2P.Payloads.FilterAddPayload.Data
  fullName: Neo.Network.P2P.Payloads.FilterAddPayload.Data
  nameWithType: FilterAddPayload.Data
- uid: Neo.Network.P2P.Payloads.FilterAddPayload.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.FilterAddPayload.html#Neo_Network_P2P_Payloads_FilterAddPayload_Size
  commentId: P:Neo.Network.P2P.Payloads.FilterAddPayload.Size
  fullName: Neo.Network.P2P.Payloads.FilterAddPayload.Size
  nameWithType: FilterAddPayload.Size
- uid: Neo.Network.P2P.Payloads.FilterAddPayload.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.FilterAddPayload.html#Neo_Network_P2P_Payloads_FilterAddPayload_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.FilterAddPayload.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.FilterAddPayload.Size
  nameWithType: FilterAddPayload.Size
- uid: Neo.Network.P2P.Payloads.FilterLoadPayload
  name: FilterLoadPayload
  href: api/Neo.Network.P2P.Payloads.FilterLoadPayload.html
  commentId: T:Neo.Network.P2P.Payloads.FilterLoadPayload
  fullName: Neo.Network.P2P.Payloads.FilterLoadPayload
  nameWithType: FilterLoadPayload
- uid: Neo.Network.P2P.Payloads.FilterLoadPayload.Create(Neo.Cryptography.BloomFilter)
  name: Create(BloomFilter)
  href: api/Neo.Network.P2P.Payloads.FilterLoadPayload.html#Neo_Network_P2P_Payloads_FilterLoadPayload_Create_Neo_Cryptography_BloomFilter_
  commentId: M:Neo.Network.P2P.Payloads.FilterLoadPayload.Create(Neo.Cryptography.BloomFilter)
  fullName: Neo.Network.P2P.Payloads.FilterLoadPayload.Create(Neo.Cryptography.BloomFilter)
  nameWithType: FilterLoadPayload.Create(BloomFilter)
- uid: Neo.Network.P2P.Payloads.FilterLoadPayload.Create*
  name: Create
  href: api/Neo.Network.P2P.Payloads.FilterLoadPayload.html#Neo_Network_P2P_Payloads_FilterLoadPayload_Create_
  commentId: Overload:Neo.Network.P2P.Payloads.FilterLoadPayload.Create
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.FilterLoadPayload.Create
  nameWithType: FilterLoadPayload.Create
- uid: Neo.Network.P2P.Payloads.FilterLoadPayload.Filter
  name: Filter
  href: api/Neo.Network.P2P.Payloads.FilterLoadPayload.html#Neo_Network_P2P_Payloads_FilterLoadPayload_Filter
  commentId: F:Neo.Network.P2P.Payloads.FilterLoadPayload.Filter
  fullName: Neo.Network.P2P.Payloads.FilterLoadPayload.Filter
  nameWithType: FilterLoadPayload.Filter
- uid: Neo.Network.P2P.Payloads.FilterLoadPayload.K
  name: K
  href: api/Neo.Network.P2P.Payloads.FilterLoadPayload.html#Neo_Network_P2P_Payloads_FilterLoadPayload_K
  commentId: F:Neo.Network.P2P.Payloads.FilterLoadPayload.K
  fullName: Neo.Network.P2P.Payloads.FilterLoadPayload.K
  nameWithType: FilterLoadPayload.K
- uid: Neo.Network.P2P.Payloads.FilterLoadPayload.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.FilterLoadPayload.html#Neo_Network_P2P_Payloads_FilterLoadPayload_Size
  commentId: P:Neo.Network.P2P.Payloads.FilterLoadPayload.Size
  fullName: Neo.Network.P2P.Payloads.FilterLoadPayload.Size
  nameWithType: FilterLoadPayload.Size
- uid: Neo.Network.P2P.Payloads.FilterLoadPayload.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.FilterLoadPayload.html#Neo_Network_P2P_Payloads_FilterLoadPayload_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.FilterLoadPayload.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.FilterLoadPayload.Size
  nameWithType: FilterLoadPayload.Size
- uid: Neo.Network.P2P.Payloads.FilterLoadPayload.Tweak
  name: Tweak
  href: api/Neo.Network.P2P.Payloads.FilterLoadPayload.html#Neo_Network_P2P_Payloads_FilterLoadPayload_Tweak
  commentId: F:Neo.Network.P2P.Payloads.FilterLoadPayload.Tweak
  fullName: Neo.Network.P2P.Payloads.FilterLoadPayload.Tweak
  nameWithType: FilterLoadPayload.Tweak
- uid: Neo.Network.P2P.Payloads.GetBlockByIndexPayload
  name: GetBlockByIndexPayload
  href: api/Neo.Network.P2P.Payloads.GetBlockByIndexPayload.html
  commentId: T:Neo.Network.P2P.Payloads.GetBlockByIndexPayload
  fullName: Neo.Network.P2P.Payloads.GetBlockByIndexPayload
  nameWithType: GetBlockByIndexPayload
- uid: Neo.Network.P2P.Payloads.GetBlockByIndexPayload.Count
  name: Count
  href: api/Neo.Network.P2P.Payloads.GetBlockByIndexPayload.html#Neo_Network_P2P_Payloads_GetBlockByIndexPayload_Count
  commentId: F:Neo.Network.P2P.Payloads.GetBlockByIndexPayload.Count
  fullName: Neo.Network.P2P.Payloads.GetBlockByIndexPayload.Count
  nameWithType: GetBlockByIndexPayload.Count
- uid: Neo.Network.P2P.Payloads.GetBlockByIndexPayload.Create(System.UInt32,System.Int16)
  name: Create(uint, short)
  href: api/Neo.Network.P2P.Payloads.GetBlockByIndexPayload.html#Neo_Network_P2P_Payloads_GetBlockByIndexPayload_Create_System_UInt32_System_Int16_
  commentId: M:Neo.Network.P2P.Payloads.GetBlockByIndexPayload.Create(System.UInt32,System.Int16)
  name.vb: Create(UInteger, Short)
  fullName: Neo.Network.P2P.Payloads.GetBlockByIndexPayload.Create(uint, short)
  fullName.vb: Neo.Network.P2P.Payloads.GetBlockByIndexPayload.Create(UInteger, Short)
  nameWithType: GetBlockByIndexPayload.Create(uint, short)
  nameWithType.vb: GetBlockByIndexPayload.Create(UInteger, Short)
- uid: Neo.Network.P2P.Payloads.GetBlockByIndexPayload.Create*
  name: Create
  href: api/Neo.Network.P2P.Payloads.GetBlockByIndexPayload.html#Neo_Network_P2P_Payloads_GetBlockByIndexPayload_Create_
  commentId: Overload:Neo.Network.P2P.Payloads.GetBlockByIndexPayload.Create
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.GetBlockByIndexPayload.Create
  nameWithType: GetBlockByIndexPayload.Create
- uid: Neo.Network.P2P.Payloads.GetBlockByIndexPayload.IndexStart
  name: IndexStart
  href: api/Neo.Network.P2P.Payloads.GetBlockByIndexPayload.html#Neo_Network_P2P_Payloads_GetBlockByIndexPayload_IndexStart
  commentId: F:Neo.Network.P2P.Payloads.GetBlockByIndexPayload.IndexStart
  fullName: Neo.Network.P2P.Payloads.GetBlockByIndexPayload.IndexStart
  nameWithType: GetBlockByIndexPayload.IndexStart
- uid: Neo.Network.P2P.Payloads.GetBlockByIndexPayload.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.GetBlockByIndexPayload.html#Neo_Network_P2P_Payloads_GetBlockByIndexPayload_Size
  commentId: P:Neo.Network.P2P.Payloads.GetBlockByIndexPayload.Size
  fullName: Neo.Network.P2P.Payloads.GetBlockByIndexPayload.Size
  nameWithType: GetBlockByIndexPayload.Size
- uid: Neo.Network.P2P.Payloads.GetBlockByIndexPayload.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.GetBlockByIndexPayload.html#Neo_Network_P2P_Payloads_GetBlockByIndexPayload_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.GetBlockByIndexPayload.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.GetBlockByIndexPayload.Size
  nameWithType: GetBlockByIndexPayload.Size
- uid: Neo.Network.P2P.Payloads.GetBlocksPayload
  name: GetBlocksPayload
  href: api/Neo.Network.P2P.Payloads.GetBlocksPayload.html
  commentId: T:Neo.Network.P2P.Payloads.GetBlocksPayload
  fullName: Neo.Network.P2P.Payloads.GetBlocksPayload
  nameWithType: GetBlocksPayload
- uid: Neo.Network.P2P.Payloads.GetBlocksPayload.Count
  name: Count
  href: api/Neo.Network.P2P.Payloads.GetBlocksPayload.html#Neo_Network_P2P_Payloads_GetBlocksPayload_Count
  commentId: F:Neo.Network.P2P.Payloads.GetBlocksPayload.Count
  fullName: Neo.Network.P2P.Payloads.GetBlocksPayload.Count
  nameWithType: GetBlocksPayload.Count
- uid: Neo.Network.P2P.Payloads.GetBlocksPayload.Create(Neo.UInt256,System.Int16)
  name: Create(UInt256, short)
  href: api/Neo.Network.P2P.Payloads.GetBlocksPayload.html#Neo_Network_P2P_Payloads_GetBlocksPayload_Create_Neo_UInt256_System_Int16_
  commentId: M:Neo.Network.P2P.Payloads.GetBlocksPayload.Create(Neo.UInt256,System.Int16)
  name.vb: Create(UInt256, Short)
  fullName: Neo.Network.P2P.Payloads.GetBlocksPayload.Create(Neo.UInt256, short)
  fullName.vb: Neo.Network.P2P.Payloads.GetBlocksPayload.Create(Neo.UInt256, Short)
  nameWithType: GetBlocksPayload.Create(UInt256, short)
  nameWithType.vb: GetBlocksPayload.Create(UInt256, Short)
- uid: Neo.Network.P2P.Payloads.GetBlocksPayload.Create*
  name: Create
  href: api/Neo.Network.P2P.Payloads.GetBlocksPayload.html#Neo_Network_P2P_Payloads_GetBlocksPayload_Create_
  commentId: Overload:Neo.Network.P2P.Payloads.GetBlocksPayload.Create
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.GetBlocksPayload.Create
  nameWithType: GetBlocksPayload.Create
- uid: Neo.Network.P2P.Payloads.GetBlocksPayload.HashStart
  name: HashStart
  href: api/Neo.Network.P2P.Payloads.GetBlocksPayload.html#Neo_Network_P2P_Payloads_GetBlocksPayload_HashStart
  commentId: F:Neo.Network.P2P.Payloads.GetBlocksPayload.HashStart
  fullName: Neo.Network.P2P.Payloads.GetBlocksPayload.HashStart
  nameWithType: GetBlocksPayload.HashStart
- uid: Neo.Network.P2P.Payloads.GetBlocksPayload.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.GetBlocksPayload.html#Neo_Network_P2P_Payloads_GetBlocksPayload_Size
  commentId: P:Neo.Network.P2P.Payloads.GetBlocksPayload.Size
  fullName: Neo.Network.P2P.Payloads.GetBlocksPayload.Size
  nameWithType: GetBlocksPayload.Size
- uid: Neo.Network.P2P.Payloads.GetBlocksPayload.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.GetBlocksPayload.html#Neo_Network_P2P_Payloads_GetBlocksPayload_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.GetBlocksPayload.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.GetBlocksPayload.Size
  nameWithType: GetBlocksPayload.Size
- uid: Neo.Network.P2P.Payloads.Header
  name: Header
  href: api/Neo.Network.P2P.Payloads.Header.html
  commentId: T:Neo.Network.P2P.Payloads.Header
  fullName: Neo.Network.P2P.Payloads.Header
  nameWithType: Header
- uid: Neo.Network.P2P.Payloads.Header.Deserialize(Neo.IO.MemoryReader@)
  name: Deserialize(ref MemoryReader)
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_Deserialize_Neo_IO_MemoryReader__
  commentId: M:Neo.Network.P2P.Payloads.Header.Deserialize(Neo.IO.MemoryReader@)
  name.vb: Deserialize(MemoryReader)
  fullName: Neo.Network.P2P.Payloads.Header.Deserialize(ref Neo.IO.MemoryReader)
  fullName.vb: Neo.Network.P2P.Payloads.Header.Deserialize(Neo.IO.MemoryReader)
  nameWithType: Header.Deserialize(ref MemoryReader)
  nameWithType.vb: Header.Deserialize(MemoryReader)
- uid: Neo.Network.P2P.Payloads.Header.Deserialize*
  name: Deserialize
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_Deserialize_
  commentId: Overload:Neo.Network.P2P.Payloads.Header.Deserialize
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Header.Deserialize
  nameWithType: Header.Deserialize
- uid: Neo.Network.P2P.Payloads.Header.Equals(Neo.Network.P2P.Payloads.Header)
  name: Equals(Header)
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_Equals_Neo_Network_P2P_Payloads_Header_
  commentId: M:Neo.Network.P2P.Payloads.Header.Equals(Neo.Network.P2P.Payloads.Header)
  fullName: Neo.Network.P2P.Payloads.Header.Equals(Neo.Network.P2P.Payloads.Header)
  nameWithType: Header.Equals(Header)
- uid: Neo.Network.P2P.Payloads.Header.Equals(System.Object)
  name: Equals(object)
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_Equals_System_Object_
  commentId: M:Neo.Network.P2P.Payloads.Header.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Neo.Network.P2P.Payloads.Header.Equals(object)
  fullName.vb: Neo.Network.P2P.Payloads.Header.Equals(Object)
  nameWithType: Header.Equals(object)
  nameWithType.vb: Header.Equals(Object)
- uid: Neo.Network.P2P.Payloads.Header.Equals*
  name: Equals
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_Equals_
  commentId: Overload:Neo.Network.P2P.Payloads.Header.Equals
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Header.Equals
  nameWithType: Header.Equals
- uid: Neo.Network.P2P.Payloads.Header.GetHashCode
  name: GetHashCode()
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_GetHashCode
  commentId: M:Neo.Network.P2P.Payloads.Header.GetHashCode
  fullName: Neo.Network.P2P.Payloads.Header.GetHashCode()
  nameWithType: Header.GetHashCode()
- uid: Neo.Network.P2P.Payloads.Header.GetHashCode*
  name: GetHashCode
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_GetHashCode_
  commentId: Overload:Neo.Network.P2P.Payloads.Header.GetHashCode
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Header.GetHashCode
  nameWithType: Header.GetHashCode
- uid: Neo.Network.P2P.Payloads.Header.Hash
  name: Hash
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_Hash
  commentId: P:Neo.Network.P2P.Payloads.Header.Hash
  fullName: Neo.Network.P2P.Payloads.Header.Hash
  nameWithType: Header.Hash
- uid: Neo.Network.P2P.Payloads.Header.Hash*
  name: Hash
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_Hash_
  commentId: Overload:Neo.Network.P2P.Payloads.Header.Hash
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Header.Hash
  nameWithType: Header.Hash
- uid: Neo.Network.P2P.Payloads.Header.Index
  name: Index
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_Index
  commentId: P:Neo.Network.P2P.Payloads.Header.Index
  fullName: Neo.Network.P2P.Payloads.Header.Index
  nameWithType: Header.Index
- uid: Neo.Network.P2P.Payloads.Header.Index*
  name: Index
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_Index_
  commentId: Overload:Neo.Network.P2P.Payloads.Header.Index
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Header.Index
  nameWithType: Header.Index
- uid: Neo.Network.P2P.Payloads.Header.MerkleRoot
  name: MerkleRoot
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_MerkleRoot
  commentId: P:Neo.Network.P2P.Payloads.Header.MerkleRoot
  fullName: Neo.Network.P2P.Payloads.Header.MerkleRoot
  nameWithType: Header.MerkleRoot
- uid: Neo.Network.P2P.Payloads.Header.MerkleRoot*
  name: MerkleRoot
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_MerkleRoot_
  commentId: Overload:Neo.Network.P2P.Payloads.Header.MerkleRoot
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Header.MerkleRoot
  nameWithType: Header.MerkleRoot
- uid: Neo.Network.P2P.Payloads.Header.NextConsensus
  name: NextConsensus
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_NextConsensus
  commentId: P:Neo.Network.P2P.Payloads.Header.NextConsensus
  fullName: Neo.Network.P2P.Payloads.Header.NextConsensus
  nameWithType: Header.NextConsensus
- uid: Neo.Network.P2P.Payloads.Header.NextConsensus*
  name: NextConsensus
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_NextConsensus_
  commentId: Overload:Neo.Network.P2P.Payloads.Header.NextConsensus
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Header.NextConsensus
  nameWithType: Header.NextConsensus
- uid: Neo.Network.P2P.Payloads.Header.Nonce
  name: Nonce
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_Nonce
  commentId: P:Neo.Network.P2P.Payloads.Header.Nonce
  fullName: Neo.Network.P2P.Payloads.Header.Nonce
  nameWithType: Header.Nonce
- uid: Neo.Network.P2P.Payloads.Header.Nonce*
  name: Nonce
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_Nonce_
  commentId: Overload:Neo.Network.P2P.Payloads.Header.Nonce
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Header.Nonce
  nameWithType: Header.Nonce
- uid: Neo.Network.P2P.Payloads.Header.PrevHash
  name: PrevHash
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_PrevHash
  commentId: P:Neo.Network.P2P.Payloads.Header.PrevHash
  fullName: Neo.Network.P2P.Payloads.Header.PrevHash
  nameWithType: Header.PrevHash
- uid: Neo.Network.P2P.Payloads.Header.PrevHash*
  name: PrevHash
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_PrevHash_
  commentId: Overload:Neo.Network.P2P.Payloads.Header.PrevHash
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Header.PrevHash
  nameWithType: Header.PrevHash
- uid: Neo.Network.P2P.Payloads.Header.PrimaryIndex
  name: PrimaryIndex
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_PrimaryIndex
  commentId: P:Neo.Network.P2P.Payloads.Header.PrimaryIndex
  fullName: Neo.Network.P2P.Payloads.Header.PrimaryIndex
  nameWithType: Header.PrimaryIndex
- uid: Neo.Network.P2P.Payloads.Header.PrimaryIndex*
  name: PrimaryIndex
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_PrimaryIndex_
  commentId: Overload:Neo.Network.P2P.Payloads.Header.PrimaryIndex
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Header.PrimaryIndex
  nameWithType: Header.PrimaryIndex
- uid: Neo.Network.P2P.Payloads.Header.Serialize(System.IO.BinaryWriter)
  name: Serialize(BinaryWriter)
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_Serialize_System_IO_BinaryWriter_
  commentId: M:Neo.Network.P2P.Payloads.Header.Serialize(System.IO.BinaryWriter)
  fullName: Neo.Network.P2P.Payloads.Header.Serialize(System.IO.BinaryWriter)
  nameWithType: Header.Serialize(BinaryWriter)
- uid: Neo.Network.P2P.Payloads.Header.Serialize*
  name: Serialize
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_Serialize_
  commentId: Overload:Neo.Network.P2P.Payloads.Header.Serialize
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Header.Serialize
  nameWithType: Header.Serialize
- uid: Neo.Network.P2P.Payloads.Header.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_Size
  commentId: P:Neo.Network.P2P.Payloads.Header.Size
  fullName: Neo.Network.P2P.Payloads.Header.Size
  nameWithType: Header.Size
- uid: Neo.Network.P2P.Payloads.Header.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.Header.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Header.Size
  nameWithType: Header.Size
- uid: Neo.Network.P2P.Payloads.Header.Timestamp
  name: Timestamp
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_Timestamp
  commentId: P:Neo.Network.P2P.Payloads.Header.Timestamp
  fullName: Neo.Network.P2P.Payloads.Header.Timestamp
  nameWithType: Header.Timestamp
- uid: Neo.Network.P2P.Payloads.Header.Timestamp*
  name: Timestamp
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_Timestamp_
  commentId: Overload:Neo.Network.P2P.Payloads.Header.Timestamp
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Header.Timestamp
  nameWithType: Header.Timestamp
- uid: Neo.Network.P2P.Payloads.Header.ToJson(Neo.ProtocolSettings)
  name: ToJson(ProtocolSettings)
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_ToJson_Neo_ProtocolSettings_
  commentId: M:Neo.Network.P2P.Payloads.Header.ToJson(Neo.ProtocolSettings)
  fullName: Neo.Network.P2P.Payloads.Header.ToJson(Neo.ProtocolSettings)
  nameWithType: Header.ToJson(ProtocolSettings)
- uid: Neo.Network.P2P.Payloads.Header.ToJson*
  name: ToJson
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_ToJson_
  commentId: Overload:Neo.Network.P2P.Payloads.Header.ToJson
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Header.ToJson
  nameWithType: Header.ToJson
- uid: Neo.Network.P2P.Payloads.Header.Version
  name: Version
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_Version
  commentId: P:Neo.Network.P2P.Payloads.Header.Version
  fullName: Neo.Network.P2P.Payloads.Header.Version
  nameWithType: Header.Version
- uid: Neo.Network.P2P.Payloads.Header.Version*
  name: Version
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_Version_
  commentId: Overload:Neo.Network.P2P.Payloads.Header.Version
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Header.Version
  nameWithType: Header.Version
- uid: Neo.Network.P2P.Payloads.Header.Witness
  name: Witness
  href: api/Neo.Network.P2P.Payloads.Header.html#Neo_Network_P2P_Payloads_Header_Witness
  commentId: F:Neo.Network.P2P.Payloads.Header.Witness
  fullName: Neo.Network.P2P.Payloads.Header.Witness
  nameWithType: Header.Witness
- uid: Neo.Network.P2P.Payloads.HeadersPayload
  name: HeadersPayload
  href: api/Neo.Network.P2P.Payloads.HeadersPayload.html
  commentId: T:Neo.Network.P2P.Payloads.HeadersPayload
  fullName: Neo.Network.P2P.Payloads.HeadersPayload
  nameWithType: HeadersPayload
- uid: Neo.Network.P2P.Payloads.HeadersPayload.Create(Neo.Network.P2P.Payloads.Header[])
  name: Create(params Header[])
  href: api/Neo.Network.P2P.Payloads.HeadersPayload.html#Neo_Network_P2P_Payloads_HeadersPayload_Create_Neo_Network_P2P_Payloads_Header___
  commentId: M:Neo.Network.P2P.Payloads.HeadersPayload.Create(Neo.Network.P2P.Payloads.Header[])
  name.vb: Create(ParamArray Header())
  fullName: Neo.Network.P2P.Payloads.HeadersPayload.Create(params Neo.Network.P2P.Payloads.Header[])
  fullName.vb: Neo.Network.P2P.Payloads.HeadersPayload.Create(ParamArray Neo.Network.P2P.Payloads.Header())
  nameWithType: HeadersPayload.Create(params Header[])
  nameWithType.vb: HeadersPayload.Create(ParamArray Header())
- uid: Neo.Network.P2P.Payloads.HeadersPayload.Create*
  name: Create
  href: api/Neo.Network.P2P.Payloads.HeadersPayload.html#Neo_Network_P2P_Payloads_HeadersPayload_Create_
  commentId: Overload:Neo.Network.P2P.Payloads.HeadersPayload.Create
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.HeadersPayload.Create
  nameWithType: HeadersPayload.Create
- uid: Neo.Network.P2P.Payloads.HeadersPayload.Headers
  name: Headers
  href: api/Neo.Network.P2P.Payloads.HeadersPayload.html#Neo_Network_P2P_Payloads_HeadersPayload_Headers
  commentId: F:Neo.Network.P2P.Payloads.HeadersPayload.Headers
  fullName: Neo.Network.P2P.Payloads.HeadersPayload.Headers
  nameWithType: HeadersPayload.Headers
- uid: Neo.Network.P2P.Payloads.HeadersPayload.MaxHeadersCount
  name: MaxHeadersCount
  href: api/Neo.Network.P2P.Payloads.HeadersPayload.html#Neo_Network_P2P_Payloads_HeadersPayload_MaxHeadersCount
  commentId: F:Neo.Network.P2P.Payloads.HeadersPayload.MaxHeadersCount
  fullName: Neo.Network.P2P.Payloads.HeadersPayload.MaxHeadersCount
  nameWithType: HeadersPayload.MaxHeadersCount
- uid: Neo.Network.P2P.Payloads.HeadersPayload.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.HeadersPayload.html#Neo_Network_P2P_Payloads_HeadersPayload_Size
  commentId: P:Neo.Network.P2P.Payloads.HeadersPayload.Size
  fullName: Neo.Network.P2P.Payloads.HeadersPayload.Size
  nameWithType: HeadersPayload.Size
- uid: Neo.Network.P2P.Payloads.HeadersPayload.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.HeadersPayload.html#Neo_Network_P2P_Payloads_HeadersPayload_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.HeadersPayload.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.HeadersPayload.Size
  nameWithType: HeadersPayload.Size
- uid: Neo.Network.P2P.Payloads.HighPriorityAttribute
  name: HighPriorityAttribute
  href: api/Neo.Network.P2P.Payloads.HighPriorityAttribute.html
  commentId: T:Neo.Network.P2P.Payloads.HighPriorityAttribute
  fullName: Neo.Network.P2P.Payloads.HighPriorityAttribute
  nameWithType: HighPriorityAttribute
- uid: Neo.Network.P2P.Payloads.HighPriorityAttribute.AllowMultiple
  name: AllowMultiple
  href: api/Neo.Network.P2P.Payloads.HighPriorityAttribute.html#Neo_Network_P2P_Payloads_HighPriorityAttribute_AllowMultiple
  commentId: P:Neo.Network.P2P.Payloads.HighPriorityAttribute.AllowMultiple
  fullName: Neo.Network.P2P.Payloads.HighPriorityAttribute.AllowMultiple
  nameWithType: HighPriorityAttribute.AllowMultiple
- uid: Neo.Network.P2P.Payloads.HighPriorityAttribute.AllowMultiple*
  name: AllowMultiple
  href: api/Neo.Network.P2P.Payloads.HighPriorityAttribute.html#Neo_Network_P2P_Payloads_HighPriorityAttribute_AllowMultiple_
  commentId: Overload:Neo.Network.P2P.Payloads.HighPriorityAttribute.AllowMultiple
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.HighPriorityAttribute.AllowMultiple
  nameWithType: HighPriorityAttribute.AllowMultiple
- uid: Neo.Network.P2P.Payloads.HighPriorityAttribute.DeserializeWithoutType(Neo.IO.MemoryReader@)
  name: DeserializeWithoutType(ref MemoryReader)
  href: api/Neo.Network.P2P.Payloads.HighPriorityAttribute.html#Neo_Network_P2P_Payloads_HighPriorityAttribute_DeserializeWithoutType_Neo_IO_MemoryReader__
  commentId: M:Neo.Network.P2P.Payloads.HighPriorityAttribute.DeserializeWithoutType(Neo.IO.MemoryReader@)
  name.vb: DeserializeWithoutType(MemoryReader)
  fullName: Neo.Network.P2P.Payloads.HighPriorityAttribute.DeserializeWithoutType(ref Neo.IO.MemoryReader)
  fullName.vb: Neo.Network.P2P.Payloads.HighPriorityAttribute.DeserializeWithoutType(Neo.IO.MemoryReader)
  nameWithType: HighPriorityAttribute.DeserializeWithoutType(ref MemoryReader)
  nameWithType.vb: HighPriorityAttribute.DeserializeWithoutType(MemoryReader)
- uid: Neo.Network.P2P.Payloads.HighPriorityAttribute.DeserializeWithoutType*
  name: DeserializeWithoutType
  href: api/Neo.Network.P2P.Payloads.HighPriorityAttribute.html#Neo_Network_P2P_Payloads_HighPriorityAttribute_DeserializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.HighPriorityAttribute.DeserializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.HighPriorityAttribute.DeserializeWithoutType
  nameWithType: HighPriorityAttribute.DeserializeWithoutType
- uid: Neo.Network.P2P.Payloads.HighPriorityAttribute.SerializeWithoutType(System.IO.BinaryWriter)
  name: SerializeWithoutType(BinaryWriter)
  href: api/Neo.Network.P2P.Payloads.HighPriorityAttribute.html#Neo_Network_P2P_Payloads_HighPriorityAttribute_SerializeWithoutType_System_IO_BinaryWriter_
  commentId: M:Neo.Network.P2P.Payloads.HighPriorityAttribute.SerializeWithoutType(System.IO.BinaryWriter)
  fullName: Neo.Network.P2P.Payloads.HighPriorityAttribute.SerializeWithoutType(System.IO.BinaryWriter)
  nameWithType: HighPriorityAttribute.SerializeWithoutType(BinaryWriter)
- uid: Neo.Network.P2P.Payloads.HighPriorityAttribute.SerializeWithoutType*
  name: SerializeWithoutType
  href: api/Neo.Network.P2P.Payloads.HighPriorityAttribute.html#Neo_Network_P2P_Payloads_HighPriorityAttribute_SerializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.HighPriorityAttribute.SerializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.HighPriorityAttribute.SerializeWithoutType
  nameWithType: HighPriorityAttribute.SerializeWithoutType
- uid: Neo.Network.P2P.Payloads.HighPriorityAttribute.Type
  name: Type
  href: api/Neo.Network.P2P.Payloads.HighPriorityAttribute.html#Neo_Network_P2P_Payloads_HighPriorityAttribute_Type
  commentId: P:Neo.Network.P2P.Payloads.HighPriorityAttribute.Type
  fullName: Neo.Network.P2P.Payloads.HighPriorityAttribute.Type
  nameWithType: HighPriorityAttribute.Type
- uid: Neo.Network.P2P.Payloads.HighPriorityAttribute.Type*
  name: Type
  href: api/Neo.Network.P2P.Payloads.HighPriorityAttribute.html#Neo_Network_P2P_Payloads_HighPriorityAttribute_Type_
  commentId: Overload:Neo.Network.P2P.Payloads.HighPriorityAttribute.Type
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.HighPriorityAttribute.Type
  nameWithType: HighPriorityAttribute.Type
- uid: Neo.Network.P2P.Payloads.HighPriorityAttribute.Verify(Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.Transaction)
  name: Verify(DataCache, Transaction)
  href: api/Neo.Network.P2P.Payloads.HighPriorityAttribute.html#Neo_Network_P2P_Payloads_HighPriorityAttribute_Verify_Neo_Persistence_DataCache_Neo_Network_P2P_Payloads_Transaction_
  commentId: M:Neo.Network.P2P.Payloads.HighPriorityAttribute.Verify(Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.Transaction)
  fullName: Neo.Network.P2P.Payloads.HighPriorityAttribute.Verify(Neo.Persistence.DataCache, Neo.Network.P2P.Payloads.Transaction)
  nameWithType: HighPriorityAttribute.Verify(DataCache, Transaction)
- uid: Neo.Network.P2P.Payloads.HighPriorityAttribute.Verify*
  name: Verify
  href: api/Neo.Network.P2P.Payloads.HighPriorityAttribute.html#Neo_Network_P2P_Payloads_HighPriorityAttribute_Verify_
  commentId: Overload:Neo.Network.P2P.Payloads.HighPriorityAttribute.Verify
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.HighPriorityAttribute.Verify
  nameWithType: HighPriorityAttribute.Verify
- uid: Neo.Network.P2P.Payloads.IInventory
  name: IInventory
  href: api/Neo.Network.P2P.Payloads.IInventory.html
  commentId: T:Neo.Network.P2P.Payloads.IInventory
  fullName: Neo.Network.P2P.Payloads.IInventory
  nameWithType: IInventory
- uid: Neo.Network.P2P.Payloads.IInventory.InventoryType
  name: InventoryType
  href: api/Neo.Network.P2P.Payloads.IInventory.html#Neo_Network_P2P_Payloads_IInventory_InventoryType
  commentId: P:Neo.Network.P2P.Payloads.IInventory.InventoryType
  fullName: Neo.Network.P2P.Payloads.IInventory.InventoryType
  nameWithType: IInventory.InventoryType
- uid: Neo.Network.P2P.Payloads.IInventory.InventoryType*
  name: InventoryType
  href: api/Neo.Network.P2P.Payloads.IInventory.html#Neo_Network_P2P_Payloads_IInventory_InventoryType_
  commentId: Overload:Neo.Network.P2P.Payloads.IInventory.InventoryType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.IInventory.InventoryType
  nameWithType: IInventory.InventoryType
- uid: Neo.Network.P2P.Payloads.IVerifiable
  name: IVerifiable
  href: api/Neo.Network.P2P.Payloads.IVerifiable.html
  commentId: T:Neo.Network.P2P.Payloads.IVerifiable
  fullName: Neo.Network.P2P.Payloads.IVerifiable
  nameWithType: IVerifiable
- uid: Neo.Network.P2P.Payloads.IVerifiable.DeserializeUnsigned(Neo.IO.MemoryReader@)
  name: DeserializeUnsigned(ref MemoryReader)
  href: api/Neo.Network.P2P.Payloads.IVerifiable.html#Neo_Network_P2P_Payloads_IVerifiable_DeserializeUnsigned_Neo_IO_MemoryReader__
  commentId: M:Neo.Network.P2P.Payloads.IVerifiable.DeserializeUnsigned(Neo.IO.MemoryReader@)
  name.vb: DeserializeUnsigned(MemoryReader)
  fullName: Neo.Network.P2P.Payloads.IVerifiable.DeserializeUnsigned(ref Neo.IO.MemoryReader)
  fullName.vb: Neo.Network.P2P.Payloads.IVerifiable.DeserializeUnsigned(Neo.IO.MemoryReader)
  nameWithType: IVerifiable.DeserializeUnsigned(ref MemoryReader)
  nameWithType.vb: IVerifiable.DeserializeUnsigned(MemoryReader)
- uid: Neo.Network.P2P.Payloads.IVerifiable.DeserializeUnsigned*
  name: DeserializeUnsigned
  href: api/Neo.Network.P2P.Payloads.IVerifiable.html#Neo_Network_P2P_Payloads_IVerifiable_DeserializeUnsigned_
  commentId: Overload:Neo.Network.P2P.Payloads.IVerifiable.DeserializeUnsigned
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.IVerifiable.DeserializeUnsigned
  nameWithType: IVerifiable.DeserializeUnsigned
- uid: Neo.Network.P2P.Payloads.IVerifiable.GetScriptHashesForVerifying(Neo.Persistence.DataCache)
  name: GetScriptHashesForVerifying(DataCache)
  href: api/Neo.Network.P2P.Payloads.IVerifiable.html#Neo_Network_P2P_Payloads_IVerifiable_GetScriptHashesForVerifying_Neo_Persistence_DataCache_
  commentId: M:Neo.Network.P2P.Payloads.IVerifiable.GetScriptHashesForVerifying(Neo.Persistence.DataCache)
  fullName: Neo.Network.P2P.Payloads.IVerifiable.GetScriptHashesForVerifying(Neo.Persistence.DataCache)
  nameWithType: IVerifiable.GetScriptHashesForVerifying(DataCache)
- uid: Neo.Network.P2P.Payloads.IVerifiable.GetScriptHashesForVerifying*
  name: GetScriptHashesForVerifying
  href: api/Neo.Network.P2P.Payloads.IVerifiable.html#Neo_Network_P2P_Payloads_IVerifiable_GetScriptHashesForVerifying_
  commentId: Overload:Neo.Network.P2P.Payloads.IVerifiable.GetScriptHashesForVerifying
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.IVerifiable.GetScriptHashesForVerifying
  nameWithType: IVerifiable.GetScriptHashesForVerifying
- uid: Neo.Network.P2P.Payloads.IVerifiable.Hash
  name: Hash
  href: api/Neo.Network.P2P.Payloads.IVerifiable.html#Neo_Network_P2P_Payloads_IVerifiable_Hash
  commentId: P:Neo.Network.P2P.Payloads.IVerifiable.Hash
  fullName: Neo.Network.P2P.Payloads.IVerifiable.Hash
  nameWithType: IVerifiable.Hash
- uid: Neo.Network.P2P.Payloads.IVerifiable.Hash*
  name: Hash
  href: api/Neo.Network.P2P.Payloads.IVerifiable.html#Neo_Network_P2P_Payloads_IVerifiable_Hash_
  commentId: Overload:Neo.Network.P2P.Payloads.IVerifiable.Hash
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.IVerifiable.Hash
  nameWithType: IVerifiable.Hash
- uid: Neo.Network.P2P.Payloads.IVerifiable.SerializeUnsigned(System.IO.BinaryWriter)
  name: SerializeUnsigned(BinaryWriter)
  href: api/Neo.Network.P2P.Payloads.IVerifiable.html#Neo_Network_P2P_Payloads_IVerifiable_SerializeUnsigned_System_IO_BinaryWriter_
  commentId: M:Neo.Network.P2P.Payloads.IVerifiable.SerializeUnsigned(System.IO.BinaryWriter)
  fullName: Neo.Network.P2P.Payloads.IVerifiable.SerializeUnsigned(System.IO.BinaryWriter)
  nameWithType: IVerifiable.SerializeUnsigned(BinaryWriter)
- uid: Neo.Network.P2P.Payloads.IVerifiable.SerializeUnsigned*
  name: SerializeUnsigned
  href: api/Neo.Network.P2P.Payloads.IVerifiable.html#Neo_Network_P2P_Payloads_IVerifiable_SerializeUnsigned_
  commentId: Overload:Neo.Network.P2P.Payloads.IVerifiable.SerializeUnsigned
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.IVerifiable.SerializeUnsigned
  nameWithType: IVerifiable.SerializeUnsigned
- uid: Neo.Network.P2P.Payloads.IVerifiable.Witnesses
  name: Witnesses
  href: api/Neo.Network.P2P.Payloads.IVerifiable.html#Neo_Network_P2P_Payloads_IVerifiable_Witnesses
  commentId: P:Neo.Network.P2P.Payloads.IVerifiable.Witnesses
  fullName: Neo.Network.P2P.Payloads.IVerifiable.Witnesses
  nameWithType: IVerifiable.Witnesses
- uid: Neo.Network.P2P.Payloads.IVerifiable.Witnesses*
  name: Witnesses
  href: api/Neo.Network.P2P.Payloads.IVerifiable.html#Neo_Network_P2P_Payloads_IVerifiable_Witnesses_
  commentId: Overload:Neo.Network.P2P.Payloads.IVerifiable.Witnesses
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.IVerifiable.Witnesses
  nameWithType: IVerifiable.Witnesses
- uid: Neo.Network.P2P.Payloads.InvPayload
  name: InvPayload
  href: api/Neo.Network.P2P.Payloads.InvPayload.html
  commentId: T:Neo.Network.P2P.Payloads.InvPayload
  fullName: Neo.Network.P2P.Payloads.InvPayload
  nameWithType: InvPayload
- uid: Neo.Network.P2P.Payloads.InvPayload.Create(Neo.Network.P2P.Payloads.InventoryType,Neo.UInt256[])
  name: Create(InventoryType, params UInt256[])
  href: api/Neo.Network.P2P.Payloads.InvPayload.html#Neo_Network_P2P_Payloads_InvPayload_Create_Neo_Network_P2P_Payloads_InventoryType_Neo_UInt256___
  commentId: M:Neo.Network.P2P.Payloads.InvPayload.Create(Neo.Network.P2P.Payloads.InventoryType,Neo.UInt256[])
  name.vb: Create(InventoryType, ParamArray UInt256())
  fullName: Neo.Network.P2P.Payloads.InvPayload.Create(Neo.Network.P2P.Payloads.InventoryType, params Neo.UInt256[])
  fullName.vb: Neo.Network.P2P.Payloads.InvPayload.Create(Neo.Network.P2P.Payloads.InventoryType, ParamArray Neo.UInt256())
  nameWithType: InvPayload.Create(InventoryType, params UInt256[])
  nameWithType.vb: InvPayload.Create(InventoryType, ParamArray UInt256())
- uid: Neo.Network.P2P.Payloads.InvPayload.Create*
  name: Create
  href: api/Neo.Network.P2P.Payloads.InvPayload.html#Neo_Network_P2P_Payloads_InvPayload_Create_
  commentId: Overload:Neo.Network.P2P.Payloads.InvPayload.Create
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.InvPayload.Create
  nameWithType: InvPayload.Create
- uid: Neo.Network.P2P.Payloads.InvPayload.CreateGroup(Neo.Network.P2P.Payloads.InventoryType,Neo.UInt256[])
  name: CreateGroup(InventoryType, UInt256[])
  href: api/Neo.Network.P2P.Payloads.InvPayload.html#Neo_Network_P2P_Payloads_InvPayload_CreateGroup_Neo_Network_P2P_Payloads_InventoryType_Neo_UInt256___
  commentId: M:Neo.Network.P2P.Payloads.InvPayload.CreateGroup(Neo.Network.P2P.Payloads.InventoryType,Neo.UInt256[])
  name.vb: CreateGroup(InventoryType, UInt256())
  fullName: Neo.Network.P2P.Payloads.InvPayload.CreateGroup(Neo.Network.P2P.Payloads.InventoryType, Neo.UInt256[])
  fullName.vb: Neo.Network.P2P.Payloads.InvPayload.CreateGroup(Neo.Network.P2P.Payloads.InventoryType, Neo.UInt256())
  nameWithType: InvPayload.CreateGroup(InventoryType, UInt256[])
  nameWithType.vb: InvPayload.CreateGroup(InventoryType, UInt256())
- uid: Neo.Network.P2P.Payloads.InvPayload.CreateGroup*
  name: CreateGroup
  href: api/Neo.Network.P2P.Payloads.InvPayload.html#Neo_Network_P2P_Payloads_InvPayload_CreateGroup_
  commentId: Overload:Neo.Network.P2P.Payloads.InvPayload.CreateGroup
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.InvPayload.CreateGroup
  nameWithType: InvPayload.CreateGroup
- uid: Neo.Network.P2P.Payloads.InvPayload.Hashes
  name: Hashes
  href: api/Neo.Network.P2P.Payloads.InvPayload.html#Neo_Network_P2P_Payloads_InvPayload_Hashes
  commentId: F:Neo.Network.P2P.Payloads.InvPayload.Hashes
  fullName: Neo.Network.P2P.Payloads.InvPayload.Hashes
  nameWithType: InvPayload.Hashes
- uid: Neo.Network.P2P.Payloads.InvPayload.MaxHashesCount
  name: MaxHashesCount
  href: api/Neo.Network.P2P.Payloads.InvPayload.html#Neo_Network_P2P_Payloads_InvPayload_MaxHashesCount
  commentId: F:Neo.Network.P2P.Payloads.InvPayload.MaxHashesCount
  fullName: Neo.Network.P2P.Payloads.InvPayload.MaxHashesCount
  nameWithType: InvPayload.MaxHashesCount
- uid: Neo.Network.P2P.Payloads.InvPayload.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.InvPayload.html#Neo_Network_P2P_Payloads_InvPayload_Size
  commentId: P:Neo.Network.P2P.Payloads.InvPayload.Size
  fullName: Neo.Network.P2P.Payloads.InvPayload.Size
  nameWithType: InvPayload.Size
- uid: Neo.Network.P2P.Payloads.InvPayload.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.InvPayload.html#Neo_Network_P2P_Payloads_InvPayload_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.InvPayload.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.InvPayload.Size
  nameWithType: InvPayload.Size
- uid: Neo.Network.P2P.Payloads.InvPayload.Type
  name: Type
  href: api/Neo.Network.P2P.Payloads.InvPayload.html#Neo_Network_P2P_Payloads_InvPayload_Type
  commentId: F:Neo.Network.P2P.Payloads.InvPayload.Type
  fullName: Neo.Network.P2P.Payloads.InvPayload.Type
  nameWithType: InvPayload.Type
- uid: Neo.Network.P2P.Payloads.InventoryType
  name: InventoryType
  href: api/Neo.Network.P2P.Payloads.InventoryType.html
  commentId: T:Neo.Network.P2P.Payloads.InventoryType
  fullName: Neo.Network.P2P.Payloads.InventoryType
  nameWithType: InventoryType
- uid: Neo.Network.P2P.Payloads.InventoryType.Block
  name: Block
  href: api/Neo.Network.P2P.Payloads.InventoryType.html#Neo_Network_P2P_Payloads_InventoryType_Block
  commentId: F:Neo.Network.P2P.Payloads.InventoryType.Block
  fullName: Neo.Network.P2P.Payloads.InventoryType.Block
  nameWithType: InventoryType.Block
- uid: Neo.Network.P2P.Payloads.InventoryType.Extensible
  name: Extensible
  href: api/Neo.Network.P2P.Payloads.InventoryType.html#Neo_Network_P2P_Payloads_InventoryType_Extensible
  commentId: F:Neo.Network.P2P.Payloads.InventoryType.Extensible
  fullName: Neo.Network.P2P.Payloads.InventoryType.Extensible
  nameWithType: InventoryType.Extensible
- uid: Neo.Network.P2P.Payloads.InventoryType.TX
  name: TX
  href: api/Neo.Network.P2P.Payloads.InventoryType.html#Neo_Network_P2P_Payloads_InventoryType_TX
  commentId: F:Neo.Network.P2P.Payloads.InventoryType.TX
  fullName: Neo.Network.P2P.Payloads.InventoryType.TX
  nameWithType: InventoryType.TX
- uid: Neo.Network.P2P.Payloads.MerkleBlockPayload
  name: MerkleBlockPayload
  href: api/Neo.Network.P2P.Payloads.MerkleBlockPayload.html
  commentId: T:Neo.Network.P2P.Payloads.MerkleBlockPayload
  fullName: Neo.Network.P2P.Payloads.MerkleBlockPayload
  nameWithType: MerkleBlockPayload
- uid: Neo.Network.P2P.Payloads.MerkleBlockPayload.Create(Neo.Network.P2P.Payloads.Block,System.Collections.BitArray)
  name: Create(Block, BitArray)
  href: api/Neo.Network.P2P.Payloads.MerkleBlockPayload.html#Neo_Network_P2P_Payloads_MerkleBlockPayload_Create_Neo_Network_P2P_Payloads_Block_System_Collections_BitArray_
  commentId: M:Neo.Network.P2P.Payloads.MerkleBlockPayload.Create(Neo.Network.P2P.Payloads.Block,System.Collections.BitArray)
  fullName: Neo.Network.P2P.Payloads.MerkleBlockPayload.Create(Neo.Network.P2P.Payloads.Block, System.Collections.BitArray)
  nameWithType: MerkleBlockPayload.Create(Block, BitArray)
- uid: Neo.Network.P2P.Payloads.MerkleBlockPayload.Create*
  name: Create
  href: api/Neo.Network.P2P.Payloads.MerkleBlockPayload.html#Neo_Network_P2P_Payloads_MerkleBlockPayload_Create_
  commentId: Overload:Neo.Network.P2P.Payloads.MerkleBlockPayload.Create
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.MerkleBlockPayload.Create
  nameWithType: MerkleBlockPayload.Create
- uid: Neo.Network.P2P.Payloads.MerkleBlockPayload.Deserialize(Neo.IO.MemoryReader@)
  name: Deserialize(ref MemoryReader)
  href: api/Neo.Network.P2P.Payloads.MerkleBlockPayload.html#Neo_Network_P2P_Payloads_MerkleBlockPayload_Deserialize_Neo_IO_MemoryReader__
  commentId: M:Neo.Network.P2P.Payloads.MerkleBlockPayload.Deserialize(Neo.IO.MemoryReader@)
  name.vb: Deserialize(MemoryReader)
  fullName: Neo.Network.P2P.Payloads.MerkleBlockPayload.Deserialize(ref Neo.IO.MemoryReader)
  fullName.vb: Neo.Network.P2P.Payloads.MerkleBlockPayload.Deserialize(Neo.IO.MemoryReader)
  nameWithType: MerkleBlockPayload.Deserialize(ref MemoryReader)
  nameWithType.vb: MerkleBlockPayload.Deserialize(MemoryReader)
- uid: Neo.Network.P2P.Payloads.MerkleBlockPayload.Deserialize*
  name: Deserialize
  href: api/Neo.Network.P2P.Payloads.MerkleBlockPayload.html#Neo_Network_P2P_Payloads_MerkleBlockPayload_Deserialize_
  commentId: Overload:Neo.Network.P2P.Payloads.MerkleBlockPayload.Deserialize
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.MerkleBlockPayload.Deserialize
  nameWithType: MerkleBlockPayload.Deserialize
- uid: Neo.Network.P2P.Payloads.MerkleBlockPayload.Flags
  name: Flags
  href: api/Neo.Network.P2P.Payloads.MerkleBlockPayload.html#Neo_Network_P2P_Payloads_MerkleBlockPayload_Flags
  commentId: F:Neo.Network.P2P.Payloads.MerkleBlockPayload.Flags
  fullName: Neo.Network.P2P.Payloads.MerkleBlockPayload.Flags
  nameWithType: MerkleBlockPayload.Flags
- uid: Neo.Network.P2P.Payloads.MerkleBlockPayload.Hashes
  name: Hashes
  href: api/Neo.Network.P2P.Payloads.MerkleBlockPayload.html#Neo_Network_P2P_Payloads_MerkleBlockPayload_Hashes
  commentId: F:Neo.Network.P2P.Payloads.MerkleBlockPayload.Hashes
  fullName: Neo.Network.P2P.Payloads.MerkleBlockPayload.Hashes
  nameWithType: MerkleBlockPayload.Hashes
- uid: Neo.Network.P2P.Payloads.MerkleBlockPayload.Header
  name: Header
  href: api/Neo.Network.P2P.Payloads.MerkleBlockPayload.html#Neo_Network_P2P_Payloads_MerkleBlockPayload_Header
  commentId: F:Neo.Network.P2P.Payloads.MerkleBlockPayload.Header
  fullName: Neo.Network.P2P.Payloads.MerkleBlockPayload.Header
  nameWithType: MerkleBlockPayload.Header
- uid: Neo.Network.P2P.Payloads.MerkleBlockPayload.Serialize(System.IO.BinaryWriter)
  name: Serialize(BinaryWriter)
  href: api/Neo.Network.P2P.Payloads.MerkleBlockPayload.html#Neo_Network_P2P_Payloads_MerkleBlockPayload_Serialize_System_IO_BinaryWriter_
  commentId: M:Neo.Network.P2P.Payloads.MerkleBlockPayload.Serialize(System.IO.BinaryWriter)
  fullName: Neo.Network.P2P.Payloads.MerkleBlockPayload.Serialize(System.IO.BinaryWriter)
  nameWithType: MerkleBlockPayload.Serialize(BinaryWriter)
- uid: Neo.Network.P2P.Payloads.MerkleBlockPayload.Serialize*
  name: Serialize
  href: api/Neo.Network.P2P.Payloads.MerkleBlockPayload.html#Neo_Network_P2P_Payloads_MerkleBlockPayload_Serialize_
  commentId: Overload:Neo.Network.P2P.Payloads.MerkleBlockPayload.Serialize
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.MerkleBlockPayload.Serialize
  nameWithType: MerkleBlockPayload.Serialize
- uid: Neo.Network.P2P.Payloads.MerkleBlockPayload.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.MerkleBlockPayload.html#Neo_Network_P2P_Payloads_MerkleBlockPayload_Size
  commentId: P:Neo.Network.P2P.Payloads.MerkleBlockPayload.Size
  fullName: Neo.Network.P2P.Payloads.MerkleBlockPayload.Size
  nameWithType: MerkleBlockPayload.Size
- uid: Neo.Network.P2P.Payloads.MerkleBlockPayload.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.MerkleBlockPayload.html#Neo_Network_P2P_Payloads_MerkleBlockPayload_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.MerkleBlockPayload.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.MerkleBlockPayload.Size
  nameWithType: MerkleBlockPayload.Size
- uid: Neo.Network.P2P.Payloads.MerkleBlockPayload.TxCount
  name: TxCount
  href: api/Neo.Network.P2P.Payloads.MerkleBlockPayload.html#Neo_Network_P2P_Payloads_MerkleBlockPayload_TxCount
  commentId: F:Neo.Network.P2P.Payloads.MerkleBlockPayload.TxCount
  fullName: Neo.Network.P2P.Payloads.MerkleBlockPayload.TxCount
  nameWithType: MerkleBlockPayload.TxCount
- uid: Neo.Network.P2P.Payloads.NetworkAddressWithTime
  name: NetworkAddressWithTime
  href: api/Neo.Network.P2P.Payloads.NetworkAddressWithTime.html
  commentId: T:Neo.Network.P2P.Payloads.NetworkAddressWithTime
  fullName: Neo.Network.P2P.Payloads.NetworkAddressWithTime
  nameWithType: NetworkAddressWithTime
- uid: Neo.Network.P2P.Payloads.NetworkAddressWithTime.Address
  name: Address
  href: api/Neo.Network.P2P.Payloads.NetworkAddressWithTime.html#Neo_Network_P2P_Payloads_NetworkAddressWithTime_Address
  commentId: F:Neo.Network.P2P.Payloads.NetworkAddressWithTime.Address
  fullName: Neo.Network.P2P.Payloads.NetworkAddressWithTime.Address
  nameWithType: NetworkAddressWithTime.Address
- uid: Neo.Network.P2P.Payloads.NetworkAddressWithTime.Capabilities
  name: Capabilities
  href: api/Neo.Network.P2P.Payloads.NetworkAddressWithTime.html#Neo_Network_P2P_Payloads_NetworkAddressWithTime_Capabilities
  commentId: F:Neo.Network.P2P.Payloads.NetworkAddressWithTime.Capabilities
  fullName: Neo.Network.P2P.Payloads.NetworkAddressWithTime.Capabilities
  nameWithType: NetworkAddressWithTime.Capabilities
- uid: Neo.Network.P2P.Payloads.NetworkAddressWithTime.Create(System.Net.IPAddress,System.UInt32,Neo.Network.P2P.Capabilities.NodeCapability[])
  name: Create(IPAddress, uint, params NodeCapability[])
  href: api/Neo.Network.P2P.Payloads.NetworkAddressWithTime.html#Neo_Network_P2P_Payloads_NetworkAddressWithTime_Create_System_Net_IPAddress_System_UInt32_Neo_Network_P2P_Capabilities_NodeCapability___
  commentId: M:Neo.Network.P2P.Payloads.NetworkAddressWithTime.Create(System.Net.IPAddress,System.UInt32,Neo.Network.P2P.Capabilities.NodeCapability[])
  name.vb: Create(IPAddress, UInteger, ParamArray NodeCapability())
  fullName: Neo.Network.P2P.Payloads.NetworkAddressWithTime.Create(System.Net.IPAddress, uint, params Neo.Network.P2P.Capabilities.NodeCapability[])
  fullName.vb: Neo.Network.P2P.Payloads.NetworkAddressWithTime.Create(System.Net.IPAddress, UInteger, ParamArray Neo.Network.P2P.Capabilities.NodeCapability())
  nameWithType: NetworkAddressWithTime.Create(IPAddress, uint, params NodeCapability[])
  nameWithType.vb: NetworkAddressWithTime.Create(IPAddress, UInteger, ParamArray NodeCapability())
- uid: Neo.Network.P2P.Payloads.NetworkAddressWithTime.Create*
  name: Create
  href: api/Neo.Network.P2P.Payloads.NetworkAddressWithTime.html#Neo_Network_P2P_Payloads_NetworkAddressWithTime_Create_
  commentId: Overload:Neo.Network.P2P.Payloads.NetworkAddressWithTime.Create
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.NetworkAddressWithTime.Create
  nameWithType: NetworkAddressWithTime.Create
- uid: Neo.Network.P2P.Payloads.NetworkAddressWithTime.EndPoint
  name: EndPoint
  href: api/Neo.Network.P2P.Payloads.NetworkAddressWithTime.html#Neo_Network_P2P_Payloads_NetworkAddressWithTime_EndPoint
  commentId: P:Neo.Network.P2P.Payloads.NetworkAddressWithTime.EndPoint
  fullName: Neo.Network.P2P.Payloads.NetworkAddressWithTime.EndPoint
  nameWithType: NetworkAddressWithTime.EndPoint
- uid: Neo.Network.P2P.Payloads.NetworkAddressWithTime.EndPoint*
  name: EndPoint
  href: api/Neo.Network.P2P.Payloads.NetworkAddressWithTime.html#Neo_Network_P2P_Payloads_NetworkAddressWithTime_EndPoint_
  commentId: Overload:Neo.Network.P2P.Payloads.NetworkAddressWithTime.EndPoint
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.NetworkAddressWithTime.EndPoint
  nameWithType: NetworkAddressWithTime.EndPoint
- uid: Neo.Network.P2P.Payloads.NetworkAddressWithTime.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.NetworkAddressWithTime.html#Neo_Network_P2P_Payloads_NetworkAddressWithTime_Size
  commentId: P:Neo.Network.P2P.Payloads.NetworkAddressWithTime.Size
  fullName: Neo.Network.P2P.Payloads.NetworkAddressWithTime.Size
  nameWithType: NetworkAddressWithTime.Size
- uid: Neo.Network.P2P.Payloads.NetworkAddressWithTime.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.NetworkAddressWithTime.html#Neo_Network_P2P_Payloads_NetworkAddressWithTime_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.NetworkAddressWithTime.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.NetworkAddressWithTime.Size
  nameWithType: NetworkAddressWithTime.Size
- uid: Neo.Network.P2P.Payloads.NetworkAddressWithTime.Timestamp
  name: Timestamp
  href: api/Neo.Network.P2P.Payloads.NetworkAddressWithTime.html#Neo_Network_P2P_Payloads_NetworkAddressWithTime_Timestamp
  commentId: F:Neo.Network.P2P.Payloads.NetworkAddressWithTime.Timestamp
  fullName: Neo.Network.P2P.Payloads.NetworkAddressWithTime.Timestamp
  nameWithType: NetworkAddressWithTime.Timestamp
- uid: Neo.Network.P2P.Payloads.NotValidBefore
  name: NotValidBefore
  href: api/Neo.Network.P2P.Payloads.NotValidBefore.html
  commentId: T:Neo.Network.P2P.Payloads.NotValidBefore
  fullName: Neo.Network.P2P.Payloads.NotValidBefore
  nameWithType: NotValidBefore
- uid: Neo.Network.P2P.Payloads.NotValidBefore.AllowMultiple
  name: AllowMultiple
  href: api/Neo.Network.P2P.Payloads.NotValidBefore.html#Neo_Network_P2P_Payloads_NotValidBefore_AllowMultiple
  commentId: P:Neo.Network.P2P.Payloads.NotValidBefore.AllowMultiple
  fullName: Neo.Network.P2P.Payloads.NotValidBefore.AllowMultiple
  nameWithType: NotValidBefore.AllowMultiple
- uid: Neo.Network.P2P.Payloads.NotValidBefore.AllowMultiple*
  name: AllowMultiple
  href: api/Neo.Network.P2P.Payloads.NotValidBefore.html#Neo_Network_P2P_Payloads_NotValidBefore_AllowMultiple_
  commentId: Overload:Neo.Network.P2P.Payloads.NotValidBefore.AllowMultiple
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.NotValidBefore.AllowMultiple
  nameWithType: NotValidBefore.AllowMultiple
- uid: Neo.Network.P2P.Payloads.NotValidBefore.DeserializeWithoutType(Neo.IO.MemoryReader@)
  name: DeserializeWithoutType(ref MemoryReader)
  href: api/Neo.Network.P2P.Payloads.NotValidBefore.html#Neo_Network_P2P_Payloads_NotValidBefore_DeserializeWithoutType_Neo_IO_MemoryReader__
  commentId: M:Neo.Network.P2P.Payloads.NotValidBefore.DeserializeWithoutType(Neo.IO.MemoryReader@)
  name.vb: DeserializeWithoutType(MemoryReader)
  fullName: Neo.Network.P2P.Payloads.NotValidBefore.DeserializeWithoutType(ref Neo.IO.MemoryReader)
  fullName.vb: Neo.Network.P2P.Payloads.NotValidBefore.DeserializeWithoutType(Neo.IO.MemoryReader)
  nameWithType: NotValidBefore.DeserializeWithoutType(ref MemoryReader)
  nameWithType.vb: NotValidBefore.DeserializeWithoutType(MemoryReader)
- uid: Neo.Network.P2P.Payloads.NotValidBefore.DeserializeWithoutType*
  name: DeserializeWithoutType
  href: api/Neo.Network.P2P.Payloads.NotValidBefore.html#Neo_Network_P2P_Payloads_NotValidBefore_DeserializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.NotValidBefore.DeserializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.NotValidBefore.DeserializeWithoutType
  nameWithType: NotValidBefore.DeserializeWithoutType
- uid: Neo.Network.P2P.Payloads.NotValidBefore.Height
  name: Height
  href: api/Neo.Network.P2P.Payloads.NotValidBefore.html#Neo_Network_P2P_Payloads_NotValidBefore_Height
  commentId: F:Neo.Network.P2P.Payloads.NotValidBefore.Height
  fullName: Neo.Network.P2P.Payloads.NotValidBefore.Height
  nameWithType: NotValidBefore.Height
- uid: Neo.Network.P2P.Payloads.NotValidBefore.SerializeWithoutType(System.IO.BinaryWriter)
  name: SerializeWithoutType(BinaryWriter)
  href: api/Neo.Network.P2P.Payloads.NotValidBefore.html#Neo_Network_P2P_Payloads_NotValidBefore_SerializeWithoutType_System_IO_BinaryWriter_
  commentId: M:Neo.Network.P2P.Payloads.NotValidBefore.SerializeWithoutType(System.IO.BinaryWriter)
  fullName: Neo.Network.P2P.Payloads.NotValidBefore.SerializeWithoutType(System.IO.BinaryWriter)
  nameWithType: NotValidBefore.SerializeWithoutType(BinaryWriter)
- uid: Neo.Network.P2P.Payloads.NotValidBefore.SerializeWithoutType*
  name: SerializeWithoutType
  href: api/Neo.Network.P2P.Payloads.NotValidBefore.html#Neo_Network_P2P_Payloads_NotValidBefore_SerializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.NotValidBefore.SerializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.NotValidBefore.SerializeWithoutType
  nameWithType: NotValidBefore.SerializeWithoutType
- uid: Neo.Network.P2P.Payloads.NotValidBefore.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.NotValidBefore.html#Neo_Network_P2P_Payloads_NotValidBefore_Size
  commentId: P:Neo.Network.P2P.Payloads.NotValidBefore.Size
  fullName: Neo.Network.P2P.Payloads.NotValidBefore.Size
  nameWithType: NotValidBefore.Size
- uid: Neo.Network.P2P.Payloads.NotValidBefore.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.NotValidBefore.html#Neo_Network_P2P_Payloads_NotValidBefore_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.NotValidBefore.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.NotValidBefore.Size
  nameWithType: NotValidBefore.Size
- uid: Neo.Network.P2P.Payloads.NotValidBefore.ToJson
  name: ToJson()
  href: api/Neo.Network.P2P.Payloads.NotValidBefore.html#Neo_Network_P2P_Payloads_NotValidBefore_ToJson
  commentId: M:Neo.Network.P2P.Payloads.NotValidBefore.ToJson
  fullName: Neo.Network.P2P.Payloads.NotValidBefore.ToJson()
  nameWithType: NotValidBefore.ToJson()
- uid: Neo.Network.P2P.Payloads.NotValidBefore.ToJson*
  name: ToJson
  href: api/Neo.Network.P2P.Payloads.NotValidBefore.html#Neo_Network_P2P_Payloads_NotValidBefore_ToJson_
  commentId: Overload:Neo.Network.P2P.Payloads.NotValidBefore.ToJson
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.NotValidBefore.ToJson
  nameWithType: NotValidBefore.ToJson
- uid: Neo.Network.P2P.Payloads.NotValidBefore.Type
  name: Type
  href: api/Neo.Network.P2P.Payloads.NotValidBefore.html#Neo_Network_P2P_Payloads_NotValidBefore_Type
  commentId: P:Neo.Network.P2P.Payloads.NotValidBefore.Type
  fullName: Neo.Network.P2P.Payloads.NotValidBefore.Type
  nameWithType: NotValidBefore.Type
- uid: Neo.Network.P2P.Payloads.NotValidBefore.Type*
  name: Type
  href: api/Neo.Network.P2P.Payloads.NotValidBefore.html#Neo_Network_P2P_Payloads_NotValidBefore_Type_
  commentId: Overload:Neo.Network.P2P.Payloads.NotValidBefore.Type
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.NotValidBefore.Type
  nameWithType: NotValidBefore.Type
- uid: Neo.Network.P2P.Payloads.NotValidBefore.Verify(Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.Transaction)
  name: Verify(DataCache, Transaction)
  href: api/Neo.Network.P2P.Payloads.NotValidBefore.html#Neo_Network_P2P_Payloads_NotValidBefore_Verify_Neo_Persistence_DataCache_Neo_Network_P2P_Payloads_Transaction_
  commentId: M:Neo.Network.P2P.Payloads.NotValidBefore.Verify(Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.Transaction)
  fullName: Neo.Network.P2P.Payloads.NotValidBefore.Verify(Neo.Persistence.DataCache, Neo.Network.P2P.Payloads.Transaction)
  nameWithType: NotValidBefore.Verify(DataCache, Transaction)
- uid: Neo.Network.P2P.Payloads.NotValidBefore.Verify*
  name: Verify
  href: api/Neo.Network.P2P.Payloads.NotValidBefore.html#Neo_Network_P2P_Payloads_NotValidBefore_Verify_
  commentId: Overload:Neo.Network.P2P.Payloads.NotValidBefore.Verify
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.NotValidBefore.Verify
  nameWithType: NotValidBefore.Verify
- uid: Neo.Network.P2P.Payloads.OracleResponse
  name: OracleResponse
  href: api/Neo.Network.P2P.Payloads.OracleResponse.html
  commentId: T:Neo.Network.P2P.Payloads.OracleResponse
  fullName: Neo.Network.P2P.Payloads.OracleResponse
  nameWithType: OracleResponse
- uid: Neo.Network.P2P.Payloads.OracleResponse.AllowMultiple
  name: AllowMultiple
  href: api/Neo.Network.P2P.Payloads.OracleResponse.html#Neo_Network_P2P_Payloads_OracleResponse_AllowMultiple
  commentId: P:Neo.Network.P2P.Payloads.OracleResponse.AllowMultiple
  fullName: Neo.Network.P2P.Payloads.OracleResponse.AllowMultiple
  nameWithType: OracleResponse.AllowMultiple
- uid: Neo.Network.P2P.Payloads.OracleResponse.AllowMultiple*
  name: AllowMultiple
  href: api/Neo.Network.P2P.Payloads.OracleResponse.html#Neo_Network_P2P_Payloads_OracleResponse_AllowMultiple_
  commentId: Overload:Neo.Network.P2P.Payloads.OracleResponse.AllowMultiple
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.OracleResponse.AllowMultiple
  nameWithType: OracleResponse.AllowMultiple
- uid: Neo.Network.P2P.Payloads.OracleResponse.Code
  name: Code
  href: api/Neo.Network.P2P.Payloads.OracleResponse.html#Neo_Network_P2P_Payloads_OracleResponse_Code
  commentId: F:Neo.Network.P2P.Payloads.OracleResponse.Code
  fullName: Neo.Network.P2P.Payloads.OracleResponse.Code
  nameWithType: OracleResponse.Code
- uid: Neo.Network.P2P.Payloads.OracleResponse.DeserializeWithoutType(Neo.IO.MemoryReader@)
  name: DeserializeWithoutType(ref MemoryReader)
  href: api/Neo.Network.P2P.Payloads.OracleResponse.html#Neo_Network_P2P_Payloads_OracleResponse_DeserializeWithoutType_Neo_IO_MemoryReader__
  commentId: M:Neo.Network.P2P.Payloads.OracleResponse.DeserializeWithoutType(Neo.IO.MemoryReader@)
  name.vb: DeserializeWithoutType(MemoryReader)
  fullName: Neo.Network.P2P.Payloads.OracleResponse.DeserializeWithoutType(ref Neo.IO.MemoryReader)
  fullName.vb: Neo.Network.P2P.Payloads.OracleResponse.DeserializeWithoutType(Neo.IO.MemoryReader)
  nameWithType: OracleResponse.DeserializeWithoutType(ref MemoryReader)
  nameWithType.vb: OracleResponse.DeserializeWithoutType(MemoryReader)
- uid: Neo.Network.P2P.Payloads.OracleResponse.DeserializeWithoutType*
  name: DeserializeWithoutType
  href: api/Neo.Network.P2P.Payloads.OracleResponse.html#Neo_Network_P2P_Payloads_OracleResponse_DeserializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.OracleResponse.DeserializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.OracleResponse.DeserializeWithoutType
  nameWithType: OracleResponse.DeserializeWithoutType
- uid: Neo.Network.P2P.Payloads.OracleResponse.FixedScript
  name: FixedScript
  href: api/Neo.Network.P2P.Payloads.OracleResponse.html#Neo_Network_P2P_Payloads_OracleResponse_FixedScript
  commentId: F:Neo.Network.P2P.Payloads.OracleResponse.FixedScript
  fullName: Neo.Network.P2P.Payloads.OracleResponse.FixedScript
  nameWithType: OracleResponse.FixedScript
- uid: Neo.Network.P2P.Payloads.OracleResponse.Id
  name: Id
  href: api/Neo.Network.P2P.Payloads.OracleResponse.html#Neo_Network_P2P_Payloads_OracleResponse_Id
  commentId: F:Neo.Network.P2P.Payloads.OracleResponse.Id
  fullName: Neo.Network.P2P.Payloads.OracleResponse.Id
  nameWithType: OracleResponse.Id
- uid: Neo.Network.P2P.Payloads.OracleResponse.MaxResultSize
  name: MaxResultSize
  href: api/Neo.Network.P2P.Payloads.OracleResponse.html#Neo_Network_P2P_Payloads_OracleResponse_MaxResultSize
  commentId: F:Neo.Network.P2P.Payloads.OracleResponse.MaxResultSize
  fullName: Neo.Network.P2P.Payloads.OracleResponse.MaxResultSize
  nameWithType: OracleResponse.MaxResultSize
- uid: Neo.Network.P2P.Payloads.OracleResponse.Result
  name: Result
  href: api/Neo.Network.P2P.Payloads.OracleResponse.html#Neo_Network_P2P_Payloads_OracleResponse_Result
  commentId: F:Neo.Network.P2P.Payloads.OracleResponse.Result
  fullName: Neo.Network.P2P.Payloads.OracleResponse.Result
  nameWithType: OracleResponse.Result
- uid: Neo.Network.P2P.Payloads.OracleResponse.SerializeWithoutType(System.IO.BinaryWriter)
  name: SerializeWithoutType(BinaryWriter)
  href: api/Neo.Network.P2P.Payloads.OracleResponse.html#Neo_Network_P2P_Payloads_OracleResponse_SerializeWithoutType_System_IO_BinaryWriter_
  commentId: M:Neo.Network.P2P.Payloads.OracleResponse.SerializeWithoutType(System.IO.BinaryWriter)
  fullName: Neo.Network.P2P.Payloads.OracleResponse.SerializeWithoutType(System.IO.BinaryWriter)
  nameWithType: OracleResponse.SerializeWithoutType(BinaryWriter)
- uid: Neo.Network.P2P.Payloads.OracleResponse.SerializeWithoutType*
  name: SerializeWithoutType
  href: api/Neo.Network.P2P.Payloads.OracleResponse.html#Neo_Network_P2P_Payloads_OracleResponse_SerializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.OracleResponse.SerializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.OracleResponse.SerializeWithoutType
  nameWithType: OracleResponse.SerializeWithoutType
- uid: Neo.Network.P2P.Payloads.OracleResponse.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.OracleResponse.html#Neo_Network_P2P_Payloads_OracleResponse_Size
  commentId: P:Neo.Network.P2P.Payloads.OracleResponse.Size
  fullName: Neo.Network.P2P.Payloads.OracleResponse.Size
  nameWithType: OracleResponse.Size
- uid: Neo.Network.P2P.Payloads.OracleResponse.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.OracleResponse.html#Neo_Network_P2P_Payloads_OracleResponse_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.OracleResponse.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.OracleResponse.Size
  nameWithType: OracleResponse.Size
- uid: Neo.Network.P2P.Payloads.OracleResponse.ToJson
  name: ToJson()
  href: api/Neo.Network.P2P.Payloads.OracleResponse.html#Neo_Network_P2P_Payloads_OracleResponse_ToJson
  commentId: M:Neo.Network.P2P.Payloads.OracleResponse.ToJson
  fullName: Neo.Network.P2P.Payloads.OracleResponse.ToJson()
  nameWithType: OracleResponse.ToJson()
- uid: Neo.Network.P2P.Payloads.OracleResponse.ToJson*
  name: ToJson
  href: api/Neo.Network.P2P.Payloads.OracleResponse.html#Neo_Network_P2P_Payloads_OracleResponse_ToJson_
  commentId: Overload:Neo.Network.P2P.Payloads.OracleResponse.ToJson
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.OracleResponse.ToJson
  nameWithType: OracleResponse.ToJson
- uid: Neo.Network.P2P.Payloads.OracleResponse.Type
  name: Type
  href: api/Neo.Network.P2P.Payloads.OracleResponse.html#Neo_Network_P2P_Payloads_OracleResponse_Type
  commentId: P:Neo.Network.P2P.Payloads.OracleResponse.Type
  fullName: Neo.Network.P2P.Payloads.OracleResponse.Type
  nameWithType: OracleResponse.Type
- uid: Neo.Network.P2P.Payloads.OracleResponse.Type*
  name: Type
  href: api/Neo.Network.P2P.Payloads.OracleResponse.html#Neo_Network_P2P_Payloads_OracleResponse_Type_
  commentId: Overload:Neo.Network.P2P.Payloads.OracleResponse.Type
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.OracleResponse.Type
  nameWithType: OracleResponse.Type
- uid: Neo.Network.P2P.Payloads.OracleResponse.Verify(Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.Transaction)
  name: Verify(DataCache, Transaction)
  href: api/Neo.Network.P2P.Payloads.OracleResponse.html#Neo_Network_P2P_Payloads_OracleResponse_Verify_Neo_Persistence_DataCache_Neo_Network_P2P_Payloads_Transaction_
  commentId: M:Neo.Network.P2P.Payloads.OracleResponse.Verify(Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.Transaction)
  fullName: Neo.Network.P2P.Payloads.OracleResponse.Verify(Neo.Persistence.DataCache, Neo.Network.P2P.Payloads.Transaction)
  nameWithType: OracleResponse.Verify(DataCache, Transaction)
- uid: Neo.Network.P2P.Payloads.OracleResponse.Verify*
  name: Verify
  href: api/Neo.Network.P2P.Payloads.OracleResponse.html#Neo_Network_P2P_Payloads_OracleResponse_Verify_
  commentId: Overload:Neo.Network.P2P.Payloads.OracleResponse.Verify
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.OracleResponse.Verify
  nameWithType: OracleResponse.Verify
- uid: Neo.Network.P2P.Payloads.OracleResponseCode
  name: OracleResponseCode
  href: api/Neo.Network.P2P.Payloads.OracleResponseCode.html
  commentId: T:Neo.Network.P2P.Payloads.OracleResponseCode
  fullName: Neo.Network.P2P.Payloads.OracleResponseCode
  nameWithType: OracleResponseCode
- uid: Neo.Network.P2P.Payloads.OracleResponseCode.ConsensusUnreachable
  name: ConsensusUnreachable
  href: api/Neo.Network.P2P.Payloads.OracleResponseCode.html#Neo_Network_P2P_Payloads_OracleResponseCode_ConsensusUnreachable
  commentId: F:Neo.Network.P2P.Payloads.OracleResponseCode.ConsensusUnreachable
  fullName: Neo.Network.P2P.Payloads.OracleResponseCode.ConsensusUnreachable
  nameWithType: OracleResponseCode.ConsensusUnreachable
- uid: Neo.Network.P2P.Payloads.OracleResponseCode.ContentTypeNotSupported
  name: ContentTypeNotSupported
  href: api/Neo.Network.P2P.Payloads.OracleResponseCode.html#Neo_Network_P2P_Payloads_OracleResponseCode_ContentTypeNotSupported
  commentId: F:Neo.Network.P2P.Payloads.OracleResponseCode.ContentTypeNotSupported
  fullName: Neo.Network.P2P.Payloads.OracleResponseCode.ContentTypeNotSupported
  nameWithType: OracleResponseCode.ContentTypeNotSupported
- uid: Neo.Network.P2P.Payloads.OracleResponseCode.Error
  name: Error
  href: api/Neo.Network.P2P.Payloads.OracleResponseCode.html#Neo_Network_P2P_Payloads_OracleResponseCode_Error
  commentId: F:Neo.Network.P2P.Payloads.OracleResponseCode.Error
  fullName: Neo.Network.P2P.Payloads.OracleResponseCode.Error
  nameWithType: OracleResponseCode.Error
- uid: Neo.Network.P2P.Payloads.OracleResponseCode.Forbidden
  name: Forbidden
  href: api/Neo.Network.P2P.Payloads.OracleResponseCode.html#Neo_Network_P2P_Payloads_OracleResponseCode_Forbidden
  commentId: F:Neo.Network.P2P.Payloads.OracleResponseCode.Forbidden
  fullName: Neo.Network.P2P.Payloads.OracleResponseCode.Forbidden
  nameWithType: OracleResponseCode.Forbidden
- uid: Neo.Network.P2P.Payloads.OracleResponseCode.InsufficientFunds
  name: InsufficientFunds
  href: api/Neo.Network.P2P.Payloads.OracleResponseCode.html#Neo_Network_P2P_Payloads_OracleResponseCode_InsufficientFunds
  commentId: F:Neo.Network.P2P.Payloads.OracleResponseCode.InsufficientFunds
  fullName: Neo.Network.P2P.Payloads.OracleResponseCode.InsufficientFunds
  nameWithType: OracleResponseCode.InsufficientFunds
- uid: Neo.Network.P2P.Payloads.OracleResponseCode.NotFound
  name: NotFound
  href: api/Neo.Network.P2P.Payloads.OracleResponseCode.html#Neo_Network_P2P_Payloads_OracleResponseCode_NotFound
  commentId: F:Neo.Network.P2P.Payloads.OracleResponseCode.NotFound
  fullName: Neo.Network.P2P.Payloads.OracleResponseCode.NotFound
  nameWithType: OracleResponseCode.NotFound
- uid: Neo.Network.P2P.Payloads.OracleResponseCode.ProtocolNotSupported
  name: ProtocolNotSupported
  href: api/Neo.Network.P2P.Payloads.OracleResponseCode.html#Neo_Network_P2P_Payloads_OracleResponseCode_ProtocolNotSupported
  commentId: F:Neo.Network.P2P.Payloads.OracleResponseCode.ProtocolNotSupported
  fullName: Neo.Network.P2P.Payloads.OracleResponseCode.ProtocolNotSupported
  nameWithType: OracleResponseCode.ProtocolNotSupported
- uid: Neo.Network.P2P.Payloads.OracleResponseCode.ResponseTooLarge
  name: ResponseTooLarge
  href: api/Neo.Network.P2P.Payloads.OracleResponseCode.html#Neo_Network_P2P_Payloads_OracleResponseCode_ResponseTooLarge
  commentId: F:Neo.Network.P2P.Payloads.OracleResponseCode.ResponseTooLarge
  fullName: Neo.Network.P2P.Payloads.OracleResponseCode.ResponseTooLarge
  nameWithType: OracleResponseCode.ResponseTooLarge
- uid: Neo.Network.P2P.Payloads.OracleResponseCode.Success
  name: Success
  href: api/Neo.Network.P2P.Payloads.OracleResponseCode.html#Neo_Network_P2P_Payloads_OracleResponseCode_Success
  commentId: F:Neo.Network.P2P.Payloads.OracleResponseCode.Success
  fullName: Neo.Network.P2P.Payloads.OracleResponseCode.Success
  nameWithType: OracleResponseCode.Success
- uid: Neo.Network.P2P.Payloads.OracleResponseCode.Timeout
  name: Timeout
  href: api/Neo.Network.P2P.Payloads.OracleResponseCode.html#Neo_Network_P2P_Payloads_OracleResponseCode_Timeout
  commentId: F:Neo.Network.P2P.Payloads.OracleResponseCode.Timeout
  fullName: Neo.Network.P2P.Payloads.OracleResponseCode.Timeout
  nameWithType: OracleResponseCode.Timeout
- uid: Neo.Network.P2P.Payloads.PingPayload
  name: PingPayload
  href: api/Neo.Network.P2P.Payloads.PingPayload.html
  commentId: T:Neo.Network.P2P.Payloads.PingPayload
  fullName: Neo.Network.P2P.Payloads.PingPayload
  nameWithType: PingPayload
- uid: Neo.Network.P2P.Payloads.PingPayload.Create(System.UInt32)
  name: Create(uint)
  href: api/Neo.Network.P2P.Payloads.PingPayload.html#Neo_Network_P2P_Payloads_PingPayload_Create_System_UInt32_
  commentId: M:Neo.Network.P2P.Payloads.PingPayload.Create(System.UInt32)
  name.vb: Create(UInteger)
  fullName: Neo.Network.P2P.Payloads.PingPayload.Create(uint)
  fullName.vb: Neo.Network.P2P.Payloads.PingPayload.Create(UInteger)
  nameWithType: PingPayload.Create(uint)
  nameWithType.vb: PingPayload.Create(UInteger)
- uid: Neo.Network.P2P.Payloads.PingPayload.Create(System.UInt32,System.UInt32)
  name: Create(uint, uint)
  href: api/Neo.Network.P2P.Payloads.PingPayload.html#Neo_Network_P2P_Payloads_PingPayload_Create_System_UInt32_System_UInt32_
  commentId: M:Neo.Network.P2P.Payloads.PingPayload.Create(System.UInt32,System.UInt32)
  name.vb: Create(UInteger, UInteger)
  fullName: Neo.Network.P2P.Payloads.PingPayload.Create(uint, uint)
  fullName.vb: Neo.Network.P2P.Payloads.PingPayload.Create(UInteger, UInteger)
  nameWithType: PingPayload.Create(uint, uint)
  nameWithType.vb: PingPayload.Create(UInteger, UInteger)
- uid: Neo.Network.P2P.Payloads.PingPayload.Create*
  name: Create
  href: api/Neo.Network.P2P.Payloads.PingPayload.html#Neo_Network_P2P_Payloads_PingPayload_Create_
  commentId: Overload:Neo.Network.P2P.Payloads.PingPayload.Create
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.PingPayload.Create
  nameWithType: PingPayload.Create
- uid: Neo.Network.P2P.Payloads.PingPayload.LastBlockIndex
  name: LastBlockIndex
  href: api/Neo.Network.P2P.Payloads.PingPayload.html#Neo_Network_P2P_Payloads_PingPayload_LastBlockIndex
  commentId: F:Neo.Network.P2P.Payloads.PingPayload.LastBlockIndex
  fullName: Neo.Network.P2P.Payloads.PingPayload.LastBlockIndex
  nameWithType: PingPayload.LastBlockIndex
- uid: Neo.Network.P2P.Payloads.PingPayload.Nonce
  name: Nonce
  href: api/Neo.Network.P2P.Payloads.PingPayload.html#Neo_Network_P2P_Payloads_PingPayload_Nonce
  commentId: F:Neo.Network.P2P.Payloads.PingPayload.Nonce
  fullName: Neo.Network.P2P.Payloads.PingPayload.Nonce
  nameWithType: PingPayload.Nonce
- uid: Neo.Network.P2P.Payloads.PingPayload.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.PingPayload.html#Neo_Network_P2P_Payloads_PingPayload_Size
  commentId: P:Neo.Network.P2P.Payloads.PingPayload.Size
  fullName: Neo.Network.P2P.Payloads.PingPayload.Size
  nameWithType: PingPayload.Size
- uid: Neo.Network.P2P.Payloads.PingPayload.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.PingPayload.html#Neo_Network_P2P_Payloads_PingPayload_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.PingPayload.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.PingPayload.Size
  nameWithType: PingPayload.Size
- uid: Neo.Network.P2P.Payloads.PingPayload.Timestamp
  name: Timestamp
  href: api/Neo.Network.P2P.Payloads.PingPayload.html#Neo_Network_P2P_Payloads_PingPayload_Timestamp
  commentId: F:Neo.Network.P2P.Payloads.PingPayload.Timestamp
  fullName: Neo.Network.P2P.Payloads.PingPayload.Timestamp
  nameWithType: PingPayload.Timestamp
- uid: Neo.Network.P2P.Payloads.Signer
  name: Signer
  href: api/Neo.Network.P2P.Payloads.Signer.html
  commentId: T:Neo.Network.P2P.Payloads.Signer
  fullName: Neo.Network.P2P.Payloads.Signer
  nameWithType: Signer
- uid: Neo.Network.P2P.Payloads.Signer.Account
  name: Account
  href: api/Neo.Network.P2P.Payloads.Signer.html#Neo_Network_P2P_Payloads_Signer_Account
  commentId: F:Neo.Network.P2P.Payloads.Signer.Account
  fullName: Neo.Network.P2P.Payloads.Signer.Account
  nameWithType: Signer.Account
- uid: Neo.Network.P2P.Payloads.Signer.AllowedContracts
  name: AllowedContracts
  href: api/Neo.Network.P2P.Payloads.Signer.html#Neo_Network_P2P_Payloads_Signer_AllowedContracts
  commentId: F:Neo.Network.P2P.Payloads.Signer.AllowedContracts
  fullName: Neo.Network.P2P.Payloads.Signer.AllowedContracts
  nameWithType: Signer.AllowedContracts
- uid: Neo.Network.P2P.Payloads.Signer.AllowedGroups
  name: AllowedGroups
  href: api/Neo.Network.P2P.Payloads.Signer.html#Neo_Network_P2P_Payloads_Signer_AllowedGroups
  commentId: F:Neo.Network.P2P.Payloads.Signer.AllowedGroups
  fullName: Neo.Network.P2P.Payloads.Signer.AllowedGroups
  nameWithType: Signer.AllowedGroups
- uid: Neo.Network.P2P.Payloads.Signer.Deserialize(Neo.IO.MemoryReader@)
  name: Deserialize(ref MemoryReader)
  href: api/Neo.Network.P2P.Payloads.Signer.html#Neo_Network_P2P_Payloads_Signer_Deserialize_Neo_IO_MemoryReader__
  commentId: M:Neo.Network.P2P.Payloads.Signer.Deserialize(Neo.IO.MemoryReader@)
  name.vb: Deserialize(MemoryReader)
  fullName: Neo.Network.P2P.Payloads.Signer.Deserialize(ref Neo.IO.MemoryReader)
  fullName.vb: Neo.Network.P2P.Payloads.Signer.Deserialize(Neo.IO.MemoryReader)
  nameWithType: Signer.Deserialize(ref MemoryReader)
  nameWithType.vb: Signer.Deserialize(MemoryReader)
- uid: Neo.Network.P2P.Payloads.Signer.Deserialize*
  name: Deserialize
  href: api/Neo.Network.P2P.Payloads.Signer.html#Neo_Network_P2P_Payloads_Signer_Deserialize_
  commentId: Overload:Neo.Network.P2P.Payloads.Signer.Deserialize
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Signer.Deserialize
  nameWithType: Signer.Deserialize
- uid: Neo.Network.P2P.Payloads.Signer.FromJson(Neo.Json.JObject)
  name: FromJson(JObject)
  href: api/Neo.Network.P2P.Payloads.Signer.html#Neo_Network_P2P_Payloads_Signer_FromJson_Neo_Json_JObject_
  commentId: M:Neo.Network.P2P.Payloads.Signer.FromJson(Neo.Json.JObject)
  fullName: Neo.Network.P2P.Payloads.Signer.FromJson(Neo.Json.JObject)
  nameWithType: Signer.FromJson(JObject)
- uid: Neo.Network.P2P.Payloads.Signer.FromJson*
  name: FromJson
  href: api/Neo.Network.P2P.Payloads.Signer.html#Neo_Network_P2P_Payloads_Signer_FromJson_
  commentId: Overload:Neo.Network.P2P.Payloads.Signer.FromJson
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Signer.FromJson
  nameWithType: Signer.FromJson
- uid: Neo.Network.P2P.Payloads.Signer.GetAllRules
  name: GetAllRules()
  href: api/Neo.Network.P2P.Payloads.Signer.html#Neo_Network_P2P_Payloads_Signer_GetAllRules
  commentId: M:Neo.Network.P2P.Payloads.Signer.GetAllRules
  fullName: Neo.Network.P2P.Payloads.Signer.GetAllRules()
  nameWithType: Signer.GetAllRules()
- uid: Neo.Network.P2P.Payloads.Signer.GetAllRules*
  name: GetAllRules
  href: api/Neo.Network.P2P.Payloads.Signer.html#Neo_Network_P2P_Payloads_Signer_GetAllRules_
  commentId: Overload:Neo.Network.P2P.Payloads.Signer.GetAllRules
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Signer.GetAllRules
  nameWithType: Signer.GetAllRules
- uid: Neo.Network.P2P.Payloads.Signer.Rules
  name: Rules
  href: api/Neo.Network.P2P.Payloads.Signer.html#Neo_Network_P2P_Payloads_Signer_Rules
  commentId: F:Neo.Network.P2P.Payloads.Signer.Rules
  fullName: Neo.Network.P2P.Payloads.Signer.Rules
  nameWithType: Signer.Rules
- uid: Neo.Network.P2P.Payloads.Signer.Scopes
  name: Scopes
  href: api/Neo.Network.P2P.Payloads.Signer.html#Neo_Network_P2P_Payloads_Signer_Scopes
  commentId: F:Neo.Network.P2P.Payloads.Signer.Scopes
  fullName: Neo.Network.P2P.Payloads.Signer.Scopes
  nameWithType: Signer.Scopes
- uid: Neo.Network.P2P.Payloads.Signer.Serialize(System.IO.BinaryWriter)
  name: Serialize(BinaryWriter)
  href: api/Neo.Network.P2P.Payloads.Signer.html#Neo_Network_P2P_Payloads_Signer_Serialize_System_IO_BinaryWriter_
  commentId: M:Neo.Network.P2P.Payloads.Signer.Serialize(System.IO.BinaryWriter)
  fullName: Neo.Network.P2P.Payloads.Signer.Serialize(System.IO.BinaryWriter)
  nameWithType: Signer.Serialize(BinaryWriter)
- uid: Neo.Network.P2P.Payloads.Signer.Serialize*
  name: Serialize
  href: api/Neo.Network.P2P.Payloads.Signer.html#Neo_Network_P2P_Payloads_Signer_Serialize_
  commentId: Overload:Neo.Network.P2P.Payloads.Signer.Serialize
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Signer.Serialize
  nameWithType: Signer.Serialize
- uid: Neo.Network.P2P.Payloads.Signer.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.Signer.html#Neo_Network_P2P_Payloads_Signer_Size
  commentId: P:Neo.Network.P2P.Payloads.Signer.Size
  fullName: Neo.Network.P2P.Payloads.Signer.Size
  nameWithType: Signer.Size
- uid: Neo.Network.P2P.Payloads.Signer.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.Signer.html#Neo_Network_P2P_Payloads_Signer_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.Signer.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Signer.Size
  nameWithType: Signer.Size
- uid: Neo.Network.P2P.Payloads.Signer.ToJson
  name: ToJson()
  href: api/Neo.Network.P2P.Payloads.Signer.html#Neo_Network_P2P_Payloads_Signer_ToJson
  commentId: M:Neo.Network.P2P.Payloads.Signer.ToJson
  fullName: Neo.Network.P2P.Payloads.Signer.ToJson()
  nameWithType: Signer.ToJson()
- uid: Neo.Network.P2P.Payloads.Signer.ToJson*
  name: ToJson
  href: api/Neo.Network.P2P.Payloads.Signer.html#Neo_Network_P2P_Payloads_Signer_ToJson_
  commentId: Overload:Neo.Network.P2P.Payloads.Signer.ToJson
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Signer.ToJson
  nameWithType: Signer.ToJson
- uid: Neo.Network.P2P.Payloads.Transaction
  name: Transaction
  href: api/Neo.Network.P2P.Payloads.Transaction.html
  commentId: T:Neo.Network.P2P.Payloads.Transaction
  fullName: Neo.Network.P2P.Payloads.Transaction
  nameWithType: Transaction
- uid: Neo.Network.P2P.Payloads.Transaction.Attributes
  name: Attributes
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_Attributes
  commentId: P:Neo.Network.P2P.Payloads.Transaction.Attributes
  fullName: Neo.Network.P2P.Payloads.Transaction.Attributes
  nameWithType: Transaction.Attributes
- uid: Neo.Network.P2P.Payloads.Transaction.Attributes*
  name: Attributes
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_Attributes_
  commentId: Overload:Neo.Network.P2P.Payloads.Transaction.Attributes
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Transaction.Attributes
  nameWithType: Transaction.Attributes
- uid: Neo.Network.P2P.Payloads.Transaction.DeserializeUnsigned(Neo.IO.MemoryReader@)
  name: DeserializeUnsigned(ref MemoryReader)
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_DeserializeUnsigned_Neo_IO_MemoryReader__
  commentId: M:Neo.Network.P2P.Payloads.Transaction.DeserializeUnsigned(Neo.IO.MemoryReader@)
  name.vb: DeserializeUnsigned(MemoryReader)
  fullName: Neo.Network.P2P.Payloads.Transaction.DeserializeUnsigned(ref Neo.IO.MemoryReader)
  fullName.vb: Neo.Network.P2P.Payloads.Transaction.DeserializeUnsigned(Neo.IO.MemoryReader)
  nameWithType: Transaction.DeserializeUnsigned(ref MemoryReader)
  nameWithType.vb: Transaction.DeserializeUnsigned(MemoryReader)
- uid: Neo.Network.P2P.Payloads.Transaction.DeserializeUnsigned*
  name: DeserializeUnsigned
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_DeserializeUnsigned_
  commentId: Overload:Neo.Network.P2P.Payloads.Transaction.DeserializeUnsigned
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Transaction.DeserializeUnsigned
  nameWithType: Transaction.DeserializeUnsigned
- uid: Neo.Network.P2P.Payloads.Transaction.Equals(Neo.Network.P2P.Payloads.Transaction)
  name: Equals(Transaction)
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_Equals_Neo_Network_P2P_Payloads_Transaction_
  commentId: M:Neo.Network.P2P.Payloads.Transaction.Equals(Neo.Network.P2P.Payloads.Transaction)
  fullName: Neo.Network.P2P.Payloads.Transaction.Equals(Neo.Network.P2P.Payloads.Transaction)
  nameWithType: Transaction.Equals(Transaction)
- uid: Neo.Network.P2P.Payloads.Transaction.Equals(System.Object)
  name: Equals(object)
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_Equals_System_Object_
  commentId: M:Neo.Network.P2P.Payloads.Transaction.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Neo.Network.P2P.Payloads.Transaction.Equals(object)
  fullName.vb: Neo.Network.P2P.Payloads.Transaction.Equals(Object)
  nameWithType: Transaction.Equals(object)
  nameWithType.vb: Transaction.Equals(Object)
- uid: Neo.Network.P2P.Payloads.Transaction.Equals*
  name: Equals
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_Equals_
  commentId: Overload:Neo.Network.P2P.Payloads.Transaction.Equals
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Transaction.Equals
  nameWithType: Transaction.Equals
- uid: Neo.Network.P2P.Payloads.Transaction.FeePerByte
  name: FeePerByte
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_FeePerByte
  commentId: P:Neo.Network.P2P.Payloads.Transaction.FeePerByte
  fullName: Neo.Network.P2P.Payloads.Transaction.FeePerByte
  nameWithType: Transaction.FeePerByte
- uid: Neo.Network.P2P.Payloads.Transaction.FeePerByte*
  name: FeePerByte
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_FeePerByte_
  commentId: Overload:Neo.Network.P2P.Payloads.Transaction.FeePerByte
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Transaction.FeePerByte
  nameWithType: Transaction.FeePerByte
- uid: Neo.Network.P2P.Payloads.Transaction.GetAttribute*
  name: GetAttribute
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_GetAttribute_
  commentId: Overload:Neo.Network.P2P.Payloads.Transaction.GetAttribute
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Transaction.GetAttribute
  nameWithType: Transaction.GetAttribute
- uid: Neo.Network.P2P.Payloads.Transaction.GetAttribute``1
  name: GetAttribute<T>()
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_GetAttribute__1
  commentId: M:Neo.Network.P2P.Payloads.Transaction.GetAttribute``1
  name.vb: GetAttribute(Of T)()
  fullName: Neo.Network.P2P.Payloads.Transaction.GetAttribute<T>()
  fullName.vb: Neo.Network.P2P.Payloads.Transaction.GetAttribute(Of T)()
  nameWithType: Transaction.GetAttribute<T>()
  nameWithType.vb: Transaction.GetAttribute(Of T)()
- uid: Neo.Network.P2P.Payloads.Transaction.GetAttributes*
  name: GetAttributes
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_GetAttributes_
  commentId: Overload:Neo.Network.P2P.Payloads.Transaction.GetAttributes
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Transaction.GetAttributes
  nameWithType: Transaction.GetAttributes
- uid: Neo.Network.P2P.Payloads.Transaction.GetAttributes``1
  name: GetAttributes<T>()
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_GetAttributes__1
  commentId: M:Neo.Network.P2P.Payloads.Transaction.GetAttributes``1
  name.vb: GetAttributes(Of T)()
  fullName: Neo.Network.P2P.Payloads.Transaction.GetAttributes<T>()
  fullName.vb: Neo.Network.P2P.Payloads.Transaction.GetAttributes(Of T)()
  nameWithType: Transaction.GetAttributes<T>()
  nameWithType.vb: Transaction.GetAttributes(Of T)()
- uid: Neo.Network.P2P.Payloads.Transaction.GetHashCode
  name: GetHashCode()
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_GetHashCode
  commentId: M:Neo.Network.P2P.Payloads.Transaction.GetHashCode
  fullName: Neo.Network.P2P.Payloads.Transaction.GetHashCode()
  nameWithType: Transaction.GetHashCode()
- uid: Neo.Network.P2P.Payloads.Transaction.GetHashCode*
  name: GetHashCode
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_GetHashCode_
  commentId: Overload:Neo.Network.P2P.Payloads.Transaction.GetHashCode
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Transaction.GetHashCode
  nameWithType: Transaction.GetHashCode
- uid: Neo.Network.P2P.Payloads.Transaction.GetScriptHashesForVerifying(Neo.Persistence.DataCache)
  name: GetScriptHashesForVerifying(DataCache)
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_GetScriptHashesForVerifying_Neo_Persistence_DataCache_
  commentId: M:Neo.Network.P2P.Payloads.Transaction.GetScriptHashesForVerifying(Neo.Persistence.DataCache)
  fullName: Neo.Network.P2P.Payloads.Transaction.GetScriptHashesForVerifying(Neo.Persistence.DataCache)
  nameWithType: Transaction.GetScriptHashesForVerifying(DataCache)
- uid: Neo.Network.P2P.Payloads.Transaction.GetScriptHashesForVerifying*
  name: GetScriptHashesForVerifying
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_GetScriptHashesForVerifying_
  commentId: Overload:Neo.Network.P2P.Payloads.Transaction.GetScriptHashesForVerifying
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Transaction.GetScriptHashesForVerifying
  nameWithType: Transaction.GetScriptHashesForVerifying
- uid: Neo.Network.P2P.Payloads.Transaction.Hash
  name: Hash
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_Hash
  commentId: P:Neo.Network.P2P.Payloads.Transaction.Hash
  fullName: Neo.Network.P2P.Payloads.Transaction.Hash
  nameWithType: Transaction.Hash
- uid: Neo.Network.P2P.Payloads.Transaction.Hash*
  name: Hash
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_Hash_
  commentId: Overload:Neo.Network.P2P.Payloads.Transaction.Hash
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Transaction.Hash
  nameWithType: Transaction.Hash
- uid: Neo.Network.P2P.Payloads.Transaction.HeaderSize
  name: HeaderSize
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_HeaderSize
  commentId: F:Neo.Network.P2P.Payloads.Transaction.HeaderSize
  fullName: Neo.Network.P2P.Payloads.Transaction.HeaderSize
  nameWithType: Transaction.HeaderSize
- uid: Neo.Network.P2P.Payloads.Transaction.MaxTransactionAttributes
  name: MaxTransactionAttributes
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_MaxTransactionAttributes
  commentId: F:Neo.Network.P2P.Payloads.Transaction.MaxTransactionAttributes
  fullName: Neo.Network.P2P.Payloads.Transaction.MaxTransactionAttributes
  nameWithType: Transaction.MaxTransactionAttributes
- uid: Neo.Network.P2P.Payloads.Transaction.MaxTransactionSize
  name: MaxTransactionSize
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_MaxTransactionSize
  commentId: F:Neo.Network.P2P.Payloads.Transaction.MaxTransactionSize
  fullName: Neo.Network.P2P.Payloads.Transaction.MaxTransactionSize
  nameWithType: Transaction.MaxTransactionSize
- uid: Neo.Network.P2P.Payloads.Transaction.NetworkFee
  name: NetworkFee
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_NetworkFee
  commentId: P:Neo.Network.P2P.Payloads.Transaction.NetworkFee
  fullName: Neo.Network.P2P.Payloads.Transaction.NetworkFee
  nameWithType: Transaction.NetworkFee
- uid: Neo.Network.P2P.Payloads.Transaction.NetworkFee*
  name: NetworkFee
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_NetworkFee_
  commentId: Overload:Neo.Network.P2P.Payloads.Transaction.NetworkFee
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Transaction.NetworkFee
  nameWithType: Transaction.NetworkFee
- uid: Neo.Network.P2P.Payloads.Transaction.Nonce
  name: Nonce
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_Nonce
  commentId: P:Neo.Network.P2P.Payloads.Transaction.Nonce
  fullName: Neo.Network.P2P.Payloads.Transaction.Nonce
  nameWithType: Transaction.Nonce
- uid: Neo.Network.P2P.Payloads.Transaction.Nonce*
  name: Nonce
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_Nonce_
  commentId: Overload:Neo.Network.P2P.Payloads.Transaction.Nonce
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Transaction.Nonce
  nameWithType: Transaction.Nonce
- uid: Neo.Network.P2P.Payloads.Transaction.Script
  name: Script
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_Script
  commentId: P:Neo.Network.P2P.Payloads.Transaction.Script
  fullName: Neo.Network.P2P.Payloads.Transaction.Script
  nameWithType: Transaction.Script
- uid: Neo.Network.P2P.Payloads.Transaction.Script*
  name: Script
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_Script_
  commentId: Overload:Neo.Network.P2P.Payloads.Transaction.Script
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Transaction.Script
  nameWithType: Transaction.Script
- uid: Neo.Network.P2P.Payloads.Transaction.Sender
  name: Sender
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_Sender
  commentId: P:Neo.Network.P2P.Payloads.Transaction.Sender
  fullName: Neo.Network.P2P.Payloads.Transaction.Sender
  nameWithType: Transaction.Sender
- uid: Neo.Network.P2P.Payloads.Transaction.Sender*
  name: Sender
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_Sender_
  commentId: Overload:Neo.Network.P2P.Payloads.Transaction.Sender
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Transaction.Sender
  nameWithType: Transaction.Sender
- uid: Neo.Network.P2P.Payloads.Transaction.Signers
  name: Signers
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_Signers
  commentId: P:Neo.Network.P2P.Payloads.Transaction.Signers
  fullName: Neo.Network.P2P.Payloads.Transaction.Signers
  nameWithType: Transaction.Signers
- uid: Neo.Network.P2P.Payloads.Transaction.Signers*
  name: Signers
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_Signers_
  commentId: Overload:Neo.Network.P2P.Payloads.Transaction.Signers
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Transaction.Signers
  nameWithType: Transaction.Signers
- uid: Neo.Network.P2P.Payloads.Transaction.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_Size
  commentId: P:Neo.Network.P2P.Payloads.Transaction.Size
  fullName: Neo.Network.P2P.Payloads.Transaction.Size
  nameWithType: Transaction.Size
- uid: Neo.Network.P2P.Payloads.Transaction.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.Transaction.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Transaction.Size
  nameWithType: Transaction.Size
- uid: Neo.Network.P2P.Payloads.Transaction.SystemFee
  name: SystemFee
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_SystemFee
  commentId: P:Neo.Network.P2P.Payloads.Transaction.SystemFee
  fullName: Neo.Network.P2P.Payloads.Transaction.SystemFee
  nameWithType: Transaction.SystemFee
- uid: Neo.Network.P2P.Payloads.Transaction.SystemFee*
  name: SystemFee
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_SystemFee_
  commentId: Overload:Neo.Network.P2P.Payloads.Transaction.SystemFee
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Transaction.SystemFee
  nameWithType: Transaction.SystemFee
- uid: Neo.Network.P2P.Payloads.Transaction.ToJson(Neo.ProtocolSettings)
  name: ToJson(ProtocolSettings)
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_ToJson_Neo_ProtocolSettings_
  commentId: M:Neo.Network.P2P.Payloads.Transaction.ToJson(Neo.ProtocolSettings)
  fullName: Neo.Network.P2P.Payloads.Transaction.ToJson(Neo.ProtocolSettings)
  nameWithType: Transaction.ToJson(ProtocolSettings)
- uid: Neo.Network.P2P.Payloads.Transaction.ToJson*
  name: ToJson
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_ToJson_
  commentId: Overload:Neo.Network.P2P.Payloads.Transaction.ToJson
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Transaction.ToJson
  nameWithType: Transaction.ToJson
- uid: Neo.Network.P2P.Payloads.Transaction.ToStackItem(Neo.VM.ReferenceCounter)
  name: ToStackItem(ReferenceCounter)
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_ToStackItem_Neo_VM_ReferenceCounter_
  commentId: M:Neo.Network.P2P.Payloads.Transaction.ToStackItem(Neo.VM.ReferenceCounter)
  fullName: Neo.Network.P2P.Payloads.Transaction.ToStackItem(Neo.VM.ReferenceCounter)
  nameWithType: Transaction.ToStackItem(ReferenceCounter)
- uid: Neo.Network.P2P.Payloads.Transaction.ToStackItem*
  name: ToStackItem
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_ToStackItem_
  commentId: Overload:Neo.Network.P2P.Payloads.Transaction.ToStackItem
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Transaction.ToStackItem
  nameWithType: Transaction.ToStackItem
- uid: Neo.Network.P2P.Payloads.Transaction.ValidUntilBlock
  name: ValidUntilBlock
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_ValidUntilBlock
  commentId: P:Neo.Network.P2P.Payloads.Transaction.ValidUntilBlock
  fullName: Neo.Network.P2P.Payloads.Transaction.ValidUntilBlock
  nameWithType: Transaction.ValidUntilBlock
- uid: Neo.Network.P2P.Payloads.Transaction.ValidUntilBlock*
  name: ValidUntilBlock
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_ValidUntilBlock_
  commentId: Overload:Neo.Network.P2P.Payloads.Transaction.ValidUntilBlock
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Transaction.ValidUntilBlock
  nameWithType: Transaction.ValidUntilBlock
- uid: Neo.Network.P2P.Payloads.Transaction.Verify(Neo.ProtocolSettings,Neo.Persistence.DataCache,Neo.Ledger.TransactionVerificationContext,System.Collections.Generic.IEnumerable{Neo.Network.P2P.Payloads.Transaction})
  name: Verify(ProtocolSettings, DataCache, TransactionVerificationContext, IEnumerable<Transaction>)
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_Verify_Neo_ProtocolSettings_Neo_Persistence_DataCache_Neo_Ledger_TransactionVerificationContext_System_Collections_Generic_IEnumerable_Neo_Network_P2P_Payloads_Transaction__
  commentId: M:Neo.Network.P2P.Payloads.Transaction.Verify(Neo.ProtocolSettings,Neo.Persistence.DataCache,Neo.Ledger.TransactionVerificationContext,System.Collections.Generic.IEnumerable{Neo.Network.P2P.Payloads.Transaction})
  name.vb: Verify(ProtocolSettings, DataCache, TransactionVerificationContext, IEnumerable(Of Transaction))
  fullName: Neo.Network.P2P.Payloads.Transaction.Verify(Neo.ProtocolSettings, Neo.Persistence.DataCache, Neo.Ledger.TransactionVerificationContext, System.Collections.Generic.IEnumerable<Neo.Network.P2P.Payloads.Transaction>)
  fullName.vb: Neo.Network.P2P.Payloads.Transaction.Verify(Neo.ProtocolSettings, Neo.Persistence.DataCache, Neo.Ledger.TransactionVerificationContext, System.Collections.Generic.IEnumerable(Of Neo.Network.P2P.Payloads.Transaction))
  nameWithType: Transaction.Verify(ProtocolSettings, DataCache, TransactionVerificationContext, IEnumerable<Transaction>)
  nameWithType.vb: Transaction.Verify(ProtocolSettings, DataCache, TransactionVerificationContext, IEnumerable(Of Transaction))
- uid: Neo.Network.P2P.Payloads.Transaction.Verify*
  name: Verify
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_Verify_
  commentId: Overload:Neo.Network.P2P.Payloads.Transaction.Verify
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Transaction.Verify
  nameWithType: Transaction.Verify
- uid: Neo.Network.P2P.Payloads.Transaction.VerifyStateDependent(Neo.ProtocolSettings,Neo.Persistence.DataCache,Neo.Ledger.TransactionVerificationContext,System.Collections.Generic.IEnumerable{Neo.Network.P2P.Payloads.Transaction})
  name: VerifyStateDependent(ProtocolSettings, DataCache, TransactionVerificationContext, IEnumerable<Transaction>)
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_VerifyStateDependent_Neo_ProtocolSettings_Neo_Persistence_DataCache_Neo_Ledger_TransactionVerificationContext_System_Collections_Generic_IEnumerable_Neo_Network_P2P_Payloads_Transaction__
  commentId: M:Neo.Network.P2P.Payloads.Transaction.VerifyStateDependent(Neo.ProtocolSettings,Neo.Persistence.DataCache,Neo.Ledger.TransactionVerificationContext,System.Collections.Generic.IEnumerable{Neo.Network.P2P.Payloads.Transaction})
  name.vb: VerifyStateDependent(ProtocolSettings, DataCache, TransactionVerificationContext, IEnumerable(Of Transaction))
  fullName: Neo.Network.P2P.Payloads.Transaction.VerifyStateDependent(Neo.ProtocolSettings, Neo.Persistence.DataCache, Neo.Ledger.TransactionVerificationContext, System.Collections.Generic.IEnumerable<Neo.Network.P2P.Payloads.Transaction>)
  fullName.vb: Neo.Network.P2P.Payloads.Transaction.VerifyStateDependent(Neo.ProtocolSettings, Neo.Persistence.DataCache, Neo.Ledger.TransactionVerificationContext, System.Collections.Generic.IEnumerable(Of Neo.Network.P2P.Payloads.Transaction))
  nameWithType: Transaction.VerifyStateDependent(ProtocolSettings, DataCache, TransactionVerificationContext, IEnumerable<Transaction>)
  nameWithType.vb: Transaction.VerifyStateDependent(ProtocolSettings, DataCache, TransactionVerificationContext, IEnumerable(Of Transaction))
- uid: Neo.Network.P2P.Payloads.Transaction.VerifyStateDependent*
  name: VerifyStateDependent
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_VerifyStateDependent_
  commentId: Overload:Neo.Network.P2P.Payloads.Transaction.VerifyStateDependent
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Transaction.VerifyStateDependent
  nameWithType: Transaction.VerifyStateDependent
- uid: Neo.Network.P2P.Payloads.Transaction.VerifyStateIndependent(Neo.ProtocolSettings)
  name: VerifyStateIndependent(ProtocolSettings)
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_VerifyStateIndependent_Neo_ProtocolSettings_
  commentId: M:Neo.Network.P2P.Payloads.Transaction.VerifyStateIndependent(Neo.ProtocolSettings)
  fullName: Neo.Network.P2P.Payloads.Transaction.VerifyStateIndependent(Neo.ProtocolSettings)
  nameWithType: Transaction.VerifyStateIndependent(ProtocolSettings)
- uid: Neo.Network.P2P.Payloads.Transaction.VerifyStateIndependent*
  name: VerifyStateIndependent
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_VerifyStateIndependent_
  commentId: Overload:Neo.Network.P2P.Payloads.Transaction.VerifyStateIndependent
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Transaction.VerifyStateIndependent
  nameWithType: Transaction.VerifyStateIndependent
- uid: Neo.Network.P2P.Payloads.Transaction.Version
  name: Version
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_Version
  commentId: P:Neo.Network.P2P.Payloads.Transaction.Version
  fullName: Neo.Network.P2P.Payloads.Transaction.Version
  nameWithType: Transaction.Version
- uid: Neo.Network.P2P.Payloads.Transaction.Version*
  name: Version
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_Version_
  commentId: Overload:Neo.Network.P2P.Payloads.Transaction.Version
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Transaction.Version
  nameWithType: Transaction.Version
- uid: Neo.Network.P2P.Payloads.Transaction.Witnesses
  name: Witnesses
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_Witnesses
  commentId: P:Neo.Network.P2P.Payloads.Transaction.Witnesses
  fullName: Neo.Network.P2P.Payloads.Transaction.Witnesses
  nameWithType: Transaction.Witnesses
- uid: Neo.Network.P2P.Payloads.Transaction.Witnesses*
  name: Witnesses
  href: api/Neo.Network.P2P.Payloads.Transaction.html#Neo_Network_P2P_Payloads_Transaction_Witnesses_
  commentId: Overload:Neo.Network.P2P.Payloads.Transaction.Witnesses
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Transaction.Witnesses
  nameWithType: Transaction.Witnesses
- uid: Neo.Network.P2P.Payloads.TransactionAttribute
  name: TransactionAttribute
  href: api/Neo.Network.P2P.Payloads.TransactionAttribute.html
  commentId: T:Neo.Network.P2P.Payloads.TransactionAttribute
  fullName: Neo.Network.P2P.Payloads.TransactionAttribute
  nameWithType: TransactionAttribute
- uid: Neo.Network.P2P.Payloads.TransactionAttribute.AllowMultiple
  name: AllowMultiple
  href: api/Neo.Network.P2P.Payloads.TransactionAttribute.html#Neo_Network_P2P_Payloads_TransactionAttribute_AllowMultiple
  commentId: P:Neo.Network.P2P.Payloads.TransactionAttribute.AllowMultiple
  fullName: Neo.Network.P2P.Payloads.TransactionAttribute.AllowMultiple
  nameWithType: TransactionAttribute.AllowMultiple
- uid: Neo.Network.P2P.Payloads.TransactionAttribute.AllowMultiple*
  name: AllowMultiple
  href: api/Neo.Network.P2P.Payloads.TransactionAttribute.html#Neo_Network_P2P_Payloads_TransactionAttribute_AllowMultiple_
  commentId: Overload:Neo.Network.P2P.Payloads.TransactionAttribute.AllowMultiple
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.TransactionAttribute.AllowMultiple
  nameWithType: TransactionAttribute.AllowMultiple
- uid: Neo.Network.P2P.Payloads.TransactionAttribute.CalculateNetworkFee(Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.Transaction)
  name: CalculateNetworkFee(DataCache, Transaction)
  href: api/Neo.Network.P2P.Payloads.TransactionAttribute.html#Neo_Network_P2P_Payloads_TransactionAttribute_CalculateNetworkFee_Neo_Persistence_DataCache_Neo_Network_P2P_Payloads_Transaction_
  commentId: M:Neo.Network.P2P.Payloads.TransactionAttribute.CalculateNetworkFee(Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.Transaction)
  fullName: Neo.Network.P2P.Payloads.TransactionAttribute.CalculateNetworkFee(Neo.Persistence.DataCache, Neo.Network.P2P.Payloads.Transaction)
  nameWithType: TransactionAttribute.CalculateNetworkFee(DataCache, Transaction)
- uid: Neo.Network.P2P.Payloads.TransactionAttribute.CalculateNetworkFee*
  name: CalculateNetworkFee
  href: api/Neo.Network.P2P.Payloads.TransactionAttribute.html#Neo_Network_P2P_Payloads_TransactionAttribute_CalculateNetworkFee_
  commentId: Overload:Neo.Network.P2P.Payloads.TransactionAttribute.CalculateNetworkFee
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.TransactionAttribute.CalculateNetworkFee
  nameWithType: TransactionAttribute.CalculateNetworkFee
- uid: Neo.Network.P2P.Payloads.TransactionAttribute.Deserialize(Neo.IO.MemoryReader@)
  name: Deserialize(ref MemoryReader)
  href: api/Neo.Network.P2P.Payloads.TransactionAttribute.html#Neo_Network_P2P_Payloads_TransactionAttribute_Deserialize_Neo_IO_MemoryReader__
  commentId: M:Neo.Network.P2P.Payloads.TransactionAttribute.Deserialize(Neo.IO.MemoryReader@)
  name.vb: Deserialize(MemoryReader)
  fullName: Neo.Network.P2P.Payloads.TransactionAttribute.Deserialize(ref Neo.IO.MemoryReader)
  fullName.vb: Neo.Network.P2P.Payloads.TransactionAttribute.Deserialize(Neo.IO.MemoryReader)
  nameWithType: TransactionAttribute.Deserialize(ref MemoryReader)
  nameWithType.vb: TransactionAttribute.Deserialize(MemoryReader)
- uid: Neo.Network.P2P.Payloads.TransactionAttribute.Deserialize*
  name: Deserialize
  href: api/Neo.Network.P2P.Payloads.TransactionAttribute.html#Neo_Network_P2P_Payloads_TransactionAttribute_Deserialize_
  commentId: Overload:Neo.Network.P2P.Payloads.TransactionAttribute.Deserialize
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.TransactionAttribute.Deserialize
  nameWithType: TransactionAttribute.Deserialize
- uid: Neo.Network.P2P.Payloads.TransactionAttribute.DeserializeFrom(Neo.IO.MemoryReader@)
  name: DeserializeFrom(ref MemoryReader)
  href: api/Neo.Network.P2P.Payloads.TransactionAttribute.html#Neo_Network_P2P_Payloads_TransactionAttribute_DeserializeFrom_Neo_IO_MemoryReader__
  commentId: M:Neo.Network.P2P.Payloads.TransactionAttribute.DeserializeFrom(Neo.IO.MemoryReader@)
  name.vb: DeserializeFrom(MemoryReader)
  fullName: Neo.Network.P2P.Payloads.TransactionAttribute.DeserializeFrom(ref Neo.IO.MemoryReader)
  fullName.vb: Neo.Network.P2P.Payloads.TransactionAttribute.DeserializeFrom(Neo.IO.MemoryReader)
  nameWithType: TransactionAttribute.DeserializeFrom(ref MemoryReader)
  nameWithType.vb: TransactionAttribute.DeserializeFrom(MemoryReader)
- uid: Neo.Network.P2P.Payloads.TransactionAttribute.DeserializeFrom*
  name: DeserializeFrom
  href: api/Neo.Network.P2P.Payloads.TransactionAttribute.html#Neo_Network_P2P_Payloads_TransactionAttribute_DeserializeFrom_
  commentId: Overload:Neo.Network.P2P.Payloads.TransactionAttribute.DeserializeFrom
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.TransactionAttribute.DeserializeFrom
  nameWithType: TransactionAttribute.DeserializeFrom
- uid: Neo.Network.P2P.Payloads.TransactionAttribute.DeserializeWithoutType(Neo.IO.MemoryReader@)
  name: DeserializeWithoutType(ref MemoryReader)
  href: api/Neo.Network.P2P.Payloads.TransactionAttribute.html#Neo_Network_P2P_Payloads_TransactionAttribute_DeserializeWithoutType_Neo_IO_MemoryReader__
  commentId: M:Neo.Network.P2P.Payloads.TransactionAttribute.DeserializeWithoutType(Neo.IO.MemoryReader@)
  name.vb: DeserializeWithoutType(MemoryReader)
  fullName: Neo.Network.P2P.Payloads.TransactionAttribute.DeserializeWithoutType(ref Neo.IO.MemoryReader)
  fullName.vb: Neo.Network.P2P.Payloads.TransactionAttribute.DeserializeWithoutType(Neo.IO.MemoryReader)
  nameWithType: TransactionAttribute.DeserializeWithoutType(ref MemoryReader)
  nameWithType.vb: TransactionAttribute.DeserializeWithoutType(MemoryReader)
- uid: Neo.Network.P2P.Payloads.TransactionAttribute.DeserializeWithoutType*
  name: DeserializeWithoutType
  href: api/Neo.Network.P2P.Payloads.TransactionAttribute.html#Neo_Network_P2P_Payloads_TransactionAttribute_DeserializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.TransactionAttribute.DeserializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.TransactionAttribute.DeserializeWithoutType
  nameWithType: TransactionAttribute.DeserializeWithoutType
- uid: Neo.Network.P2P.Payloads.TransactionAttribute.Serialize(System.IO.BinaryWriter)
  name: Serialize(BinaryWriter)
  href: api/Neo.Network.P2P.Payloads.TransactionAttribute.html#Neo_Network_P2P_Payloads_TransactionAttribute_Serialize_System_IO_BinaryWriter_
  commentId: M:Neo.Network.P2P.Payloads.TransactionAttribute.Serialize(System.IO.BinaryWriter)
  fullName: Neo.Network.P2P.Payloads.TransactionAttribute.Serialize(System.IO.BinaryWriter)
  nameWithType: TransactionAttribute.Serialize(BinaryWriter)
- uid: Neo.Network.P2P.Payloads.TransactionAttribute.Serialize*
  name: Serialize
  href: api/Neo.Network.P2P.Payloads.TransactionAttribute.html#Neo_Network_P2P_Payloads_TransactionAttribute_Serialize_
  commentId: Overload:Neo.Network.P2P.Payloads.TransactionAttribute.Serialize
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.TransactionAttribute.Serialize
  nameWithType: TransactionAttribute.Serialize
- uid: Neo.Network.P2P.Payloads.TransactionAttribute.SerializeWithoutType(System.IO.BinaryWriter)
  name: SerializeWithoutType(BinaryWriter)
  href: api/Neo.Network.P2P.Payloads.TransactionAttribute.html#Neo_Network_P2P_Payloads_TransactionAttribute_SerializeWithoutType_System_IO_BinaryWriter_
  commentId: M:Neo.Network.P2P.Payloads.TransactionAttribute.SerializeWithoutType(System.IO.BinaryWriter)
  fullName: Neo.Network.P2P.Payloads.TransactionAttribute.SerializeWithoutType(System.IO.BinaryWriter)
  nameWithType: TransactionAttribute.SerializeWithoutType(BinaryWriter)
- uid: Neo.Network.P2P.Payloads.TransactionAttribute.SerializeWithoutType*
  name: SerializeWithoutType
  href: api/Neo.Network.P2P.Payloads.TransactionAttribute.html#Neo_Network_P2P_Payloads_TransactionAttribute_SerializeWithoutType_
  commentId: Overload:Neo.Network.P2P.Payloads.TransactionAttribute.SerializeWithoutType
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.TransactionAttribute.SerializeWithoutType
  nameWithType: TransactionAttribute.SerializeWithoutType
- uid: Neo.Network.P2P.Payloads.TransactionAttribute.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.TransactionAttribute.html#Neo_Network_P2P_Payloads_TransactionAttribute_Size
  commentId: P:Neo.Network.P2P.Payloads.TransactionAttribute.Size
  fullName: Neo.Network.P2P.Payloads.TransactionAttribute.Size
  nameWithType: TransactionAttribute.Size
- uid: Neo.Network.P2P.Payloads.TransactionAttribute.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.TransactionAttribute.html#Neo_Network_P2P_Payloads_TransactionAttribute_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.TransactionAttribute.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.TransactionAttribute.Size
  nameWithType: TransactionAttribute.Size
- uid: Neo.Network.P2P.Payloads.TransactionAttribute.ToJson
  name: ToJson()
  href: api/Neo.Network.P2P.Payloads.TransactionAttribute.html#Neo_Network_P2P_Payloads_TransactionAttribute_ToJson
  commentId: M:Neo.Network.P2P.Payloads.TransactionAttribute.ToJson
  fullName: Neo.Network.P2P.Payloads.TransactionAttribute.ToJson()
  nameWithType: TransactionAttribute.ToJson()
- uid: Neo.Network.P2P.Payloads.TransactionAttribute.ToJson*
  name: ToJson
  href: api/Neo.Network.P2P.Payloads.TransactionAttribute.html#Neo_Network_P2P_Payloads_TransactionAttribute_ToJson_
  commentId: Overload:Neo.Network.P2P.Payloads.TransactionAttribute.ToJson
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.TransactionAttribute.ToJson
  nameWithType: TransactionAttribute.ToJson
- uid: Neo.Network.P2P.Payloads.TransactionAttribute.Type
  name: Type
  href: api/Neo.Network.P2P.Payloads.TransactionAttribute.html#Neo_Network_P2P_Payloads_TransactionAttribute_Type
  commentId: P:Neo.Network.P2P.Payloads.TransactionAttribute.Type
  fullName: Neo.Network.P2P.Payloads.TransactionAttribute.Type
  nameWithType: TransactionAttribute.Type
- uid: Neo.Network.P2P.Payloads.TransactionAttribute.Type*
  name: Type
  href: api/Neo.Network.P2P.Payloads.TransactionAttribute.html#Neo_Network_P2P_Payloads_TransactionAttribute_Type_
  commentId: Overload:Neo.Network.P2P.Payloads.TransactionAttribute.Type
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.TransactionAttribute.Type
  nameWithType: TransactionAttribute.Type
- uid: Neo.Network.P2P.Payloads.TransactionAttribute.Verify(Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.Transaction)
  name: Verify(DataCache, Transaction)
  href: api/Neo.Network.P2P.Payloads.TransactionAttribute.html#Neo_Network_P2P_Payloads_TransactionAttribute_Verify_Neo_Persistence_DataCache_Neo_Network_P2P_Payloads_Transaction_
  commentId: M:Neo.Network.P2P.Payloads.TransactionAttribute.Verify(Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.Transaction)
  fullName: Neo.Network.P2P.Payloads.TransactionAttribute.Verify(Neo.Persistence.DataCache, Neo.Network.P2P.Payloads.Transaction)
  nameWithType: TransactionAttribute.Verify(DataCache, Transaction)
- uid: Neo.Network.P2P.Payloads.TransactionAttribute.Verify*
  name: Verify
  href: api/Neo.Network.P2P.Payloads.TransactionAttribute.html#Neo_Network_P2P_Payloads_TransactionAttribute_Verify_
  commentId: Overload:Neo.Network.P2P.Payloads.TransactionAttribute.Verify
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.TransactionAttribute.Verify
  nameWithType: TransactionAttribute.Verify
- uid: Neo.Network.P2P.Payloads.TransactionAttributeType
  name: TransactionAttributeType
  href: api/Neo.Network.P2P.Payloads.TransactionAttributeType.html
  commentId: T:Neo.Network.P2P.Payloads.TransactionAttributeType
  fullName: Neo.Network.P2P.Payloads.TransactionAttributeType
  nameWithType: TransactionAttributeType
- uid: Neo.Network.P2P.Payloads.TransactionAttributeType.Conflicts
  name: Conflicts
  href: api/Neo.Network.P2P.Payloads.TransactionAttributeType.html#Neo_Network_P2P_Payloads_TransactionAttributeType_Conflicts
  commentId: F:Neo.Network.P2P.Payloads.TransactionAttributeType.Conflicts
  fullName: Neo.Network.P2P.Payloads.TransactionAttributeType.Conflicts
  nameWithType: TransactionAttributeType.Conflicts
- uid: Neo.Network.P2P.Payloads.TransactionAttributeType.HighPriority
  name: HighPriority
  href: api/Neo.Network.P2P.Payloads.TransactionAttributeType.html#Neo_Network_P2P_Payloads_TransactionAttributeType_HighPriority
  commentId: F:Neo.Network.P2P.Payloads.TransactionAttributeType.HighPriority
  fullName: Neo.Network.P2P.Payloads.TransactionAttributeType.HighPriority
  nameWithType: TransactionAttributeType.HighPriority
- uid: Neo.Network.P2P.Payloads.TransactionAttributeType.NotValidBefore
  name: NotValidBefore
  href: api/Neo.Network.P2P.Payloads.TransactionAttributeType.html#Neo_Network_P2P_Payloads_TransactionAttributeType_NotValidBefore
  commentId: F:Neo.Network.P2P.Payloads.TransactionAttributeType.NotValidBefore
  fullName: Neo.Network.P2P.Payloads.TransactionAttributeType.NotValidBefore
  nameWithType: TransactionAttributeType.NotValidBefore
- uid: Neo.Network.P2P.Payloads.TransactionAttributeType.OracleResponse
  name: OracleResponse
  href: api/Neo.Network.P2P.Payloads.TransactionAttributeType.html#Neo_Network_P2P_Payloads_TransactionAttributeType_OracleResponse
  commentId: F:Neo.Network.P2P.Payloads.TransactionAttributeType.OracleResponse
  fullName: Neo.Network.P2P.Payloads.TransactionAttributeType.OracleResponse
  nameWithType: TransactionAttributeType.OracleResponse
- uid: Neo.Network.P2P.Payloads.VersionPayload
  name: VersionPayload
  href: api/Neo.Network.P2P.Payloads.VersionPayload.html
  commentId: T:Neo.Network.P2P.Payloads.VersionPayload
  fullName: Neo.Network.P2P.Payloads.VersionPayload
  nameWithType: VersionPayload
- uid: Neo.Network.P2P.Payloads.VersionPayload.Capabilities
  name: Capabilities
  href: api/Neo.Network.P2P.Payloads.VersionPayload.html#Neo_Network_P2P_Payloads_VersionPayload_Capabilities
  commentId: F:Neo.Network.P2P.Payloads.VersionPayload.Capabilities
  fullName: Neo.Network.P2P.Payloads.VersionPayload.Capabilities
  nameWithType: VersionPayload.Capabilities
- uid: Neo.Network.P2P.Payloads.VersionPayload.Create(System.UInt32,System.UInt32,System.String,Neo.Network.P2P.Capabilities.NodeCapability[])
  name: Create(uint, uint, string, params NodeCapability[])
  href: api/Neo.Network.P2P.Payloads.VersionPayload.html#Neo_Network_P2P_Payloads_VersionPayload_Create_System_UInt32_System_UInt32_System_String_Neo_Network_P2P_Capabilities_NodeCapability___
  commentId: M:Neo.Network.P2P.Payloads.VersionPayload.Create(System.UInt32,System.UInt32,System.String,Neo.Network.P2P.Capabilities.NodeCapability[])
  name.vb: Create(UInteger, UInteger, String, ParamArray NodeCapability())
  fullName: Neo.Network.P2P.Payloads.VersionPayload.Create(uint, uint, string, params Neo.Network.P2P.Capabilities.NodeCapability[])
  fullName.vb: Neo.Network.P2P.Payloads.VersionPayload.Create(UInteger, UInteger, String, ParamArray Neo.Network.P2P.Capabilities.NodeCapability())
  nameWithType: VersionPayload.Create(uint, uint, string, params NodeCapability[])
  nameWithType.vb: VersionPayload.Create(UInteger, UInteger, String, ParamArray NodeCapability())
- uid: Neo.Network.P2P.Payloads.VersionPayload.Create*
  name: Create
  href: api/Neo.Network.P2P.Payloads.VersionPayload.html#Neo_Network_P2P_Payloads_VersionPayload_Create_
  commentId: Overload:Neo.Network.P2P.Payloads.VersionPayload.Create
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.VersionPayload.Create
  nameWithType: VersionPayload.Create
- uid: Neo.Network.P2P.Payloads.VersionPayload.MaxCapabilities
  name: MaxCapabilities
  href: api/Neo.Network.P2P.Payloads.VersionPayload.html#Neo_Network_P2P_Payloads_VersionPayload_MaxCapabilities
  commentId: F:Neo.Network.P2P.Payloads.VersionPayload.MaxCapabilities
  fullName: Neo.Network.P2P.Payloads.VersionPayload.MaxCapabilities
  nameWithType: VersionPayload.MaxCapabilities
- uid: Neo.Network.P2P.Payloads.VersionPayload.Network
  name: Network
  href: api/Neo.Network.P2P.Payloads.VersionPayload.html#Neo_Network_P2P_Payloads_VersionPayload_Network
  commentId: F:Neo.Network.P2P.Payloads.VersionPayload.Network
  fullName: Neo.Network.P2P.Payloads.VersionPayload.Network
  nameWithType: VersionPayload.Network
- uid: Neo.Network.P2P.Payloads.VersionPayload.Nonce
  name: Nonce
  href: api/Neo.Network.P2P.Payloads.VersionPayload.html#Neo_Network_P2P_Payloads_VersionPayload_Nonce
  commentId: F:Neo.Network.P2P.Payloads.VersionPayload.Nonce
  fullName: Neo.Network.P2P.Payloads.VersionPayload.Nonce
  nameWithType: VersionPayload.Nonce
- uid: Neo.Network.P2P.Payloads.VersionPayload.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.VersionPayload.html#Neo_Network_P2P_Payloads_VersionPayload_Size
  commentId: P:Neo.Network.P2P.Payloads.VersionPayload.Size
  fullName: Neo.Network.P2P.Payloads.VersionPayload.Size
  nameWithType: VersionPayload.Size
- uid: Neo.Network.P2P.Payloads.VersionPayload.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.VersionPayload.html#Neo_Network_P2P_Payloads_VersionPayload_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.VersionPayload.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.VersionPayload.Size
  nameWithType: VersionPayload.Size
- uid: Neo.Network.P2P.Payloads.VersionPayload.Timestamp
  name: Timestamp
  href: api/Neo.Network.P2P.Payloads.VersionPayload.html#Neo_Network_P2P_Payloads_VersionPayload_Timestamp
  commentId: F:Neo.Network.P2P.Payloads.VersionPayload.Timestamp
  fullName: Neo.Network.P2P.Payloads.VersionPayload.Timestamp
  nameWithType: VersionPayload.Timestamp
- uid: Neo.Network.P2P.Payloads.VersionPayload.UserAgent
  name: UserAgent
  href: api/Neo.Network.P2P.Payloads.VersionPayload.html#Neo_Network_P2P_Payloads_VersionPayload_UserAgent
  commentId: F:Neo.Network.P2P.Payloads.VersionPayload.UserAgent
  fullName: Neo.Network.P2P.Payloads.VersionPayload.UserAgent
  nameWithType: VersionPayload.UserAgent
- uid: Neo.Network.P2P.Payloads.VersionPayload.Version
  name: Version
  href: api/Neo.Network.P2P.Payloads.VersionPayload.html#Neo_Network_P2P_Payloads_VersionPayload_Version
  commentId: F:Neo.Network.P2P.Payloads.VersionPayload.Version
  fullName: Neo.Network.P2P.Payloads.VersionPayload.Version
  nameWithType: VersionPayload.Version
- uid: Neo.Network.P2P.Payloads.Witness
  name: Witness
  href: api/Neo.Network.P2P.Payloads.Witness.html
  commentId: T:Neo.Network.P2P.Payloads.Witness
  fullName: Neo.Network.P2P.Payloads.Witness
  nameWithType: Witness
- uid: Neo.Network.P2P.Payloads.Witness.InvocationScript
  name: InvocationScript
  href: api/Neo.Network.P2P.Payloads.Witness.html#Neo_Network_P2P_Payloads_Witness_InvocationScript
  commentId: F:Neo.Network.P2P.Payloads.Witness.InvocationScript
  fullName: Neo.Network.P2P.Payloads.Witness.InvocationScript
  nameWithType: Witness.InvocationScript
- uid: Neo.Network.P2P.Payloads.Witness.ScriptHash
  name: ScriptHash
  href: api/Neo.Network.P2P.Payloads.Witness.html#Neo_Network_P2P_Payloads_Witness_ScriptHash
  commentId: P:Neo.Network.P2P.Payloads.Witness.ScriptHash
  fullName: Neo.Network.P2P.Payloads.Witness.ScriptHash
  nameWithType: Witness.ScriptHash
- uid: Neo.Network.P2P.Payloads.Witness.ScriptHash*
  name: ScriptHash
  href: api/Neo.Network.P2P.Payloads.Witness.html#Neo_Network_P2P_Payloads_Witness_ScriptHash_
  commentId: Overload:Neo.Network.P2P.Payloads.Witness.ScriptHash
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Witness.ScriptHash
  nameWithType: Witness.ScriptHash
- uid: Neo.Network.P2P.Payloads.Witness.Size
  name: Size
  href: api/Neo.Network.P2P.Payloads.Witness.html#Neo_Network_P2P_Payloads_Witness_Size
  commentId: P:Neo.Network.P2P.Payloads.Witness.Size
  fullName: Neo.Network.P2P.Payloads.Witness.Size
  nameWithType: Witness.Size
- uid: Neo.Network.P2P.Payloads.Witness.Size*
  name: Size
  href: api/Neo.Network.P2P.Payloads.Witness.html#Neo_Network_P2P_Payloads_Witness_Size_
  commentId: Overload:Neo.Network.P2P.Payloads.Witness.Size
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Witness.Size
  nameWithType: Witness.Size
- uid: Neo.Network.P2P.Payloads.Witness.ToJson
  name: ToJson()
  href: api/Neo.Network.P2P.Payloads.Witness.html#Neo_Network_P2P_Payloads_Witness_ToJson
  commentId: M:Neo.Network.P2P.Payloads.Witness.ToJson
  fullName: Neo.Network.P2P.Payloads.Witness.ToJson()
  nameWithType: Witness.ToJson()
- uid: Neo.Network.P2P.Payloads.Witness.ToJson*
  name: ToJson
  href: api/Neo.Network.P2P.Payloads.Witness.html#Neo_Network_P2P_Payloads_Witness_ToJson_
  commentId: Overload:Neo.Network.P2P.Payloads.Witness.ToJson
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.Witness.ToJson
  nameWithType: Witness.ToJson
- uid: Neo.Network.P2P.Payloads.Witness.VerificationScript
  name: VerificationScript
  href: api/Neo.Network.P2P.Payloads.Witness.html#Neo_Network_P2P_Payloads_Witness_VerificationScript
  commentId: F:Neo.Network.P2P.Payloads.Witness.VerificationScript
  fullName: Neo.Network.P2P.Payloads.Witness.VerificationScript
  nameWithType: Witness.VerificationScript
- uid: Neo.Network.P2P.Payloads.WitnessRule
  name: WitnessRule
  href: api/Neo.Network.P2P.Payloads.WitnessRule.html
  commentId: T:Neo.Network.P2P.Payloads.WitnessRule
  fullName: Neo.Network.P2P.Payloads.WitnessRule
  nameWithType: WitnessRule
- uid: Neo.Network.P2P.Payloads.WitnessRule.Action
  name: Action
  href: api/Neo.Network.P2P.Payloads.WitnessRule.html#Neo_Network_P2P_Payloads_WitnessRule_Action
  commentId: F:Neo.Network.P2P.Payloads.WitnessRule.Action
  fullName: Neo.Network.P2P.Payloads.WitnessRule.Action
  nameWithType: WitnessRule.Action
- uid: Neo.Network.P2P.Payloads.WitnessRule.Condition
  name: Condition
  href: api/Neo.Network.P2P.Payloads.WitnessRule.html#Neo_Network_P2P_Payloads_WitnessRule_Condition
  commentId: F:Neo.Network.P2P.Payloads.WitnessRule.Condition
  fullName: Neo.Network.P2P.Payloads.WitnessRule.Condition
  nameWithType: WitnessRule.Condition
- uid: Neo.Network.P2P.Payloads.WitnessRule.FromJson(Neo.Json.JObject)
  name: FromJson(JObject)
  href: api/Neo.Network.P2P.Payloads.WitnessRule.html#Neo_Network_P2P_Payloads_WitnessRule_FromJson_Neo_Json_JObject_
  commentId: M:Neo.Network.P2P.Payloads.WitnessRule.FromJson(Neo.Json.JObject)
  fullName: Neo.Network.P2P.Payloads.WitnessRule.FromJson(Neo.Json.JObject)
  nameWithType: WitnessRule.FromJson(JObject)
- uid: Neo.Network.P2P.Payloads.WitnessRule.FromJson*
  name: FromJson
  href: api/Neo.Network.P2P.Payloads.WitnessRule.html#Neo_Network_P2P_Payloads_WitnessRule_FromJson_
  commentId: Overload:Neo.Network.P2P.Payloads.WitnessRule.FromJson
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.WitnessRule.FromJson
  nameWithType: WitnessRule.FromJson
- uid: Neo.Network.P2P.Payloads.WitnessRule.ToJson
  name: ToJson()
  href: api/Neo.Network.P2P.Payloads.WitnessRule.html#Neo_Network_P2P_Payloads_WitnessRule_ToJson
  commentId: M:Neo.Network.P2P.Payloads.WitnessRule.ToJson
  fullName: Neo.Network.P2P.Payloads.WitnessRule.ToJson()
  nameWithType: WitnessRule.ToJson()
- uid: Neo.Network.P2P.Payloads.WitnessRule.ToJson*
  name: ToJson
  href: api/Neo.Network.P2P.Payloads.WitnessRule.html#Neo_Network_P2P_Payloads_WitnessRule_ToJson_
  commentId: Overload:Neo.Network.P2P.Payloads.WitnessRule.ToJson
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.WitnessRule.ToJson
  nameWithType: WitnessRule.ToJson
- uid: Neo.Network.P2P.Payloads.WitnessRule.ToStackItem(Neo.VM.ReferenceCounter)
  name: ToStackItem(ReferenceCounter)
  href: api/Neo.Network.P2P.Payloads.WitnessRule.html#Neo_Network_P2P_Payloads_WitnessRule_ToStackItem_Neo_VM_ReferenceCounter_
  commentId: M:Neo.Network.P2P.Payloads.WitnessRule.ToStackItem(Neo.VM.ReferenceCounter)
  fullName: Neo.Network.P2P.Payloads.WitnessRule.ToStackItem(Neo.VM.ReferenceCounter)
  nameWithType: WitnessRule.ToStackItem(ReferenceCounter)
- uid: Neo.Network.P2P.Payloads.WitnessRule.ToStackItem*
  name: ToStackItem
  href: api/Neo.Network.P2P.Payloads.WitnessRule.html#Neo_Network_P2P_Payloads_WitnessRule_ToStackItem_
  commentId: Overload:Neo.Network.P2P.Payloads.WitnessRule.ToStackItem
  isSpec: "True"
  fullName: Neo.Network.P2P.Payloads.WitnessRule.ToStackItem
  nameWithType: WitnessRule.ToStackItem
- uid: Neo.Network.P2P.Payloads.WitnessRuleAction
  name: WitnessRuleAction
  href: api/Neo.Network.P2P.Payloads.WitnessRuleAction.html
  commentId: T:Neo.Network.P2P.Payloads.WitnessRuleAction
  fullName: Neo.Network.P2P.Payloads.WitnessRuleAction
  nameWithType: WitnessRuleAction
- uid: Neo.Network.P2P.Payloads.WitnessRuleAction.Allow
  name: Allow
  href: api/Neo.Network.P2P.Payloads.WitnessRuleAction.html#Neo_Network_P2P_Payloads_WitnessRuleAction_Allow
  commentId: F:Neo.Network.P2P.Payloads.WitnessRuleAction.Allow
  fullName: Neo.Network.P2P.Payloads.WitnessRuleAction.Allow
  nameWithType: WitnessRuleAction.Allow
- uid: Neo.Network.P2P.Payloads.WitnessRuleAction.Deny
  name: Deny
  href: api/Neo.Network.P2P.Payloads.WitnessRuleAction.html#Neo_Network_P2P_Payloads_WitnessRuleAction_Deny
  commentId: F:Neo.Network.P2P.Payloads.WitnessRuleAction.Deny
  fullName: Neo.Network.P2P.Payloads.WitnessRuleAction.Deny
  nameWithType: WitnessRuleAction.Deny
- uid: Neo.Network.P2P.Payloads.WitnessScope
  name: WitnessScope
  href: api/Neo.Network.P2P.Payloads.WitnessScope.html
  commentId: T:Neo.Network.P2P.Payloads.WitnessScope
  fullName: Neo.Network.P2P.Payloads.WitnessScope
  nameWithType: WitnessScope
- uid: Neo.Network.P2P.Payloads.WitnessScope.CalledByEntry
  name: CalledByEntry
  href: api/Neo.Network.P2P.Payloads.WitnessScope.html#Neo_Network_P2P_Payloads_WitnessScope_CalledByEntry
  commentId: F:Neo.Network.P2P.Payloads.WitnessScope.CalledByEntry
  fullName: Neo.Network.P2P.Payloads.WitnessScope.CalledByEntry
  nameWithType: WitnessScope.CalledByEntry
- uid: Neo.Network.P2P.Payloads.WitnessScope.CustomContracts
  name: CustomContracts
  href: api/Neo.Network.P2P.Payloads.WitnessScope.html#Neo_Network_P2P_Payloads_WitnessScope_CustomContracts
  commentId: F:Neo.Network.P2P.Payloads.WitnessScope.CustomContracts
  fullName: Neo.Network.P2P.Payloads.WitnessScope.CustomContracts
  nameWithType: WitnessScope.CustomContracts
- uid: Neo.Network.P2P.Payloads.WitnessScope.CustomGroups
  name: CustomGroups
  href: api/Neo.Network.P2P.Payloads.WitnessScope.html#Neo_Network_P2P_Payloads_WitnessScope_CustomGroups
  commentId: F:Neo.Network.P2P.Payloads.WitnessScope.CustomGroups
  fullName: Neo.Network.P2P.Payloads.WitnessScope.CustomGroups
  nameWithType: WitnessScope.CustomGroups
- uid: Neo.Network.P2P.Payloads.WitnessScope.Global
  name: Global
  href: api/Neo.Network.P2P.Payloads.WitnessScope.html#Neo_Network_P2P_Payloads_WitnessScope_Global
  commentId: F:Neo.Network.P2P.Payloads.WitnessScope.Global
  fullName: Neo.Network.P2P.Payloads.WitnessScope.Global
  nameWithType: WitnessScope.Global
- uid: Neo.Network.P2P.Payloads.WitnessScope.None
  name: None
  href: api/Neo.Network.P2P.Payloads.WitnessScope.html#Neo_Network_P2P_Payloads_WitnessScope_None
  commentId: F:Neo.Network.P2P.Payloads.WitnessScope.None
  fullName: Neo.Network.P2P.Payloads.WitnessScope.None
  nameWithType: WitnessScope.None
- uid: Neo.Network.P2P.Payloads.WitnessScope.WitnessRules
  name: WitnessRules
  href: api/Neo.Network.P2P.Payloads.WitnessScope.html#Neo_Network_P2P_Payloads_WitnessScope_WitnessRules
  commentId: F:Neo.Network.P2P.Payloads.WitnessScope.WitnessRules
  fullName: Neo.Network.P2P.Payloads.WitnessScope.WitnessRules
  nameWithType: WitnessScope.WitnessRules
- uid: Neo.Network.P2P.Peer
  name: Peer
  href: api/Neo.Network.P2P.Peer.html
  commentId: T:Neo.Network.P2P.Peer
  fullName: Neo.Network.P2P.Peer
  nameWithType: Peer
- uid: Neo.Network.P2P.Peer.AddPeers(System.Collections.Generic.IEnumerable{System.Net.IPEndPoint})
  name: AddPeers(IEnumerable<IPEndPoint>)
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_AddPeers_System_Collections_Generic_IEnumerable_System_Net_IPEndPoint__
  commentId: M:Neo.Network.P2P.Peer.AddPeers(System.Collections.Generic.IEnumerable{System.Net.IPEndPoint})
  name.vb: AddPeers(IEnumerable(Of IPEndPoint))
  fullName: Neo.Network.P2P.Peer.AddPeers(System.Collections.Generic.IEnumerable<System.Net.IPEndPoint>)
  fullName.vb: Neo.Network.P2P.Peer.AddPeers(System.Collections.Generic.IEnumerable(Of System.Net.IPEndPoint))
  nameWithType: Peer.AddPeers(IEnumerable<IPEndPoint>)
  nameWithType.vb: Peer.AddPeers(IEnumerable(Of IPEndPoint))
- uid: Neo.Network.P2P.Peer.AddPeers*
  name: AddPeers
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_AddPeers_
  commentId: Overload:Neo.Network.P2P.Peer.AddPeers
  isSpec: "True"
  fullName: Neo.Network.P2P.Peer.AddPeers
  nameWithType: Peer.AddPeers
- uid: Neo.Network.P2P.Peer.Connect
  name: Peer.Connect
  href: api/Neo.Network.P2P.Peer.Connect.html
  commentId: T:Neo.Network.P2P.Peer.Connect
  fullName: Neo.Network.P2P.Peer.Connect
  nameWithType: Peer.Connect
- uid: Neo.Network.P2P.Peer.Connect.EndPoint
  name: EndPoint
  href: api/Neo.Network.P2P.Peer.Connect.html#Neo_Network_P2P_Peer_Connect_EndPoint
  commentId: P:Neo.Network.P2P.Peer.Connect.EndPoint
  fullName: Neo.Network.P2P.Peer.Connect.EndPoint
  nameWithType: Peer.Connect.EndPoint
- uid: Neo.Network.P2P.Peer.Connect.EndPoint*
  name: EndPoint
  href: api/Neo.Network.P2P.Peer.Connect.html#Neo_Network_P2P_Peer_Connect_EndPoint_
  commentId: Overload:Neo.Network.P2P.Peer.Connect.EndPoint
  isSpec: "True"
  fullName: Neo.Network.P2P.Peer.Connect.EndPoint
  nameWithType: Peer.Connect.EndPoint
- uid: Neo.Network.P2P.Peer.Connect.IsTrusted
  name: IsTrusted
  href: api/Neo.Network.P2P.Peer.Connect.html#Neo_Network_P2P_Peer_Connect_IsTrusted
  commentId: P:Neo.Network.P2P.Peer.Connect.IsTrusted
  fullName: Neo.Network.P2P.Peer.Connect.IsTrusted
  nameWithType: Peer.Connect.IsTrusted
- uid: Neo.Network.P2P.Peer.Connect.IsTrusted*
  name: IsTrusted
  href: api/Neo.Network.P2P.Peer.Connect.html#Neo_Network_P2P_Peer_Connect_IsTrusted_
  commentId: Overload:Neo.Network.P2P.Peer.Connect.IsTrusted
  isSpec: "True"
  fullName: Neo.Network.P2P.Peer.Connect.IsTrusted
  nameWithType: Peer.Connect.IsTrusted
- uid: Neo.Network.P2P.Peer.ConnectToPeer(System.Net.IPEndPoint,System.Boolean)
  name: ConnectToPeer(IPEndPoint, bool)
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_ConnectToPeer_System_Net_IPEndPoint_System_Boolean_
  commentId: M:Neo.Network.P2P.Peer.ConnectToPeer(System.Net.IPEndPoint,System.Boolean)
  name.vb: ConnectToPeer(IPEndPoint, Boolean)
  fullName: Neo.Network.P2P.Peer.ConnectToPeer(System.Net.IPEndPoint, bool)
  fullName.vb: Neo.Network.P2P.Peer.ConnectToPeer(System.Net.IPEndPoint, Boolean)
  nameWithType: Peer.ConnectToPeer(IPEndPoint, bool)
  nameWithType.vb: Peer.ConnectToPeer(IPEndPoint, Boolean)
- uid: Neo.Network.P2P.Peer.ConnectToPeer*
  name: ConnectToPeer
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_ConnectToPeer_
  commentId: Overload:Neo.Network.P2P.Peer.ConnectToPeer
  isSpec: "True"
  fullName: Neo.Network.P2P.Peer.ConnectToPeer
  nameWithType: Peer.ConnectToPeer
- uid: Neo.Network.P2P.Peer.ConnectedPeers
  name: ConnectedPeers
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_ConnectedPeers
  commentId: F:Neo.Network.P2P.Peer.ConnectedPeers
  fullName: Neo.Network.P2P.Peer.ConnectedPeers
  nameWithType: Peer.ConnectedPeers
- uid: Neo.Network.P2P.Peer.ConnectingMax
  name: ConnectingMax
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_ConnectingMax
  commentId: P:Neo.Network.P2P.Peer.ConnectingMax
  fullName: Neo.Network.P2P.Peer.ConnectingMax
  nameWithType: Peer.ConnectingMax
- uid: Neo.Network.P2P.Peer.ConnectingMax*
  name: ConnectingMax
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_ConnectingMax_
  commentId: Overload:Neo.Network.P2P.Peer.ConnectingMax
  isSpec: "True"
  fullName: Neo.Network.P2P.Peer.ConnectingMax
  nameWithType: Peer.ConnectingMax
- uid: Neo.Network.P2P.Peer.ConnectingPeers
  name: ConnectingPeers
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_ConnectingPeers
  commentId: F:Neo.Network.P2P.Peer.ConnectingPeers
  fullName: Neo.Network.P2P.Peer.ConnectingPeers
  nameWithType: Peer.ConnectingPeers
- uid: Neo.Network.P2P.Peer.DefaultMaxConnections
  name: DefaultMaxConnections
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_DefaultMaxConnections
  commentId: F:Neo.Network.P2P.Peer.DefaultMaxConnections
  fullName: Neo.Network.P2P.Peer.DefaultMaxConnections
  nameWithType: Peer.DefaultMaxConnections
- uid: Neo.Network.P2P.Peer.DefaultMinDesiredConnections
  name: DefaultMinDesiredConnections
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_DefaultMinDesiredConnections
  commentId: F:Neo.Network.P2P.Peer.DefaultMinDesiredConnections
  fullName: Neo.Network.P2P.Peer.DefaultMinDesiredConnections
  nameWithType: Peer.DefaultMinDesiredConnections
- uid: Neo.Network.P2P.Peer.ListenerTcpPort
  name: ListenerTcpPort
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_ListenerTcpPort
  commentId: P:Neo.Network.P2P.Peer.ListenerTcpPort
  fullName: Neo.Network.P2P.Peer.ListenerTcpPort
  nameWithType: Peer.ListenerTcpPort
- uid: Neo.Network.P2P.Peer.ListenerTcpPort*
  name: ListenerTcpPort
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_ListenerTcpPort_
  commentId: Overload:Neo.Network.P2P.Peer.ListenerTcpPort
  isSpec: "True"
  fullName: Neo.Network.P2P.Peer.ListenerTcpPort
  nameWithType: Peer.ListenerTcpPort
- uid: Neo.Network.P2P.Peer.ListenerWsPort
  name: ListenerWsPort
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_ListenerWsPort
  commentId: P:Neo.Network.P2P.Peer.ListenerWsPort
  fullName: Neo.Network.P2P.Peer.ListenerWsPort
  nameWithType: Peer.ListenerWsPort
- uid: Neo.Network.P2P.Peer.ListenerWsPort*
  name: ListenerWsPort
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_ListenerWsPort_
  commentId: Overload:Neo.Network.P2P.Peer.ListenerWsPort
  isSpec: "True"
  fullName: Neo.Network.P2P.Peer.ListenerWsPort
  nameWithType: Peer.ListenerWsPort
- uid: Neo.Network.P2P.Peer.MaxConnections
  name: MaxConnections
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_MaxConnections
  commentId: P:Neo.Network.P2P.Peer.MaxConnections
  fullName: Neo.Network.P2P.Peer.MaxConnections
  nameWithType: Peer.MaxConnections
- uid: Neo.Network.P2P.Peer.MaxConnections*
  name: MaxConnections
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_MaxConnections_
  commentId: Overload:Neo.Network.P2P.Peer.MaxConnections
  isSpec: "True"
  fullName: Neo.Network.P2P.Peer.MaxConnections
  nameWithType: Peer.MaxConnections
- uid: Neo.Network.P2P.Peer.MaxConnectionsPerAddress
  name: MaxConnectionsPerAddress
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_MaxConnectionsPerAddress
  commentId: P:Neo.Network.P2P.Peer.MaxConnectionsPerAddress
  fullName: Neo.Network.P2P.Peer.MaxConnectionsPerAddress
  nameWithType: Peer.MaxConnectionsPerAddress
- uid: Neo.Network.P2P.Peer.MaxConnectionsPerAddress*
  name: MaxConnectionsPerAddress
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_MaxConnectionsPerAddress_
  commentId: Overload:Neo.Network.P2P.Peer.MaxConnectionsPerAddress
  isSpec: "True"
  fullName: Neo.Network.P2P.Peer.MaxConnectionsPerAddress
  nameWithType: Peer.MaxConnectionsPerAddress
- uid: Neo.Network.P2P.Peer.MinDesiredConnections
  name: MinDesiredConnections
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_MinDesiredConnections
  commentId: P:Neo.Network.P2P.Peer.MinDesiredConnections
  fullName: Neo.Network.P2P.Peer.MinDesiredConnections
  nameWithType: Peer.MinDesiredConnections
- uid: Neo.Network.P2P.Peer.MinDesiredConnections*
  name: MinDesiredConnections
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_MinDesiredConnections_
  commentId: Overload:Neo.Network.P2P.Peer.MinDesiredConnections
  isSpec: "True"
  fullName: Neo.Network.P2P.Peer.MinDesiredConnections
  nameWithType: Peer.MinDesiredConnections
- uid: Neo.Network.P2P.Peer.NeedMorePeers(System.Int32)
  name: NeedMorePeers(int)
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_NeedMorePeers_System_Int32_
  commentId: M:Neo.Network.P2P.Peer.NeedMorePeers(System.Int32)
  name.vb: NeedMorePeers(Integer)
  fullName: Neo.Network.P2P.Peer.NeedMorePeers(int)
  fullName.vb: Neo.Network.P2P.Peer.NeedMorePeers(Integer)
  nameWithType: Peer.NeedMorePeers(int)
  nameWithType.vb: Peer.NeedMorePeers(Integer)
- uid: Neo.Network.P2P.Peer.NeedMorePeers*
  name: NeedMorePeers
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_NeedMorePeers_
  commentId: Overload:Neo.Network.P2P.Peer.NeedMorePeers
  isSpec: "True"
  fullName: Neo.Network.P2P.Peer.NeedMorePeers
  nameWithType: Peer.NeedMorePeers
- uid: Neo.Network.P2P.Peer.OnReceive(System.Object)
  name: OnReceive(object)
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_OnReceive_System_Object_
  commentId: M:Neo.Network.P2P.Peer.OnReceive(System.Object)
  name.vb: OnReceive(Object)
  fullName: Neo.Network.P2P.Peer.OnReceive(object)
  fullName.vb: Neo.Network.P2P.Peer.OnReceive(Object)
  nameWithType: Peer.OnReceive(object)
  nameWithType.vb: Peer.OnReceive(Object)
- uid: Neo.Network.P2P.Peer.OnReceive*
  name: OnReceive
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_OnReceive_
  commentId: Overload:Neo.Network.P2P.Peer.OnReceive
  isSpec: "True"
  fullName: Neo.Network.P2P.Peer.OnReceive
  nameWithType: Peer.OnReceive
- uid: Neo.Network.P2P.Peer.OnTcpConnected(Akka.Actor.IActorRef)
  name: OnTcpConnected(IActorRef)
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_OnTcpConnected_Akka_Actor_IActorRef_
  commentId: M:Neo.Network.P2P.Peer.OnTcpConnected(Akka.Actor.IActorRef)
  fullName: Neo.Network.P2P.Peer.OnTcpConnected(Akka.Actor.IActorRef)
  nameWithType: Peer.OnTcpConnected(IActorRef)
- uid: Neo.Network.P2P.Peer.OnTcpConnected*
  name: OnTcpConnected
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_OnTcpConnected_
  commentId: Overload:Neo.Network.P2P.Peer.OnTcpConnected
  isSpec: "True"
  fullName: Neo.Network.P2P.Peer.OnTcpConnected
  nameWithType: Peer.OnTcpConnected
- uid: Neo.Network.P2P.Peer.Peers
  name: Peer.Peers
  href: api/Neo.Network.P2P.Peer.Peers.html
  commentId: T:Neo.Network.P2P.Peer.Peers
  fullName: Neo.Network.P2P.Peer.Peers
  nameWithType: Peer.Peers
- uid: Neo.Network.P2P.Peer.Peers.EndPoints
  name: EndPoints
  href: api/Neo.Network.P2P.Peer.Peers.html#Neo_Network_P2P_Peer_Peers_EndPoints
  commentId: P:Neo.Network.P2P.Peer.Peers.EndPoints
  fullName: Neo.Network.P2P.Peer.Peers.EndPoints
  nameWithType: Peer.Peers.EndPoints
- uid: Neo.Network.P2P.Peer.Peers.EndPoints*
  name: EndPoints
  href: api/Neo.Network.P2P.Peer.Peers.html#Neo_Network_P2P_Peer_Peers_EndPoints_
  commentId: Overload:Neo.Network.P2P.Peer.Peers.EndPoints
  isSpec: "True"
  fullName: Neo.Network.P2P.Peer.Peers.EndPoints
  nameWithType: Peer.Peers.EndPoints
- uid: Neo.Network.P2P.Peer.PostStop
  name: PostStop()
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_PostStop
  commentId: M:Neo.Network.P2P.Peer.PostStop
  fullName: Neo.Network.P2P.Peer.PostStop()
  nameWithType: Peer.PostStop()
- uid: Neo.Network.P2P.Peer.PostStop*
  name: PostStop
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_PostStop_
  commentId: Overload:Neo.Network.P2P.Peer.PostStop
  isSpec: "True"
  fullName: Neo.Network.P2P.Peer.PostStop
  nameWithType: Peer.PostStop
- uid: Neo.Network.P2P.Peer.ProtocolProps(System.Object,System.Net.IPEndPoint,System.Net.IPEndPoint)
  name: ProtocolProps(object, IPEndPoint, IPEndPoint)
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_ProtocolProps_System_Object_System_Net_IPEndPoint_System_Net_IPEndPoint_
  commentId: M:Neo.Network.P2P.Peer.ProtocolProps(System.Object,System.Net.IPEndPoint,System.Net.IPEndPoint)
  name.vb: ProtocolProps(Object, IPEndPoint, IPEndPoint)
  fullName: Neo.Network.P2P.Peer.ProtocolProps(object, System.Net.IPEndPoint, System.Net.IPEndPoint)
  fullName.vb: Neo.Network.P2P.Peer.ProtocolProps(Object, System.Net.IPEndPoint, System.Net.IPEndPoint)
  nameWithType: Peer.ProtocolProps(object, IPEndPoint, IPEndPoint)
  nameWithType.vb: Peer.ProtocolProps(Object, IPEndPoint, IPEndPoint)
- uid: Neo.Network.P2P.Peer.ProtocolProps*
  name: ProtocolProps
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_ProtocolProps_
  commentId: Overload:Neo.Network.P2P.Peer.ProtocolProps
  isSpec: "True"
  fullName: Neo.Network.P2P.Peer.ProtocolProps
  nameWithType: Peer.ProtocolProps
- uid: Neo.Network.P2P.Peer.TrustedIpAddresses
  name: TrustedIpAddresses
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_TrustedIpAddresses
  commentId: P:Neo.Network.P2P.Peer.TrustedIpAddresses
  fullName: Neo.Network.P2P.Peer.TrustedIpAddresses
  nameWithType: Peer.TrustedIpAddresses
- uid: Neo.Network.P2P.Peer.TrustedIpAddresses*
  name: TrustedIpAddresses
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_TrustedIpAddresses_
  commentId: Overload:Neo.Network.P2P.Peer.TrustedIpAddresses
  isSpec: "True"
  fullName: Neo.Network.P2P.Peer.TrustedIpAddresses
  nameWithType: Peer.TrustedIpAddresses
- uid: Neo.Network.P2P.Peer.UnconnectedMax
  name: UnconnectedMax
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_UnconnectedMax
  commentId: P:Neo.Network.P2P.Peer.UnconnectedMax
  fullName: Neo.Network.P2P.Peer.UnconnectedMax
  nameWithType: Peer.UnconnectedMax
- uid: Neo.Network.P2P.Peer.UnconnectedMax*
  name: UnconnectedMax
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_UnconnectedMax_
  commentId: Overload:Neo.Network.P2P.Peer.UnconnectedMax
  isSpec: "True"
  fullName: Neo.Network.P2P.Peer.UnconnectedMax
  nameWithType: Peer.UnconnectedMax
- uid: Neo.Network.P2P.Peer.UnconnectedPeers
  name: UnconnectedPeers
  href: api/Neo.Network.P2P.Peer.html#Neo_Network_P2P_Peer_UnconnectedPeers
  commentId: F:Neo.Network.P2P.Peer.UnconnectedPeers
  fullName: Neo.Network.P2P.Peer.UnconnectedPeers
  nameWithType: Peer.UnconnectedPeers
- uid: Neo.Network.P2P.RemoteNode
  name: RemoteNode
  href: api/Neo.Network.P2P.RemoteNode.html
  commentId: T:Neo.Network.P2P.RemoteNode
  fullName: Neo.Network.P2P.RemoteNode
  nameWithType: RemoteNode
- uid: Neo.Network.P2P.RemoteNode.#ctor(Neo.NeoSystem,Neo.Network.P2P.LocalNode,System.Object,System.Net.IPEndPoint,System.Net.IPEndPoint)
  name: RemoteNode(NeoSystem, LocalNode, object, IPEndPoint, IPEndPoint)
  href: api/Neo.Network.P2P.RemoteNode.html#Neo_Network_P2P_RemoteNode__ctor_Neo_NeoSystem_Neo_Network_P2P_LocalNode_System_Object_System_Net_IPEndPoint_System_Net_IPEndPoint_
  commentId: M:Neo.Network.P2P.RemoteNode.#ctor(Neo.NeoSystem,Neo.Network.P2P.LocalNode,System.Object,System.Net.IPEndPoint,System.Net.IPEndPoint)
  name.vb: New(NeoSystem, LocalNode, Object, IPEndPoint, IPEndPoint)
  fullName: Neo.Network.P2P.RemoteNode.RemoteNode(Neo.NeoSystem, Neo.Network.P2P.LocalNode, object, System.Net.IPEndPoint, System.Net.IPEndPoint)
  fullName.vb: Neo.Network.P2P.RemoteNode.New(Neo.NeoSystem, Neo.Network.P2P.LocalNode, Object, System.Net.IPEndPoint, System.Net.IPEndPoint)
  nameWithType: RemoteNode.RemoteNode(NeoSystem, LocalNode, object, IPEndPoint, IPEndPoint)
  nameWithType.vb: RemoteNode.New(NeoSystem, LocalNode, Object, IPEndPoint, IPEndPoint)
- uid: Neo.Network.P2P.RemoteNode.#ctor*
  name: RemoteNode
  href: api/Neo.Network.P2P.RemoteNode.html#Neo_Network_P2P_RemoteNode__ctor_
  commentId: Overload:Neo.Network.P2P.RemoteNode.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Network.P2P.RemoteNode.RemoteNode
  fullName.vb: Neo.Network.P2P.RemoteNode.New
  nameWithType: RemoteNode.RemoteNode
  nameWithType.vb: RemoteNode.New
- uid: Neo.Network.P2P.RemoteNode.IsFullNode
  name: IsFullNode
  href: api/Neo.Network.P2P.RemoteNode.html#Neo_Network_P2P_RemoteNode_IsFullNode
  commentId: P:Neo.Network.P2P.RemoteNode.IsFullNode
  fullName: Neo.Network.P2P.RemoteNode.IsFullNode
  nameWithType: RemoteNode.IsFullNode
- uid: Neo.Network.P2P.RemoteNode.IsFullNode*
  name: IsFullNode
  href: api/Neo.Network.P2P.RemoteNode.html#Neo_Network_P2P_RemoteNode_IsFullNode_
  commentId: Overload:Neo.Network.P2P.RemoteNode.IsFullNode
  isSpec: "True"
  fullName: Neo.Network.P2P.RemoteNode.IsFullNode
  nameWithType: RemoteNode.IsFullNode
- uid: Neo.Network.P2P.RemoteNode.LastBlockIndex
  name: LastBlockIndex
  href: api/Neo.Network.P2P.RemoteNode.html#Neo_Network_P2P_RemoteNode_LastBlockIndex
  commentId: P:Neo.Network.P2P.RemoteNode.LastBlockIndex
  fullName: Neo.Network.P2P.RemoteNode.LastBlockIndex
  nameWithType: RemoteNode.LastBlockIndex
- uid: Neo.Network.P2P.RemoteNode.LastBlockIndex*
  name: LastBlockIndex
  href: api/Neo.Network.P2P.RemoteNode.html#Neo_Network_P2P_RemoteNode_LastBlockIndex_
  commentId: Overload:Neo.Network.P2P.RemoteNode.LastBlockIndex
  isSpec: "True"
  fullName: Neo.Network.P2P.RemoteNode.LastBlockIndex
  nameWithType: RemoteNode.LastBlockIndex
- uid: Neo.Network.P2P.RemoteNode.Listener
  name: Listener
  href: api/Neo.Network.P2P.RemoteNode.html#Neo_Network_P2P_RemoteNode_Listener
  commentId: P:Neo.Network.P2P.RemoteNode.Listener
  fullName: Neo.Network.P2P.RemoteNode.Listener
  nameWithType: RemoteNode.Listener
- uid: Neo.Network.P2P.RemoteNode.Listener*
  name: Listener
  href: api/Neo.Network.P2P.RemoteNode.html#Neo_Network_P2P_RemoteNode_Listener_
  commentId: Overload:Neo.Network.P2P.RemoteNode.Listener
  isSpec: "True"
  fullName: Neo.Network.P2P.RemoteNode.Listener
  nameWithType: RemoteNode.Listener
- uid: Neo.Network.P2P.RemoteNode.ListenerTcpPort
  name: ListenerTcpPort
  href: api/Neo.Network.P2P.RemoteNode.html#Neo_Network_P2P_RemoteNode_ListenerTcpPort
  commentId: P:Neo.Network.P2P.RemoteNode.ListenerTcpPort
  fullName: Neo.Network.P2P.RemoteNode.ListenerTcpPort
  nameWithType: RemoteNode.ListenerTcpPort
- uid: Neo.Network.P2P.RemoteNode.ListenerTcpPort*
  name: ListenerTcpPort
  href: api/Neo.Network.P2P.RemoteNode.html#Neo_Network_P2P_RemoteNode_ListenerTcpPort_
  commentId: Overload:Neo.Network.P2P.RemoteNode.ListenerTcpPort
  isSpec: "True"
  fullName: Neo.Network.P2P.RemoteNode.ListenerTcpPort
  nameWithType: RemoteNode.ListenerTcpPort
- uid: Neo.Network.P2P.RemoteNode.MessageReceived
  name: MessageReceived
  href: api/Neo.Network.P2P.RemoteNode.html#Neo_Network_P2P_RemoteNode_MessageReceived
  commentId: E:Neo.Network.P2P.RemoteNode.MessageReceived
  fullName: Neo.Network.P2P.RemoteNode.MessageReceived
  nameWithType: RemoteNode.MessageReceived
- uid: Neo.Network.P2P.RemoteNode.OnAck
  name: OnAck()
  href: api/Neo.Network.P2P.RemoteNode.html#Neo_Network_P2P_RemoteNode_OnAck
  commentId: M:Neo.Network.P2P.RemoteNode.OnAck
  fullName: Neo.Network.P2P.RemoteNode.OnAck()
  nameWithType: RemoteNode.OnAck()
- uid: Neo.Network.P2P.RemoteNode.OnAck*
  name: OnAck
  href: api/Neo.Network.P2P.RemoteNode.html#Neo_Network_P2P_RemoteNode_OnAck_
  commentId: Overload:Neo.Network.P2P.RemoteNode.OnAck
  isSpec: "True"
  fullName: Neo.Network.P2P.RemoteNode.OnAck
  nameWithType: RemoteNode.OnAck
- uid: Neo.Network.P2P.RemoteNode.OnData(Akka.IO.ByteString)
  name: OnData(ByteString)
  href: api/Neo.Network.P2P.RemoteNode.html#Neo_Network_P2P_RemoteNode_OnData_Akka_IO_ByteString_
  commentId: M:Neo.Network.P2P.RemoteNode.OnData(Akka.IO.ByteString)
  fullName: Neo.Network.P2P.RemoteNode.OnData(Akka.IO.ByteString)
  nameWithType: RemoteNode.OnData(ByteString)
- uid: Neo.Network.P2P.RemoteNode.OnData*
  name: OnData
  href: api/Neo.Network.P2P.RemoteNode.html#Neo_Network_P2P_RemoteNode_OnData_
  commentId: Overload:Neo.Network.P2P.RemoteNode.OnData
  isSpec: "True"
  fullName: Neo.Network.P2P.RemoteNode.OnData
  nameWithType: RemoteNode.OnData
- uid: Neo.Network.P2P.RemoteNode.OnReceive(System.Object)
  name: OnReceive(object)
  href: api/Neo.Network.P2P.RemoteNode.html#Neo_Network_P2P_RemoteNode_OnReceive_System_Object_
  commentId: M:Neo.Network.P2P.RemoteNode.OnReceive(System.Object)
  name.vb: OnReceive(Object)
  fullName: Neo.Network.P2P.RemoteNode.OnReceive(object)
  fullName.vb: Neo.Network.P2P.RemoteNode.OnReceive(Object)
  nameWithType: RemoteNode.OnReceive(object)
  nameWithType.vb: RemoteNode.OnReceive(Object)
- uid: Neo.Network.P2P.RemoteNode.OnReceive*
  name: OnReceive
  href: api/Neo.Network.P2P.RemoteNode.html#Neo_Network_P2P_RemoteNode_OnReceive_
  commentId: Overload:Neo.Network.P2P.RemoteNode.OnReceive
  isSpec: "True"
  fullName: Neo.Network.P2P.RemoteNode.OnReceive
  nameWithType: RemoteNode.OnReceive
- uid: Neo.Network.P2P.RemoteNode.PostStop
  name: PostStop()
  href: api/Neo.Network.P2P.RemoteNode.html#Neo_Network_P2P_RemoteNode_PostStop
  commentId: M:Neo.Network.P2P.RemoteNode.PostStop
  fullName: Neo.Network.P2P.RemoteNode.PostStop()
  nameWithType: RemoteNode.PostStop()
- uid: Neo.Network.P2P.RemoteNode.PostStop*
  name: PostStop
  href: api/Neo.Network.P2P.RemoteNode.html#Neo_Network_P2P_RemoteNode_PostStop_
  commentId: Overload:Neo.Network.P2P.RemoteNode.PostStop
  isSpec: "True"
  fullName: Neo.Network.P2P.RemoteNode.PostStop
  nameWithType: RemoteNode.PostStop
- uid: Neo.Network.P2P.RemoteNode.Version
  name: Version
  href: api/Neo.Network.P2P.RemoteNode.html#Neo_Network_P2P_RemoteNode_Version
  commentId: P:Neo.Network.P2P.RemoteNode.Version
  fullName: Neo.Network.P2P.RemoteNode.Version
  nameWithType: RemoteNode.Version
- uid: Neo.Network.P2P.RemoteNode.Version*
  name: Version
  href: api/Neo.Network.P2P.RemoteNode.html#Neo_Network_P2P_RemoteNode_Version_
  commentId: Overload:Neo.Network.P2P.RemoteNode.Version
  isSpec: "True"
  fullName: Neo.Network.P2P.RemoteNode.Version
  nameWithType: RemoteNode.Version
- uid: Neo.Network.P2P.TaskManager
  name: TaskManager
  href: api/Neo.Network.P2P.TaskManager.html
  commentId: T:Neo.Network.P2P.TaskManager
  fullName: Neo.Network.P2P.TaskManager
  nameWithType: TaskManager
- uid: Neo.Network.P2P.TaskManager.#ctor(Neo.NeoSystem)
  name: TaskManager(NeoSystem)
  href: api/Neo.Network.P2P.TaskManager.html#Neo_Network_P2P_TaskManager__ctor_Neo_NeoSystem_
  commentId: M:Neo.Network.P2P.TaskManager.#ctor(Neo.NeoSystem)
  name.vb: New(NeoSystem)
  fullName: Neo.Network.P2P.TaskManager.TaskManager(Neo.NeoSystem)
  fullName.vb: Neo.Network.P2P.TaskManager.New(Neo.NeoSystem)
  nameWithType: TaskManager.TaskManager(NeoSystem)
  nameWithType.vb: TaskManager.New(NeoSystem)
- uid: Neo.Network.P2P.TaskManager.#ctor*
  name: TaskManager
  href: api/Neo.Network.P2P.TaskManager.html#Neo_Network_P2P_TaskManager__ctor_
  commentId: Overload:Neo.Network.P2P.TaskManager.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Network.P2P.TaskManager.TaskManager
  fullName.vb: Neo.Network.P2P.TaskManager.New
  nameWithType: TaskManager.TaskManager
  nameWithType.vb: TaskManager.New
- uid: Neo.Network.P2P.TaskManager.OnReceive(System.Object)
  name: OnReceive(object)
  href: api/Neo.Network.P2P.TaskManager.html#Neo_Network_P2P_TaskManager_OnReceive_System_Object_
  commentId: M:Neo.Network.P2P.TaskManager.OnReceive(System.Object)
  name.vb: OnReceive(Object)
  fullName: Neo.Network.P2P.TaskManager.OnReceive(object)
  fullName.vb: Neo.Network.P2P.TaskManager.OnReceive(Object)
  nameWithType: TaskManager.OnReceive(object)
  nameWithType.vb: TaskManager.OnReceive(Object)
- uid: Neo.Network.P2P.TaskManager.OnReceive*
  name: OnReceive
  href: api/Neo.Network.P2P.TaskManager.html#Neo_Network_P2P_TaskManager_OnReceive_
  commentId: Overload:Neo.Network.P2P.TaskManager.OnReceive
  isSpec: "True"
  fullName: Neo.Network.P2P.TaskManager.OnReceive
  nameWithType: TaskManager.OnReceive
- uid: Neo.Network.P2P.TaskManager.PostStop
  name: PostStop()
  href: api/Neo.Network.P2P.TaskManager.html#Neo_Network_P2P_TaskManager_PostStop
  commentId: M:Neo.Network.P2P.TaskManager.PostStop
  fullName: Neo.Network.P2P.TaskManager.PostStop()
  nameWithType: TaskManager.PostStop()
- uid: Neo.Network.P2P.TaskManager.PostStop*
  name: PostStop
  href: api/Neo.Network.P2P.TaskManager.html#Neo_Network_P2P_TaskManager_PostStop_
  commentId: Overload:Neo.Network.P2P.TaskManager.PostStop
  isSpec: "True"
  fullName: Neo.Network.P2P.TaskManager.PostStop
  nameWithType: TaskManager.PostStop
- uid: Neo.Network.P2P.TaskManager.Props(Neo.NeoSystem)
  name: Props(NeoSystem)
  href: api/Neo.Network.P2P.TaskManager.html#Neo_Network_P2P_TaskManager_Props_Neo_NeoSystem_
  commentId: M:Neo.Network.P2P.TaskManager.Props(Neo.NeoSystem)
  fullName: Neo.Network.P2P.TaskManager.Props(Neo.NeoSystem)
  nameWithType: TaskManager.Props(NeoSystem)
- uid: Neo.Network.P2P.TaskManager.Props*
  name: Props
  href: api/Neo.Network.P2P.TaskManager.html#Neo_Network_P2P_TaskManager_Props_
  commentId: Overload:Neo.Network.P2P.TaskManager.Props
  isSpec: "True"
  fullName: Neo.Network.P2P.TaskManager.Props
  nameWithType: TaskManager.Props
- uid: Neo.Network.P2P.TaskManager.RestartTasks
  name: TaskManager.RestartTasks
  href: api/Neo.Network.P2P.TaskManager.RestartTasks.html
  commentId: T:Neo.Network.P2P.TaskManager.RestartTasks
  fullName: Neo.Network.P2P.TaskManager.RestartTasks
  nameWithType: TaskManager.RestartTasks
- uid: Neo.Network.P2P.TaskManager.RestartTasks.Payload
  name: Payload
  href: api/Neo.Network.P2P.TaskManager.RestartTasks.html#Neo_Network_P2P_TaskManager_RestartTasks_Payload
  commentId: P:Neo.Network.P2P.TaskManager.RestartTasks.Payload
  fullName: Neo.Network.P2P.TaskManager.RestartTasks.Payload
  nameWithType: TaskManager.RestartTasks.Payload
- uid: Neo.Network.P2P.TaskManager.RestartTasks.Payload*
  name: Payload
  href: api/Neo.Network.P2P.TaskManager.RestartTasks.html#Neo_Network_P2P_TaskManager_RestartTasks_Payload_
  commentId: Overload:Neo.Network.P2P.TaskManager.RestartTasks.Payload
  isSpec: "True"
  fullName: Neo.Network.P2P.TaskManager.RestartTasks.Payload
  nameWithType: TaskManager.RestartTasks.Payload
- uid: Neo.Network.UPnP
  name: UPnP
  href: api/Neo.Network.UPnP.html
  commentId: T:Neo.Network.UPnP
  fullName: Neo.Network.UPnP
  nameWithType: UPnP
- uid: Neo.Network.UPnP.DeleteForwardingRule(System.Int32,System.Net.Sockets.ProtocolType)
  name: DeleteForwardingRule(int, ProtocolType)
  href: api/Neo.Network.UPnP.html#Neo_Network_UPnP_DeleteForwardingRule_System_Int32_System_Net_Sockets_ProtocolType_
  commentId: M:Neo.Network.UPnP.DeleteForwardingRule(System.Int32,System.Net.Sockets.ProtocolType)
  name.vb: DeleteForwardingRule(Integer, ProtocolType)
  fullName: Neo.Network.UPnP.DeleteForwardingRule(int, System.Net.Sockets.ProtocolType)
  fullName.vb: Neo.Network.UPnP.DeleteForwardingRule(Integer, System.Net.Sockets.ProtocolType)
  nameWithType: UPnP.DeleteForwardingRule(int, ProtocolType)
  nameWithType.vb: UPnP.DeleteForwardingRule(Integer, ProtocolType)
- uid: Neo.Network.UPnP.DeleteForwardingRule*
  name: DeleteForwardingRule
  href: api/Neo.Network.UPnP.html#Neo_Network_UPnP_DeleteForwardingRule_
  commentId: Overload:Neo.Network.UPnP.DeleteForwardingRule
  isSpec: "True"
  fullName: Neo.Network.UPnP.DeleteForwardingRule
  nameWithType: UPnP.DeleteForwardingRule
- uid: Neo.Network.UPnP.Discover
  name: Discover()
  href: api/Neo.Network.UPnP.html#Neo_Network_UPnP_Discover
  commentId: M:Neo.Network.UPnP.Discover
  fullName: Neo.Network.UPnP.Discover()
  nameWithType: UPnP.Discover()
- uid: Neo.Network.UPnP.Discover*
  name: Discover
  href: api/Neo.Network.UPnP.html#Neo_Network_UPnP_Discover_
  commentId: Overload:Neo.Network.UPnP.Discover
  isSpec: "True"
  fullName: Neo.Network.UPnP.Discover
  nameWithType: UPnP.Discover
- uid: Neo.Network.UPnP.ForwardPort(System.Int32,System.Net.Sockets.ProtocolType,System.String)
  name: ForwardPort(int, ProtocolType, string)
  href: api/Neo.Network.UPnP.html#Neo_Network_UPnP_ForwardPort_System_Int32_System_Net_Sockets_ProtocolType_System_String_
  commentId: M:Neo.Network.UPnP.ForwardPort(System.Int32,System.Net.Sockets.ProtocolType,System.String)
  name.vb: ForwardPort(Integer, ProtocolType, String)
  fullName: Neo.Network.UPnP.ForwardPort(int, System.Net.Sockets.ProtocolType, string)
  fullName.vb: Neo.Network.UPnP.ForwardPort(Integer, System.Net.Sockets.ProtocolType, String)
  nameWithType: UPnP.ForwardPort(int, ProtocolType, string)
  nameWithType.vb: UPnP.ForwardPort(Integer, ProtocolType, String)
- uid: Neo.Network.UPnP.ForwardPort*
  name: ForwardPort
  href: api/Neo.Network.UPnP.html#Neo_Network_UPnP_ForwardPort_
  commentId: Overload:Neo.Network.UPnP.ForwardPort
  isSpec: "True"
  fullName: Neo.Network.UPnP.ForwardPort
  nameWithType: UPnP.ForwardPort
- uid: Neo.Network.UPnP.GetExternalIP
  name: GetExternalIP()
  href: api/Neo.Network.UPnP.html#Neo_Network_UPnP_GetExternalIP
  commentId: M:Neo.Network.UPnP.GetExternalIP
  fullName: Neo.Network.UPnP.GetExternalIP()
  nameWithType: UPnP.GetExternalIP()
- uid: Neo.Network.UPnP.GetExternalIP*
  name: GetExternalIP
  href: api/Neo.Network.UPnP.html#Neo_Network_UPnP_GetExternalIP_
  commentId: Overload:Neo.Network.UPnP.GetExternalIP
  isSpec: "True"
  fullName: Neo.Network.UPnP.GetExternalIP
  nameWithType: UPnP.GetExternalIP
- uid: Neo.Network.UPnP.TimeOut
  name: TimeOut
  href: api/Neo.Network.UPnP.html#Neo_Network_UPnP_TimeOut
  commentId: P:Neo.Network.UPnP.TimeOut
  fullName: Neo.Network.UPnP.TimeOut
  nameWithType: UPnP.TimeOut
- uid: Neo.Network.UPnP.TimeOut*
  name: TimeOut
  href: api/Neo.Network.UPnP.html#Neo_Network_UPnP_TimeOut_
  commentId: Overload:Neo.Network.UPnP.TimeOut
  isSpec: "True"
  fullName: Neo.Network.UPnP.TimeOut
  nameWithType: UPnP.TimeOut
- uid: Neo.Persistence
  name: Neo.Persistence
  href: api/Neo.Persistence.html
  commentId: N:Neo.Persistence
  fullName: Neo.Persistence
  nameWithType: Neo.Persistence
- uid: Neo.Persistence.DataCache
  name: DataCache
  href: api/Neo.Persistence.DataCache.html
  commentId: T:Neo.Persistence.DataCache
  fullName: Neo.Persistence.DataCache
  nameWithType: DataCache
- uid: Neo.Persistence.DataCache.Add(Neo.SmartContract.StorageKey,Neo.SmartContract.StorageItem)
  name: Add(StorageKey, StorageItem)
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_Add_Neo_SmartContract_StorageKey_Neo_SmartContract_StorageItem_
  commentId: M:Neo.Persistence.DataCache.Add(Neo.SmartContract.StorageKey,Neo.SmartContract.StorageItem)
  fullName: Neo.Persistence.DataCache.Add(Neo.SmartContract.StorageKey, Neo.SmartContract.StorageItem)
  nameWithType: DataCache.Add(StorageKey, StorageItem)
- uid: Neo.Persistence.DataCache.Add*
  name: Add
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_Add_
  commentId: Overload:Neo.Persistence.DataCache.Add
  isSpec: "True"
  fullName: Neo.Persistence.DataCache.Add
  nameWithType: DataCache.Add
- uid: Neo.Persistence.DataCache.AddInternal(Neo.SmartContract.StorageKey,Neo.SmartContract.StorageItem)
  name: AddInternal(StorageKey, StorageItem)
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_AddInternal_Neo_SmartContract_StorageKey_Neo_SmartContract_StorageItem_
  commentId: M:Neo.Persistence.DataCache.AddInternal(Neo.SmartContract.StorageKey,Neo.SmartContract.StorageItem)
  fullName: Neo.Persistence.DataCache.AddInternal(Neo.SmartContract.StorageKey, Neo.SmartContract.StorageItem)
  nameWithType: DataCache.AddInternal(StorageKey, StorageItem)
- uid: Neo.Persistence.DataCache.AddInternal*
  name: AddInternal
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_AddInternal_
  commentId: Overload:Neo.Persistence.DataCache.AddInternal
  isSpec: "True"
  fullName: Neo.Persistence.DataCache.AddInternal
  nameWithType: DataCache.AddInternal
- uid: Neo.Persistence.DataCache.Commit
  name: Commit()
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_Commit
  commentId: M:Neo.Persistence.DataCache.Commit
  fullName: Neo.Persistence.DataCache.Commit()
  nameWithType: DataCache.Commit()
- uid: Neo.Persistence.DataCache.Commit*
  name: Commit
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_Commit_
  commentId: Overload:Neo.Persistence.DataCache.Commit
  isSpec: "True"
  fullName: Neo.Persistence.DataCache.Commit
  nameWithType: DataCache.Commit
- uid: Neo.Persistence.DataCache.Contains(Neo.SmartContract.StorageKey)
  name: Contains(StorageKey)
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_Contains_Neo_SmartContract_StorageKey_
  commentId: M:Neo.Persistence.DataCache.Contains(Neo.SmartContract.StorageKey)
  fullName: Neo.Persistence.DataCache.Contains(Neo.SmartContract.StorageKey)
  nameWithType: DataCache.Contains(StorageKey)
- uid: Neo.Persistence.DataCache.Contains*
  name: Contains
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_Contains_
  commentId: Overload:Neo.Persistence.DataCache.Contains
  isSpec: "True"
  fullName: Neo.Persistence.DataCache.Contains
  nameWithType: DataCache.Contains
- uid: Neo.Persistence.DataCache.ContainsInternal(Neo.SmartContract.StorageKey)
  name: ContainsInternal(StorageKey)
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_ContainsInternal_Neo_SmartContract_StorageKey_
  commentId: M:Neo.Persistence.DataCache.ContainsInternal(Neo.SmartContract.StorageKey)
  fullName: Neo.Persistence.DataCache.ContainsInternal(Neo.SmartContract.StorageKey)
  nameWithType: DataCache.ContainsInternal(StorageKey)
- uid: Neo.Persistence.DataCache.ContainsInternal*
  name: ContainsInternal
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_ContainsInternal_
  commentId: Overload:Neo.Persistence.DataCache.ContainsInternal
  isSpec: "True"
  fullName: Neo.Persistence.DataCache.ContainsInternal
  nameWithType: DataCache.ContainsInternal
- uid: Neo.Persistence.DataCache.CreateSnapshot
  name: CreateSnapshot()
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_CreateSnapshot
  commentId: M:Neo.Persistence.DataCache.CreateSnapshot
  fullName: Neo.Persistence.DataCache.CreateSnapshot()
  nameWithType: DataCache.CreateSnapshot()
- uid: Neo.Persistence.DataCache.CreateSnapshot*
  name: CreateSnapshot
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_CreateSnapshot_
  commentId: Overload:Neo.Persistence.DataCache.CreateSnapshot
  isSpec: "True"
  fullName: Neo.Persistence.DataCache.CreateSnapshot
  nameWithType: DataCache.CreateSnapshot
- uid: Neo.Persistence.DataCache.Delete(Neo.SmartContract.StorageKey)
  name: Delete(StorageKey)
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_Delete_Neo_SmartContract_StorageKey_
  commentId: M:Neo.Persistence.DataCache.Delete(Neo.SmartContract.StorageKey)
  fullName: Neo.Persistence.DataCache.Delete(Neo.SmartContract.StorageKey)
  nameWithType: DataCache.Delete(StorageKey)
- uid: Neo.Persistence.DataCache.Delete*
  name: Delete
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_Delete_
  commentId: Overload:Neo.Persistence.DataCache.Delete
  isSpec: "True"
  fullName: Neo.Persistence.DataCache.Delete
  nameWithType: DataCache.Delete
- uid: Neo.Persistence.DataCache.DeleteInternal(Neo.SmartContract.StorageKey)
  name: DeleteInternal(StorageKey)
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_DeleteInternal_Neo_SmartContract_StorageKey_
  commentId: M:Neo.Persistence.DataCache.DeleteInternal(Neo.SmartContract.StorageKey)
  fullName: Neo.Persistence.DataCache.DeleteInternal(Neo.SmartContract.StorageKey)
  nameWithType: DataCache.DeleteInternal(StorageKey)
- uid: Neo.Persistence.DataCache.DeleteInternal*
  name: DeleteInternal
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_DeleteInternal_
  commentId: Overload:Neo.Persistence.DataCache.DeleteInternal
  isSpec: "True"
  fullName: Neo.Persistence.DataCache.DeleteInternal
  nameWithType: DataCache.DeleteInternal
- uid: Neo.Persistence.DataCache.Find(System.Byte[],Neo.Persistence.SeekDirection)
  name: Find(byte[], SeekDirection)
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_Find_System_Byte___Neo_Persistence_SeekDirection_
  commentId: M:Neo.Persistence.DataCache.Find(System.Byte[],Neo.Persistence.SeekDirection)
  name.vb: Find(Byte(), SeekDirection)
  fullName: Neo.Persistence.DataCache.Find(byte[], Neo.Persistence.SeekDirection)
  fullName.vb: Neo.Persistence.DataCache.Find(Byte(), Neo.Persistence.SeekDirection)
  nameWithType: DataCache.Find(byte[], SeekDirection)
  nameWithType.vb: DataCache.Find(Byte(), SeekDirection)
- uid: Neo.Persistence.DataCache.Find*
  name: Find
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_Find_
  commentId: Overload:Neo.Persistence.DataCache.Find
  isSpec: "True"
  fullName: Neo.Persistence.DataCache.Find
  nameWithType: DataCache.Find
- uid: Neo.Persistence.DataCache.FindRange(System.Byte[],System.Byte[],Neo.Persistence.SeekDirection)
  name: FindRange(byte[], byte[], SeekDirection)
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_FindRange_System_Byte___System_Byte___Neo_Persistence_SeekDirection_
  commentId: M:Neo.Persistence.DataCache.FindRange(System.Byte[],System.Byte[],Neo.Persistence.SeekDirection)
  name.vb: FindRange(Byte(), Byte(), SeekDirection)
  fullName: Neo.Persistence.DataCache.FindRange(byte[], byte[], Neo.Persistence.SeekDirection)
  fullName.vb: Neo.Persistence.DataCache.FindRange(Byte(), Byte(), Neo.Persistence.SeekDirection)
  nameWithType: DataCache.FindRange(byte[], byte[], SeekDirection)
  nameWithType.vb: DataCache.FindRange(Byte(), Byte(), SeekDirection)
- uid: Neo.Persistence.DataCache.FindRange*
  name: FindRange
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_FindRange_
  commentId: Overload:Neo.Persistence.DataCache.FindRange
  isSpec: "True"
  fullName: Neo.Persistence.DataCache.FindRange
  nameWithType: DataCache.FindRange
- uid: Neo.Persistence.DataCache.GetAndChange(Neo.SmartContract.StorageKey,System.Func{Neo.SmartContract.StorageItem})
  name: GetAndChange(StorageKey, Func<StorageItem>)
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_GetAndChange_Neo_SmartContract_StorageKey_System_Func_Neo_SmartContract_StorageItem__
  commentId: M:Neo.Persistence.DataCache.GetAndChange(Neo.SmartContract.StorageKey,System.Func{Neo.SmartContract.StorageItem})
  name.vb: GetAndChange(StorageKey, Func(Of StorageItem))
  fullName: Neo.Persistence.DataCache.GetAndChange(Neo.SmartContract.StorageKey, System.Func<Neo.SmartContract.StorageItem>)
  fullName.vb: Neo.Persistence.DataCache.GetAndChange(Neo.SmartContract.StorageKey, System.Func(Of Neo.SmartContract.StorageItem))
  nameWithType: DataCache.GetAndChange(StorageKey, Func<StorageItem>)
  nameWithType.vb: DataCache.GetAndChange(StorageKey, Func(Of StorageItem))
- uid: Neo.Persistence.DataCache.GetAndChange*
  name: GetAndChange
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_GetAndChange_
  commentId: Overload:Neo.Persistence.DataCache.GetAndChange
  isSpec: "True"
  fullName: Neo.Persistence.DataCache.GetAndChange
  nameWithType: DataCache.GetAndChange
- uid: Neo.Persistence.DataCache.GetChangeSet
  name: GetChangeSet()
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_GetChangeSet
  commentId: M:Neo.Persistence.DataCache.GetChangeSet
  fullName: Neo.Persistence.DataCache.GetChangeSet()
  nameWithType: DataCache.GetChangeSet()
- uid: Neo.Persistence.DataCache.GetChangeSet*
  name: GetChangeSet
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_GetChangeSet_
  commentId: Overload:Neo.Persistence.DataCache.GetChangeSet
  isSpec: "True"
  fullName: Neo.Persistence.DataCache.GetChangeSet
  nameWithType: DataCache.GetChangeSet
- uid: Neo.Persistence.DataCache.GetInternal(Neo.SmartContract.StorageKey)
  name: GetInternal(StorageKey)
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_GetInternal_Neo_SmartContract_StorageKey_
  commentId: M:Neo.Persistence.DataCache.GetInternal(Neo.SmartContract.StorageKey)
  fullName: Neo.Persistence.DataCache.GetInternal(Neo.SmartContract.StorageKey)
  nameWithType: DataCache.GetInternal(StorageKey)
- uid: Neo.Persistence.DataCache.GetInternal*
  name: GetInternal
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_GetInternal_
  commentId: Overload:Neo.Persistence.DataCache.GetInternal
  isSpec: "True"
  fullName: Neo.Persistence.DataCache.GetInternal
  nameWithType: DataCache.GetInternal
- uid: Neo.Persistence.DataCache.GetOrAdd(Neo.SmartContract.StorageKey,System.Func{Neo.SmartContract.StorageItem})
  name: GetOrAdd(StorageKey, Func<StorageItem>)
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_GetOrAdd_Neo_SmartContract_StorageKey_System_Func_Neo_SmartContract_StorageItem__
  commentId: M:Neo.Persistence.DataCache.GetOrAdd(Neo.SmartContract.StorageKey,System.Func{Neo.SmartContract.StorageItem})
  name.vb: GetOrAdd(StorageKey, Func(Of StorageItem))
  fullName: Neo.Persistence.DataCache.GetOrAdd(Neo.SmartContract.StorageKey, System.Func<Neo.SmartContract.StorageItem>)
  fullName.vb: Neo.Persistence.DataCache.GetOrAdd(Neo.SmartContract.StorageKey, System.Func(Of Neo.SmartContract.StorageItem))
  nameWithType: DataCache.GetOrAdd(StorageKey, Func<StorageItem>)
  nameWithType.vb: DataCache.GetOrAdd(StorageKey, Func(Of StorageItem))
- uid: Neo.Persistence.DataCache.GetOrAdd*
  name: GetOrAdd
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_GetOrAdd_
  commentId: Overload:Neo.Persistence.DataCache.GetOrAdd
  isSpec: "True"
  fullName: Neo.Persistence.DataCache.GetOrAdd
  nameWithType: DataCache.GetOrAdd
- uid: Neo.Persistence.DataCache.Item(Neo.SmartContract.StorageKey)
  name: this[StorageKey]
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_Item_Neo_SmartContract_StorageKey_
  commentId: P:Neo.Persistence.DataCache.Item(Neo.SmartContract.StorageKey)
  name.vb: this[](StorageKey)
  fullName: Neo.Persistence.DataCache.this[Neo.SmartContract.StorageKey]
  fullName.vb: Neo.Persistence.DataCache.this[](Neo.SmartContract.StorageKey)
  nameWithType: DataCache.this[StorageKey]
  nameWithType.vb: DataCache.this[](StorageKey)
- uid: Neo.Persistence.DataCache.Item*
  name: this
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_Item_
  commentId: Overload:Neo.Persistence.DataCache.Item
  isSpec: "True"
  name.vb: this[]
  fullName: Neo.Persistence.DataCache.this
  fullName.vb: Neo.Persistence.DataCache.this[]
  nameWithType: DataCache.this
  nameWithType.vb: DataCache.this[]
- uid: Neo.Persistence.DataCache.Seek(System.Byte[],Neo.Persistence.SeekDirection)
  name: Seek(byte[], SeekDirection)
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_Seek_System_Byte___Neo_Persistence_SeekDirection_
  commentId: M:Neo.Persistence.DataCache.Seek(System.Byte[],Neo.Persistence.SeekDirection)
  name.vb: Seek(Byte(), SeekDirection)
  fullName: Neo.Persistence.DataCache.Seek(byte[], Neo.Persistence.SeekDirection)
  fullName.vb: Neo.Persistence.DataCache.Seek(Byte(), Neo.Persistence.SeekDirection)
  nameWithType: DataCache.Seek(byte[], SeekDirection)
  nameWithType.vb: DataCache.Seek(Byte(), SeekDirection)
- uid: Neo.Persistence.DataCache.Seek*
  name: Seek
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_Seek_
  commentId: Overload:Neo.Persistence.DataCache.Seek
  isSpec: "True"
  fullName: Neo.Persistence.DataCache.Seek
  nameWithType: DataCache.Seek
- uid: Neo.Persistence.DataCache.SeekInternal(System.Byte[],Neo.Persistence.SeekDirection)
  name: SeekInternal(byte[], SeekDirection)
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_SeekInternal_System_Byte___Neo_Persistence_SeekDirection_
  commentId: M:Neo.Persistence.DataCache.SeekInternal(System.Byte[],Neo.Persistence.SeekDirection)
  name.vb: SeekInternal(Byte(), SeekDirection)
  fullName: Neo.Persistence.DataCache.SeekInternal(byte[], Neo.Persistence.SeekDirection)
  fullName.vb: Neo.Persistence.DataCache.SeekInternal(Byte(), Neo.Persistence.SeekDirection)
  nameWithType: DataCache.SeekInternal(byte[], SeekDirection)
  nameWithType.vb: DataCache.SeekInternal(Byte(), SeekDirection)
- uid: Neo.Persistence.DataCache.SeekInternal*
  name: SeekInternal
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_SeekInternal_
  commentId: Overload:Neo.Persistence.DataCache.SeekInternal
  isSpec: "True"
  fullName: Neo.Persistence.DataCache.SeekInternal
  nameWithType: DataCache.SeekInternal
- uid: Neo.Persistence.DataCache.Trackable
  name: DataCache.Trackable
  href: api/Neo.Persistence.DataCache.Trackable.html
  commentId: T:Neo.Persistence.DataCache.Trackable
  fullName: Neo.Persistence.DataCache.Trackable
  nameWithType: DataCache.Trackable
- uid: Neo.Persistence.DataCache.Trackable.Item
  name: Item
  href: api/Neo.Persistence.DataCache.Trackable.html#Neo_Persistence_DataCache_Trackable_Item
  commentId: F:Neo.Persistence.DataCache.Trackable.Item
  fullName: Neo.Persistence.DataCache.Trackable.Item
  nameWithType: DataCache.Trackable.Item
- uid: Neo.Persistence.DataCache.Trackable.Key
  name: Key
  href: api/Neo.Persistence.DataCache.Trackable.html#Neo_Persistence_DataCache_Trackable_Key
  commentId: F:Neo.Persistence.DataCache.Trackable.Key
  fullName: Neo.Persistence.DataCache.Trackable.Key
  nameWithType: DataCache.Trackable.Key
- uid: Neo.Persistence.DataCache.Trackable.State
  name: State
  href: api/Neo.Persistence.DataCache.Trackable.html#Neo_Persistence_DataCache_Trackable_State
  commentId: F:Neo.Persistence.DataCache.Trackable.State
  fullName: Neo.Persistence.DataCache.Trackable.State
  nameWithType: DataCache.Trackable.State
- uid: Neo.Persistence.DataCache.TryGet(Neo.SmartContract.StorageKey)
  name: TryGet(StorageKey)
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_TryGet_Neo_SmartContract_StorageKey_
  commentId: M:Neo.Persistence.DataCache.TryGet(Neo.SmartContract.StorageKey)
  fullName: Neo.Persistence.DataCache.TryGet(Neo.SmartContract.StorageKey)
  nameWithType: DataCache.TryGet(StorageKey)
- uid: Neo.Persistence.DataCache.TryGet*
  name: TryGet
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_TryGet_
  commentId: Overload:Neo.Persistence.DataCache.TryGet
  isSpec: "True"
  fullName: Neo.Persistence.DataCache.TryGet
  nameWithType: DataCache.TryGet
- uid: Neo.Persistence.DataCache.TryGetInternal(Neo.SmartContract.StorageKey)
  name: TryGetInternal(StorageKey)
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_TryGetInternal_Neo_SmartContract_StorageKey_
  commentId: M:Neo.Persistence.DataCache.TryGetInternal(Neo.SmartContract.StorageKey)
  fullName: Neo.Persistence.DataCache.TryGetInternal(Neo.SmartContract.StorageKey)
  nameWithType: DataCache.TryGetInternal(StorageKey)
- uid: Neo.Persistence.DataCache.TryGetInternal*
  name: TryGetInternal
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_TryGetInternal_
  commentId: Overload:Neo.Persistence.DataCache.TryGetInternal
  isSpec: "True"
  fullName: Neo.Persistence.DataCache.TryGetInternal
  nameWithType: DataCache.TryGetInternal
- uid: Neo.Persistence.DataCache.UpdateInternal(Neo.SmartContract.StorageKey,Neo.SmartContract.StorageItem)
  name: UpdateInternal(StorageKey, StorageItem)
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_UpdateInternal_Neo_SmartContract_StorageKey_Neo_SmartContract_StorageItem_
  commentId: M:Neo.Persistence.DataCache.UpdateInternal(Neo.SmartContract.StorageKey,Neo.SmartContract.StorageItem)
  fullName: Neo.Persistence.DataCache.UpdateInternal(Neo.SmartContract.StorageKey, Neo.SmartContract.StorageItem)
  nameWithType: DataCache.UpdateInternal(StorageKey, StorageItem)
- uid: Neo.Persistence.DataCache.UpdateInternal*
  name: UpdateInternal
  href: api/Neo.Persistence.DataCache.html#Neo_Persistence_DataCache_UpdateInternal_
  commentId: Overload:Neo.Persistence.DataCache.UpdateInternal
  isSpec: "True"
  fullName: Neo.Persistence.DataCache.UpdateInternal
  nameWithType: DataCache.UpdateInternal
- uid: Neo.Persistence.IReadOnlyStore
  name: IReadOnlyStore
  href: api/Neo.Persistence.IReadOnlyStore.html
  commentId: T:Neo.Persistence.IReadOnlyStore
  fullName: Neo.Persistence.IReadOnlyStore
  nameWithType: IReadOnlyStore
- uid: Neo.Persistence.IReadOnlyStore.Contains(System.Byte[])
  name: Contains(byte[])
  href: api/Neo.Persistence.IReadOnlyStore.html#Neo_Persistence_IReadOnlyStore_Contains_System_Byte___
  commentId: M:Neo.Persistence.IReadOnlyStore.Contains(System.Byte[])
  name.vb: Contains(Byte())
  fullName: Neo.Persistence.IReadOnlyStore.Contains(byte[])
  fullName.vb: Neo.Persistence.IReadOnlyStore.Contains(Byte())
  nameWithType: IReadOnlyStore.Contains(byte[])
  nameWithType.vb: IReadOnlyStore.Contains(Byte())
- uid: Neo.Persistence.IReadOnlyStore.Contains*
  name: Contains
  href: api/Neo.Persistence.IReadOnlyStore.html#Neo_Persistence_IReadOnlyStore_Contains_
  commentId: Overload:Neo.Persistence.IReadOnlyStore.Contains
  isSpec: "True"
  fullName: Neo.Persistence.IReadOnlyStore.Contains
  nameWithType: IReadOnlyStore.Contains
- uid: Neo.Persistence.IReadOnlyStore.Seek(System.Byte[],Neo.Persistence.SeekDirection)
  name: Seek(byte[], SeekDirection)
  href: api/Neo.Persistence.IReadOnlyStore.html#Neo_Persistence_IReadOnlyStore_Seek_System_Byte___Neo_Persistence_SeekDirection_
  commentId: M:Neo.Persistence.IReadOnlyStore.Seek(System.Byte[],Neo.Persistence.SeekDirection)
  name.vb: Seek(Byte(), SeekDirection)
  fullName: Neo.Persistence.IReadOnlyStore.Seek(byte[], Neo.Persistence.SeekDirection)
  fullName.vb: Neo.Persistence.IReadOnlyStore.Seek(Byte(), Neo.Persistence.SeekDirection)
  nameWithType: IReadOnlyStore.Seek(byte[], SeekDirection)
  nameWithType.vb: IReadOnlyStore.Seek(Byte(), SeekDirection)
- uid: Neo.Persistence.IReadOnlyStore.Seek*
  name: Seek
  href: api/Neo.Persistence.IReadOnlyStore.html#Neo_Persistence_IReadOnlyStore_Seek_
  commentId: Overload:Neo.Persistence.IReadOnlyStore.Seek
  isSpec: "True"
  fullName: Neo.Persistence.IReadOnlyStore.Seek
  nameWithType: IReadOnlyStore.Seek
- uid: Neo.Persistence.IReadOnlyStore.TryGet(System.Byte[])
  name: TryGet(byte[])
  href: api/Neo.Persistence.IReadOnlyStore.html#Neo_Persistence_IReadOnlyStore_TryGet_System_Byte___
  commentId: M:Neo.Persistence.IReadOnlyStore.TryGet(System.Byte[])
  name.vb: TryGet(Byte())
  fullName: Neo.Persistence.IReadOnlyStore.TryGet(byte[])
  fullName.vb: Neo.Persistence.IReadOnlyStore.TryGet(Byte())
  nameWithType: IReadOnlyStore.TryGet(byte[])
  nameWithType.vb: IReadOnlyStore.TryGet(Byte())
- uid: Neo.Persistence.IReadOnlyStore.TryGet*
  name: TryGet
  href: api/Neo.Persistence.IReadOnlyStore.html#Neo_Persistence_IReadOnlyStore_TryGet_
  commentId: Overload:Neo.Persistence.IReadOnlyStore.TryGet
  isSpec: "True"
  fullName: Neo.Persistence.IReadOnlyStore.TryGet
  nameWithType: IReadOnlyStore.TryGet
- uid: Neo.Persistence.ISnapshot
  name: ISnapshot
  href: api/Neo.Persistence.ISnapshot.html
  commentId: T:Neo.Persistence.ISnapshot
  fullName: Neo.Persistence.ISnapshot
  nameWithType: ISnapshot
- uid: Neo.Persistence.ISnapshot.Commit
  name: Commit()
  href: api/Neo.Persistence.ISnapshot.html#Neo_Persistence_ISnapshot_Commit
  commentId: M:Neo.Persistence.ISnapshot.Commit
  fullName: Neo.Persistence.ISnapshot.Commit()
  nameWithType: ISnapshot.Commit()
- uid: Neo.Persistence.ISnapshot.Commit*
  name: Commit
  href: api/Neo.Persistence.ISnapshot.html#Neo_Persistence_ISnapshot_Commit_
  commentId: Overload:Neo.Persistence.ISnapshot.Commit
  isSpec: "True"
  fullName: Neo.Persistence.ISnapshot.Commit
  nameWithType: ISnapshot.Commit
- uid: Neo.Persistence.ISnapshot.Delete(System.Byte[])
  name: Delete(byte[])
  href: api/Neo.Persistence.ISnapshot.html#Neo_Persistence_ISnapshot_Delete_System_Byte___
  commentId: M:Neo.Persistence.ISnapshot.Delete(System.Byte[])
  name.vb: Delete(Byte())
  fullName: Neo.Persistence.ISnapshot.Delete(byte[])
  fullName.vb: Neo.Persistence.ISnapshot.Delete(Byte())
  nameWithType: ISnapshot.Delete(byte[])
  nameWithType.vb: ISnapshot.Delete(Byte())
- uid: Neo.Persistence.ISnapshot.Delete*
  name: Delete
  href: api/Neo.Persistence.ISnapshot.html#Neo_Persistence_ISnapshot_Delete_
  commentId: Overload:Neo.Persistence.ISnapshot.Delete
  isSpec: "True"
  fullName: Neo.Persistence.ISnapshot.Delete
  nameWithType: ISnapshot.Delete
- uid: Neo.Persistence.ISnapshot.Put(System.Byte[],System.Byte[])
  name: Put(byte[], byte[])
  href: api/Neo.Persistence.ISnapshot.html#Neo_Persistence_ISnapshot_Put_System_Byte___System_Byte___
  commentId: M:Neo.Persistence.ISnapshot.Put(System.Byte[],System.Byte[])
  name.vb: Put(Byte(), Byte())
  fullName: Neo.Persistence.ISnapshot.Put(byte[], byte[])
  fullName.vb: Neo.Persistence.ISnapshot.Put(Byte(), Byte())
  nameWithType: ISnapshot.Put(byte[], byte[])
  nameWithType.vb: ISnapshot.Put(Byte(), Byte())
- uid: Neo.Persistence.ISnapshot.Put*
  name: Put
  href: api/Neo.Persistence.ISnapshot.html#Neo_Persistence_ISnapshot_Put_
  commentId: Overload:Neo.Persistence.ISnapshot.Put
  isSpec: "True"
  fullName: Neo.Persistence.ISnapshot.Put
  nameWithType: ISnapshot.Put
- uid: Neo.Persistence.IStore
  name: IStore
  href: api/Neo.Persistence.IStore.html
  commentId: T:Neo.Persistence.IStore
  fullName: Neo.Persistence.IStore
  nameWithType: IStore
- uid: Neo.Persistence.IStore.Delete(System.Byte[])
  name: Delete(byte[])
  href: api/Neo.Persistence.IStore.html#Neo_Persistence_IStore_Delete_System_Byte___
  commentId: M:Neo.Persistence.IStore.Delete(System.Byte[])
  name.vb: Delete(Byte())
  fullName: Neo.Persistence.IStore.Delete(byte[])
  fullName.vb: Neo.Persistence.IStore.Delete(Byte())
  nameWithType: IStore.Delete(byte[])
  nameWithType.vb: IStore.Delete(Byte())
- uid: Neo.Persistence.IStore.Delete*
  name: Delete
  href: api/Neo.Persistence.IStore.html#Neo_Persistence_IStore_Delete_
  commentId: Overload:Neo.Persistence.IStore.Delete
  isSpec: "True"
  fullName: Neo.Persistence.IStore.Delete
  nameWithType: IStore.Delete
- uid: Neo.Persistence.IStore.GetSnapshot
  name: GetSnapshot()
  href: api/Neo.Persistence.IStore.html#Neo_Persistence_IStore_GetSnapshot
  commentId: M:Neo.Persistence.IStore.GetSnapshot
  fullName: Neo.Persistence.IStore.GetSnapshot()
  nameWithType: IStore.GetSnapshot()
- uid: Neo.Persistence.IStore.GetSnapshot*
  name: GetSnapshot
  href: api/Neo.Persistence.IStore.html#Neo_Persistence_IStore_GetSnapshot_
  commentId: Overload:Neo.Persistence.IStore.GetSnapshot
  isSpec: "True"
  fullName: Neo.Persistence.IStore.GetSnapshot
  nameWithType: IStore.GetSnapshot
- uid: Neo.Persistence.IStore.Put(System.Byte[],System.Byte[])
  name: Put(byte[], byte[])
  href: api/Neo.Persistence.IStore.html#Neo_Persistence_IStore_Put_System_Byte___System_Byte___
  commentId: M:Neo.Persistence.IStore.Put(System.Byte[],System.Byte[])
  name.vb: Put(Byte(), Byte())
  fullName: Neo.Persistence.IStore.Put(byte[], byte[])
  fullName.vb: Neo.Persistence.IStore.Put(Byte(), Byte())
  nameWithType: IStore.Put(byte[], byte[])
  nameWithType.vb: IStore.Put(Byte(), Byte())
- uid: Neo.Persistence.IStore.Put*
  name: Put
  href: api/Neo.Persistence.IStore.html#Neo_Persistence_IStore_Put_
  commentId: Overload:Neo.Persistence.IStore.Put
  isSpec: "True"
  fullName: Neo.Persistence.IStore.Put
  nameWithType: IStore.Put
- uid: Neo.Persistence.IStore.PutSync(System.Byte[],System.Byte[])
  name: PutSync(byte[], byte[])
  href: api/Neo.Persistence.IStore.html#Neo_Persistence_IStore_PutSync_System_Byte___System_Byte___
  commentId: M:Neo.Persistence.IStore.PutSync(System.Byte[],System.Byte[])
  name.vb: PutSync(Byte(), Byte())
  fullName: Neo.Persistence.IStore.PutSync(byte[], byte[])
  fullName.vb: Neo.Persistence.IStore.PutSync(Byte(), Byte())
  nameWithType: IStore.PutSync(byte[], byte[])
  nameWithType.vb: IStore.PutSync(Byte(), Byte())
- uid: Neo.Persistence.IStore.PutSync*
  name: PutSync
  href: api/Neo.Persistence.IStore.html#Neo_Persistence_IStore_PutSync_
  commentId: Overload:Neo.Persistence.IStore.PutSync
  isSpec: "True"
  fullName: Neo.Persistence.IStore.PutSync
  nameWithType: IStore.PutSync
- uid: Neo.Persistence.IStoreProvider
  name: IStoreProvider
  href: api/Neo.Persistence.IStoreProvider.html
  commentId: T:Neo.Persistence.IStoreProvider
  fullName: Neo.Persistence.IStoreProvider
  nameWithType: IStoreProvider
- uid: Neo.Persistence.IStoreProvider.GetStore(System.String)
  name: GetStore(string)
  href: api/Neo.Persistence.IStoreProvider.html#Neo_Persistence_IStoreProvider_GetStore_System_String_
  commentId: M:Neo.Persistence.IStoreProvider.GetStore(System.String)
  name.vb: GetStore(String)
  fullName: Neo.Persistence.IStoreProvider.GetStore(string)
  fullName.vb: Neo.Persistence.IStoreProvider.GetStore(String)
  nameWithType: IStoreProvider.GetStore(string)
  nameWithType.vb: IStoreProvider.GetStore(String)
- uid: Neo.Persistence.IStoreProvider.GetStore*
  name: GetStore
  href: api/Neo.Persistence.IStoreProvider.html#Neo_Persistence_IStoreProvider_GetStore_
  commentId: Overload:Neo.Persistence.IStoreProvider.GetStore
  isSpec: "True"
  fullName: Neo.Persistence.IStoreProvider.GetStore
  nameWithType: IStoreProvider.GetStore
- uid: Neo.Persistence.IStoreProvider.Name
  name: Name
  href: api/Neo.Persistence.IStoreProvider.html#Neo_Persistence_IStoreProvider_Name
  commentId: P:Neo.Persistence.IStoreProvider.Name
  fullName: Neo.Persistence.IStoreProvider.Name
  nameWithType: IStoreProvider.Name
- uid: Neo.Persistence.IStoreProvider.Name*
  name: Name
  href: api/Neo.Persistence.IStoreProvider.html#Neo_Persistence_IStoreProvider_Name_
  commentId: Overload:Neo.Persistence.IStoreProvider.Name
  isSpec: "True"
  fullName: Neo.Persistence.IStoreProvider.Name
  nameWithType: IStoreProvider.Name
- uid: Neo.Persistence.MemoryStore
  name: MemoryStore
  href: api/Neo.Persistence.MemoryStore.html
  commentId: T:Neo.Persistence.MemoryStore
  fullName: Neo.Persistence.MemoryStore
  nameWithType: MemoryStore
- uid: Neo.Persistence.MemoryStore.Contains(System.Byte[])
  name: Contains(byte[])
  href: api/Neo.Persistence.MemoryStore.html#Neo_Persistence_MemoryStore_Contains_System_Byte___
  commentId: M:Neo.Persistence.MemoryStore.Contains(System.Byte[])
  name.vb: Contains(Byte())
  fullName: Neo.Persistence.MemoryStore.Contains(byte[])
  fullName.vb: Neo.Persistence.MemoryStore.Contains(Byte())
  nameWithType: MemoryStore.Contains(byte[])
  nameWithType.vb: MemoryStore.Contains(Byte())
- uid: Neo.Persistence.MemoryStore.Contains*
  name: Contains
  href: api/Neo.Persistence.MemoryStore.html#Neo_Persistence_MemoryStore_Contains_
  commentId: Overload:Neo.Persistence.MemoryStore.Contains
  isSpec: "True"
  fullName: Neo.Persistence.MemoryStore.Contains
  nameWithType: MemoryStore.Contains
- uid: Neo.Persistence.MemoryStore.Delete(System.Byte[])
  name: Delete(byte[])
  href: api/Neo.Persistence.MemoryStore.html#Neo_Persistence_MemoryStore_Delete_System_Byte___
  commentId: M:Neo.Persistence.MemoryStore.Delete(System.Byte[])
  name.vb: Delete(Byte())
  fullName: Neo.Persistence.MemoryStore.Delete(byte[])
  fullName.vb: Neo.Persistence.MemoryStore.Delete(Byte())
  nameWithType: MemoryStore.Delete(byte[])
  nameWithType.vb: MemoryStore.Delete(Byte())
- uid: Neo.Persistence.MemoryStore.Delete*
  name: Delete
  href: api/Neo.Persistence.MemoryStore.html#Neo_Persistence_MemoryStore_Delete_
  commentId: Overload:Neo.Persistence.MemoryStore.Delete
  isSpec: "True"
  fullName: Neo.Persistence.MemoryStore.Delete
  nameWithType: MemoryStore.Delete
- uid: Neo.Persistence.MemoryStore.Dispose
  name: Dispose()
  href: api/Neo.Persistence.MemoryStore.html#Neo_Persistence_MemoryStore_Dispose
  commentId: M:Neo.Persistence.MemoryStore.Dispose
  fullName: Neo.Persistence.MemoryStore.Dispose()
  nameWithType: MemoryStore.Dispose()
- uid: Neo.Persistence.MemoryStore.Dispose*
  name: Dispose
  href: api/Neo.Persistence.MemoryStore.html#Neo_Persistence_MemoryStore_Dispose_
  commentId: Overload:Neo.Persistence.MemoryStore.Dispose
  isSpec: "True"
  fullName: Neo.Persistence.MemoryStore.Dispose
  nameWithType: MemoryStore.Dispose
- uid: Neo.Persistence.MemoryStore.GetSnapshot
  name: GetSnapshot()
  href: api/Neo.Persistence.MemoryStore.html#Neo_Persistence_MemoryStore_GetSnapshot
  commentId: M:Neo.Persistence.MemoryStore.GetSnapshot
  fullName: Neo.Persistence.MemoryStore.GetSnapshot()
  nameWithType: MemoryStore.GetSnapshot()
- uid: Neo.Persistence.MemoryStore.GetSnapshot*
  name: GetSnapshot
  href: api/Neo.Persistence.MemoryStore.html#Neo_Persistence_MemoryStore_GetSnapshot_
  commentId: Overload:Neo.Persistence.MemoryStore.GetSnapshot
  isSpec: "True"
  fullName: Neo.Persistence.MemoryStore.GetSnapshot
  nameWithType: MemoryStore.GetSnapshot
- uid: Neo.Persistence.MemoryStore.Put(System.Byte[],System.Byte[])
  name: Put(byte[], byte[])
  href: api/Neo.Persistence.MemoryStore.html#Neo_Persistence_MemoryStore_Put_System_Byte___System_Byte___
  commentId: M:Neo.Persistence.MemoryStore.Put(System.Byte[],System.Byte[])
  name.vb: Put(Byte(), Byte())
  fullName: Neo.Persistence.MemoryStore.Put(byte[], byte[])
  fullName.vb: Neo.Persistence.MemoryStore.Put(Byte(), Byte())
  nameWithType: MemoryStore.Put(byte[], byte[])
  nameWithType.vb: MemoryStore.Put(Byte(), Byte())
- uid: Neo.Persistence.MemoryStore.Put*
  name: Put
  href: api/Neo.Persistence.MemoryStore.html#Neo_Persistence_MemoryStore_Put_
  commentId: Overload:Neo.Persistence.MemoryStore.Put
  isSpec: "True"
  fullName: Neo.Persistence.MemoryStore.Put
  nameWithType: MemoryStore.Put
- uid: Neo.Persistence.MemoryStore.Seek(System.Byte[],Neo.Persistence.SeekDirection)
  name: Seek(byte[], SeekDirection)
  href: api/Neo.Persistence.MemoryStore.html#Neo_Persistence_MemoryStore_Seek_System_Byte___Neo_Persistence_SeekDirection_
  commentId: M:Neo.Persistence.MemoryStore.Seek(System.Byte[],Neo.Persistence.SeekDirection)
  name.vb: Seek(Byte(), SeekDirection)
  fullName: Neo.Persistence.MemoryStore.Seek(byte[], Neo.Persistence.SeekDirection)
  fullName.vb: Neo.Persistence.MemoryStore.Seek(Byte(), Neo.Persistence.SeekDirection)
  nameWithType: MemoryStore.Seek(byte[], SeekDirection)
  nameWithType.vb: MemoryStore.Seek(Byte(), SeekDirection)
- uid: Neo.Persistence.MemoryStore.Seek*
  name: Seek
  href: api/Neo.Persistence.MemoryStore.html#Neo_Persistence_MemoryStore_Seek_
  commentId: Overload:Neo.Persistence.MemoryStore.Seek
  isSpec: "True"
  fullName: Neo.Persistence.MemoryStore.Seek
  nameWithType: MemoryStore.Seek
- uid: Neo.Persistence.MemoryStore.TryGet(System.Byte[])
  name: TryGet(byte[])
  href: api/Neo.Persistence.MemoryStore.html#Neo_Persistence_MemoryStore_TryGet_System_Byte___
  commentId: M:Neo.Persistence.MemoryStore.TryGet(System.Byte[])
  name.vb: TryGet(Byte())
  fullName: Neo.Persistence.MemoryStore.TryGet(byte[])
  fullName.vb: Neo.Persistence.MemoryStore.TryGet(Byte())
  nameWithType: MemoryStore.TryGet(byte[])
  nameWithType.vb: MemoryStore.TryGet(Byte())
- uid: Neo.Persistence.MemoryStore.TryGet*
  name: TryGet
  href: api/Neo.Persistence.MemoryStore.html#Neo_Persistence_MemoryStore_TryGet_
  commentId: Overload:Neo.Persistence.MemoryStore.TryGet
  isSpec: "True"
  fullName: Neo.Persistence.MemoryStore.TryGet
  nameWithType: MemoryStore.TryGet
- uid: Neo.Persistence.SeekDirection
  name: SeekDirection
  href: api/Neo.Persistence.SeekDirection.html
  commentId: T:Neo.Persistence.SeekDirection
  fullName: Neo.Persistence.SeekDirection
  nameWithType: SeekDirection
- uid: Neo.Persistence.SeekDirection.Backward
  name: Backward
  href: api/Neo.Persistence.SeekDirection.html#Neo_Persistence_SeekDirection_Backward
  commentId: F:Neo.Persistence.SeekDirection.Backward
  fullName: Neo.Persistence.SeekDirection.Backward
  nameWithType: SeekDirection.Backward
- uid: Neo.Persistence.SeekDirection.Forward
  name: Forward
  href: api/Neo.Persistence.SeekDirection.html#Neo_Persistence_SeekDirection_Forward
  commentId: F:Neo.Persistence.SeekDirection.Forward
  fullName: Neo.Persistence.SeekDirection.Forward
  nameWithType: SeekDirection.Forward
- uid: Neo.Persistence.SnapshotCache
  name: SnapshotCache
  href: api/Neo.Persistence.SnapshotCache.html
  commentId: T:Neo.Persistence.SnapshotCache
  fullName: Neo.Persistence.SnapshotCache
  nameWithType: SnapshotCache
- uid: Neo.Persistence.SnapshotCache.#ctor(Neo.Persistence.IReadOnlyStore)
  name: SnapshotCache(IReadOnlyStore)
  href: api/Neo.Persistence.SnapshotCache.html#Neo_Persistence_SnapshotCache__ctor_Neo_Persistence_IReadOnlyStore_
  commentId: M:Neo.Persistence.SnapshotCache.#ctor(Neo.Persistence.IReadOnlyStore)
  name.vb: New(IReadOnlyStore)
  fullName: Neo.Persistence.SnapshotCache.SnapshotCache(Neo.Persistence.IReadOnlyStore)
  fullName.vb: Neo.Persistence.SnapshotCache.New(Neo.Persistence.IReadOnlyStore)
  nameWithType: SnapshotCache.SnapshotCache(IReadOnlyStore)
  nameWithType.vb: SnapshotCache.New(IReadOnlyStore)
- uid: Neo.Persistence.SnapshotCache.#ctor*
  name: SnapshotCache
  href: api/Neo.Persistence.SnapshotCache.html#Neo_Persistence_SnapshotCache__ctor_
  commentId: Overload:Neo.Persistence.SnapshotCache.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Persistence.SnapshotCache.SnapshotCache
  fullName.vb: Neo.Persistence.SnapshotCache.New
  nameWithType: SnapshotCache.SnapshotCache
  nameWithType.vb: SnapshotCache.New
- uid: Neo.Persistence.SnapshotCache.AddInternal(Neo.SmartContract.StorageKey,Neo.SmartContract.StorageItem)
  name: AddInternal(StorageKey, StorageItem)
  href: api/Neo.Persistence.SnapshotCache.html#Neo_Persistence_SnapshotCache_AddInternal_Neo_SmartContract_StorageKey_Neo_SmartContract_StorageItem_
  commentId: M:Neo.Persistence.SnapshotCache.AddInternal(Neo.SmartContract.StorageKey,Neo.SmartContract.StorageItem)
  fullName: Neo.Persistence.SnapshotCache.AddInternal(Neo.SmartContract.StorageKey, Neo.SmartContract.StorageItem)
  nameWithType: SnapshotCache.AddInternal(StorageKey, StorageItem)
- uid: Neo.Persistence.SnapshotCache.AddInternal*
  name: AddInternal
  href: api/Neo.Persistence.SnapshotCache.html#Neo_Persistence_SnapshotCache_AddInternal_
  commentId: Overload:Neo.Persistence.SnapshotCache.AddInternal
  isSpec: "True"
  fullName: Neo.Persistence.SnapshotCache.AddInternal
  nameWithType: SnapshotCache.AddInternal
- uid: Neo.Persistence.SnapshotCache.Commit
  name: Commit()
  href: api/Neo.Persistence.SnapshotCache.html#Neo_Persistence_SnapshotCache_Commit
  commentId: M:Neo.Persistence.SnapshotCache.Commit
  fullName: Neo.Persistence.SnapshotCache.Commit()
  nameWithType: SnapshotCache.Commit()
- uid: Neo.Persistence.SnapshotCache.Commit*
  name: Commit
  href: api/Neo.Persistence.SnapshotCache.html#Neo_Persistence_SnapshotCache_Commit_
  commentId: Overload:Neo.Persistence.SnapshotCache.Commit
  isSpec: "True"
  fullName: Neo.Persistence.SnapshotCache.Commit
  nameWithType: SnapshotCache.Commit
- uid: Neo.Persistence.SnapshotCache.ContainsInternal(Neo.SmartContract.StorageKey)
  name: ContainsInternal(StorageKey)
  href: api/Neo.Persistence.SnapshotCache.html#Neo_Persistence_SnapshotCache_ContainsInternal_Neo_SmartContract_StorageKey_
  commentId: M:Neo.Persistence.SnapshotCache.ContainsInternal(Neo.SmartContract.StorageKey)
  fullName: Neo.Persistence.SnapshotCache.ContainsInternal(Neo.SmartContract.StorageKey)
  nameWithType: SnapshotCache.ContainsInternal(StorageKey)
- uid: Neo.Persistence.SnapshotCache.ContainsInternal*
  name: ContainsInternal
  href: api/Neo.Persistence.SnapshotCache.html#Neo_Persistence_SnapshotCache_ContainsInternal_
  commentId: Overload:Neo.Persistence.SnapshotCache.ContainsInternal
  isSpec: "True"
  fullName: Neo.Persistence.SnapshotCache.ContainsInternal
  nameWithType: SnapshotCache.ContainsInternal
- uid: Neo.Persistence.SnapshotCache.DeleteInternal(Neo.SmartContract.StorageKey)
  name: DeleteInternal(StorageKey)
  href: api/Neo.Persistence.SnapshotCache.html#Neo_Persistence_SnapshotCache_DeleteInternal_Neo_SmartContract_StorageKey_
  commentId: M:Neo.Persistence.SnapshotCache.DeleteInternal(Neo.SmartContract.StorageKey)
  fullName: Neo.Persistence.SnapshotCache.DeleteInternal(Neo.SmartContract.StorageKey)
  nameWithType: SnapshotCache.DeleteInternal(StorageKey)
- uid: Neo.Persistence.SnapshotCache.DeleteInternal*
  name: DeleteInternal
  href: api/Neo.Persistence.SnapshotCache.html#Neo_Persistence_SnapshotCache_DeleteInternal_
  commentId: Overload:Neo.Persistence.SnapshotCache.DeleteInternal
  isSpec: "True"
  fullName: Neo.Persistence.SnapshotCache.DeleteInternal
  nameWithType: SnapshotCache.DeleteInternal
- uid: Neo.Persistence.SnapshotCache.Dispose
  name: Dispose()
  href: api/Neo.Persistence.SnapshotCache.html#Neo_Persistence_SnapshotCache_Dispose
  commentId: M:Neo.Persistence.SnapshotCache.Dispose
  fullName: Neo.Persistence.SnapshotCache.Dispose()
  nameWithType: SnapshotCache.Dispose()
- uid: Neo.Persistence.SnapshotCache.Dispose*
  name: Dispose
  href: api/Neo.Persistence.SnapshotCache.html#Neo_Persistence_SnapshotCache_Dispose_
  commentId: Overload:Neo.Persistence.SnapshotCache.Dispose
  isSpec: "True"
  fullName: Neo.Persistence.SnapshotCache.Dispose
  nameWithType: SnapshotCache.Dispose
- uid: Neo.Persistence.SnapshotCache.GetInternal(Neo.SmartContract.StorageKey)
  name: GetInternal(StorageKey)
  href: api/Neo.Persistence.SnapshotCache.html#Neo_Persistence_SnapshotCache_GetInternal_Neo_SmartContract_StorageKey_
  commentId: M:Neo.Persistence.SnapshotCache.GetInternal(Neo.SmartContract.StorageKey)
  fullName: Neo.Persistence.SnapshotCache.GetInternal(Neo.SmartContract.StorageKey)
  nameWithType: SnapshotCache.GetInternal(StorageKey)
- uid: Neo.Persistence.SnapshotCache.GetInternal*
  name: GetInternal
  href: api/Neo.Persistence.SnapshotCache.html#Neo_Persistence_SnapshotCache_GetInternal_
  commentId: Overload:Neo.Persistence.SnapshotCache.GetInternal
  isSpec: "True"
  fullName: Neo.Persistence.SnapshotCache.GetInternal
  nameWithType: SnapshotCache.GetInternal
- uid: Neo.Persistence.SnapshotCache.SeekInternal(System.Byte[],Neo.Persistence.SeekDirection)
  name: SeekInternal(byte[], SeekDirection)
  href: api/Neo.Persistence.SnapshotCache.html#Neo_Persistence_SnapshotCache_SeekInternal_System_Byte___Neo_Persistence_SeekDirection_
  commentId: M:Neo.Persistence.SnapshotCache.SeekInternal(System.Byte[],Neo.Persistence.SeekDirection)
  name.vb: SeekInternal(Byte(), SeekDirection)
  fullName: Neo.Persistence.SnapshotCache.SeekInternal(byte[], Neo.Persistence.SeekDirection)
  fullName.vb: Neo.Persistence.SnapshotCache.SeekInternal(Byte(), Neo.Persistence.SeekDirection)
  nameWithType: SnapshotCache.SeekInternal(byte[], SeekDirection)
  nameWithType.vb: SnapshotCache.SeekInternal(Byte(), SeekDirection)
- uid: Neo.Persistence.SnapshotCache.SeekInternal*
  name: SeekInternal
  href: api/Neo.Persistence.SnapshotCache.html#Neo_Persistence_SnapshotCache_SeekInternal_
  commentId: Overload:Neo.Persistence.SnapshotCache.SeekInternal
  isSpec: "True"
  fullName: Neo.Persistence.SnapshotCache.SeekInternal
  nameWithType: SnapshotCache.SeekInternal
- uid: Neo.Persistence.SnapshotCache.TryGetInternal(Neo.SmartContract.StorageKey)
  name: TryGetInternal(StorageKey)
  href: api/Neo.Persistence.SnapshotCache.html#Neo_Persistence_SnapshotCache_TryGetInternal_Neo_SmartContract_StorageKey_
  commentId: M:Neo.Persistence.SnapshotCache.TryGetInternal(Neo.SmartContract.StorageKey)
  fullName: Neo.Persistence.SnapshotCache.TryGetInternal(Neo.SmartContract.StorageKey)
  nameWithType: SnapshotCache.TryGetInternal(StorageKey)
- uid: Neo.Persistence.SnapshotCache.TryGetInternal*
  name: TryGetInternal
  href: api/Neo.Persistence.SnapshotCache.html#Neo_Persistence_SnapshotCache_TryGetInternal_
  commentId: Overload:Neo.Persistence.SnapshotCache.TryGetInternal
  isSpec: "True"
  fullName: Neo.Persistence.SnapshotCache.TryGetInternal
  nameWithType: SnapshotCache.TryGetInternal
- uid: Neo.Persistence.SnapshotCache.UpdateInternal(Neo.SmartContract.StorageKey,Neo.SmartContract.StorageItem)
  name: UpdateInternal(StorageKey, StorageItem)
  href: api/Neo.Persistence.SnapshotCache.html#Neo_Persistence_SnapshotCache_UpdateInternal_Neo_SmartContract_StorageKey_Neo_SmartContract_StorageItem_
  commentId: M:Neo.Persistence.SnapshotCache.UpdateInternal(Neo.SmartContract.StorageKey,Neo.SmartContract.StorageItem)
  fullName: Neo.Persistence.SnapshotCache.UpdateInternal(Neo.SmartContract.StorageKey, Neo.SmartContract.StorageItem)
  nameWithType: SnapshotCache.UpdateInternal(StorageKey, StorageItem)
- uid: Neo.Persistence.SnapshotCache.UpdateInternal*
  name: UpdateInternal
  href: api/Neo.Persistence.SnapshotCache.html#Neo_Persistence_SnapshotCache_UpdateInternal_
  commentId: Overload:Neo.Persistence.SnapshotCache.UpdateInternal
  isSpec: "True"
  fullName: Neo.Persistence.SnapshotCache.UpdateInternal
  nameWithType: SnapshotCache.UpdateInternal
- uid: Neo.Persistence.StoreFactory
  name: StoreFactory
  href: api/Neo.Persistence.StoreFactory.html
  commentId: T:Neo.Persistence.StoreFactory
  fullName: Neo.Persistence.StoreFactory
  nameWithType: StoreFactory
- uid: Neo.Persistence.StoreFactory.GetStore(System.String,System.String)
  name: GetStore(string, string)
  href: api/Neo.Persistence.StoreFactory.html#Neo_Persistence_StoreFactory_GetStore_System_String_System_String_
  commentId: M:Neo.Persistence.StoreFactory.GetStore(System.String,System.String)
  name.vb: GetStore(String, String)
  fullName: Neo.Persistence.StoreFactory.GetStore(string, string)
  fullName.vb: Neo.Persistence.StoreFactory.GetStore(String, String)
  nameWithType: StoreFactory.GetStore(string, string)
  nameWithType.vb: StoreFactory.GetStore(String, String)
- uid: Neo.Persistence.StoreFactory.GetStore*
  name: GetStore
  href: api/Neo.Persistence.StoreFactory.html#Neo_Persistence_StoreFactory_GetStore_
  commentId: Overload:Neo.Persistence.StoreFactory.GetStore
  isSpec: "True"
  fullName: Neo.Persistence.StoreFactory.GetStore
  nameWithType: StoreFactory.GetStore
- uid: Neo.Persistence.StoreFactory.RegisterProvider(Neo.Persistence.IStoreProvider)
  name: RegisterProvider(IStoreProvider)
  href: api/Neo.Persistence.StoreFactory.html#Neo_Persistence_StoreFactory_RegisterProvider_Neo_Persistence_IStoreProvider_
  commentId: M:Neo.Persistence.StoreFactory.RegisterProvider(Neo.Persistence.IStoreProvider)
  fullName: Neo.Persistence.StoreFactory.RegisterProvider(Neo.Persistence.IStoreProvider)
  nameWithType: StoreFactory.RegisterProvider(IStoreProvider)
- uid: Neo.Persistence.StoreFactory.RegisterProvider*
  name: RegisterProvider
  href: api/Neo.Persistence.StoreFactory.html#Neo_Persistence_StoreFactory_RegisterProvider_
  commentId: Overload:Neo.Persistence.StoreFactory.RegisterProvider
  isSpec: "True"
  fullName: Neo.Persistence.StoreFactory.RegisterProvider
  nameWithType: StoreFactory.RegisterProvider
- uid: Neo.Persistence.TrackState
  name: TrackState
  href: api/Neo.Persistence.TrackState.html
  commentId: T:Neo.Persistence.TrackState
  fullName: Neo.Persistence.TrackState
  nameWithType: TrackState
- uid: Neo.Persistence.TrackState.Added
  name: Added
  href: api/Neo.Persistence.TrackState.html#Neo_Persistence_TrackState_Added
  commentId: F:Neo.Persistence.TrackState.Added
  fullName: Neo.Persistence.TrackState.Added
  nameWithType: TrackState.Added
- uid: Neo.Persistence.TrackState.Changed
  name: Changed
  href: api/Neo.Persistence.TrackState.html#Neo_Persistence_TrackState_Changed
  commentId: F:Neo.Persistence.TrackState.Changed
  fullName: Neo.Persistence.TrackState.Changed
  nameWithType: TrackState.Changed
- uid: Neo.Persistence.TrackState.Deleted
  name: Deleted
  href: api/Neo.Persistence.TrackState.html#Neo_Persistence_TrackState_Deleted
  commentId: F:Neo.Persistence.TrackState.Deleted
  fullName: Neo.Persistence.TrackState.Deleted
  nameWithType: TrackState.Deleted
- uid: Neo.Persistence.TrackState.None
  name: None
  href: api/Neo.Persistence.TrackState.html#Neo_Persistence_TrackState_None
  commentId: F:Neo.Persistence.TrackState.None
  fullName: Neo.Persistence.TrackState.None
  nameWithType: TrackState.None
- uid: Neo.Persistence.TrackState.NotFound
  name: NotFound
  href: api/Neo.Persistence.TrackState.html#Neo_Persistence_TrackState_NotFound
  commentId: F:Neo.Persistence.TrackState.NotFound
  fullName: Neo.Persistence.TrackState.NotFound
  nameWithType: TrackState.NotFound
- uid: Neo.Plugins
  name: Neo.Plugins
  href: api/Neo.Plugins.html
  commentId: N:Neo.Plugins
  fullName: Neo.Plugins
  nameWithType: Neo.Plugins
- uid: Neo.Plugins.Plugin
  name: Plugin
  href: api/Neo.Plugins.Plugin.html
  commentId: T:Neo.Plugins.Plugin
  fullName: Neo.Plugins.Plugin
  nameWithType: Plugin
- uid: Neo.Plugins.Plugin.#ctor
  name: Plugin()
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin__ctor
  commentId: M:Neo.Plugins.Plugin.#ctor
  name.vb: New()
  fullName: Neo.Plugins.Plugin.Plugin()
  fullName.vb: Neo.Plugins.Plugin.New()
  nameWithType: Plugin.Plugin()
  nameWithType.vb: Plugin.New()
- uid: Neo.Plugins.Plugin.#ctor*
  name: Plugin
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin__ctor_
  commentId: Overload:Neo.Plugins.Plugin.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Plugins.Plugin.Plugin
  fullName.vb: Neo.Plugins.Plugin.New
  nameWithType: Plugin.Plugin
  nameWithType.vb: Plugin.New
- uid: Neo.Plugins.Plugin.ConfigFile
  name: ConfigFile
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_ConfigFile
  commentId: P:Neo.Plugins.Plugin.ConfigFile
  fullName: Neo.Plugins.Plugin.ConfigFile
  nameWithType: Plugin.ConfigFile
- uid: Neo.Plugins.Plugin.ConfigFile*
  name: ConfigFile
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_ConfigFile_
  commentId: Overload:Neo.Plugins.Plugin.ConfigFile
  isSpec: "True"
  fullName: Neo.Plugins.Plugin.ConfigFile
  nameWithType: Plugin.ConfigFile
- uid: Neo.Plugins.Plugin.Configure
  name: Configure()
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_Configure
  commentId: M:Neo.Plugins.Plugin.Configure
  fullName: Neo.Plugins.Plugin.Configure()
  nameWithType: Plugin.Configure()
- uid: Neo.Plugins.Plugin.Configure*
  name: Configure
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_Configure_
  commentId: Overload:Neo.Plugins.Plugin.Configure
  isSpec: "True"
  fullName: Neo.Plugins.Plugin.Configure
  nameWithType: Plugin.Configure
- uid: Neo.Plugins.Plugin.Description
  name: Description
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_Description
  commentId: P:Neo.Plugins.Plugin.Description
  fullName: Neo.Plugins.Plugin.Description
  nameWithType: Plugin.Description
- uid: Neo.Plugins.Plugin.Description*
  name: Description
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_Description_
  commentId: Overload:Neo.Plugins.Plugin.Description
  isSpec: "True"
  fullName: Neo.Plugins.Plugin.Description
  nameWithType: Plugin.Description
- uid: Neo.Plugins.Plugin.Dispose
  name: Dispose()
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_Dispose
  commentId: M:Neo.Plugins.Plugin.Dispose
  fullName: Neo.Plugins.Plugin.Dispose()
  nameWithType: Plugin.Dispose()
- uid: Neo.Plugins.Plugin.Dispose*
  name: Dispose
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_Dispose_
  commentId: Overload:Neo.Plugins.Plugin.Dispose
  isSpec: "True"
  fullName: Neo.Plugins.Plugin.Dispose
  nameWithType: Plugin.Dispose
- uid: Neo.Plugins.Plugin.GetConfiguration
  name: GetConfiguration()
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_GetConfiguration
  commentId: M:Neo.Plugins.Plugin.GetConfiguration
  fullName: Neo.Plugins.Plugin.GetConfiguration()
  nameWithType: Plugin.GetConfiguration()
- uid: Neo.Plugins.Plugin.GetConfiguration*
  name: GetConfiguration
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_GetConfiguration_
  commentId: Overload:Neo.Plugins.Plugin.GetConfiguration
  isSpec: "True"
  fullName: Neo.Plugins.Plugin.GetConfiguration
  nameWithType: Plugin.GetConfiguration
- uid: Neo.Plugins.Plugin.Log(System.Object,Neo.LogLevel)
  name: Log(object, LogLevel)
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_Log_System_Object_Neo_LogLevel_
  commentId: M:Neo.Plugins.Plugin.Log(System.Object,Neo.LogLevel)
  name.vb: Log(Object, LogLevel)
  fullName: Neo.Plugins.Plugin.Log(object, Neo.LogLevel)
  fullName.vb: Neo.Plugins.Plugin.Log(Object, Neo.LogLevel)
  nameWithType: Plugin.Log(object, LogLevel)
  nameWithType.vb: Plugin.Log(Object, LogLevel)
- uid: Neo.Plugins.Plugin.Log*
  name: Log
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_Log_
  commentId: Overload:Neo.Plugins.Plugin.Log
  isSpec: "True"
  fullName: Neo.Plugins.Plugin.Log
  nameWithType: Plugin.Log
- uid: Neo.Plugins.Plugin.Name
  name: Name
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_Name
  commentId: P:Neo.Plugins.Plugin.Name
  fullName: Neo.Plugins.Plugin.Name
  nameWithType: Plugin.Name
- uid: Neo.Plugins.Plugin.Name*
  name: Name
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_Name_
  commentId: Overload:Neo.Plugins.Plugin.Name
  isSpec: "True"
  fullName: Neo.Plugins.Plugin.Name
  nameWithType: Plugin.Name
- uid: Neo.Plugins.Plugin.OnMessage(System.Object)
  name: OnMessage(object)
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_OnMessage_System_Object_
  commentId: M:Neo.Plugins.Plugin.OnMessage(System.Object)
  name.vb: OnMessage(Object)
  fullName: Neo.Plugins.Plugin.OnMessage(object)
  fullName.vb: Neo.Plugins.Plugin.OnMessage(Object)
  nameWithType: Plugin.OnMessage(object)
  nameWithType.vb: Plugin.OnMessage(Object)
- uid: Neo.Plugins.Plugin.OnMessage*
  name: OnMessage
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_OnMessage_
  commentId: Overload:Neo.Plugins.Plugin.OnMessage
  isSpec: "True"
  fullName: Neo.Plugins.Plugin.OnMessage
  nameWithType: Plugin.OnMessage
- uid: Neo.Plugins.Plugin.OnSystemLoaded(Neo.NeoSystem)
  name: OnSystemLoaded(NeoSystem)
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_OnSystemLoaded_Neo_NeoSystem_
  commentId: M:Neo.Plugins.Plugin.OnSystemLoaded(Neo.NeoSystem)
  fullName: Neo.Plugins.Plugin.OnSystemLoaded(Neo.NeoSystem)
  nameWithType: Plugin.OnSystemLoaded(NeoSystem)
- uid: Neo.Plugins.Plugin.OnSystemLoaded*
  name: OnSystemLoaded
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_OnSystemLoaded_
  commentId: Overload:Neo.Plugins.Plugin.OnSystemLoaded
  isSpec: "True"
  fullName: Neo.Plugins.Plugin.OnSystemLoaded
  nameWithType: Plugin.OnSystemLoaded
- uid: Neo.Plugins.Plugin.Path
  name: Path
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_Path
  commentId: P:Neo.Plugins.Plugin.Path
  fullName: Neo.Plugins.Plugin.Path
  nameWithType: Plugin.Path
- uid: Neo.Plugins.Plugin.Path*
  name: Path
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_Path_
  commentId: Overload:Neo.Plugins.Plugin.Path
  isSpec: "True"
  fullName: Neo.Plugins.Plugin.Path
  nameWithType: Plugin.Path
- uid: Neo.Plugins.Plugin.Plugins
  name: Plugins
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_Plugins
  commentId: F:Neo.Plugins.Plugin.Plugins
  fullName: Neo.Plugins.Plugin.Plugins
  nameWithType: Plugin.Plugins
- uid: Neo.Plugins.Plugin.PluginsDirectory
  name: PluginsDirectory
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_PluginsDirectory
  commentId: F:Neo.Plugins.Plugin.PluginsDirectory
  fullName: Neo.Plugins.Plugin.PluginsDirectory
  nameWithType: Plugin.PluginsDirectory
- uid: Neo.Plugins.Plugin.RootPath
  name: RootPath
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_RootPath
  commentId: P:Neo.Plugins.Plugin.RootPath
  fullName: Neo.Plugins.Plugin.RootPath
  nameWithType: Plugin.RootPath
- uid: Neo.Plugins.Plugin.RootPath*
  name: RootPath
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_RootPath_
  commentId: Overload:Neo.Plugins.Plugin.RootPath
  isSpec: "True"
  fullName: Neo.Plugins.Plugin.RootPath
  nameWithType: Plugin.RootPath
- uid: Neo.Plugins.Plugin.SendMessage(System.Object)
  name: SendMessage(object)
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_SendMessage_System_Object_
  commentId: M:Neo.Plugins.Plugin.SendMessage(System.Object)
  name.vb: SendMessage(Object)
  fullName: Neo.Plugins.Plugin.SendMessage(object)
  fullName.vb: Neo.Plugins.Plugin.SendMessage(Object)
  nameWithType: Plugin.SendMessage(object)
  nameWithType.vb: Plugin.SendMessage(Object)
- uid: Neo.Plugins.Plugin.SendMessage*
  name: SendMessage
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_SendMessage_
  commentId: Overload:Neo.Plugins.Plugin.SendMessage
  isSpec: "True"
  fullName: Neo.Plugins.Plugin.SendMessage
  nameWithType: Plugin.SendMessage
- uid: Neo.Plugins.Plugin.Version
  name: Version
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_Version
  commentId: P:Neo.Plugins.Plugin.Version
  fullName: Neo.Plugins.Plugin.Version
  nameWithType: Plugin.Version
- uid: Neo.Plugins.Plugin.Version*
  name: Version
  href: api/Neo.Plugins.Plugin.html#Neo_Plugins_Plugin_Version_
  commentId: Overload:Neo.Plugins.Plugin.Version
  isSpec: "True"
  fullName: Neo.Plugins.Plugin.Version
  nameWithType: Plugin.Version
- uid: Neo.ProtocolSettings
  name: ProtocolSettings
  href: api/Neo.ProtocolSettings.html
  commentId: T:Neo.ProtocolSettings
  fullName: Neo.ProtocolSettings
  nameWithType: ProtocolSettings
- uid: Neo.ProtocolSettings.AddressVersion
  name: AddressVersion
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_AddressVersion
  commentId: P:Neo.ProtocolSettings.AddressVersion
  fullName: Neo.ProtocolSettings.AddressVersion
  nameWithType: ProtocolSettings.AddressVersion
- uid: Neo.ProtocolSettings.AddressVersion*
  name: AddressVersion
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_AddressVersion_
  commentId: Overload:Neo.ProtocolSettings.AddressVersion
  isSpec: "True"
  fullName: Neo.ProtocolSettings.AddressVersion
  nameWithType: ProtocolSettings.AddressVersion
- uid: Neo.ProtocolSettings.CommitteeMembersCount
  name: CommitteeMembersCount
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_CommitteeMembersCount
  commentId: P:Neo.ProtocolSettings.CommitteeMembersCount
  fullName: Neo.ProtocolSettings.CommitteeMembersCount
  nameWithType: ProtocolSettings.CommitteeMembersCount
- uid: Neo.ProtocolSettings.CommitteeMembersCount*
  name: CommitteeMembersCount
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_CommitteeMembersCount_
  commentId: Overload:Neo.ProtocolSettings.CommitteeMembersCount
  isSpec: "True"
  fullName: Neo.ProtocolSettings.CommitteeMembersCount
  nameWithType: ProtocolSettings.CommitteeMembersCount
- uid: Neo.ProtocolSettings.Default
  name: Default
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_Default
  commentId: P:Neo.ProtocolSettings.Default
  fullName: Neo.ProtocolSettings.Default
  nameWithType: ProtocolSettings.Default
- uid: Neo.ProtocolSettings.Default*
  name: Default
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_Default_
  commentId: Overload:Neo.ProtocolSettings.Default
  isSpec: "True"
  fullName: Neo.ProtocolSettings.Default
  nameWithType: ProtocolSettings.Default
- uid: Neo.ProtocolSettings.Hardforks
  name: Hardforks
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_Hardforks
  commentId: P:Neo.ProtocolSettings.Hardforks
  fullName: Neo.ProtocolSettings.Hardforks
  nameWithType: ProtocolSettings.Hardforks
- uid: Neo.ProtocolSettings.Hardforks*
  name: Hardforks
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_Hardforks_
  commentId: Overload:Neo.ProtocolSettings.Hardforks
  isSpec: "True"
  fullName: Neo.ProtocolSettings.Hardforks
  nameWithType: ProtocolSettings.Hardforks
- uid: Neo.ProtocolSettings.InitialGasDistribution
  name: InitialGasDistribution
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_InitialGasDistribution
  commentId: P:Neo.ProtocolSettings.InitialGasDistribution
  fullName: Neo.ProtocolSettings.InitialGasDistribution
  nameWithType: ProtocolSettings.InitialGasDistribution
- uid: Neo.ProtocolSettings.InitialGasDistribution*
  name: InitialGasDistribution
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_InitialGasDistribution_
  commentId: Overload:Neo.ProtocolSettings.InitialGasDistribution
  isSpec: "True"
  fullName: Neo.ProtocolSettings.InitialGasDistribution
  nameWithType: ProtocolSettings.InitialGasDistribution
- uid: Neo.ProtocolSettings.Load(Microsoft.Extensions.Configuration.IConfigurationSection)
  name: Load(IConfigurationSection)
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_Load_Microsoft_Extensions_Configuration_IConfigurationSection_
  commentId: M:Neo.ProtocolSettings.Load(Microsoft.Extensions.Configuration.IConfigurationSection)
  fullName: Neo.ProtocolSettings.Load(Microsoft.Extensions.Configuration.IConfigurationSection)
  nameWithType: ProtocolSettings.Load(IConfigurationSection)
- uid: Neo.ProtocolSettings.Load(System.String,System.Boolean)
  name: Load(string, bool)
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_Load_System_String_System_Boolean_
  commentId: M:Neo.ProtocolSettings.Load(System.String,System.Boolean)
  name.vb: Load(String, Boolean)
  fullName: Neo.ProtocolSettings.Load(string, bool)
  fullName.vb: Neo.ProtocolSettings.Load(String, Boolean)
  nameWithType: ProtocolSettings.Load(string, bool)
  nameWithType.vb: ProtocolSettings.Load(String, Boolean)
- uid: Neo.ProtocolSettings.Load*
  name: Load
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_Load_
  commentId: Overload:Neo.ProtocolSettings.Load
  isSpec: "True"
  fullName: Neo.ProtocolSettings.Load
  nameWithType: ProtocolSettings.Load
- uid: Neo.ProtocolSettings.MaxTraceableBlocks
  name: MaxTraceableBlocks
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_MaxTraceableBlocks
  commentId: P:Neo.ProtocolSettings.MaxTraceableBlocks
  fullName: Neo.ProtocolSettings.MaxTraceableBlocks
  nameWithType: ProtocolSettings.MaxTraceableBlocks
- uid: Neo.ProtocolSettings.MaxTraceableBlocks*
  name: MaxTraceableBlocks
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_MaxTraceableBlocks_
  commentId: Overload:Neo.ProtocolSettings.MaxTraceableBlocks
  isSpec: "True"
  fullName: Neo.ProtocolSettings.MaxTraceableBlocks
  nameWithType: ProtocolSettings.MaxTraceableBlocks
- uid: Neo.ProtocolSettings.MaxTransactionsPerBlock
  name: MaxTransactionsPerBlock
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_MaxTransactionsPerBlock
  commentId: P:Neo.ProtocolSettings.MaxTransactionsPerBlock
  fullName: Neo.ProtocolSettings.MaxTransactionsPerBlock
  nameWithType: ProtocolSettings.MaxTransactionsPerBlock
- uid: Neo.ProtocolSettings.MaxTransactionsPerBlock*
  name: MaxTransactionsPerBlock
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_MaxTransactionsPerBlock_
  commentId: Overload:Neo.ProtocolSettings.MaxTransactionsPerBlock
  isSpec: "True"
  fullName: Neo.ProtocolSettings.MaxTransactionsPerBlock
  nameWithType: ProtocolSettings.MaxTransactionsPerBlock
- uid: Neo.ProtocolSettings.MaxValidUntilBlockIncrement
  name: MaxValidUntilBlockIncrement
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_MaxValidUntilBlockIncrement
  commentId: P:Neo.ProtocolSettings.MaxValidUntilBlockIncrement
  fullName: Neo.ProtocolSettings.MaxValidUntilBlockIncrement
  nameWithType: ProtocolSettings.MaxValidUntilBlockIncrement
- uid: Neo.ProtocolSettings.MaxValidUntilBlockIncrement*
  name: MaxValidUntilBlockIncrement
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_MaxValidUntilBlockIncrement_
  commentId: Overload:Neo.ProtocolSettings.MaxValidUntilBlockIncrement
  isSpec: "True"
  fullName: Neo.ProtocolSettings.MaxValidUntilBlockIncrement
  nameWithType: ProtocolSettings.MaxValidUntilBlockIncrement
- uid: Neo.ProtocolSettings.MemoryPoolMaxTransactions
  name: MemoryPoolMaxTransactions
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_MemoryPoolMaxTransactions
  commentId: P:Neo.ProtocolSettings.MemoryPoolMaxTransactions
  fullName: Neo.ProtocolSettings.MemoryPoolMaxTransactions
  nameWithType: ProtocolSettings.MemoryPoolMaxTransactions
- uid: Neo.ProtocolSettings.MemoryPoolMaxTransactions*
  name: MemoryPoolMaxTransactions
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_MemoryPoolMaxTransactions_
  commentId: Overload:Neo.ProtocolSettings.MemoryPoolMaxTransactions
  isSpec: "True"
  fullName: Neo.ProtocolSettings.MemoryPoolMaxTransactions
  nameWithType: ProtocolSettings.MemoryPoolMaxTransactions
- uid: Neo.ProtocolSettings.MillisecondsPerBlock
  name: MillisecondsPerBlock
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_MillisecondsPerBlock
  commentId: P:Neo.ProtocolSettings.MillisecondsPerBlock
  fullName: Neo.ProtocolSettings.MillisecondsPerBlock
  nameWithType: ProtocolSettings.MillisecondsPerBlock
- uid: Neo.ProtocolSettings.MillisecondsPerBlock*
  name: MillisecondsPerBlock
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_MillisecondsPerBlock_
  commentId: Overload:Neo.ProtocolSettings.MillisecondsPerBlock
  isSpec: "True"
  fullName: Neo.ProtocolSettings.MillisecondsPerBlock
  nameWithType: ProtocolSettings.MillisecondsPerBlock
- uid: Neo.ProtocolSettings.NativeUpdateHistory
  name: NativeUpdateHistory
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_NativeUpdateHistory
  commentId: P:Neo.ProtocolSettings.NativeUpdateHistory
  fullName: Neo.ProtocolSettings.NativeUpdateHistory
  nameWithType: ProtocolSettings.NativeUpdateHistory
- uid: Neo.ProtocolSettings.NativeUpdateHistory*
  name: NativeUpdateHistory
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_NativeUpdateHistory_
  commentId: Overload:Neo.ProtocolSettings.NativeUpdateHistory
  isSpec: "True"
  fullName: Neo.ProtocolSettings.NativeUpdateHistory
  nameWithType: ProtocolSettings.NativeUpdateHistory
- uid: Neo.ProtocolSettings.Network
  name: Network
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_Network
  commentId: P:Neo.ProtocolSettings.Network
  fullName: Neo.ProtocolSettings.Network
  nameWithType: ProtocolSettings.Network
- uid: Neo.ProtocolSettings.Network*
  name: Network
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_Network_
  commentId: Overload:Neo.ProtocolSettings.Network
  isSpec: "True"
  fullName: Neo.ProtocolSettings.Network
  nameWithType: ProtocolSettings.Network
- uid: Neo.ProtocolSettings.SeedList
  name: SeedList
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_SeedList
  commentId: P:Neo.ProtocolSettings.SeedList
  fullName: Neo.ProtocolSettings.SeedList
  nameWithType: ProtocolSettings.SeedList
- uid: Neo.ProtocolSettings.SeedList*
  name: SeedList
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_SeedList_
  commentId: Overload:Neo.ProtocolSettings.SeedList
  isSpec: "True"
  fullName: Neo.ProtocolSettings.SeedList
  nameWithType: ProtocolSettings.SeedList
- uid: Neo.ProtocolSettings.StandbyCommittee
  name: StandbyCommittee
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_StandbyCommittee
  commentId: P:Neo.ProtocolSettings.StandbyCommittee
  fullName: Neo.ProtocolSettings.StandbyCommittee
  nameWithType: ProtocolSettings.StandbyCommittee
- uid: Neo.ProtocolSettings.StandbyCommittee*
  name: StandbyCommittee
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_StandbyCommittee_
  commentId: Overload:Neo.ProtocolSettings.StandbyCommittee
  isSpec: "True"
  fullName: Neo.ProtocolSettings.StandbyCommittee
  nameWithType: ProtocolSettings.StandbyCommittee
- uid: Neo.ProtocolSettings.StandbyValidators
  name: StandbyValidators
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_StandbyValidators
  commentId: P:Neo.ProtocolSettings.StandbyValidators
  fullName: Neo.ProtocolSettings.StandbyValidators
  nameWithType: ProtocolSettings.StandbyValidators
- uid: Neo.ProtocolSettings.StandbyValidators*
  name: StandbyValidators
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_StandbyValidators_
  commentId: Overload:Neo.ProtocolSettings.StandbyValidators
  isSpec: "True"
  fullName: Neo.ProtocolSettings.StandbyValidators
  nameWithType: ProtocolSettings.StandbyValidators
- uid: Neo.ProtocolSettings.TimePerBlock
  name: TimePerBlock
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_TimePerBlock
  commentId: P:Neo.ProtocolSettings.TimePerBlock
  fullName: Neo.ProtocolSettings.TimePerBlock
  nameWithType: ProtocolSettings.TimePerBlock
- uid: Neo.ProtocolSettings.TimePerBlock*
  name: TimePerBlock
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_TimePerBlock_
  commentId: Overload:Neo.ProtocolSettings.TimePerBlock
  isSpec: "True"
  fullName: Neo.ProtocolSettings.TimePerBlock
  nameWithType: ProtocolSettings.TimePerBlock
- uid: Neo.ProtocolSettings.ValidatorsCount
  name: ValidatorsCount
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_ValidatorsCount
  commentId: P:Neo.ProtocolSettings.ValidatorsCount
  fullName: Neo.ProtocolSettings.ValidatorsCount
  nameWithType: ProtocolSettings.ValidatorsCount
- uid: Neo.ProtocolSettings.ValidatorsCount*
  name: ValidatorsCount
  href: api/Neo.ProtocolSettings.html#Neo_ProtocolSettings_ValidatorsCount_
  commentId: Overload:Neo.ProtocolSettings.ValidatorsCount
  isSpec: "True"
  fullName: Neo.ProtocolSettings.ValidatorsCount
  nameWithType: ProtocolSettings.ValidatorsCount
- uid: Neo.SmartContract
  name: Neo.SmartContract
  href: api/Neo.SmartContract.html
  commentId: N:Neo.SmartContract
  fullName: Neo.SmartContract
  nameWithType: Neo.SmartContract
- uid: Neo.SmartContract.ApplicationEngine
  name: ApplicationEngine
  href: api/Neo.SmartContract.ApplicationEngine.html
  commentId: T:Neo.SmartContract.ApplicationEngine
  fullName: Neo.SmartContract.ApplicationEngine
  nameWithType: ApplicationEngine
- uid: Neo.SmartContract.ApplicationEngine.#ctor(Neo.SmartContract.TriggerType,Neo.Network.P2P.Payloads.IVerifiable,Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.Block,Neo.ProtocolSettings,System.Int64,Neo.SmartContract.IDiagnostic)
  name: ApplicationEngine(TriggerType, IVerifiable, DataCache, Block, ProtocolSettings, long, IDiagnostic)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine__ctor_Neo_SmartContract_TriggerType_Neo_Network_P2P_Payloads_IVerifiable_Neo_Persistence_DataCache_Neo_Network_P2P_Payloads_Block_Neo_ProtocolSettings_System_Int64_Neo_SmartContract_IDiagnostic_
  commentId: M:Neo.SmartContract.ApplicationEngine.#ctor(Neo.SmartContract.TriggerType,Neo.Network.P2P.Payloads.IVerifiable,Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.Block,Neo.ProtocolSettings,System.Int64,Neo.SmartContract.IDiagnostic)
  name.vb: New(TriggerType, IVerifiable, DataCache, Block, ProtocolSettings, Long, IDiagnostic)
  fullName: Neo.SmartContract.ApplicationEngine.ApplicationEngine(Neo.SmartContract.TriggerType, Neo.Network.P2P.Payloads.IVerifiable, Neo.Persistence.DataCache, Neo.Network.P2P.Payloads.Block, Neo.ProtocolSettings, long, Neo.SmartContract.IDiagnostic)
  fullName.vb: Neo.SmartContract.ApplicationEngine.New(Neo.SmartContract.TriggerType, Neo.Network.P2P.Payloads.IVerifiable, Neo.Persistence.DataCache, Neo.Network.P2P.Payloads.Block, Neo.ProtocolSettings, Long, Neo.SmartContract.IDiagnostic)
  nameWithType: ApplicationEngine.ApplicationEngine(TriggerType, IVerifiable, DataCache, Block, ProtocolSettings, long, IDiagnostic)
  nameWithType.vb: ApplicationEngine.New(TriggerType, IVerifiable, DataCache, Block, ProtocolSettings, Long, IDiagnostic)
- uid: Neo.SmartContract.ApplicationEngine.#ctor*
  name: ApplicationEngine
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine__ctor_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.SmartContract.ApplicationEngine.ApplicationEngine
  fullName.vb: Neo.SmartContract.ApplicationEngine.New
  nameWithType: ApplicationEngine.ApplicationEngine
  nameWithType.vb: ApplicationEngine.New
- uid: Neo.SmartContract.ApplicationEngine.AddGas(System.Int64)
  name: AddGas(long)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_AddGas_System_Int64_
  commentId: M:Neo.SmartContract.ApplicationEngine.AddGas(System.Int64)
  name.vb: AddGas(Long)
  fullName: Neo.SmartContract.ApplicationEngine.AddGas(long)
  fullName.vb: Neo.SmartContract.ApplicationEngine.AddGas(Long)
  nameWithType: ApplicationEngine.AddGas(long)
  nameWithType.vb: ApplicationEngine.AddGas(Long)
- uid: Neo.SmartContract.ApplicationEngine.AddGas*
  name: AddGas
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_AddGas_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.AddGas
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.AddGas
  nameWithType: ApplicationEngine.AddGas
- uid: Neo.SmartContract.ApplicationEngine.AsReadOnly(Neo.SmartContract.StorageContext)
  name: AsReadOnly(StorageContext)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_AsReadOnly_Neo_SmartContract_StorageContext_
  commentId: M:Neo.SmartContract.ApplicationEngine.AsReadOnly(Neo.SmartContract.StorageContext)
  fullName: Neo.SmartContract.ApplicationEngine.AsReadOnly(Neo.SmartContract.StorageContext)
  nameWithType: ApplicationEngine.AsReadOnly(StorageContext)
- uid: Neo.SmartContract.ApplicationEngine.AsReadOnly*
  name: AsReadOnly
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_AsReadOnly_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.AsReadOnly
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.AsReadOnly
  nameWithType: ApplicationEngine.AsReadOnly
- uid: Neo.SmartContract.ApplicationEngine.BurnGas(System.Int64)
  name: BurnGas(long)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_BurnGas_System_Int64_
  commentId: M:Neo.SmartContract.ApplicationEngine.BurnGas(System.Int64)
  name.vb: BurnGas(Long)
  fullName: Neo.SmartContract.ApplicationEngine.BurnGas(long)
  fullName.vb: Neo.SmartContract.ApplicationEngine.BurnGas(Long)
  nameWithType: ApplicationEngine.BurnGas(long)
  nameWithType.vb: ApplicationEngine.BurnGas(Long)
- uid: Neo.SmartContract.ApplicationEngine.BurnGas*
  name: BurnGas
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_BurnGas_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.BurnGas
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.BurnGas
  nameWithType: ApplicationEngine.BurnGas
- uid: Neo.SmartContract.ApplicationEngine.CallContract(Neo.UInt160,System.String,Neo.SmartContract.CallFlags,Neo.VM.Types.Array)
  name: CallContract(UInt160, string, CallFlags, Array)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_CallContract_Neo_UInt160_System_String_Neo_SmartContract_CallFlags_Neo_VM_Types_Array_
  commentId: M:Neo.SmartContract.ApplicationEngine.CallContract(Neo.UInt160,System.String,Neo.SmartContract.CallFlags,Neo.VM.Types.Array)
  name.vb: CallContract(UInt160, String, CallFlags, Array)
  fullName: Neo.SmartContract.ApplicationEngine.CallContract(Neo.UInt160, string, Neo.SmartContract.CallFlags, Neo.VM.Types.Array)
  fullName.vb: Neo.SmartContract.ApplicationEngine.CallContract(Neo.UInt160, String, Neo.SmartContract.CallFlags, Neo.VM.Types.Array)
  nameWithType: ApplicationEngine.CallContract(UInt160, string, CallFlags, Array)
  nameWithType.vb: ApplicationEngine.CallContract(UInt160, String, CallFlags, Array)
- uid: Neo.SmartContract.ApplicationEngine.CallContract*
  name: CallContract
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_CallContract_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.CallContract
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.CallContract
  nameWithType: ApplicationEngine.CallContract
- uid: Neo.SmartContract.ApplicationEngine.CallNativeContract(System.Byte)
  name: CallNativeContract(byte)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_CallNativeContract_System_Byte_
  commentId: M:Neo.SmartContract.ApplicationEngine.CallNativeContract(System.Byte)
  name.vb: CallNativeContract(Byte)
  fullName: Neo.SmartContract.ApplicationEngine.CallNativeContract(byte)
  fullName.vb: Neo.SmartContract.ApplicationEngine.CallNativeContract(Byte)
  nameWithType: ApplicationEngine.CallNativeContract(byte)
  nameWithType.vb: ApplicationEngine.CallNativeContract(Byte)
- uid: Neo.SmartContract.ApplicationEngine.CallNativeContract*
  name: CallNativeContract
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_CallNativeContract_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.CallNativeContract
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.CallNativeContract
  nameWithType: ApplicationEngine.CallNativeContract
- uid: Neo.SmartContract.ApplicationEngine.CallingScriptHash
  name: CallingScriptHash
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_CallingScriptHash
  commentId: P:Neo.SmartContract.ApplicationEngine.CallingScriptHash
  fullName: Neo.SmartContract.ApplicationEngine.CallingScriptHash
  nameWithType: ApplicationEngine.CallingScriptHash
- uid: Neo.SmartContract.ApplicationEngine.CallingScriptHash*
  name: CallingScriptHash
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_CallingScriptHash_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.CallingScriptHash
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.CallingScriptHash
  nameWithType: ApplicationEngine.CallingScriptHash
- uid: Neo.SmartContract.ApplicationEngine.CheckMultisig(System.Byte[][],System.Byte[][])
  name: CheckMultisig(byte[][], byte[][])
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_CheckMultisig_System_Byte_____System_Byte_____
  commentId: M:Neo.SmartContract.ApplicationEngine.CheckMultisig(System.Byte[][],System.Byte[][])
  name.vb: CheckMultisig(Byte()(), Byte()())
  fullName: Neo.SmartContract.ApplicationEngine.CheckMultisig(byte[][], byte[][])
  fullName.vb: Neo.SmartContract.ApplicationEngine.CheckMultisig(Byte()(), Byte()())
  nameWithType: ApplicationEngine.CheckMultisig(byte[][], byte[][])
  nameWithType.vb: ApplicationEngine.CheckMultisig(Byte()(), Byte()())
- uid: Neo.SmartContract.ApplicationEngine.CheckMultisig*
  name: CheckMultisig
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_CheckMultisig_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.CheckMultisig
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.CheckMultisig
  nameWithType: ApplicationEngine.CheckMultisig
- uid: Neo.SmartContract.ApplicationEngine.CheckSig(System.Byte[],System.Byte[])
  name: CheckSig(byte[], byte[])
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_CheckSig_System_Byte___System_Byte___
  commentId: M:Neo.SmartContract.ApplicationEngine.CheckSig(System.Byte[],System.Byte[])
  name.vb: CheckSig(Byte(), Byte())
  fullName: Neo.SmartContract.ApplicationEngine.CheckSig(byte[], byte[])
  fullName.vb: Neo.SmartContract.ApplicationEngine.CheckSig(Byte(), Byte())
  nameWithType: ApplicationEngine.CheckSig(byte[], byte[])
  nameWithType.vb: ApplicationEngine.CheckSig(Byte(), Byte())
- uid: Neo.SmartContract.ApplicationEngine.CheckSig*
  name: CheckSig
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_CheckSig_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.CheckSig
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.CheckSig
  nameWithType: ApplicationEngine.CheckSig
- uid: Neo.SmartContract.ApplicationEngine.CheckSigPrice
  name: CheckSigPrice
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_CheckSigPrice
  commentId: F:Neo.SmartContract.ApplicationEngine.CheckSigPrice
  fullName: Neo.SmartContract.ApplicationEngine.CheckSigPrice
  nameWithType: ApplicationEngine.CheckSigPrice
- uid: Neo.SmartContract.ApplicationEngine.CheckWitness(System.Byte[])
  name: CheckWitness(byte[])
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_CheckWitness_System_Byte___
  commentId: M:Neo.SmartContract.ApplicationEngine.CheckWitness(System.Byte[])
  name.vb: CheckWitness(Byte())
  fullName: Neo.SmartContract.ApplicationEngine.CheckWitness(byte[])
  fullName.vb: Neo.SmartContract.ApplicationEngine.CheckWitness(Byte())
  nameWithType: ApplicationEngine.CheckWitness(byte[])
  nameWithType.vb: ApplicationEngine.CheckWitness(Byte())
- uid: Neo.SmartContract.ApplicationEngine.CheckWitness*
  name: CheckWitness
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_CheckWitness_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.CheckWitness
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.CheckWitness
  nameWithType: ApplicationEngine.CheckWitness
- uid: Neo.SmartContract.ApplicationEngine.CheckWitnessInternal(Neo.UInt160)
  name: CheckWitnessInternal(UInt160)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_CheckWitnessInternal_Neo_UInt160_
  commentId: M:Neo.SmartContract.ApplicationEngine.CheckWitnessInternal(Neo.UInt160)
  fullName: Neo.SmartContract.ApplicationEngine.CheckWitnessInternal(Neo.UInt160)
  nameWithType: ApplicationEngine.CheckWitnessInternal(UInt160)
- uid: Neo.SmartContract.ApplicationEngine.CheckWitnessInternal*
  name: CheckWitnessInternal
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_CheckWitnessInternal_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.CheckWitnessInternal
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.CheckWitnessInternal
  nameWithType: ApplicationEngine.CheckWitnessInternal
- uid: Neo.SmartContract.ApplicationEngine.ContextUnloaded(Neo.VM.ExecutionContext)
  name: ContextUnloaded(ExecutionContext)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_ContextUnloaded_Neo_VM_ExecutionContext_
  commentId: M:Neo.SmartContract.ApplicationEngine.ContextUnloaded(Neo.VM.ExecutionContext)
  fullName: Neo.SmartContract.ApplicationEngine.ContextUnloaded(Neo.VM.ExecutionContext)
  nameWithType: ApplicationEngine.ContextUnloaded(ExecutionContext)
- uid: Neo.SmartContract.ApplicationEngine.ContextUnloaded*
  name: ContextUnloaded
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_ContextUnloaded_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.ContextUnloaded
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.ContextUnloaded
  nameWithType: ApplicationEngine.ContextUnloaded
- uid: Neo.SmartContract.ApplicationEngine.Convert(Neo.VM.Types.StackItem,Neo.SmartContract.InteropParameterDescriptor)
  name: Convert(StackItem, InteropParameterDescriptor)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Convert_Neo_VM_Types_StackItem_Neo_SmartContract_InteropParameterDescriptor_
  commentId: M:Neo.SmartContract.ApplicationEngine.Convert(Neo.VM.Types.StackItem,Neo.SmartContract.InteropParameterDescriptor)
  fullName: Neo.SmartContract.ApplicationEngine.Convert(Neo.VM.Types.StackItem, Neo.SmartContract.InteropParameterDescriptor)
  nameWithType: ApplicationEngine.Convert(StackItem, InteropParameterDescriptor)
- uid: Neo.SmartContract.ApplicationEngine.Convert(System.Object)
  name: Convert(object)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Convert_System_Object_
  commentId: M:Neo.SmartContract.ApplicationEngine.Convert(System.Object)
  name.vb: Convert(Object)
  fullName: Neo.SmartContract.ApplicationEngine.Convert(object)
  fullName.vb: Neo.SmartContract.ApplicationEngine.Convert(Object)
  nameWithType: ApplicationEngine.Convert(object)
  nameWithType.vb: ApplicationEngine.Convert(Object)
- uid: Neo.SmartContract.ApplicationEngine.Convert*
  name: Convert
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Convert_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.Convert
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.Convert
  nameWithType: ApplicationEngine.Convert
- uid: Neo.SmartContract.ApplicationEngine.Create(Neo.SmartContract.TriggerType,Neo.Network.P2P.Payloads.IVerifiable,Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.Block,Neo.ProtocolSettings,System.Int64,Neo.SmartContract.IDiagnostic)
  name: Create(TriggerType, IVerifiable, DataCache, Block, ProtocolSettings, long, IDiagnostic)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Create_Neo_SmartContract_TriggerType_Neo_Network_P2P_Payloads_IVerifiable_Neo_Persistence_DataCache_Neo_Network_P2P_Payloads_Block_Neo_ProtocolSettings_System_Int64_Neo_SmartContract_IDiagnostic_
  commentId: M:Neo.SmartContract.ApplicationEngine.Create(Neo.SmartContract.TriggerType,Neo.Network.P2P.Payloads.IVerifiable,Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.Block,Neo.ProtocolSettings,System.Int64,Neo.SmartContract.IDiagnostic)
  name.vb: Create(TriggerType, IVerifiable, DataCache, Block, ProtocolSettings, Long, IDiagnostic)
  fullName: Neo.SmartContract.ApplicationEngine.Create(Neo.SmartContract.TriggerType, Neo.Network.P2P.Payloads.IVerifiable, Neo.Persistence.DataCache, Neo.Network.P2P.Payloads.Block, Neo.ProtocolSettings, long, Neo.SmartContract.IDiagnostic)
  fullName.vb: Neo.SmartContract.ApplicationEngine.Create(Neo.SmartContract.TriggerType, Neo.Network.P2P.Payloads.IVerifiable, Neo.Persistence.DataCache, Neo.Network.P2P.Payloads.Block, Neo.ProtocolSettings, Long, Neo.SmartContract.IDiagnostic)
  nameWithType: ApplicationEngine.Create(TriggerType, IVerifiable, DataCache, Block, ProtocolSettings, long, IDiagnostic)
  nameWithType.vb: ApplicationEngine.Create(TriggerType, IVerifiable, DataCache, Block, ProtocolSettings, Long, IDiagnostic)
- uid: Neo.SmartContract.ApplicationEngine.Create*
  name: Create
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Create_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.Create
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.Create
  nameWithType: ApplicationEngine.Create
- uid: Neo.SmartContract.ApplicationEngine.CreateMultisigAccount(System.Int32,Neo.Cryptography.ECC.ECPoint[])
  name: CreateMultisigAccount(int, ECPoint[])
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_CreateMultisigAccount_System_Int32_Neo_Cryptography_ECC_ECPoint___
  commentId: M:Neo.SmartContract.ApplicationEngine.CreateMultisigAccount(System.Int32,Neo.Cryptography.ECC.ECPoint[])
  name.vb: CreateMultisigAccount(Integer, ECPoint())
  fullName: Neo.SmartContract.ApplicationEngine.CreateMultisigAccount(int, Neo.Cryptography.ECC.ECPoint[])
  fullName.vb: Neo.SmartContract.ApplicationEngine.CreateMultisigAccount(Integer, Neo.Cryptography.ECC.ECPoint())
  nameWithType: ApplicationEngine.CreateMultisigAccount(int, ECPoint[])
  nameWithType.vb: ApplicationEngine.CreateMultisigAccount(Integer, ECPoint())
- uid: Neo.SmartContract.ApplicationEngine.CreateMultisigAccount*
  name: CreateMultisigAccount
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_CreateMultisigAccount_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.CreateMultisigAccount
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.CreateMultisigAccount
  nameWithType: ApplicationEngine.CreateMultisigAccount
- uid: Neo.SmartContract.ApplicationEngine.CreateStandardAccount(Neo.Cryptography.ECC.ECPoint)
  name: CreateStandardAccount(ECPoint)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_CreateStandardAccount_Neo_Cryptography_ECC_ECPoint_
  commentId: M:Neo.SmartContract.ApplicationEngine.CreateStandardAccount(Neo.Cryptography.ECC.ECPoint)
  fullName: Neo.SmartContract.ApplicationEngine.CreateStandardAccount(Neo.Cryptography.ECC.ECPoint)
  nameWithType: ApplicationEngine.CreateStandardAccount(ECPoint)
- uid: Neo.SmartContract.ApplicationEngine.CreateStandardAccount*
  name: CreateStandardAccount
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_CreateStandardAccount_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.CreateStandardAccount
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.CreateStandardAccount
  nameWithType: ApplicationEngine.CreateStandardAccount
- uid: Neo.SmartContract.ApplicationEngine.CurrentScriptHash
  name: CurrentScriptHash
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_CurrentScriptHash
  commentId: P:Neo.SmartContract.ApplicationEngine.CurrentScriptHash
  fullName: Neo.SmartContract.ApplicationEngine.CurrentScriptHash
  nameWithType: ApplicationEngine.CurrentScriptHash
- uid: Neo.SmartContract.ApplicationEngine.CurrentScriptHash*
  name: CurrentScriptHash
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_CurrentScriptHash_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.CurrentScriptHash
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.CurrentScriptHash
  nameWithType: ApplicationEngine.CurrentScriptHash
- uid: Neo.SmartContract.ApplicationEngine.Delete(Neo.SmartContract.StorageContext,System.Byte[])
  name: Delete(StorageContext, byte[])
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Delete_Neo_SmartContract_StorageContext_System_Byte___
  commentId: M:Neo.SmartContract.ApplicationEngine.Delete(Neo.SmartContract.StorageContext,System.Byte[])
  name.vb: Delete(StorageContext, Byte())
  fullName: Neo.SmartContract.ApplicationEngine.Delete(Neo.SmartContract.StorageContext, byte[])
  fullName.vb: Neo.SmartContract.ApplicationEngine.Delete(Neo.SmartContract.StorageContext, Byte())
  nameWithType: ApplicationEngine.Delete(StorageContext, byte[])
  nameWithType.vb: ApplicationEngine.Delete(StorageContext, Byte())
- uid: Neo.SmartContract.ApplicationEngine.Delete*
  name: Delete
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Delete_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.Delete
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.Delete
  nameWithType: ApplicationEngine.Delete
- uid: Neo.SmartContract.ApplicationEngine.Diagnostic
  name: Diagnostic
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Diagnostic
  commentId: P:Neo.SmartContract.ApplicationEngine.Diagnostic
  fullName: Neo.SmartContract.ApplicationEngine.Diagnostic
  nameWithType: ApplicationEngine.Diagnostic
- uid: Neo.SmartContract.ApplicationEngine.Diagnostic*
  name: Diagnostic
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Diagnostic_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.Diagnostic
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.Diagnostic
  nameWithType: ApplicationEngine.Diagnostic
- uid: Neo.SmartContract.ApplicationEngine.Dispose
  name: Dispose()
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Dispose
  commentId: M:Neo.SmartContract.ApplicationEngine.Dispose
  fullName: Neo.SmartContract.ApplicationEngine.Dispose()
  nameWithType: ApplicationEngine.Dispose()
- uid: Neo.SmartContract.ApplicationEngine.Dispose*
  name: Dispose
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Dispose_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.Dispose
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.Dispose
  nameWithType: ApplicationEngine.Dispose
- uid: Neo.SmartContract.ApplicationEngine.EntryScriptHash
  name: EntryScriptHash
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_EntryScriptHash
  commentId: P:Neo.SmartContract.ApplicationEngine.EntryScriptHash
  fullName: Neo.SmartContract.ApplicationEngine.EntryScriptHash
  nameWithType: ApplicationEngine.EntryScriptHash
- uid: Neo.SmartContract.ApplicationEngine.EntryScriptHash*
  name: EntryScriptHash
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_EntryScriptHash_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.EntryScriptHash
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.EntryScriptHash
  nameWithType: ApplicationEngine.EntryScriptHash
- uid: Neo.SmartContract.ApplicationEngine.FaultException
  name: FaultException
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_FaultException
  commentId: P:Neo.SmartContract.ApplicationEngine.FaultException
  fullName: Neo.SmartContract.ApplicationEngine.FaultException
  nameWithType: ApplicationEngine.FaultException
- uid: Neo.SmartContract.ApplicationEngine.FaultException*
  name: FaultException
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_FaultException_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.FaultException
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.FaultException
  nameWithType: ApplicationEngine.FaultException
- uid: Neo.SmartContract.ApplicationEngine.Find(Neo.SmartContract.StorageContext,System.Byte[],Neo.SmartContract.FindOptions)
  name: Find(StorageContext, byte[], FindOptions)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Find_Neo_SmartContract_StorageContext_System_Byte___Neo_SmartContract_FindOptions_
  commentId: M:Neo.SmartContract.ApplicationEngine.Find(Neo.SmartContract.StorageContext,System.Byte[],Neo.SmartContract.FindOptions)
  name.vb: Find(StorageContext, Byte(), FindOptions)
  fullName: Neo.SmartContract.ApplicationEngine.Find(Neo.SmartContract.StorageContext, byte[], Neo.SmartContract.FindOptions)
  fullName.vb: Neo.SmartContract.ApplicationEngine.Find(Neo.SmartContract.StorageContext, Byte(), Neo.SmartContract.FindOptions)
  nameWithType: ApplicationEngine.Find(StorageContext, byte[], FindOptions)
  nameWithType.vb: ApplicationEngine.Find(StorageContext, Byte(), FindOptions)
- uid: Neo.SmartContract.ApplicationEngine.Find*
  name: Find
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Find_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.Find
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.Find
  nameWithType: ApplicationEngine.Find
- uid: Neo.SmartContract.ApplicationEngine.GasConsumed
  name: GasConsumed
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GasConsumed
  commentId: P:Neo.SmartContract.ApplicationEngine.GasConsumed
  fullName: Neo.SmartContract.ApplicationEngine.GasConsumed
  nameWithType: ApplicationEngine.GasConsumed
- uid: Neo.SmartContract.ApplicationEngine.GasConsumed*
  name: GasConsumed
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GasConsumed_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.GasConsumed
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.GasConsumed
  nameWithType: ApplicationEngine.GasConsumed
- uid: Neo.SmartContract.ApplicationEngine.GasLeft
  name: GasLeft
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GasLeft
  commentId: P:Neo.SmartContract.ApplicationEngine.GasLeft
  fullName: Neo.SmartContract.ApplicationEngine.GasLeft
  nameWithType: ApplicationEngine.GasLeft
- uid: Neo.SmartContract.ApplicationEngine.GasLeft*
  name: GasLeft
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GasLeft_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.GasLeft
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.GasLeft
  nameWithType: ApplicationEngine.GasLeft
- uid: Neo.SmartContract.ApplicationEngine.Get(Neo.SmartContract.StorageContext,System.Byte[])
  name: Get(StorageContext, byte[])
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Get_Neo_SmartContract_StorageContext_System_Byte___
  commentId: M:Neo.SmartContract.ApplicationEngine.Get(Neo.SmartContract.StorageContext,System.Byte[])
  name.vb: Get(StorageContext, Byte())
  fullName: Neo.SmartContract.ApplicationEngine.Get(Neo.SmartContract.StorageContext, byte[])
  fullName.vb: Neo.SmartContract.ApplicationEngine.Get(Neo.SmartContract.StorageContext, Byte())
  nameWithType: ApplicationEngine.Get(StorageContext, byte[])
  nameWithType.vb: ApplicationEngine.Get(StorageContext, Byte())
- uid: Neo.SmartContract.ApplicationEngine.Get*
  name: Get
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Get_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.Get
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.Get
  nameWithType: ApplicationEngine.Get
- uid: Neo.SmartContract.ApplicationEngine.GetAddressVersion
  name: GetAddressVersion()
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetAddressVersion
  commentId: M:Neo.SmartContract.ApplicationEngine.GetAddressVersion
  fullName: Neo.SmartContract.ApplicationEngine.GetAddressVersion()
  nameWithType: ApplicationEngine.GetAddressVersion()
- uid: Neo.SmartContract.ApplicationEngine.GetAddressVersion*
  name: GetAddressVersion
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetAddressVersion_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.GetAddressVersion
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.GetAddressVersion
  nameWithType: ApplicationEngine.GetAddressVersion
- uid: Neo.SmartContract.ApplicationEngine.GetCallFlags
  name: GetCallFlags()
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetCallFlags
  commentId: M:Neo.SmartContract.ApplicationEngine.GetCallFlags
  fullName: Neo.SmartContract.ApplicationEngine.GetCallFlags()
  nameWithType: ApplicationEngine.GetCallFlags()
- uid: Neo.SmartContract.ApplicationEngine.GetCallFlags*
  name: GetCallFlags
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetCallFlags_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.GetCallFlags
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.GetCallFlags
  nameWithType: ApplicationEngine.GetCallFlags
- uid: Neo.SmartContract.ApplicationEngine.GetCurrentSigners
  name: GetCurrentSigners()
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetCurrentSigners
  commentId: M:Neo.SmartContract.ApplicationEngine.GetCurrentSigners
  fullName: Neo.SmartContract.ApplicationEngine.GetCurrentSigners()
  nameWithType: ApplicationEngine.GetCurrentSigners()
- uid: Neo.SmartContract.ApplicationEngine.GetCurrentSigners*
  name: GetCurrentSigners
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetCurrentSigners_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.GetCurrentSigners
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.GetCurrentSigners
  nameWithType: ApplicationEngine.GetCurrentSigners
- uid: Neo.SmartContract.ApplicationEngine.GetInvocationCounter
  name: GetInvocationCounter()
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetInvocationCounter
  commentId: M:Neo.SmartContract.ApplicationEngine.GetInvocationCounter
  fullName: Neo.SmartContract.ApplicationEngine.GetInvocationCounter()
  nameWithType: ApplicationEngine.GetInvocationCounter()
- uid: Neo.SmartContract.ApplicationEngine.GetInvocationCounter*
  name: GetInvocationCounter
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetInvocationCounter_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.GetInvocationCounter
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.GetInvocationCounter
  nameWithType: ApplicationEngine.GetInvocationCounter
- uid: Neo.SmartContract.ApplicationEngine.GetNetwork
  name: GetNetwork()
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetNetwork
  commentId: M:Neo.SmartContract.ApplicationEngine.GetNetwork
  fullName: Neo.SmartContract.ApplicationEngine.GetNetwork()
  nameWithType: ApplicationEngine.GetNetwork()
- uid: Neo.SmartContract.ApplicationEngine.GetNetwork*
  name: GetNetwork
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetNetwork_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.GetNetwork
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.GetNetwork
  nameWithType: ApplicationEngine.GetNetwork
- uid: Neo.SmartContract.ApplicationEngine.GetNotifications(Neo.UInt160)
  name: GetNotifications(UInt160)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetNotifications_Neo_UInt160_
  commentId: M:Neo.SmartContract.ApplicationEngine.GetNotifications(Neo.UInt160)
  fullName: Neo.SmartContract.ApplicationEngine.GetNotifications(Neo.UInt160)
  nameWithType: ApplicationEngine.GetNotifications(UInt160)
- uid: Neo.SmartContract.ApplicationEngine.GetNotifications*
  name: GetNotifications
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetNotifications_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.GetNotifications
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.GetNotifications
  nameWithType: ApplicationEngine.GetNotifications
- uid: Neo.SmartContract.ApplicationEngine.GetPlatform
  name: GetPlatform()
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetPlatform
  commentId: M:Neo.SmartContract.ApplicationEngine.GetPlatform
  fullName: Neo.SmartContract.ApplicationEngine.GetPlatform()
  nameWithType: ApplicationEngine.GetPlatform()
- uid: Neo.SmartContract.ApplicationEngine.GetPlatform*
  name: GetPlatform
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetPlatform_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.GetPlatform
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.GetPlatform
  nameWithType: ApplicationEngine.GetPlatform
- uid: Neo.SmartContract.ApplicationEngine.GetRandom
  name: GetRandom()
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetRandom
  commentId: M:Neo.SmartContract.ApplicationEngine.GetRandom
  fullName: Neo.SmartContract.ApplicationEngine.GetRandom()
  nameWithType: ApplicationEngine.GetRandom()
- uid: Neo.SmartContract.ApplicationEngine.GetRandom*
  name: GetRandom
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetRandom_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.GetRandom
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.GetRandom
  nameWithType: ApplicationEngine.GetRandom
- uid: Neo.SmartContract.ApplicationEngine.GetReadOnlyContext
  name: GetReadOnlyContext()
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetReadOnlyContext
  commentId: M:Neo.SmartContract.ApplicationEngine.GetReadOnlyContext
  fullName: Neo.SmartContract.ApplicationEngine.GetReadOnlyContext()
  nameWithType: ApplicationEngine.GetReadOnlyContext()
- uid: Neo.SmartContract.ApplicationEngine.GetReadOnlyContext*
  name: GetReadOnlyContext
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetReadOnlyContext_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.GetReadOnlyContext
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.GetReadOnlyContext
  nameWithType: ApplicationEngine.GetReadOnlyContext
- uid: Neo.SmartContract.ApplicationEngine.GetScriptContainer
  name: GetScriptContainer()
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetScriptContainer
  commentId: M:Neo.SmartContract.ApplicationEngine.GetScriptContainer
  fullName: Neo.SmartContract.ApplicationEngine.GetScriptContainer()
  nameWithType: ApplicationEngine.GetScriptContainer()
- uid: Neo.SmartContract.ApplicationEngine.GetScriptContainer*
  name: GetScriptContainer
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetScriptContainer_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.GetScriptContainer
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.GetScriptContainer
  nameWithType: ApplicationEngine.GetScriptContainer
- uid: Neo.SmartContract.ApplicationEngine.GetState*
  name: GetState
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetState_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.GetState
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.GetState
  nameWithType: ApplicationEngine.GetState
- uid: Neo.SmartContract.ApplicationEngine.GetState``1
  name: GetState<T>()
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetState__1
  commentId: M:Neo.SmartContract.ApplicationEngine.GetState``1
  name.vb: GetState(Of T)()
  fullName: Neo.SmartContract.ApplicationEngine.GetState<T>()
  fullName.vb: Neo.SmartContract.ApplicationEngine.GetState(Of T)()
  nameWithType: ApplicationEngine.GetState<T>()
  nameWithType.vb: ApplicationEngine.GetState(Of T)()
- uid: Neo.SmartContract.ApplicationEngine.GetStorageContext
  name: GetStorageContext()
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetStorageContext
  commentId: M:Neo.SmartContract.ApplicationEngine.GetStorageContext
  fullName: Neo.SmartContract.ApplicationEngine.GetStorageContext()
  nameWithType: ApplicationEngine.GetStorageContext()
- uid: Neo.SmartContract.ApplicationEngine.GetStorageContext*
  name: GetStorageContext
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetStorageContext_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.GetStorageContext
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.GetStorageContext
  nameWithType: ApplicationEngine.GetStorageContext
- uid: Neo.SmartContract.ApplicationEngine.GetTime
  name: GetTime()
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetTime
  commentId: M:Neo.SmartContract.ApplicationEngine.GetTime
  fullName: Neo.SmartContract.ApplicationEngine.GetTime()
  nameWithType: ApplicationEngine.GetTime()
- uid: Neo.SmartContract.ApplicationEngine.GetTime*
  name: GetTime
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_GetTime_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.GetTime
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.GetTime
  nameWithType: ApplicationEngine.GetTime
- uid: Neo.SmartContract.ApplicationEngine.IsHardforkEnabled(Neo.Hardfork)
  name: IsHardforkEnabled(Hardfork)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_IsHardforkEnabled_Neo_Hardfork_
  commentId: M:Neo.SmartContract.ApplicationEngine.IsHardforkEnabled(Neo.Hardfork)
  fullName: Neo.SmartContract.ApplicationEngine.IsHardforkEnabled(Neo.Hardfork)
  nameWithType: ApplicationEngine.IsHardforkEnabled(Hardfork)
- uid: Neo.SmartContract.ApplicationEngine.IsHardforkEnabled*
  name: IsHardforkEnabled
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_IsHardforkEnabled_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.IsHardforkEnabled
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.IsHardforkEnabled
  nameWithType: ApplicationEngine.IsHardforkEnabled
- uid: Neo.SmartContract.ApplicationEngine.IteratorNext(Neo.SmartContract.Iterators.IIterator)
  name: IteratorNext(IIterator)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_IteratorNext_Neo_SmartContract_Iterators_IIterator_
  commentId: M:Neo.SmartContract.ApplicationEngine.IteratorNext(Neo.SmartContract.Iterators.IIterator)
  fullName: Neo.SmartContract.ApplicationEngine.IteratorNext(Neo.SmartContract.Iterators.IIterator)
  nameWithType: ApplicationEngine.IteratorNext(IIterator)
- uid: Neo.SmartContract.ApplicationEngine.IteratorNext*
  name: IteratorNext
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_IteratorNext_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.IteratorNext
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.IteratorNext
  nameWithType: ApplicationEngine.IteratorNext
- uid: Neo.SmartContract.ApplicationEngine.IteratorValue(Neo.SmartContract.Iterators.IIterator)
  name: IteratorValue(IIterator)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_IteratorValue_Neo_SmartContract_Iterators_IIterator_
  commentId: M:Neo.SmartContract.ApplicationEngine.IteratorValue(Neo.SmartContract.Iterators.IIterator)
  fullName: Neo.SmartContract.ApplicationEngine.IteratorValue(Neo.SmartContract.Iterators.IIterator)
  nameWithType: ApplicationEngine.IteratorValue(IIterator)
- uid: Neo.SmartContract.ApplicationEngine.IteratorValue*
  name: IteratorValue
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_IteratorValue_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.IteratorValue
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.IteratorValue
  nameWithType: ApplicationEngine.IteratorValue
- uid: Neo.SmartContract.ApplicationEngine.LoadContext(Neo.VM.ExecutionContext)
  name: LoadContext(ExecutionContext)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_LoadContext_Neo_VM_ExecutionContext_
  commentId: M:Neo.SmartContract.ApplicationEngine.LoadContext(Neo.VM.ExecutionContext)
  fullName: Neo.SmartContract.ApplicationEngine.LoadContext(Neo.VM.ExecutionContext)
  nameWithType: ApplicationEngine.LoadContext(ExecutionContext)
- uid: Neo.SmartContract.ApplicationEngine.LoadContext*
  name: LoadContext
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_LoadContext_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.LoadContext
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.LoadContext
  nameWithType: ApplicationEngine.LoadContext
- uid: Neo.SmartContract.ApplicationEngine.LoadContract(Neo.SmartContract.ContractState,Neo.SmartContract.Manifest.ContractMethodDescriptor,Neo.SmartContract.CallFlags)
  name: LoadContract(ContractState, ContractMethodDescriptor, CallFlags)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_LoadContract_Neo_SmartContract_ContractState_Neo_SmartContract_Manifest_ContractMethodDescriptor_Neo_SmartContract_CallFlags_
  commentId: M:Neo.SmartContract.ApplicationEngine.LoadContract(Neo.SmartContract.ContractState,Neo.SmartContract.Manifest.ContractMethodDescriptor,Neo.SmartContract.CallFlags)
  fullName: Neo.SmartContract.ApplicationEngine.LoadContract(Neo.SmartContract.ContractState, Neo.SmartContract.Manifest.ContractMethodDescriptor, Neo.SmartContract.CallFlags)
  nameWithType: ApplicationEngine.LoadContract(ContractState, ContractMethodDescriptor, CallFlags)
- uid: Neo.SmartContract.ApplicationEngine.LoadContract*
  name: LoadContract
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_LoadContract_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.LoadContract
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.LoadContract
  nameWithType: ApplicationEngine.LoadContract
- uid: Neo.SmartContract.ApplicationEngine.LoadScript(Neo.VM.Script,System.Int32,System.Int32,System.Action{Neo.SmartContract.ExecutionContextState})
  name: LoadScript(Script, int, int, Action<ExecutionContextState>)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_LoadScript_Neo_VM_Script_System_Int32_System_Int32_System_Action_Neo_SmartContract_ExecutionContextState__
  commentId: M:Neo.SmartContract.ApplicationEngine.LoadScript(Neo.VM.Script,System.Int32,System.Int32,System.Action{Neo.SmartContract.ExecutionContextState})
  name.vb: LoadScript(Script, Integer, Integer, Action(Of ExecutionContextState))
  fullName: Neo.SmartContract.ApplicationEngine.LoadScript(Neo.VM.Script, int, int, System.Action<Neo.SmartContract.ExecutionContextState>)
  fullName.vb: Neo.SmartContract.ApplicationEngine.LoadScript(Neo.VM.Script, Integer, Integer, System.Action(Of Neo.SmartContract.ExecutionContextState))
  nameWithType: ApplicationEngine.LoadScript(Script, int, int, Action<ExecutionContextState>)
  nameWithType.vb: ApplicationEngine.LoadScript(Script, Integer, Integer, Action(Of ExecutionContextState))
- uid: Neo.SmartContract.ApplicationEngine.LoadScript*
  name: LoadScript
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_LoadScript_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.LoadScript
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.LoadScript
  nameWithType: ApplicationEngine.LoadScript
- uid: Neo.SmartContract.ApplicationEngine.LoadToken(System.UInt16)
  name: LoadToken(ushort)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_LoadToken_System_UInt16_
  commentId: M:Neo.SmartContract.ApplicationEngine.LoadToken(System.UInt16)
  name.vb: LoadToken(UShort)
  fullName: Neo.SmartContract.ApplicationEngine.LoadToken(ushort)
  fullName.vb: Neo.SmartContract.ApplicationEngine.LoadToken(UShort)
  nameWithType: ApplicationEngine.LoadToken(ushort)
  nameWithType.vb: ApplicationEngine.LoadToken(UShort)
- uid: Neo.SmartContract.ApplicationEngine.LoadToken*
  name: LoadToken
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_LoadToken_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.LoadToken
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.LoadToken
  nameWithType: ApplicationEngine.LoadToken
- uid: Neo.SmartContract.ApplicationEngine.Log
  name: Log
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Log
  commentId: E:Neo.SmartContract.ApplicationEngine.Log
  fullName: Neo.SmartContract.ApplicationEngine.Log
  nameWithType: ApplicationEngine.Log
- uid: Neo.SmartContract.ApplicationEngine.MaxEventName
  name: MaxEventName
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_MaxEventName
  commentId: F:Neo.SmartContract.ApplicationEngine.MaxEventName
  fullName: Neo.SmartContract.ApplicationEngine.MaxEventName
  nameWithType: ApplicationEngine.MaxEventName
- uid: Neo.SmartContract.ApplicationEngine.MaxNotificationSize
  name: MaxNotificationSize
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_MaxNotificationSize
  commentId: F:Neo.SmartContract.ApplicationEngine.MaxNotificationSize
  fullName: Neo.SmartContract.ApplicationEngine.MaxNotificationSize
  nameWithType: ApplicationEngine.MaxNotificationSize
- uid: Neo.SmartContract.ApplicationEngine.MaxStorageKeySize
  name: MaxStorageKeySize
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_MaxStorageKeySize
  commentId: F:Neo.SmartContract.ApplicationEngine.MaxStorageKeySize
  fullName: Neo.SmartContract.ApplicationEngine.MaxStorageKeySize
  nameWithType: ApplicationEngine.MaxStorageKeySize
- uid: Neo.SmartContract.ApplicationEngine.MaxStorageValueSize
  name: MaxStorageValueSize
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_MaxStorageValueSize
  commentId: F:Neo.SmartContract.ApplicationEngine.MaxStorageValueSize
  fullName: Neo.SmartContract.ApplicationEngine.MaxStorageValueSize
  nameWithType: ApplicationEngine.MaxStorageValueSize
- uid: Neo.SmartContract.ApplicationEngine.NativeOnPersist
  name: NativeOnPersist()
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_NativeOnPersist
  commentId: M:Neo.SmartContract.ApplicationEngine.NativeOnPersist
  fullName: Neo.SmartContract.ApplicationEngine.NativeOnPersist()
  nameWithType: ApplicationEngine.NativeOnPersist()
- uid: Neo.SmartContract.ApplicationEngine.NativeOnPersist*
  name: NativeOnPersist
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_NativeOnPersist_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.NativeOnPersist
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.NativeOnPersist
  nameWithType: ApplicationEngine.NativeOnPersist
- uid: Neo.SmartContract.ApplicationEngine.NativePostPersist
  name: NativePostPersist()
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_NativePostPersist
  commentId: M:Neo.SmartContract.ApplicationEngine.NativePostPersist
  fullName: Neo.SmartContract.ApplicationEngine.NativePostPersist()
  nameWithType: ApplicationEngine.NativePostPersist()
- uid: Neo.SmartContract.ApplicationEngine.NativePostPersist*
  name: NativePostPersist
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_NativePostPersist_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.NativePostPersist
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.NativePostPersist
  nameWithType: ApplicationEngine.NativePostPersist
- uid: Neo.SmartContract.ApplicationEngine.Notifications
  name: Notifications
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Notifications
  commentId: P:Neo.SmartContract.ApplicationEngine.Notifications
  fullName: Neo.SmartContract.ApplicationEngine.Notifications
  nameWithType: ApplicationEngine.Notifications
- uid: Neo.SmartContract.ApplicationEngine.Notifications*
  name: Notifications
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Notifications_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.Notifications
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.Notifications
  nameWithType: ApplicationEngine.Notifications
- uid: Neo.SmartContract.ApplicationEngine.Notify
  name: Notify
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Notify
  commentId: E:Neo.SmartContract.ApplicationEngine.Notify
  fullName: Neo.SmartContract.ApplicationEngine.Notify
  nameWithType: ApplicationEngine.Notify
- uid: Neo.SmartContract.ApplicationEngine.OnFault(System.Exception)
  name: OnFault(Exception)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_OnFault_System_Exception_
  commentId: M:Neo.SmartContract.ApplicationEngine.OnFault(System.Exception)
  fullName: Neo.SmartContract.ApplicationEngine.OnFault(System.Exception)
  nameWithType: ApplicationEngine.OnFault(Exception)
- uid: Neo.SmartContract.ApplicationEngine.OnFault*
  name: OnFault
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_OnFault_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.OnFault
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.OnFault
  nameWithType: ApplicationEngine.OnFault
- uid: Neo.SmartContract.ApplicationEngine.OnSysCall(Neo.SmartContract.InteropDescriptor)
  name: OnSysCall(InteropDescriptor)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_OnSysCall_Neo_SmartContract_InteropDescriptor_
  commentId: M:Neo.SmartContract.ApplicationEngine.OnSysCall(Neo.SmartContract.InteropDescriptor)
  fullName: Neo.SmartContract.ApplicationEngine.OnSysCall(Neo.SmartContract.InteropDescriptor)
  nameWithType: ApplicationEngine.OnSysCall(InteropDescriptor)
- uid: Neo.SmartContract.ApplicationEngine.OnSysCall(System.UInt32)
  name: OnSysCall(uint)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_OnSysCall_System_UInt32_
  commentId: M:Neo.SmartContract.ApplicationEngine.OnSysCall(System.UInt32)
  name.vb: OnSysCall(UInteger)
  fullName: Neo.SmartContract.ApplicationEngine.OnSysCall(uint)
  fullName.vb: Neo.SmartContract.ApplicationEngine.OnSysCall(UInteger)
  nameWithType: ApplicationEngine.OnSysCall(uint)
  nameWithType.vb: ApplicationEngine.OnSysCall(UInteger)
- uid: Neo.SmartContract.ApplicationEngine.OnSysCall*
  name: OnSysCall
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_OnSysCall_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.OnSysCall
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.OnSysCall
  nameWithType: ApplicationEngine.OnSysCall
- uid: Neo.SmartContract.ApplicationEngine.OpCodePrices
  name: OpCodePrices
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_OpCodePrices
  commentId: F:Neo.SmartContract.ApplicationEngine.OpCodePrices
  fullName: Neo.SmartContract.ApplicationEngine.OpCodePrices
  nameWithType: ApplicationEngine.OpCodePrices
- uid: Neo.SmartContract.ApplicationEngine.PersistingBlock
  name: PersistingBlock
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_PersistingBlock
  commentId: P:Neo.SmartContract.ApplicationEngine.PersistingBlock
  fullName: Neo.SmartContract.ApplicationEngine.PersistingBlock
  nameWithType: ApplicationEngine.PersistingBlock
- uid: Neo.SmartContract.ApplicationEngine.PersistingBlock*
  name: PersistingBlock
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_PersistingBlock_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.PersistingBlock
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.PersistingBlock
  nameWithType: ApplicationEngine.PersistingBlock
- uid: Neo.SmartContract.ApplicationEngine.PostExecuteInstruction(Neo.VM.Instruction)
  name: PostExecuteInstruction(Instruction)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_PostExecuteInstruction_Neo_VM_Instruction_
  commentId: M:Neo.SmartContract.ApplicationEngine.PostExecuteInstruction(Neo.VM.Instruction)
  fullName: Neo.SmartContract.ApplicationEngine.PostExecuteInstruction(Neo.VM.Instruction)
  nameWithType: ApplicationEngine.PostExecuteInstruction(Instruction)
- uid: Neo.SmartContract.ApplicationEngine.PostExecuteInstruction*
  name: PostExecuteInstruction
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_PostExecuteInstruction_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.PostExecuteInstruction
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.PostExecuteInstruction
  nameWithType: ApplicationEngine.PostExecuteInstruction
- uid: Neo.SmartContract.ApplicationEngine.PreExecuteInstruction(Neo.VM.Instruction)
  name: PreExecuteInstruction(Instruction)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_PreExecuteInstruction_Neo_VM_Instruction_
  commentId: M:Neo.SmartContract.ApplicationEngine.PreExecuteInstruction(Neo.VM.Instruction)
  fullName: Neo.SmartContract.ApplicationEngine.PreExecuteInstruction(Neo.VM.Instruction)
  nameWithType: ApplicationEngine.PreExecuteInstruction(Instruction)
- uid: Neo.SmartContract.ApplicationEngine.PreExecuteInstruction*
  name: PreExecuteInstruction
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_PreExecuteInstruction_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.PreExecuteInstruction
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.PreExecuteInstruction
  nameWithType: ApplicationEngine.PreExecuteInstruction
- uid: Neo.SmartContract.ApplicationEngine.ProtocolSettings
  name: ProtocolSettings
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_ProtocolSettings
  commentId: P:Neo.SmartContract.ApplicationEngine.ProtocolSettings
  fullName: Neo.SmartContract.ApplicationEngine.ProtocolSettings
  nameWithType: ApplicationEngine.ProtocolSettings
- uid: Neo.SmartContract.ApplicationEngine.ProtocolSettings*
  name: ProtocolSettings
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_ProtocolSettings_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.ProtocolSettings
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.ProtocolSettings
  nameWithType: ApplicationEngine.ProtocolSettings
- uid: Neo.SmartContract.ApplicationEngine.Provider
  name: Provider
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Provider
  commentId: P:Neo.SmartContract.ApplicationEngine.Provider
  fullName: Neo.SmartContract.ApplicationEngine.Provider
  nameWithType: ApplicationEngine.Provider
- uid: Neo.SmartContract.ApplicationEngine.Provider*
  name: Provider
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Provider_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.Provider
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.Provider
  nameWithType: ApplicationEngine.Provider
- uid: Neo.SmartContract.ApplicationEngine.Put(Neo.SmartContract.StorageContext,System.Byte[],System.Byte[])
  name: Put(StorageContext, byte[], byte[])
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Put_Neo_SmartContract_StorageContext_System_Byte___System_Byte___
  commentId: M:Neo.SmartContract.ApplicationEngine.Put(Neo.SmartContract.StorageContext,System.Byte[],System.Byte[])
  name.vb: Put(StorageContext, Byte(), Byte())
  fullName: Neo.SmartContract.ApplicationEngine.Put(Neo.SmartContract.StorageContext, byte[], byte[])
  fullName.vb: Neo.SmartContract.ApplicationEngine.Put(Neo.SmartContract.StorageContext, Byte(), Byte())
  nameWithType: ApplicationEngine.Put(StorageContext, byte[], byte[])
  nameWithType.vb: ApplicationEngine.Put(StorageContext, Byte(), Byte())
- uid: Neo.SmartContract.ApplicationEngine.Put*
  name: Put
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Put_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.Put
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.Put
  nameWithType: ApplicationEngine.Put
- uid: Neo.SmartContract.ApplicationEngine.Run(System.ReadOnlyMemory{System.Byte},Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.IVerifiable,Neo.Network.P2P.Payloads.Block,Neo.ProtocolSettings,System.Int32,System.Int64,Neo.SmartContract.IDiagnostic)
  name: Run(ReadOnlyMemory<byte>, DataCache, IVerifiable, Block, ProtocolSettings, int, long, IDiagnostic)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Run_System_ReadOnlyMemory_System_Byte__Neo_Persistence_DataCache_Neo_Network_P2P_Payloads_IVerifiable_Neo_Network_P2P_Payloads_Block_Neo_ProtocolSettings_System_Int32_System_Int64_Neo_SmartContract_IDiagnostic_
  commentId: M:Neo.SmartContract.ApplicationEngine.Run(System.ReadOnlyMemory{System.Byte},Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.IVerifiable,Neo.Network.P2P.Payloads.Block,Neo.ProtocolSettings,System.Int32,System.Int64,Neo.SmartContract.IDiagnostic)
  name.vb: Run(ReadOnlyMemory(Of Byte), DataCache, IVerifiable, Block, ProtocolSettings, Integer, Long, IDiagnostic)
  fullName: Neo.SmartContract.ApplicationEngine.Run(System.ReadOnlyMemory<byte>, Neo.Persistence.DataCache, Neo.Network.P2P.Payloads.IVerifiable, Neo.Network.P2P.Payloads.Block, Neo.ProtocolSettings, int, long, Neo.SmartContract.IDiagnostic)
  fullName.vb: Neo.SmartContract.ApplicationEngine.Run(System.ReadOnlyMemory(Of Byte), Neo.Persistence.DataCache, Neo.Network.P2P.Payloads.IVerifiable, Neo.Network.P2P.Payloads.Block, Neo.ProtocolSettings, Integer, Long, Neo.SmartContract.IDiagnostic)
  nameWithType: ApplicationEngine.Run(ReadOnlyMemory<byte>, DataCache, IVerifiable, Block, ProtocolSettings, int, long, IDiagnostic)
  nameWithType.vb: ApplicationEngine.Run(ReadOnlyMemory(Of Byte), DataCache, IVerifiable, Block, ProtocolSettings, Integer, Long, IDiagnostic)
- uid: Neo.SmartContract.ApplicationEngine.Run*
  name: Run
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Run_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.Run
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.Run
  nameWithType: ApplicationEngine.Run
- uid: Neo.SmartContract.ApplicationEngine.RuntimeLoadScript(System.Byte[],Neo.SmartContract.CallFlags,Neo.VM.Types.Array)
  name: RuntimeLoadScript(byte[], CallFlags, Array)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_RuntimeLoadScript_System_Byte___Neo_SmartContract_CallFlags_Neo_VM_Types_Array_
  commentId: M:Neo.SmartContract.ApplicationEngine.RuntimeLoadScript(System.Byte[],Neo.SmartContract.CallFlags,Neo.VM.Types.Array)
  name.vb: RuntimeLoadScript(Byte(), CallFlags, Array)
  fullName: Neo.SmartContract.ApplicationEngine.RuntimeLoadScript(byte[], Neo.SmartContract.CallFlags, Neo.VM.Types.Array)
  fullName.vb: Neo.SmartContract.ApplicationEngine.RuntimeLoadScript(Byte(), Neo.SmartContract.CallFlags, Neo.VM.Types.Array)
  nameWithType: ApplicationEngine.RuntimeLoadScript(byte[], CallFlags, Array)
  nameWithType.vb: ApplicationEngine.RuntimeLoadScript(Byte(), CallFlags, Array)
- uid: Neo.SmartContract.ApplicationEngine.RuntimeLoadScript*
  name: RuntimeLoadScript
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_RuntimeLoadScript_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.RuntimeLoadScript
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.RuntimeLoadScript
  nameWithType: ApplicationEngine.RuntimeLoadScript
- uid: Neo.SmartContract.ApplicationEngine.RuntimeLog(System.Byte[])
  name: RuntimeLog(byte[])
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_RuntimeLog_System_Byte___
  commentId: M:Neo.SmartContract.ApplicationEngine.RuntimeLog(System.Byte[])
  name.vb: RuntimeLog(Byte())
  fullName: Neo.SmartContract.ApplicationEngine.RuntimeLog(byte[])
  fullName.vb: Neo.SmartContract.ApplicationEngine.RuntimeLog(Byte())
  nameWithType: ApplicationEngine.RuntimeLog(byte[])
  nameWithType.vb: ApplicationEngine.RuntimeLog(Byte())
- uid: Neo.SmartContract.ApplicationEngine.RuntimeLog*
  name: RuntimeLog
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_RuntimeLog_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.RuntimeLog
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.RuntimeLog
  nameWithType: ApplicationEngine.RuntimeLog
- uid: Neo.SmartContract.ApplicationEngine.RuntimeNotify(System.Byte[],Neo.VM.Types.Array)
  name: RuntimeNotify(byte[], Array)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_RuntimeNotify_System_Byte___Neo_VM_Types_Array_
  commentId: M:Neo.SmartContract.ApplicationEngine.RuntimeNotify(System.Byte[],Neo.VM.Types.Array)
  name.vb: RuntimeNotify(Byte(), Array)
  fullName: Neo.SmartContract.ApplicationEngine.RuntimeNotify(byte[], Neo.VM.Types.Array)
  fullName.vb: Neo.SmartContract.ApplicationEngine.RuntimeNotify(Byte(), Neo.VM.Types.Array)
  nameWithType: ApplicationEngine.RuntimeNotify(byte[], Array)
  nameWithType.vb: ApplicationEngine.RuntimeNotify(Byte(), Array)
- uid: Neo.SmartContract.ApplicationEngine.RuntimeNotify*
  name: RuntimeNotify
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_RuntimeNotify_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.RuntimeNotify
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.RuntimeNotify
  nameWithType: ApplicationEngine.RuntimeNotify
- uid: Neo.SmartContract.ApplicationEngine.RuntimeNotifyV1(System.Byte[],Neo.VM.Types.Array)
  name: RuntimeNotifyV1(byte[], Array)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_RuntimeNotifyV1_System_Byte___Neo_VM_Types_Array_
  commentId: M:Neo.SmartContract.ApplicationEngine.RuntimeNotifyV1(System.Byte[],Neo.VM.Types.Array)
  name.vb: RuntimeNotifyV1(Byte(), Array)
  fullName: Neo.SmartContract.ApplicationEngine.RuntimeNotifyV1(byte[], Neo.VM.Types.Array)
  fullName.vb: Neo.SmartContract.ApplicationEngine.RuntimeNotifyV1(Byte(), Neo.VM.Types.Array)
  nameWithType: ApplicationEngine.RuntimeNotifyV1(byte[], Array)
  nameWithType.vb: ApplicationEngine.RuntimeNotifyV1(Byte(), Array)
- uid: Neo.SmartContract.ApplicationEngine.RuntimeNotifyV1*
  name: RuntimeNotifyV1
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_RuntimeNotifyV1_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.RuntimeNotifyV1
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.RuntimeNotifyV1
  nameWithType: ApplicationEngine.RuntimeNotifyV1
- uid: Neo.SmartContract.ApplicationEngine.ScriptContainer
  name: ScriptContainer
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_ScriptContainer
  commentId: P:Neo.SmartContract.ApplicationEngine.ScriptContainer
  fullName: Neo.SmartContract.ApplicationEngine.ScriptContainer
  nameWithType: ApplicationEngine.ScriptContainer
- uid: Neo.SmartContract.ApplicationEngine.ScriptContainer*
  name: ScriptContainer
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_ScriptContainer_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.ScriptContainer
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.ScriptContainer
  nameWithType: ApplicationEngine.ScriptContainer
- uid: Neo.SmartContract.ApplicationEngine.SendNotification(Neo.UInt160,System.String,Neo.VM.Types.Array)
  name: SendNotification(UInt160, string, Array)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_SendNotification_Neo_UInt160_System_String_Neo_VM_Types_Array_
  commentId: M:Neo.SmartContract.ApplicationEngine.SendNotification(Neo.UInt160,System.String,Neo.VM.Types.Array)
  name.vb: SendNotification(UInt160, String, Array)
  fullName: Neo.SmartContract.ApplicationEngine.SendNotification(Neo.UInt160, string, Neo.VM.Types.Array)
  fullName.vb: Neo.SmartContract.ApplicationEngine.SendNotification(Neo.UInt160, String, Neo.VM.Types.Array)
  nameWithType: ApplicationEngine.SendNotification(UInt160, string, Array)
  nameWithType.vb: ApplicationEngine.SendNotification(UInt160, String, Array)
- uid: Neo.SmartContract.ApplicationEngine.SendNotification*
  name: SendNotification
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_SendNotification_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.SendNotification
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.SendNotification
  nameWithType: ApplicationEngine.SendNotification
- uid: Neo.SmartContract.ApplicationEngine.Services
  name: Services
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Services
  commentId: P:Neo.SmartContract.ApplicationEngine.Services
  fullName: Neo.SmartContract.ApplicationEngine.Services
  nameWithType: ApplicationEngine.Services
- uid: Neo.SmartContract.ApplicationEngine.Services*
  name: Services
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Services_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.Services
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.Services
  nameWithType: ApplicationEngine.Services
- uid: Neo.SmartContract.ApplicationEngine.SetState*
  name: SetState
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_SetState_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.SetState
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.SetState
  nameWithType: ApplicationEngine.SetState
- uid: Neo.SmartContract.ApplicationEngine.SetState``1(``0)
  name: SetState<T>(T)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_SetState__1___0_
  commentId: M:Neo.SmartContract.ApplicationEngine.SetState``1(``0)
  name.vb: SetState(Of T)(T)
  fullName: Neo.SmartContract.ApplicationEngine.SetState<T>(T)
  fullName.vb: Neo.SmartContract.ApplicationEngine.SetState(Of T)(T)
  nameWithType: ApplicationEngine.SetState<T>(T)
  nameWithType.vb: ApplicationEngine.SetState(Of T)(T)
- uid: Neo.SmartContract.ApplicationEngine.Snapshot
  name: Snapshot
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Snapshot
  commentId: P:Neo.SmartContract.ApplicationEngine.Snapshot
  fullName: Neo.SmartContract.ApplicationEngine.Snapshot
  nameWithType: ApplicationEngine.Snapshot
- uid: Neo.SmartContract.ApplicationEngine.Snapshot*
  name: Snapshot
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Snapshot_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.Snapshot
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.Snapshot
  nameWithType: ApplicationEngine.Snapshot
- uid: Neo.SmartContract.ApplicationEngine.System_Contract_Call
  name: System_Contract_Call
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Contract_Call
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Contract_Call
  fullName: Neo.SmartContract.ApplicationEngine.System_Contract_Call
  nameWithType: ApplicationEngine.System_Contract_Call
- uid: Neo.SmartContract.ApplicationEngine.System_Contract_CallNative
  name: System_Contract_CallNative
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Contract_CallNative
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Contract_CallNative
  fullName: Neo.SmartContract.ApplicationEngine.System_Contract_CallNative
  nameWithType: ApplicationEngine.System_Contract_CallNative
- uid: Neo.SmartContract.ApplicationEngine.System_Contract_CreateMultisigAccount
  name: System_Contract_CreateMultisigAccount
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Contract_CreateMultisigAccount
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Contract_CreateMultisigAccount
  fullName: Neo.SmartContract.ApplicationEngine.System_Contract_CreateMultisigAccount
  nameWithType: ApplicationEngine.System_Contract_CreateMultisigAccount
- uid: Neo.SmartContract.ApplicationEngine.System_Contract_CreateStandardAccount
  name: System_Contract_CreateStandardAccount
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Contract_CreateStandardAccount
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Contract_CreateStandardAccount
  fullName: Neo.SmartContract.ApplicationEngine.System_Contract_CreateStandardAccount
  nameWithType: ApplicationEngine.System_Contract_CreateStandardAccount
- uid: Neo.SmartContract.ApplicationEngine.System_Contract_GetCallFlags
  name: System_Contract_GetCallFlags
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Contract_GetCallFlags
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Contract_GetCallFlags
  fullName: Neo.SmartContract.ApplicationEngine.System_Contract_GetCallFlags
  nameWithType: ApplicationEngine.System_Contract_GetCallFlags
- uid: Neo.SmartContract.ApplicationEngine.System_Contract_NativeOnPersist
  name: System_Contract_NativeOnPersist
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Contract_NativeOnPersist
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Contract_NativeOnPersist
  fullName: Neo.SmartContract.ApplicationEngine.System_Contract_NativeOnPersist
  nameWithType: ApplicationEngine.System_Contract_NativeOnPersist
- uid: Neo.SmartContract.ApplicationEngine.System_Contract_NativePostPersist
  name: System_Contract_NativePostPersist
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Contract_NativePostPersist
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Contract_NativePostPersist
  fullName: Neo.SmartContract.ApplicationEngine.System_Contract_NativePostPersist
  nameWithType: ApplicationEngine.System_Contract_NativePostPersist
- uid: Neo.SmartContract.ApplicationEngine.System_Crypto_CheckMultisig
  name: System_Crypto_CheckMultisig
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Crypto_CheckMultisig
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Crypto_CheckMultisig
  fullName: Neo.SmartContract.ApplicationEngine.System_Crypto_CheckMultisig
  nameWithType: ApplicationEngine.System_Crypto_CheckMultisig
- uid: Neo.SmartContract.ApplicationEngine.System_Crypto_CheckSig
  name: System_Crypto_CheckSig
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Crypto_CheckSig
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Crypto_CheckSig
  fullName: Neo.SmartContract.ApplicationEngine.System_Crypto_CheckSig
  nameWithType: ApplicationEngine.System_Crypto_CheckSig
- uid: Neo.SmartContract.ApplicationEngine.System_Iterator_Next
  name: System_Iterator_Next
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Iterator_Next
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Iterator_Next
  fullName: Neo.SmartContract.ApplicationEngine.System_Iterator_Next
  nameWithType: ApplicationEngine.System_Iterator_Next
- uid: Neo.SmartContract.ApplicationEngine.System_Iterator_Value
  name: System_Iterator_Value
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Iterator_Value
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Iterator_Value
  fullName: Neo.SmartContract.ApplicationEngine.System_Iterator_Value
  nameWithType: ApplicationEngine.System_Iterator_Value
- uid: Neo.SmartContract.ApplicationEngine.System_Runtime_BurnGas
  name: System_Runtime_BurnGas
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Runtime_BurnGas
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Runtime_BurnGas
  fullName: Neo.SmartContract.ApplicationEngine.System_Runtime_BurnGas
  nameWithType: ApplicationEngine.System_Runtime_BurnGas
- uid: Neo.SmartContract.ApplicationEngine.System_Runtime_CheckWitness
  name: System_Runtime_CheckWitness
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Runtime_CheckWitness
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Runtime_CheckWitness
  fullName: Neo.SmartContract.ApplicationEngine.System_Runtime_CheckWitness
  nameWithType: ApplicationEngine.System_Runtime_CheckWitness
- uid: Neo.SmartContract.ApplicationEngine.System_Runtime_CurrentSigners
  name: System_Runtime_CurrentSigners
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Runtime_CurrentSigners
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Runtime_CurrentSigners
  fullName: Neo.SmartContract.ApplicationEngine.System_Runtime_CurrentSigners
  nameWithType: ApplicationEngine.System_Runtime_CurrentSigners
- uid: Neo.SmartContract.ApplicationEngine.System_Runtime_GasLeft
  name: System_Runtime_GasLeft
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Runtime_GasLeft
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Runtime_GasLeft
  fullName: Neo.SmartContract.ApplicationEngine.System_Runtime_GasLeft
  nameWithType: ApplicationEngine.System_Runtime_GasLeft
- uid: Neo.SmartContract.ApplicationEngine.System_Runtime_GetAddressVersion
  name: System_Runtime_GetAddressVersion
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Runtime_GetAddressVersion
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Runtime_GetAddressVersion
  fullName: Neo.SmartContract.ApplicationEngine.System_Runtime_GetAddressVersion
  nameWithType: ApplicationEngine.System_Runtime_GetAddressVersion
- uid: Neo.SmartContract.ApplicationEngine.System_Runtime_GetCallingScriptHash
  name: System_Runtime_GetCallingScriptHash
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Runtime_GetCallingScriptHash
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Runtime_GetCallingScriptHash
  fullName: Neo.SmartContract.ApplicationEngine.System_Runtime_GetCallingScriptHash
  nameWithType: ApplicationEngine.System_Runtime_GetCallingScriptHash
- uid: Neo.SmartContract.ApplicationEngine.System_Runtime_GetEntryScriptHash
  name: System_Runtime_GetEntryScriptHash
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Runtime_GetEntryScriptHash
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Runtime_GetEntryScriptHash
  fullName: Neo.SmartContract.ApplicationEngine.System_Runtime_GetEntryScriptHash
  nameWithType: ApplicationEngine.System_Runtime_GetEntryScriptHash
- uid: Neo.SmartContract.ApplicationEngine.System_Runtime_GetExecutingScriptHash
  name: System_Runtime_GetExecutingScriptHash
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Runtime_GetExecutingScriptHash
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Runtime_GetExecutingScriptHash
  fullName: Neo.SmartContract.ApplicationEngine.System_Runtime_GetExecutingScriptHash
  nameWithType: ApplicationEngine.System_Runtime_GetExecutingScriptHash
- uid: Neo.SmartContract.ApplicationEngine.System_Runtime_GetInvocationCounter
  name: System_Runtime_GetInvocationCounter
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Runtime_GetInvocationCounter
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Runtime_GetInvocationCounter
  fullName: Neo.SmartContract.ApplicationEngine.System_Runtime_GetInvocationCounter
  nameWithType: ApplicationEngine.System_Runtime_GetInvocationCounter
- uid: Neo.SmartContract.ApplicationEngine.System_Runtime_GetNetwork
  name: System_Runtime_GetNetwork
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Runtime_GetNetwork
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Runtime_GetNetwork
  fullName: Neo.SmartContract.ApplicationEngine.System_Runtime_GetNetwork
  nameWithType: ApplicationEngine.System_Runtime_GetNetwork
- uid: Neo.SmartContract.ApplicationEngine.System_Runtime_GetNotifications
  name: System_Runtime_GetNotifications
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Runtime_GetNotifications
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Runtime_GetNotifications
  fullName: Neo.SmartContract.ApplicationEngine.System_Runtime_GetNotifications
  nameWithType: ApplicationEngine.System_Runtime_GetNotifications
- uid: Neo.SmartContract.ApplicationEngine.System_Runtime_GetRandom
  name: System_Runtime_GetRandom
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Runtime_GetRandom
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Runtime_GetRandom
  fullName: Neo.SmartContract.ApplicationEngine.System_Runtime_GetRandom
  nameWithType: ApplicationEngine.System_Runtime_GetRandom
- uid: Neo.SmartContract.ApplicationEngine.System_Runtime_GetScriptContainer
  name: System_Runtime_GetScriptContainer
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Runtime_GetScriptContainer
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Runtime_GetScriptContainer
  fullName: Neo.SmartContract.ApplicationEngine.System_Runtime_GetScriptContainer
  nameWithType: ApplicationEngine.System_Runtime_GetScriptContainer
- uid: Neo.SmartContract.ApplicationEngine.System_Runtime_GetTime
  name: System_Runtime_GetTime
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Runtime_GetTime
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Runtime_GetTime
  fullName: Neo.SmartContract.ApplicationEngine.System_Runtime_GetTime
  nameWithType: ApplicationEngine.System_Runtime_GetTime
- uid: Neo.SmartContract.ApplicationEngine.System_Runtime_GetTrigger
  name: System_Runtime_GetTrigger
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Runtime_GetTrigger
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Runtime_GetTrigger
  fullName: Neo.SmartContract.ApplicationEngine.System_Runtime_GetTrigger
  nameWithType: ApplicationEngine.System_Runtime_GetTrigger
- uid: Neo.SmartContract.ApplicationEngine.System_Runtime_LoadScript
  name: System_Runtime_LoadScript
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Runtime_LoadScript
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Runtime_LoadScript
  fullName: Neo.SmartContract.ApplicationEngine.System_Runtime_LoadScript
  nameWithType: ApplicationEngine.System_Runtime_LoadScript
- uid: Neo.SmartContract.ApplicationEngine.System_Runtime_Log
  name: System_Runtime_Log
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Runtime_Log
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Runtime_Log
  fullName: Neo.SmartContract.ApplicationEngine.System_Runtime_Log
  nameWithType: ApplicationEngine.System_Runtime_Log
- uid: Neo.SmartContract.ApplicationEngine.System_Runtime_Notify
  name: System_Runtime_Notify
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Runtime_Notify
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Runtime_Notify
  fullName: Neo.SmartContract.ApplicationEngine.System_Runtime_Notify
  nameWithType: ApplicationEngine.System_Runtime_Notify
- uid: Neo.SmartContract.ApplicationEngine.System_Runtime_Platform
  name: System_Runtime_Platform
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Runtime_Platform
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Runtime_Platform
  fullName: Neo.SmartContract.ApplicationEngine.System_Runtime_Platform
  nameWithType: ApplicationEngine.System_Runtime_Platform
- uid: Neo.SmartContract.ApplicationEngine.System_Storage_AsReadOnly
  name: System_Storage_AsReadOnly
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Storage_AsReadOnly
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Storage_AsReadOnly
  fullName: Neo.SmartContract.ApplicationEngine.System_Storage_AsReadOnly
  nameWithType: ApplicationEngine.System_Storage_AsReadOnly
- uid: Neo.SmartContract.ApplicationEngine.System_Storage_Delete
  name: System_Storage_Delete
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Storage_Delete
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Storage_Delete
  fullName: Neo.SmartContract.ApplicationEngine.System_Storage_Delete
  nameWithType: ApplicationEngine.System_Storage_Delete
- uid: Neo.SmartContract.ApplicationEngine.System_Storage_Find
  name: System_Storage_Find
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Storage_Find
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Storage_Find
  fullName: Neo.SmartContract.ApplicationEngine.System_Storage_Find
  nameWithType: ApplicationEngine.System_Storage_Find
- uid: Neo.SmartContract.ApplicationEngine.System_Storage_Get
  name: System_Storage_Get
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Storage_Get
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Storage_Get
  fullName: Neo.SmartContract.ApplicationEngine.System_Storage_Get
  nameWithType: ApplicationEngine.System_Storage_Get
- uid: Neo.SmartContract.ApplicationEngine.System_Storage_GetContext
  name: System_Storage_GetContext
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Storage_GetContext
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Storage_GetContext
  fullName: Neo.SmartContract.ApplicationEngine.System_Storage_GetContext
  nameWithType: ApplicationEngine.System_Storage_GetContext
- uid: Neo.SmartContract.ApplicationEngine.System_Storage_GetReadOnlyContext
  name: System_Storage_GetReadOnlyContext
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Storage_GetReadOnlyContext
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Storage_GetReadOnlyContext
  fullName: Neo.SmartContract.ApplicationEngine.System_Storage_GetReadOnlyContext
  nameWithType: ApplicationEngine.System_Storage_GetReadOnlyContext
- uid: Neo.SmartContract.ApplicationEngine.System_Storage_Put
  name: System_Storage_Put
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_System_Storage_Put
  commentId: F:Neo.SmartContract.ApplicationEngine.System_Storage_Put
  fullName: Neo.SmartContract.ApplicationEngine.System_Storage_Put
  nameWithType: ApplicationEngine.System_Storage_Put
- uid: Neo.SmartContract.ApplicationEngine.TestModeGas
  name: TestModeGas
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_TestModeGas
  commentId: F:Neo.SmartContract.ApplicationEngine.TestModeGas
  fullName: Neo.SmartContract.ApplicationEngine.TestModeGas
  nameWithType: ApplicationEngine.TestModeGas
- uid: Neo.SmartContract.ApplicationEngine.Trigger
  name: Trigger
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Trigger
  commentId: P:Neo.SmartContract.ApplicationEngine.Trigger
  fullName: Neo.SmartContract.ApplicationEngine.Trigger
  nameWithType: ApplicationEngine.Trigger
- uid: Neo.SmartContract.ApplicationEngine.Trigger*
  name: Trigger
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_Trigger_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.Trigger
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.Trigger
  nameWithType: ApplicationEngine.Trigger
- uid: Neo.SmartContract.ApplicationEngine.ValidateCallFlags(Neo.SmartContract.CallFlags)
  name: ValidateCallFlags(CallFlags)
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_ValidateCallFlags_Neo_SmartContract_CallFlags_
  commentId: M:Neo.SmartContract.ApplicationEngine.ValidateCallFlags(Neo.SmartContract.CallFlags)
  fullName: Neo.SmartContract.ApplicationEngine.ValidateCallFlags(Neo.SmartContract.CallFlags)
  nameWithType: ApplicationEngine.ValidateCallFlags(CallFlags)
- uid: Neo.SmartContract.ApplicationEngine.ValidateCallFlags*
  name: ValidateCallFlags
  href: api/Neo.SmartContract.ApplicationEngine.html#Neo_SmartContract_ApplicationEngine_ValidateCallFlags_
  commentId: Overload:Neo.SmartContract.ApplicationEngine.ValidateCallFlags
  isSpec: "True"
  fullName: Neo.SmartContract.ApplicationEngine.ValidateCallFlags
  nameWithType: ApplicationEngine.ValidateCallFlags
- uid: Neo.SmartContract.BinarySerializer
  name: BinarySerializer
  href: api/Neo.SmartContract.BinarySerializer.html
  commentId: T:Neo.SmartContract.BinarySerializer
  fullName: Neo.SmartContract.BinarySerializer
  nameWithType: BinarySerializer
- uid: Neo.SmartContract.BinarySerializer.Deserialize(Neo.IO.MemoryReader@,Neo.VM.ExecutionEngineLimits,Neo.VM.ReferenceCounter)
  name: Deserialize(ref MemoryReader, ExecutionEngineLimits, ReferenceCounter)
  href: api/Neo.SmartContract.BinarySerializer.html#Neo_SmartContract_BinarySerializer_Deserialize_Neo_IO_MemoryReader__Neo_VM_ExecutionEngineLimits_Neo_VM_ReferenceCounter_
  commentId: M:Neo.SmartContract.BinarySerializer.Deserialize(Neo.IO.MemoryReader@,Neo.VM.ExecutionEngineLimits,Neo.VM.ReferenceCounter)
  name.vb: Deserialize(MemoryReader, ExecutionEngineLimits, ReferenceCounter)
  fullName: Neo.SmartContract.BinarySerializer.Deserialize(ref Neo.IO.MemoryReader, Neo.VM.ExecutionEngineLimits, Neo.VM.ReferenceCounter)
  fullName.vb: Neo.SmartContract.BinarySerializer.Deserialize(Neo.IO.MemoryReader, Neo.VM.ExecutionEngineLimits, Neo.VM.ReferenceCounter)
  nameWithType: BinarySerializer.Deserialize(ref MemoryReader, ExecutionEngineLimits, ReferenceCounter)
  nameWithType.vb: BinarySerializer.Deserialize(MemoryReader, ExecutionEngineLimits, ReferenceCounter)
- uid: Neo.SmartContract.BinarySerializer.Deserialize(System.ReadOnlyMemory{System.Byte},Neo.VM.ExecutionEngineLimits,Neo.VM.ReferenceCounter)
  name: Deserialize(ReadOnlyMemory<byte>, ExecutionEngineLimits, ReferenceCounter)
  href: api/Neo.SmartContract.BinarySerializer.html#Neo_SmartContract_BinarySerializer_Deserialize_System_ReadOnlyMemory_System_Byte__Neo_VM_ExecutionEngineLimits_Neo_VM_ReferenceCounter_
  commentId: M:Neo.SmartContract.BinarySerializer.Deserialize(System.ReadOnlyMemory{System.Byte},Neo.VM.ExecutionEngineLimits,Neo.VM.ReferenceCounter)
  name.vb: Deserialize(ReadOnlyMemory(Of Byte), ExecutionEngineLimits, ReferenceCounter)
  fullName: Neo.SmartContract.BinarySerializer.Deserialize(System.ReadOnlyMemory<byte>, Neo.VM.ExecutionEngineLimits, Neo.VM.ReferenceCounter)
  fullName.vb: Neo.SmartContract.BinarySerializer.Deserialize(System.ReadOnlyMemory(Of Byte), Neo.VM.ExecutionEngineLimits, Neo.VM.ReferenceCounter)
  nameWithType: BinarySerializer.Deserialize(ReadOnlyMemory<byte>, ExecutionEngineLimits, ReferenceCounter)
  nameWithType.vb: BinarySerializer.Deserialize(ReadOnlyMemory(Of Byte), ExecutionEngineLimits, ReferenceCounter)
- uid: Neo.SmartContract.BinarySerializer.Deserialize*
  name: Deserialize
  href: api/Neo.SmartContract.BinarySerializer.html#Neo_SmartContract_BinarySerializer_Deserialize_
  commentId: Overload:Neo.SmartContract.BinarySerializer.Deserialize
  isSpec: "True"
  fullName: Neo.SmartContract.BinarySerializer.Deserialize
  nameWithType: BinarySerializer.Deserialize
- uid: Neo.SmartContract.BinarySerializer.Serialize(Neo.VM.Types.StackItem,System.UInt32)
  name: Serialize(StackItem, uint)
  href: api/Neo.SmartContract.BinarySerializer.html#Neo_SmartContract_BinarySerializer_Serialize_Neo_VM_Types_StackItem_System_UInt32_
  commentId: M:Neo.SmartContract.BinarySerializer.Serialize(Neo.VM.Types.StackItem,System.UInt32)
  name.vb: Serialize(StackItem, UInteger)
  fullName: Neo.SmartContract.BinarySerializer.Serialize(Neo.VM.Types.StackItem, uint)
  fullName.vb: Neo.SmartContract.BinarySerializer.Serialize(Neo.VM.Types.StackItem, UInteger)
  nameWithType: BinarySerializer.Serialize(StackItem, uint)
  nameWithType.vb: BinarySerializer.Serialize(StackItem, UInteger)
- uid: Neo.SmartContract.BinarySerializer.Serialize(System.IO.BinaryWriter,Neo.VM.Types.StackItem,System.UInt32)
  name: Serialize(BinaryWriter, StackItem, uint)
  href: api/Neo.SmartContract.BinarySerializer.html#Neo_SmartContract_BinarySerializer_Serialize_System_IO_BinaryWriter_Neo_VM_Types_StackItem_System_UInt32_
  commentId: M:Neo.SmartContract.BinarySerializer.Serialize(System.IO.BinaryWriter,Neo.VM.Types.StackItem,System.UInt32)
  name.vb: Serialize(BinaryWriter, StackItem, UInteger)
  fullName: Neo.SmartContract.BinarySerializer.Serialize(System.IO.BinaryWriter, Neo.VM.Types.StackItem, uint)
  fullName.vb: Neo.SmartContract.BinarySerializer.Serialize(System.IO.BinaryWriter, Neo.VM.Types.StackItem, UInteger)
  nameWithType: BinarySerializer.Serialize(BinaryWriter, StackItem, uint)
  nameWithType.vb: BinarySerializer.Serialize(BinaryWriter, StackItem, UInteger)
- uid: Neo.SmartContract.BinarySerializer.Serialize*
  name: Serialize
  href: api/Neo.SmartContract.BinarySerializer.html#Neo_SmartContract_BinarySerializer_Serialize_
  commentId: Overload:Neo.SmartContract.BinarySerializer.Serialize
  isSpec: "True"
  fullName: Neo.SmartContract.BinarySerializer.Serialize
  nameWithType: BinarySerializer.Serialize
- uid: Neo.SmartContract.CallFlags
  name: CallFlags
  href: api/Neo.SmartContract.CallFlags.html
  commentId: T:Neo.SmartContract.CallFlags
  fullName: Neo.SmartContract.CallFlags
  nameWithType: CallFlags
- uid: Neo.SmartContract.CallFlags.All
  name: All
  href: api/Neo.SmartContract.CallFlags.html#Neo_SmartContract_CallFlags_All
  commentId: F:Neo.SmartContract.CallFlags.All
  fullName: Neo.SmartContract.CallFlags.All
  nameWithType: CallFlags.All
- uid: Neo.SmartContract.CallFlags.AllowCall
  name: AllowCall
  href: api/Neo.SmartContract.CallFlags.html#Neo_SmartContract_CallFlags_AllowCall
  commentId: F:Neo.SmartContract.CallFlags.AllowCall
  fullName: Neo.SmartContract.CallFlags.AllowCall
  nameWithType: CallFlags.AllowCall
- uid: Neo.SmartContract.CallFlags.AllowNotify
  name: AllowNotify
  href: api/Neo.SmartContract.CallFlags.html#Neo_SmartContract_CallFlags_AllowNotify
  commentId: F:Neo.SmartContract.CallFlags.AllowNotify
  fullName: Neo.SmartContract.CallFlags.AllowNotify
  nameWithType: CallFlags.AllowNotify
- uid: Neo.SmartContract.CallFlags.None
  name: None
  href: api/Neo.SmartContract.CallFlags.html#Neo_SmartContract_CallFlags_None
  commentId: F:Neo.SmartContract.CallFlags.None
  fullName: Neo.SmartContract.CallFlags.None
  nameWithType: CallFlags.None
- uid: Neo.SmartContract.CallFlags.ReadOnly
  name: ReadOnly
  href: api/Neo.SmartContract.CallFlags.html#Neo_SmartContract_CallFlags_ReadOnly
  commentId: F:Neo.SmartContract.CallFlags.ReadOnly
  fullName: Neo.SmartContract.CallFlags.ReadOnly
  nameWithType: CallFlags.ReadOnly
- uid: Neo.SmartContract.CallFlags.ReadStates
  name: ReadStates
  href: api/Neo.SmartContract.CallFlags.html#Neo_SmartContract_CallFlags_ReadStates
  commentId: F:Neo.SmartContract.CallFlags.ReadStates
  fullName: Neo.SmartContract.CallFlags.ReadStates
  nameWithType: CallFlags.ReadStates
- uid: Neo.SmartContract.CallFlags.States
  name: States
  href: api/Neo.SmartContract.CallFlags.html#Neo_SmartContract_CallFlags_States
  commentId: F:Neo.SmartContract.CallFlags.States
  fullName: Neo.SmartContract.CallFlags.States
  nameWithType: CallFlags.States
- uid: Neo.SmartContract.CallFlags.WriteStates
  name: WriteStates
  href: api/Neo.SmartContract.CallFlags.html#Neo_SmartContract_CallFlags_WriteStates
  commentId: F:Neo.SmartContract.CallFlags.WriteStates
  fullName: Neo.SmartContract.CallFlags.WriteStates
  nameWithType: CallFlags.WriteStates
- uid: Neo.SmartContract.Contract
  name: Contract
  href: api/Neo.SmartContract.Contract.html
  commentId: T:Neo.SmartContract.Contract
  fullName: Neo.SmartContract.Contract
  nameWithType: Contract
- uid: Neo.SmartContract.Contract.Create(Neo.SmartContract.ContractParameterType[],System.Byte[])
  name: Create(ContractParameterType[], byte[])
  href: api/Neo.SmartContract.Contract.html#Neo_SmartContract_Contract_Create_Neo_SmartContract_ContractParameterType___System_Byte___
  commentId: M:Neo.SmartContract.Contract.Create(Neo.SmartContract.ContractParameterType[],System.Byte[])
  name.vb: Create(ContractParameterType(), Byte())
  fullName: Neo.SmartContract.Contract.Create(Neo.SmartContract.ContractParameterType[], byte[])
  fullName.vb: Neo.SmartContract.Contract.Create(Neo.SmartContract.ContractParameterType(), Byte())
  nameWithType: Contract.Create(ContractParameterType[], byte[])
  nameWithType.vb: Contract.Create(ContractParameterType(), Byte())
- uid: Neo.SmartContract.Contract.Create(Neo.UInt160,Neo.SmartContract.ContractParameterType[])
  name: Create(UInt160, params ContractParameterType[])
  href: api/Neo.SmartContract.Contract.html#Neo_SmartContract_Contract_Create_Neo_UInt160_Neo_SmartContract_ContractParameterType___
  commentId: M:Neo.SmartContract.Contract.Create(Neo.UInt160,Neo.SmartContract.ContractParameterType[])
  name.vb: Create(UInt160, ParamArray ContractParameterType())
  fullName: Neo.SmartContract.Contract.Create(Neo.UInt160, params Neo.SmartContract.ContractParameterType[])
  fullName.vb: Neo.SmartContract.Contract.Create(Neo.UInt160, ParamArray Neo.SmartContract.ContractParameterType())
  nameWithType: Contract.Create(UInt160, params ContractParameterType[])
  nameWithType.vb: Contract.Create(UInt160, ParamArray ContractParameterType())
- uid: Neo.SmartContract.Contract.Create*
  name: Create
  href: api/Neo.SmartContract.Contract.html#Neo_SmartContract_Contract_Create_
  commentId: Overload:Neo.SmartContract.Contract.Create
  isSpec: "True"
  fullName: Neo.SmartContract.Contract.Create
  nameWithType: Contract.Create
- uid: Neo.SmartContract.Contract.CreateMultiSigContract(System.Int32,System.Collections.Generic.IReadOnlyCollection{Neo.Cryptography.ECC.ECPoint})
  name: CreateMultiSigContract(int, IReadOnlyCollection<ECPoint>)
  href: api/Neo.SmartContract.Contract.html#Neo_SmartContract_Contract_CreateMultiSigContract_System_Int32_System_Collections_Generic_IReadOnlyCollection_Neo_Cryptography_ECC_ECPoint__
  commentId: M:Neo.SmartContract.Contract.CreateMultiSigContract(System.Int32,System.Collections.Generic.IReadOnlyCollection{Neo.Cryptography.ECC.ECPoint})
  name.vb: CreateMultiSigContract(Integer, IReadOnlyCollection(Of ECPoint))
  fullName: Neo.SmartContract.Contract.CreateMultiSigContract(int, System.Collections.Generic.IReadOnlyCollection<Neo.Cryptography.ECC.ECPoint>)
  fullName.vb: Neo.SmartContract.Contract.CreateMultiSigContract(Integer, System.Collections.Generic.IReadOnlyCollection(Of Neo.Cryptography.ECC.ECPoint))
  nameWithType: Contract.CreateMultiSigContract(int, IReadOnlyCollection<ECPoint>)
  nameWithType.vb: Contract.CreateMultiSigContract(Integer, IReadOnlyCollection(Of ECPoint))
- uid: Neo.SmartContract.Contract.CreateMultiSigContract*
  name: CreateMultiSigContract
  href: api/Neo.SmartContract.Contract.html#Neo_SmartContract_Contract_CreateMultiSigContract_
  commentId: Overload:Neo.SmartContract.Contract.CreateMultiSigContract
  isSpec: "True"
  fullName: Neo.SmartContract.Contract.CreateMultiSigContract
  nameWithType: Contract.CreateMultiSigContract
- uid: Neo.SmartContract.Contract.CreateMultiSigRedeemScript(System.Int32,System.Collections.Generic.IReadOnlyCollection{Neo.Cryptography.ECC.ECPoint})
  name: CreateMultiSigRedeemScript(int, IReadOnlyCollection<ECPoint>)
  href: api/Neo.SmartContract.Contract.html#Neo_SmartContract_Contract_CreateMultiSigRedeemScript_System_Int32_System_Collections_Generic_IReadOnlyCollection_Neo_Cryptography_ECC_ECPoint__
  commentId: M:Neo.SmartContract.Contract.CreateMultiSigRedeemScript(System.Int32,System.Collections.Generic.IReadOnlyCollection{Neo.Cryptography.ECC.ECPoint})
  name.vb: CreateMultiSigRedeemScript(Integer, IReadOnlyCollection(Of ECPoint))
  fullName: Neo.SmartContract.Contract.CreateMultiSigRedeemScript(int, System.Collections.Generic.IReadOnlyCollection<Neo.Cryptography.ECC.ECPoint>)
  fullName.vb: Neo.SmartContract.Contract.CreateMultiSigRedeemScript(Integer, System.Collections.Generic.IReadOnlyCollection(Of Neo.Cryptography.ECC.ECPoint))
  nameWithType: Contract.CreateMultiSigRedeemScript(int, IReadOnlyCollection<ECPoint>)
  nameWithType.vb: Contract.CreateMultiSigRedeemScript(Integer, IReadOnlyCollection(Of ECPoint))
- uid: Neo.SmartContract.Contract.CreateMultiSigRedeemScript*
  name: CreateMultiSigRedeemScript
  href: api/Neo.SmartContract.Contract.html#Neo_SmartContract_Contract_CreateMultiSigRedeemScript_
  commentId: Overload:Neo.SmartContract.Contract.CreateMultiSigRedeemScript
  isSpec: "True"
  fullName: Neo.SmartContract.Contract.CreateMultiSigRedeemScript
  nameWithType: Contract.CreateMultiSigRedeemScript
- uid: Neo.SmartContract.Contract.CreateSignatureContract(Neo.Cryptography.ECC.ECPoint)
  name: CreateSignatureContract(ECPoint)
  href: api/Neo.SmartContract.Contract.html#Neo_SmartContract_Contract_CreateSignatureContract_Neo_Cryptography_ECC_ECPoint_
  commentId: M:Neo.SmartContract.Contract.CreateSignatureContract(Neo.Cryptography.ECC.ECPoint)
  fullName: Neo.SmartContract.Contract.CreateSignatureContract(Neo.Cryptography.ECC.ECPoint)
  nameWithType: Contract.CreateSignatureContract(ECPoint)
- uid: Neo.SmartContract.Contract.CreateSignatureContract*
  name: CreateSignatureContract
  href: api/Neo.SmartContract.Contract.html#Neo_SmartContract_Contract_CreateSignatureContract_
  commentId: Overload:Neo.SmartContract.Contract.CreateSignatureContract
  isSpec: "True"
  fullName: Neo.SmartContract.Contract.CreateSignatureContract
  nameWithType: Contract.CreateSignatureContract
- uid: Neo.SmartContract.Contract.CreateSignatureRedeemScript(Neo.Cryptography.ECC.ECPoint)
  name: CreateSignatureRedeemScript(ECPoint)
  href: api/Neo.SmartContract.Contract.html#Neo_SmartContract_Contract_CreateSignatureRedeemScript_Neo_Cryptography_ECC_ECPoint_
  commentId: M:Neo.SmartContract.Contract.CreateSignatureRedeemScript(Neo.Cryptography.ECC.ECPoint)
  fullName: Neo.SmartContract.Contract.CreateSignatureRedeemScript(Neo.Cryptography.ECC.ECPoint)
  nameWithType: Contract.CreateSignatureRedeemScript(ECPoint)
- uid: Neo.SmartContract.Contract.CreateSignatureRedeemScript*
  name: CreateSignatureRedeemScript
  href: api/Neo.SmartContract.Contract.html#Neo_SmartContract_Contract_CreateSignatureRedeemScript_
  commentId: Overload:Neo.SmartContract.Contract.CreateSignatureRedeemScript
  isSpec: "True"
  fullName: Neo.SmartContract.Contract.CreateSignatureRedeemScript
  nameWithType: Contract.CreateSignatureRedeemScript
- uid: Neo.SmartContract.Contract.GetBFTAddress(System.Collections.Generic.IReadOnlyCollection{Neo.Cryptography.ECC.ECPoint})
  name: GetBFTAddress(IReadOnlyCollection<ECPoint>)
  href: api/Neo.SmartContract.Contract.html#Neo_SmartContract_Contract_GetBFTAddress_System_Collections_Generic_IReadOnlyCollection_Neo_Cryptography_ECC_ECPoint__
  commentId: M:Neo.SmartContract.Contract.GetBFTAddress(System.Collections.Generic.IReadOnlyCollection{Neo.Cryptography.ECC.ECPoint})
  name.vb: GetBFTAddress(IReadOnlyCollection(Of ECPoint))
  fullName: Neo.SmartContract.Contract.GetBFTAddress(System.Collections.Generic.IReadOnlyCollection<Neo.Cryptography.ECC.ECPoint>)
  fullName.vb: Neo.SmartContract.Contract.GetBFTAddress(System.Collections.Generic.IReadOnlyCollection(Of Neo.Cryptography.ECC.ECPoint))
  nameWithType: Contract.GetBFTAddress(IReadOnlyCollection<ECPoint>)
  nameWithType.vb: Contract.GetBFTAddress(IReadOnlyCollection(Of ECPoint))
- uid: Neo.SmartContract.Contract.GetBFTAddress*
  name: GetBFTAddress
  href: api/Neo.SmartContract.Contract.html#Neo_SmartContract_Contract_GetBFTAddress_
  commentId: Overload:Neo.SmartContract.Contract.GetBFTAddress
  isSpec: "True"
  fullName: Neo.SmartContract.Contract.GetBFTAddress
  nameWithType: Contract.GetBFTAddress
- uid: Neo.SmartContract.Contract.ParameterList
  name: ParameterList
  href: api/Neo.SmartContract.Contract.html#Neo_SmartContract_Contract_ParameterList
  commentId: F:Neo.SmartContract.Contract.ParameterList
  fullName: Neo.SmartContract.Contract.ParameterList
  nameWithType: Contract.ParameterList
- uid: Neo.SmartContract.Contract.Script
  name: Script
  href: api/Neo.SmartContract.Contract.html#Neo_SmartContract_Contract_Script
  commentId: F:Neo.SmartContract.Contract.Script
  fullName: Neo.SmartContract.Contract.Script
  nameWithType: Contract.Script
- uid: Neo.SmartContract.Contract.ScriptHash
  name: ScriptHash
  href: api/Neo.SmartContract.Contract.html#Neo_SmartContract_Contract_ScriptHash
  commentId: P:Neo.SmartContract.Contract.ScriptHash
  fullName: Neo.SmartContract.Contract.ScriptHash
  nameWithType: Contract.ScriptHash
- uid: Neo.SmartContract.Contract.ScriptHash*
  name: ScriptHash
  href: api/Neo.SmartContract.Contract.html#Neo_SmartContract_Contract_ScriptHash_
  commentId: Overload:Neo.SmartContract.Contract.ScriptHash
  isSpec: "True"
  fullName: Neo.SmartContract.Contract.ScriptHash
  nameWithType: Contract.ScriptHash
- uid: Neo.SmartContract.ContractParameter
  name: ContractParameter
  href: api/Neo.SmartContract.ContractParameter.html
  commentId: T:Neo.SmartContract.ContractParameter
  fullName: Neo.SmartContract.ContractParameter
  nameWithType: ContractParameter
- uid: Neo.SmartContract.ContractParameter.#ctor
  name: ContractParameter()
  href: api/Neo.SmartContract.ContractParameter.html#Neo_SmartContract_ContractParameter__ctor
  commentId: M:Neo.SmartContract.ContractParameter.#ctor
  name.vb: New()
  fullName: Neo.SmartContract.ContractParameter.ContractParameter()
  fullName.vb: Neo.SmartContract.ContractParameter.New()
  nameWithType: ContractParameter.ContractParameter()
  nameWithType.vb: ContractParameter.New()
- uid: Neo.SmartContract.ContractParameter.#ctor(Neo.SmartContract.ContractParameterType)
  name: ContractParameter(ContractParameterType)
  href: api/Neo.SmartContract.ContractParameter.html#Neo_SmartContract_ContractParameter__ctor_Neo_SmartContract_ContractParameterType_
  commentId: M:Neo.SmartContract.ContractParameter.#ctor(Neo.SmartContract.ContractParameterType)
  name.vb: New(ContractParameterType)
  fullName: Neo.SmartContract.ContractParameter.ContractParameter(Neo.SmartContract.ContractParameterType)
  fullName.vb: Neo.SmartContract.ContractParameter.New(Neo.SmartContract.ContractParameterType)
  nameWithType: ContractParameter.ContractParameter(ContractParameterType)
  nameWithType.vb: ContractParameter.New(ContractParameterType)
- uid: Neo.SmartContract.ContractParameter.#ctor*
  name: ContractParameter
  href: api/Neo.SmartContract.ContractParameter.html#Neo_SmartContract_ContractParameter__ctor_
  commentId: Overload:Neo.SmartContract.ContractParameter.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.SmartContract.ContractParameter.ContractParameter
  fullName.vb: Neo.SmartContract.ContractParameter.New
  nameWithType: ContractParameter.ContractParameter
  nameWithType.vb: ContractParameter.New
- uid: Neo.SmartContract.ContractParameter.FromJson(Neo.Json.JObject)
  name: FromJson(JObject)
  href: api/Neo.SmartContract.ContractParameter.html#Neo_SmartContract_ContractParameter_FromJson_Neo_Json_JObject_
  commentId: M:Neo.SmartContract.ContractParameter.FromJson(Neo.Json.JObject)
  fullName: Neo.SmartContract.ContractParameter.FromJson(Neo.Json.JObject)
  nameWithType: ContractParameter.FromJson(JObject)
- uid: Neo.SmartContract.ContractParameter.FromJson*
  name: FromJson
  href: api/Neo.SmartContract.ContractParameter.html#Neo_SmartContract_ContractParameter_FromJson_
  commentId: Overload:Neo.SmartContract.ContractParameter.FromJson
  isSpec: "True"
  fullName: Neo.SmartContract.ContractParameter.FromJson
  nameWithType: ContractParameter.FromJson
- uid: Neo.SmartContract.ContractParameter.SetValue(System.String)
  name: SetValue(string)
  href: api/Neo.SmartContract.ContractParameter.html#Neo_SmartContract_ContractParameter_SetValue_System_String_
  commentId: M:Neo.SmartContract.ContractParameter.SetValue(System.String)
  name.vb: SetValue(String)
  fullName: Neo.SmartContract.ContractParameter.SetValue(string)
  fullName.vb: Neo.SmartContract.ContractParameter.SetValue(String)
  nameWithType: ContractParameter.SetValue(string)
  nameWithType.vb: ContractParameter.SetValue(String)
- uid: Neo.SmartContract.ContractParameter.SetValue*
  name: SetValue
  href: api/Neo.SmartContract.ContractParameter.html#Neo_SmartContract_ContractParameter_SetValue_
  commentId: Overload:Neo.SmartContract.ContractParameter.SetValue
  isSpec: "True"
  fullName: Neo.SmartContract.ContractParameter.SetValue
  nameWithType: ContractParameter.SetValue
- uid: Neo.SmartContract.ContractParameter.ToJson
  name: ToJson()
  href: api/Neo.SmartContract.ContractParameter.html#Neo_SmartContract_ContractParameter_ToJson
  commentId: M:Neo.SmartContract.ContractParameter.ToJson
  fullName: Neo.SmartContract.ContractParameter.ToJson()
  nameWithType: ContractParameter.ToJson()
- uid: Neo.SmartContract.ContractParameter.ToJson*
  name: ToJson
  href: api/Neo.SmartContract.ContractParameter.html#Neo_SmartContract_ContractParameter_ToJson_
  commentId: Overload:Neo.SmartContract.ContractParameter.ToJson
  isSpec: "True"
  fullName: Neo.SmartContract.ContractParameter.ToJson
  nameWithType: ContractParameter.ToJson
- uid: Neo.SmartContract.ContractParameter.ToString
  name: ToString()
  href: api/Neo.SmartContract.ContractParameter.html#Neo_SmartContract_ContractParameter_ToString
  commentId: M:Neo.SmartContract.ContractParameter.ToString
  fullName: Neo.SmartContract.ContractParameter.ToString()
  nameWithType: ContractParameter.ToString()
- uid: Neo.SmartContract.ContractParameter.ToString*
  name: ToString
  href: api/Neo.SmartContract.ContractParameter.html#Neo_SmartContract_ContractParameter_ToString_
  commentId: Overload:Neo.SmartContract.ContractParameter.ToString
  isSpec: "True"
  fullName: Neo.SmartContract.ContractParameter.ToString
  nameWithType: ContractParameter.ToString
- uid: Neo.SmartContract.ContractParameter.Type
  name: Type
  href: api/Neo.SmartContract.ContractParameter.html#Neo_SmartContract_ContractParameter_Type
  commentId: F:Neo.SmartContract.ContractParameter.Type
  fullName: Neo.SmartContract.ContractParameter.Type
  nameWithType: ContractParameter.Type
- uid: Neo.SmartContract.ContractParameter.Value
  name: Value
  href: api/Neo.SmartContract.ContractParameter.html#Neo_SmartContract_ContractParameter_Value
  commentId: F:Neo.SmartContract.ContractParameter.Value
  fullName: Neo.SmartContract.ContractParameter.Value
  nameWithType: ContractParameter.Value
- uid: Neo.SmartContract.ContractParameterType
  name: ContractParameterType
  href: api/Neo.SmartContract.ContractParameterType.html
  commentId: T:Neo.SmartContract.ContractParameterType
  fullName: Neo.SmartContract.ContractParameterType
  nameWithType: ContractParameterType
- uid: Neo.SmartContract.ContractParameterType.Any
  name: Any
  href: api/Neo.SmartContract.ContractParameterType.html#Neo_SmartContract_ContractParameterType_Any
  commentId: F:Neo.SmartContract.ContractParameterType.Any
  fullName: Neo.SmartContract.ContractParameterType.Any
  nameWithType: ContractParameterType.Any
- uid: Neo.SmartContract.ContractParameterType.Array
  name: Array
  href: api/Neo.SmartContract.ContractParameterType.html#Neo_SmartContract_ContractParameterType_Array
  commentId: F:Neo.SmartContract.ContractParameterType.Array
  fullName: Neo.SmartContract.ContractParameterType.Array
  nameWithType: ContractParameterType.Array
- uid: Neo.SmartContract.ContractParameterType.Boolean
  name: Boolean
  href: api/Neo.SmartContract.ContractParameterType.html#Neo_SmartContract_ContractParameterType_Boolean
  commentId: F:Neo.SmartContract.ContractParameterType.Boolean
  fullName: Neo.SmartContract.ContractParameterType.Boolean
  nameWithType: ContractParameterType.Boolean
- uid: Neo.SmartContract.ContractParameterType.ByteArray
  name: ByteArray
  href: api/Neo.SmartContract.ContractParameterType.html#Neo_SmartContract_ContractParameterType_ByteArray
  commentId: F:Neo.SmartContract.ContractParameterType.ByteArray
  fullName: Neo.SmartContract.ContractParameterType.ByteArray
  nameWithType: ContractParameterType.ByteArray
- uid: Neo.SmartContract.ContractParameterType.Hash160
  name: Hash160
  href: api/Neo.SmartContract.ContractParameterType.html#Neo_SmartContract_ContractParameterType_Hash160
  commentId: F:Neo.SmartContract.ContractParameterType.Hash160
  fullName: Neo.SmartContract.ContractParameterType.Hash160
  nameWithType: ContractParameterType.Hash160
- uid: Neo.SmartContract.ContractParameterType.Hash256
  name: Hash256
  href: api/Neo.SmartContract.ContractParameterType.html#Neo_SmartContract_ContractParameterType_Hash256
  commentId: F:Neo.SmartContract.ContractParameterType.Hash256
  fullName: Neo.SmartContract.ContractParameterType.Hash256
  nameWithType: ContractParameterType.Hash256
- uid: Neo.SmartContract.ContractParameterType.Integer
  name: Integer
  href: api/Neo.SmartContract.ContractParameterType.html#Neo_SmartContract_ContractParameterType_Integer
  commentId: F:Neo.SmartContract.ContractParameterType.Integer
  fullName: Neo.SmartContract.ContractParameterType.Integer
  nameWithType: ContractParameterType.Integer
- uid: Neo.SmartContract.ContractParameterType.InteropInterface
  name: InteropInterface
  href: api/Neo.SmartContract.ContractParameterType.html#Neo_SmartContract_ContractParameterType_InteropInterface
  commentId: F:Neo.SmartContract.ContractParameterType.InteropInterface
  fullName: Neo.SmartContract.ContractParameterType.InteropInterface
  nameWithType: ContractParameterType.InteropInterface
- uid: Neo.SmartContract.ContractParameterType.Map
  name: Map
  href: api/Neo.SmartContract.ContractParameterType.html#Neo_SmartContract_ContractParameterType_Map
  commentId: F:Neo.SmartContract.ContractParameterType.Map
  fullName: Neo.SmartContract.ContractParameterType.Map
  nameWithType: ContractParameterType.Map
- uid: Neo.SmartContract.ContractParameterType.PublicKey
  name: PublicKey
  href: api/Neo.SmartContract.ContractParameterType.html#Neo_SmartContract_ContractParameterType_PublicKey
  commentId: F:Neo.SmartContract.ContractParameterType.PublicKey
  fullName: Neo.SmartContract.ContractParameterType.PublicKey
  nameWithType: ContractParameterType.PublicKey
- uid: Neo.SmartContract.ContractParameterType.Signature
  name: Signature
  href: api/Neo.SmartContract.ContractParameterType.html#Neo_SmartContract_ContractParameterType_Signature
  commentId: F:Neo.SmartContract.ContractParameterType.Signature
  fullName: Neo.SmartContract.ContractParameterType.Signature
  nameWithType: ContractParameterType.Signature
- uid: Neo.SmartContract.ContractParameterType.String
  name: String
  href: api/Neo.SmartContract.ContractParameterType.html#Neo_SmartContract_ContractParameterType_String
  commentId: F:Neo.SmartContract.ContractParameterType.String
  fullName: Neo.SmartContract.ContractParameterType.String
  nameWithType: ContractParameterType.String
- uid: Neo.SmartContract.ContractParameterType.Void
  name: Void
  href: api/Neo.SmartContract.ContractParameterType.html#Neo_SmartContract_ContractParameterType_Void
  commentId: F:Neo.SmartContract.ContractParameterType.Void
  fullName: Neo.SmartContract.ContractParameterType.Void
  nameWithType: ContractParameterType.Void
- uid: Neo.SmartContract.ContractParametersContext
  name: ContractParametersContext
  href: api/Neo.SmartContract.ContractParametersContext.html
  commentId: T:Neo.SmartContract.ContractParametersContext
  fullName: Neo.SmartContract.ContractParametersContext
  nameWithType: ContractParametersContext
- uid: Neo.SmartContract.ContractParametersContext.#ctor(Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.IVerifiable,System.UInt32)
  name: ContractParametersContext(DataCache, IVerifiable, uint)
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext__ctor_Neo_Persistence_DataCache_Neo_Network_P2P_Payloads_IVerifiable_System_UInt32_
  commentId: M:Neo.SmartContract.ContractParametersContext.#ctor(Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.IVerifiable,System.UInt32)
  name.vb: New(DataCache, IVerifiable, UInteger)
  fullName: Neo.SmartContract.ContractParametersContext.ContractParametersContext(Neo.Persistence.DataCache, Neo.Network.P2P.Payloads.IVerifiable, uint)
  fullName.vb: Neo.SmartContract.ContractParametersContext.New(Neo.Persistence.DataCache, Neo.Network.P2P.Payloads.IVerifiable, UInteger)
  nameWithType: ContractParametersContext.ContractParametersContext(DataCache, IVerifiable, uint)
  nameWithType.vb: ContractParametersContext.New(DataCache, IVerifiable, UInteger)
- uid: Neo.SmartContract.ContractParametersContext.#ctor*
  name: ContractParametersContext
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext__ctor_
  commentId: Overload:Neo.SmartContract.ContractParametersContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.SmartContract.ContractParametersContext.ContractParametersContext
  fullName.vb: Neo.SmartContract.ContractParametersContext.New
  nameWithType: ContractParametersContext.ContractParametersContext
  nameWithType.vb: ContractParametersContext.New
- uid: Neo.SmartContract.ContractParametersContext.Add(Neo.SmartContract.Contract,System.Int32,System.Object)
  name: Add(Contract, int, object)
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_Add_Neo_SmartContract_Contract_System_Int32_System_Object_
  commentId: M:Neo.SmartContract.ContractParametersContext.Add(Neo.SmartContract.Contract,System.Int32,System.Object)
  name.vb: Add(Contract, Integer, Object)
  fullName: Neo.SmartContract.ContractParametersContext.Add(Neo.SmartContract.Contract, int, object)
  fullName.vb: Neo.SmartContract.ContractParametersContext.Add(Neo.SmartContract.Contract, Integer, Object)
  nameWithType: ContractParametersContext.Add(Contract, int, object)
  nameWithType.vb: ContractParametersContext.Add(Contract, Integer, Object)
- uid: Neo.SmartContract.ContractParametersContext.Add(Neo.SmartContract.Contract,System.Object[])
  name: Add(Contract, params object[])
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_Add_Neo_SmartContract_Contract_System_Object___
  commentId: M:Neo.SmartContract.ContractParametersContext.Add(Neo.SmartContract.Contract,System.Object[])
  name.vb: Add(Contract, ParamArray Object())
  fullName: Neo.SmartContract.ContractParametersContext.Add(Neo.SmartContract.Contract, params object[])
  fullName.vb: Neo.SmartContract.ContractParametersContext.Add(Neo.SmartContract.Contract, ParamArray Object())
  nameWithType: ContractParametersContext.Add(Contract, params object[])
  nameWithType.vb: ContractParametersContext.Add(Contract, ParamArray Object())
- uid: Neo.SmartContract.ContractParametersContext.Add*
  name: Add
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_Add_
  commentId: Overload:Neo.SmartContract.ContractParametersContext.Add
  isSpec: "True"
  fullName: Neo.SmartContract.ContractParametersContext.Add
  nameWithType: ContractParametersContext.Add
- uid: Neo.SmartContract.ContractParametersContext.AddSignature(Neo.SmartContract.Contract,Neo.Cryptography.ECC.ECPoint,System.Byte[])
  name: AddSignature(Contract, ECPoint, byte[])
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_AddSignature_Neo_SmartContract_Contract_Neo_Cryptography_ECC_ECPoint_System_Byte___
  commentId: M:Neo.SmartContract.ContractParametersContext.AddSignature(Neo.SmartContract.Contract,Neo.Cryptography.ECC.ECPoint,System.Byte[])
  name.vb: AddSignature(Contract, ECPoint, Byte())
  fullName: Neo.SmartContract.ContractParametersContext.AddSignature(Neo.SmartContract.Contract, Neo.Cryptography.ECC.ECPoint, byte[])
  fullName.vb: Neo.SmartContract.ContractParametersContext.AddSignature(Neo.SmartContract.Contract, Neo.Cryptography.ECC.ECPoint, Byte())
  nameWithType: ContractParametersContext.AddSignature(Contract, ECPoint, byte[])
  nameWithType.vb: ContractParametersContext.AddSignature(Contract, ECPoint, Byte())
- uid: Neo.SmartContract.ContractParametersContext.AddSignature*
  name: AddSignature
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_AddSignature_
  commentId: Overload:Neo.SmartContract.ContractParametersContext.AddSignature
  isSpec: "True"
  fullName: Neo.SmartContract.ContractParametersContext.AddSignature
  nameWithType: ContractParametersContext.AddSignature
- uid: Neo.SmartContract.ContractParametersContext.Completed
  name: Completed
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_Completed
  commentId: P:Neo.SmartContract.ContractParametersContext.Completed
  fullName: Neo.SmartContract.ContractParametersContext.Completed
  nameWithType: ContractParametersContext.Completed
- uid: Neo.SmartContract.ContractParametersContext.Completed*
  name: Completed
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_Completed_
  commentId: Overload:Neo.SmartContract.ContractParametersContext.Completed
  isSpec: "True"
  fullName: Neo.SmartContract.ContractParametersContext.Completed
  nameWithType: ContractParametersContext.Completed
- uid: Neo.SmartContract.ContractParametersContext.FromJson(Neo.Json.JObject,Neo.Persistence.DataCache)
  name: FromJson(JObject, DataCache)
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_FromJson_Neo_Json_JObject_Neo_Persistence_DataCache_
  commentId: M:Neo.SmartContract.ContractParametersContext.FromJson(Neo.Json.JObject,Neo.Persistence.DataCache)
  fullName: Neo.SmartContract.ContractParametersContext.FromJson(Neo.Json.JObject, Neo.Persistence.DataCache)
  nameWithType: ContractParametersContext.FromJson(JObject, DataCache)
- uid: Neo.SmartContract.ContractParametersContext.FromJson*
  name: FromJson
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_FromJson_
  commentId: Overload:Neo.SmartContract.ContractParametersContext.FromJson
  isSpec: "True"
  fullName: Neo.SmartContract.ContractParametersContext.FromJson
  nameWithType: ContractParametersContext.FromJson
- uid: Neo.SmartContract.ContractParametersContext.GetParameter(Neo.UInt160,System.Int32)
  name: GetParameter(UInt160, int)
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_GetParameter_Neo_UInt160_System_Int32_
  commentId: M:Neo.SmartContract.ContractParametersContext.GetParameter(Neo.UInt160,System.Int32)
  name.vb: GetParameter(UInt160, Integer)
  fullName: Neo.SmartContract.ContractParametersContext.GetParameter(Neo.UInt160, int)
  fullName.vb: Neo.SmartContract.ContractParametersContext.GetParameter(Neo.UInt160, Integer)
  nameWithType: ContractParametersContext.GetParameter(UInt160, int)
  nameWithType.vb: ContractParametersContext.GetParameter(UInt160, Integer)
- uid: Neo.SmartContract.ContractParametersContext.GetParameter*
  name: GetParameter
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_GetParameter_
  commentId: Overload:Neo.SmartContract.ContractParametersContext.GetParameter
  isSpec: "True"
  fullName: Neo.SmartContract.ContractParametersContext.GetParameter
  nameWithType: ContractParametersContext.GetParameter
- uid: Neo.SmartContract.ContractParametersContext.GetParameters(Neo.UInt160)
  name: GetParameters(UInt160)
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_GetParameters_Neo_UInt160_
  commentId: M:Neo.SmartContract.ContractParametersContext.GetParameters(Neo.UInt160)
  fullName: Neo.SmartContract.ContractParametersContext.GetParameters(Neo.UInt160)
  nameWithType: ContractParametersContext.GetParameters(UInt160)
- uid: Neo.SmartContract.ContractParametersContext.GetParameters*
  name: GetParameters
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_GetParameters_
  commentId: Overload:Neo.SmartContract.ContractParametersContext.GetParameters
  isSpec: "True"
  fullName: Neo.SmartContract.ContractParametersContext.GetParameters
  nameWithType: ContractParametersContext.GetParameters
- uid: Neo.SmartContract.ContractParametersContext.GetScript(Neo.UInt160)
  name: GetScript(UInt160)
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_GetScript_Neo_UInt160_
  commentId: M:Neo.SmartContract.ContractParametersContext.GetScript(Neo.UInt160)
  fullName: Neo.SmartContract.ContractParametersContext.GetScript(Neo.UInt160)
  nameWithType: ContractParametersContext.GetScript(UInt160)
- uid: Neo.SmartContract.ContractParametersContext.GetScript*
  name: GetScript
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_GetScript_
  commentId: Overload:Neo.SmartContract.ContractParametersContext.GetScript
  isSpec: "True"
  fullName: Neo.SmartContract.ContractParametersContext.GetScript
  nameWithType: ContractParametersContext.GetScript
- uid: Neo.SmartContract.ContractParametersContext.GetSignatures(Neo.UInt160)
  name: GetSignatures(UInt160)
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_GetSignatures_Neo_UInt160_
  commentId: M:Neo.SmartContract.ContractParametersContext.GetSignatures(Neo.UInt160)
  fullName: Neo.SmartContract.ContractParametersContext.GetSignatures(Neo.UInt160)
  nameWithType: ContractParametersContext.GetSignatures(UInt160)
- uid: Neo.SmartContract.ContractParametersContext.GetSignatures*
  name: GetSignatures
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_GetSignatures_
  commentId: Overload:Neo.SmartContract.ContractParametersContext.GetSignatures
  isSpec: "True"
  fullName: Neo.SmartContract.ContractParametersContext.GetSignatures
  nameWithType: ContractParametersContext.GetSignatures
- uid: Neo.SmartContract.ContractParametersContext.GetWitnesses
  name: GetWitnesses()
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_GetWitnesses
  commentId: M:Neo.SmartContract.ContractParametersContext.GetWitnesses
  fullName: Neo.SmartContract.ContractParametersContext.GetWitnesses()
  nameWithType: ContractParametersContext.GetWitnesses()
- uid: Neo.SmartContract.ContractParametersContext.GetWitnesses*
  name: GetWitnesses
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_GetWitnesses_
  commentId: Overload:Neo.SmartContract.ContractParametersContext.GetWitnesses
  isSpec: "True"
  fullName: Neo.SmartContract.ContractParametersContext.GetWitnesses
  nameWithType: ContractParametersContext.GetWitnesses
- uid: Neo.SmartContract.ContractParametersContext.Network
  name: Network
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_Network
  commentId: F:Neo.SmartContract.ContractParametersContext.Network
  fullName: Neo.SmartContract.ContractParametersContext.Network
  nameWithType: ContractParametersContext.Network
- uid: Neo.SmartContract.ContractParametersContext.Parse(System.String,Neo.Persistence.DataCache)
  name: Parse(string, DataCache)
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_Parse_System_String_Neo_Persistence_DataCache_
  commentId: M:Neo.SmartContract.ContractParametersContext.Parse(System.String,Neo.Persistence.DataCache)
  name.vb: Parse(String, DataCache)
  fullName: Neo.SmartContract.ContractParametersContext.Parse(string, Neo.Persistence.DataCache)
  fullName.vb: Neo.SmartContract.ContractParametersContext.Parse(String, Neo.Persistence.DataCache)
  nameWithType: ContractParametersContext.Parse(string, DataCache)
  nameWithType.vb: ContractParametersContext.Parse(String, DataCache)
- uid: Neo.SmartContract.ContractParametersContext.Parse*
  name: Parse
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_Parse_
  commentId: Overload:Neo.SmartContract.ContractParametersContext.Parse
  isSpec: "True"
  fullName: Neo.SmartContract.ContractParametersContext.Parse
  nameWithType: ContractParametersContext.Parse
- uid: Neo.SmartContract.ContractParametersContext.ScriptHashes
  name: ScriptHashes
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_ScriptHashes
  commentId: P:Neo.SmartContract.ContractParametersContext.ScriptHashes
  fullName: Neo.SmartContract.ContractParametersContext.ScriptHashes
  nameWithType: ContractParametersContext.ScriptHashes
- uid: Neo.SmartContract.ContractParametersContext.ScriptHashes*
  name: ScriptHashes
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_ScriptHashes_
  commentId: Overload:Neo.SmartContract.ContractParametersContext.ScriptHashes
  isSpec: "True"
  fullName: Neo.SmartContract.ContractParametersContext.ScriptHashes
  nameWithType: ContractParametersContext.ScriptHashes
- uid: Neo.SmartContract.ContractParametersContext.Snapshot
  name: Snapshot
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_Snapshot
  commentId: F:Neo.SmartContract.ContractParametersContext.Snapshot
  fullName: Neo.SmartContract.ContractParametersContext.Snapshot
  nameWithType: ContractParametersContext.Snapshot
- uid: Neo.SmartContract.ContractParametersContext.ToJson
  name: ToJson()
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_ToJson
  commentId: M:Neo.SmartContract.ContractParametersContext.ToJson
  fullName: Neo.SmartContract.ContractParametersContext.ToJson()
  nameWithType: ContractParametersContext.ToJson()
- uid: Neo.SmartContract.ContractParametersContext.ToJson*
  name: ToJson
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_ToJson_
  commentId: Overload:Neo.SmartContract.ContractParametersContext.ToJson
  isSpec: "True"
  fullName: Neo.SmartContract.ContractParametersContext.ToJson
  nameWithType: ContractParametersContext.ToJson
- uid: Neo.SmartContract.ContractParametersContext.ToString
  name: ToString()
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_ToString
  commentId: M:Neo.SmartContract.ContractParametersContext.ToString
  fullName: Neo.SmartContract.ContractParametersContext.ToString()
  nameWithType: ContractParametersContext.ToString()
- uid: Neo.SmartContract.ContractParametersContext.ToString*
  name: ToString
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_ToString_
  commentId: Overload:Neo.SmartContract.ContractParametersContext.ToString
  isSpec: "True"
  fullName: Neo.SmartContract.ContractParametersContext.ToString
  nameWithType: ContractParametersContext.ToString
- uid: Neo.SmartContract.ContractParametersContext.Verifiable
  name: Verifiable
  href: api/Neo.SmartContract.ContractParametersContext.html#Neo_SmartContract_ContractParametersContext_Verifiable
  commentId: F:Neo.SmartContract.ContractParametersContext.Verifiable
  fullName: Neo.SmartContract.ContractParametersContext.Verifiable
  nameWithType: ContractParametersContext.Verifiable
- uid: Neo.SmartContract.ContractState
  name: ContractState
  href: api/Neo.SmartContract.ContractState.html
  commentId: T:Neo.SmartContract.ContractState
  fullName: Neo.SmartContract.ContractState
  nameWithType: ContractState
- uid: Neo.SmartContract.ContractState.CanCall(Neo.SmartContract.ContractState,System.String)
  name: CanCall(ContractState, string)
  href: api/Neo.SmartContract.ContractState.html#Neo_SmartContract_ContractState_CanCall_Neo_SmartContract_ContractState_System_String_
  commentId: M:Neo.SmartContract.ContractState.CanCall(Neo.SmartContract.ContractState,System.String)
  name.vb: CanCall(ContractState, String)
  fullName: Neo.SmartContract.ContractState.CanCall(Neo.SmartContract.ContractState, string)
  fullName.vb: Neo.SmartContract.ContractState.CanCall(Neo.SmartContract.ContractState, String)
  nameWithType: ContractState.CanCall(ContractState, string)
  nameWithType.vb: ContractState.CanCall(ContractState, String)
- uid: Neo.SmartContract.ContractState.CanCall*
  name: CanCall
  href: api/Neo.SmartContract.ContractState.html#Neo_SmartContract_ContractState_CanCall_
  commentId: Overload:Neo.SmartContract.ContractState.CanCall
  isSpec: "True"
  fullName: Neo.SmartContract.ContractState.CanCall
  nameWithType: ContractState.CanCall
- uid: Neo.SmartContract.ContractState.Hash
  name: Hash
  href: api/Neo.SmartContract.ContractState.html#Neo_SmartContract_ContractState_Hash
  commentId: F:Neo.SmartContract.ContractState.Hash
  fullName: Neo.SmartContract.ContractState.Hash
  nameWithType: ContractState.Hash
- uid: Neo.SmartContract.ContractState.Id
  name: Id
  href: api/Neo.SmartContract.ContractState.html#Neo_SmartContract_ContractState_Id
  commentId: F:Neo.SmartContract.ContractState.Id
  fullName: Neo.SmartContract.ContractState.Id
  nameWithType: ContractState.Id
- uid: Neo.SmartContract.ContractState.Manifest
  name: Manifest
  href: api/Neo.SmartContract.ContractState.html#Neo_SmartContract_ContractState_Manifest
  commentId: F:Neo.SmartContract.ContractState.Manifest
  fullName: Neo.SmartContract.ContractState.Manifest
  nameWithType: ContractState.Manifest
- uid: Neo.SmartContract.ContractState.Nef
  name: Nef
  href: api/Neo.SmartContract.ContractState.html#Neo_SmartContract_ContractState_Nef
  commentId: F:Neo.SmartContract.ContractState.Nef
  fullName: Neo.SmartContract.ContractState.Nef
  nameWithType: ContractState.Nef
- uid: Neo.SmartContract.ContractState.Script
  name: Script
  href: api/Neo.SmartContract.ContractState.html#Neo_SmartContract_ContractState_Script
  commentId: P:Neo.SmartContract.ContractState.Script
  fullName: Neo.SmartContract.ContractState.Script
  nameWithType: ContractState.Script
- uid: Neo.SmartContract.ContractState.Script*
  name: Script
  href: api/Neo.SmartContract.ContractState.html#Neo_SmartContract_ContractState_Script_
  commentId: Overload:Neo.SmartContract.ContractState.Script
  isSpec: "True"
  fullName: Neo.SmartContract.ContractState.Script
  nameWithType: ContractState.Script
- uid: Neo.SmartContract.ContractState.ToJson
  name: ToJson()
  href: api/Neo.SmartContract.ContractState.html#Neo_SmartContract_ContractState_ToJson
  commentId: M:Neo.SmartContract.ContractState.ToJson
  fullName: Neo.SmartContract.ContractState.ToJson()
  nameWithType: ContractState.ToJson()
- uid: Neo.SmartContract.ContractState.ToJson*
  name: ToJson
  href: api/Neo.SmartContract.ContractState.html#Neo_SmartContract_ContractState_ToJson_
  commentId: Overload:Neo.SmartContract.ContractState.ToJson
  isSpec: "True"
  fullName: Neo.SmartContract.ContractState.ToJson
  nameWithType: ContractState.ToJson
- uid: Neo.SmartContract.ContractState.ToStackItem(Neo.VM.ReferenceCounter)
  name: ToStackItem(ReferenceCounter)
  href: api/Neo.SmartContract.ContractState.html#Neo_SmartContract_ContractState_ToStackItem_Neo_VM_ReferenceCounter_
  commentId: M:Neo.SmartContract.ContractState.ToStackItem(Neo.VM.ReferenceCounter)
  fullName: Neo.SmartContract.ContractState.ToStackItem(Neo.VM.ReferenceCounter)
  nameWithType: ContractState.ToStackItem(ReferenceCounter)
- uid: Neo.SmartContract.ContractState.ToStackItem*
  name: ToStackItem
  href: api/Neo.SmartContract.ContractState.html#Neo_SmartContract_ContractState_ToStackItem_
  commentId: Overload:Neo.SmartContract.ContractState.ToStackItem
  isSpec: "True"
  fullName: Neo.SmartContract.ContractState.ToStackItem
  nameWithType: ContractState.ToStackItem
- uid: Neo.SmartContract.ContractState.UpdateCounter
  name: UpdateCounter
  href: api/Neo.SmartContract.ContractState.html#Neo_SmartContract_ContractState_UpdateCounter
  commentId: F:Neo.SmartContract.ContractState.UpdateCounter
  fullName: Neo.SmartContract.ContractState.UpdateCounter
  nameWithType: ContractState.UpdateCounter
- uid: Neo.SmartContract.DeployedContract
  name: DeployedContract
  href: api/Neo.SmartContract.DeployedContract.html
  commentId: T:Neo.SmartContract.DeployedContract
  fullName: Neo.SmartContract.DeployedContract
  nameWithType: DeployedContract
- uid: Neo.SmartContract.DeployedContract.#ctor(Neo.SmartContract.ContractState)
  name: DeployedContract(ContractState)
  href: api/Neo.SmartContract.DeployedContract.html#Neo_SmartContract_DeployedContract__ctor_Neo_SmartContract_ContractState_
  commentId: M:Neo.SmartContract.DeployedContract.#ctor(Neo.SmartContract.ContractState)
  name.vb: New(ContractState)
  fullName: Neo.SmartContract.DeployedContract.DeployedContract(Neo.SmartContract.ContractState)
  fullName.vb: Neo.SmartContract.DeployedContract.New(Neo.SmartContract.ContractState)
  nameWithType: DeployedContract.DeployedContract(ContractState)
  nameWithType.vb: DeployedContract.New(ContractState)
- uid: Neo.SmartContract.DeployedContract.#ctor*
  name: DeployedContract
  href: api/Neo.SmartContract.DeployedContract.html#Neo_SmartContract_DeployedContract__ctor_
  commentId: Overload:Neo.SmartContract.DeployedContract.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.SmartContract.DeployedContract.DeployedContract
  fullName.vb: Neo.SmartContract.DeployedContract.New
  nameWithType: DeployedContract.DeployedContract
  nameWithType.vb: DeployedContract.New
- uid: Neo.SmartContract.DeployedContract.ScriptHash
  name: ScriptHash
  href: api/Neo.SmartContract.DeployedContract.html#Neo_SmartContract_DeployedContract_ScriptHash
  commentId: P:Neo.SmartContract.DeployedContract.ScriptHash
  fullName: Neo.SmartContract.DeployedContract.ScriptHash
  nameWithType: DeployedContract.ScriptHash
- uid: Neo.SmartContract.DeployedContract.ScriptHash*
  name: ScriptHash
  href: api/Neo.SmartContract.DeployedContract.html#Neo_SmartContract_DeployedContract_ScriptHash_
  commentId: Overload:Neo.SmartContract.DeployedContract.ScriptHash
  isSpec: "True"
  fullName: Neo.SmartContract.DeployedContract.ScriptHash
  nameWithType: DeployedContract.ScriptHash
- uid: Neo.SmartContract.ExecutionContextState
  name: ExecutionContextState
  href: api/Neo.SmartContract.ExecutionContextState.html
  commentId: T:Neo.SmartContract.ExecutionContextState
  fullName: Neo.SmartContract.ExecutionContextState
  nameWithType: ExecutionContextState
- uid: Neo.SmartContract.ExecutionContextState.CallFlags
  name: CallFlags
  href: api/Neo.SmartContract.ExecutionContextState.html#Neo_SmartContract_ExecutionContextState_CallFlags
  commentId: P:Neo.SmartContract.ExecutionContextState.CallFlags
  fullName: Neo.SmartContract.ExecutionContextState.CallFlags
  nameWithType: ExecutionContextState.CallFlags
- uid: Neo.SmartContract.ExecutionContextState.CallFlags*
  name: CallFlags
  href: api/Neo.SmartContract.ExecutionContextState.html#Neo_SmartContract_ExecutionContextState_CallFlags_
  commentId: Overload:Neo.SmartContract.ExecutionContextState.CallFlags
  isSpec: "True"
  fullName: Neo.SmartContract.ExecutionContextState.CallFlags
  nameWithType: ExecutionContextState.CallFlags
- uid: Neo.SmartContract.ExecutionContextState.CallingContext
  name: CallingContext
  href: api/Neo.SmartContract.ExecutionContextState.html#Neo_SmartContract_ExecutionContextState_CallingContext
  commentId: P:Neo.SmartContract.ExecutionContextState.CallingContext
  fullName: Neo.SmartContract.ExecutionContextState.CallingContext
  nameWithType: ExecutionContextState.CallingContext
- uid: Neo.SmartContract.ExecutionContextState.CallingContext*
  name: CallingContext
  href: api/Neo.SmartContract.ExecutionContextState.html#Neo_SmartContract_ExecutionContextState_CallingContext_
  commentId: Overload:Neo.SmartContract.ExecutionContextState.CallingContext
  isSpec: "True"
  fullName: Neo.SmartContract.ExecutionContextState.CallingContext
  nameWithType: ExecutionContextState.CallingContext
- uid: Neo.SmartContract.ExecutionContextState.Contract
  name: Contract
  href: api/Neo.SmartContract.ExecutionContextState.html#Neo_SmartContract_ExecutionContextState_Contract
  commentId: P:Neo.SmartContract.ExecutionContextState.Contract
  fullName: Neo.SmartContract.ExecutionContextState.Contract
  nameWithType: ExecutionContextState.Contract
- uid: Neo.SmartContract.ExecutionContextState.Contract*
  name: Contract
  href: api/Neo.SmartContract.ExecutionContextState.html#Neo_SmartContract_ExecutionContextState_Contract_
  commentId: Overload:Neo.SmartContract.ExecutionContextState.Contract
  isSpec: "True"
  fullName: Neo.SmartContract.ExecutionContextState.Contract
  nameWithType: ExecutionContextState.Contract
- uid: Neo.SmartContract.ExecutionContextState.IsDynamicCall
  name: IsDynamicCall
  href: api/Neo.SmartContract.ExecutionContextState.html#Neo_SmartContract_ExecutionContextState_IsDynamicCall
  commentId: P:Neo.SmartContract.ExecutionContextState.IsDynamicCall
  fullName: Neo.SmartContract.ExecutionContextState.IsDynamicCall
  nameWithType: ExecutionContextState.IsDynamicCall
- uid: Neo.SmartContract.ExecutionContextState.IsDynamicCall*
  name: IsDynamicCall
  href: api/Neo.SmartContract.ExecutionContextState.html#Neo_SmartContract_ExecutionContextState_IsDynamicCall_
  commentId: Overload:Neo.SmartContract.ExecutionContextState.IsDynamicCall
  isSpec: "True"
  fullName: Neo.SmartContract.ExecutionContextState.IsDynamicCall
  nameWithType: ExecutionContextState.IsDynamicCall
- uid: Neo.SmartContract.ExecutionContextState.NotificationCount
  name: NotificationCount
  href: api/Neo.SmartContract.ExecutionContextState.html#Neo_SmartContract_ExecutionContextState_NotificationCount
  commentId: P:Neo.SmartContract.ExecutionContextState.NotificationCount
  fullName: Neo.SmartContract.ExecutionContextState.NotificationCount
  nameWithType: ExecutionContextState.NotificationCount
- uid: Neo.SmartContract.ExecutionContextState.NotificationCount*
  name: NotificationCount
  href: api/Neo.SmartContract.ExecutionContextState.html#Neo_SmartContract_ExecutionContextState_NotificationCount_
  commentId: Overload:Neo.SmartContract.ExecutionContextState.NotificationCount
  isSpec: "True"
  fullName: Neo.SmartContract.ExecutionContextState.NotificationCount
  nameWithType: ExecutionContextState.NotificationCount
- uid: Neo.SmartContract.ExecutionContextState.ScriptHash
  name: ScriptHash
  href: api/Neo.SmartContract.ExecutionContextState.html#Neo_SmartContract_ExecutionContextState_ScriptHash
  commentId: P:Neo.SmartContract.ExecutionContextState.ScriptHash
  fullName: Neo.SmartContract.ExecutionContextState.ScriptHash
  nameWithType: ExecutionContextState.ScriptHash
- uid: Neo.SmartContract.ExecutionContextState.ScriptHash*
  name: ScriptHash
  href: api/Neo.SmartContract.ExecutionContextState.html#Neo_SmartContract_ExecutionContextState_ScriptHash_
  commentId: Overload:Neo.SmartContract.ExecutionContextState.ScriptHash
  isSpec: "True"
  fullName: Neo.SmartContract.ExecutionContextState.ScriptHash
  nameWithType: ExecutionContextState.ScriptHash
- uid: Neo.SmartContract.ExecutionContextState.Snapshot
  name: Snapshot
  href: api/Neo.SmartContract.ExecutionContextState.html#Neo_SmartContract_ExecutionContextState_Snapshot
  commentId: P:Neo.SmartContract.ExecutionContextState.Snapshot
  fullName: Neo.SmartContract.ExecutionContextState.Snapshot
  nameWithType: ExecutionContextState.Snapshot
- uid: Neo.SmartContract.ExecutionContextState.Snapshot*
  name: Snapshot
  href: api/Neo.SmartContract.ExecutionContextState.html#Neo_SmartContract_ExecutionContextState_Snapshot_
  commentId: Overload:Neo.SmartContract.ExecutionContextState.Snapshot
  isSpec: "True"
  fullName: Neo.SmartContract.ExecutionContextState.Snapshot
  nameWithType: ExecutionContextState.Snapshot
- uid: Neo.SmartContract.FindOptions
  name: FindOptions
  href: api/Neo.SmartContract.FindOptions.html
  commentId: T:Neo.SmartContract.FindOptions
  fullName: Neo.SmartContract.FindOptions
  nameWithType: FindOptions
- uid: Neo.SmartContract.FindOptions.All
  name: All
  href: api/Neo.SmartContract.FindOptions.html#Neo_SmartContract_FindOptions_All
  commentId: F:Neo.SmartContract.FindOptions.All
  fullName: Neo.SmartContract.FindOptions.All
  nameWithType: FindOptions.All
- uid: Neo.SmartContract.FindOptions.Backwards
  name: Backwards
  href: api/Neo.SmartContract.FindOptions.html#Neo_SmartContract_FindOptions_Backwards
  commentId: F:Neo.SmartContract.FindOptions.Backwards
  fullName: Neo.SmartContract.FindOptions.Backwards
  nameWithType: FindOptions.Backwards
- uid: Neo.SmartContract.FindOptions.DeserializeValues
  name: DeserializeValues
  href: api/Neo.SmartContract.FindOptions.html#Neo_SmartContract_FindOptions_DeserializeValues
  commentId: F:Neo.SmartContract.FindOptions.DeserializeValues
  fullName: Neo.SmartContract.FindOptions.DeserializeValues
  nameWithType: FindOptions.DeserializeValues
- uid: Neo.SmartContract.FindOptions.KeysOnly
  name: KeysOnly
  href: api/Neo.SmartContract.FindOptions.html#Neo_SmartContract_FindOptions_KeysOnly
  commentId: F:Neo.SmartContract.FindOptions.KeysOnly
  fullName: Neo.SmartContract.FindOptions.KeysOnly
  nameWithType: FindOptions.KeysOnly
- uid: Neo.SmartContract.FindOptions.None
  name: None
  href: api/Neo.SmartContract.FindOptions.html#Neo_SmartContract_FindOptions_None
  commentId: F:Neo.SmartContract.FindOptions.None
  fullName: Neo.SmartContract.FindOptions.None
  nameWithType: FindOptions.None
- uid: Neo.SmartContract.FindOptions.PickField0
  name: PickField0
  href: api/Neo.SmartContract.FindOptions.html#Neo_SmartContract_FindOptions_PickField0
  commentId: F:Neo.SmartContract.FindOptions.PickField0
  fullName: Neo.SmartContract.FindOptions.PickField0
  nameWithType: FindOptions.PickField0
- uid: Neo.SmartContract.FindOptions.PickField1
  name: PickField1
  href: api/Neo.SmartContract.FindOptions.html#Neo_SmartContract_FindOptions_PickField1
  commentId: F:Neo.SmartContract.FindOptions.PickField1
  fullName: Neo.SmartContract.FindOptions.PickField1
  nameWithType: FindOptions.PickField1
- uid: Neo.SmartContract.FindOptions.RemovePrefix
  name: RemovePrefix
  href: api/Neo.SmartContract.FindOptions.html#Neo_SmartContract_FindOptions_RemovePrefix
  commentId: F:Neo.SmartContract.FindOptions.RemovePrefix
  fullName: Neo.SmartContract.FindOptions.RemovePrefix
  nameWithType: FindOptions.RemovePrefix
- uid: Neo.SmartContract.FindOptions.ValuesOnly
  name: ValuesOnly
  href: api/Neo.SmartContract.FindOptions.html#Neo_SmartContract_FindOptions_ValuesOnly
  commentId: F:Neo.SmartContract.FindOptions.ValuesOnly
  fullName: Neo.SmartContract.FindOptions.ValuesOnly
  nameWithType: FindOptions.ValuesOnly
- uid: Neo.SmartContract.Helper
  name: Helper
  href: api/Neo.SmartContract.Helper.html
  commentId: T:Neo.SmartContract.Helper
  fullName: Neo.SmartContract.Helper
  nameWithType: Helper
- uid: Neo.SmartContract.Helper.Check(Neo.VM.Script,Neo.SmartContract.Manifest.ContractAbi)
  name: Check(Script, ContractAbi)
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_Check_Neo_VM_Script_Neo_SmartContract_Manifest_ContractAbi_
  commentId: M:Neo.SmartContract.Helper.Check(Neo.VM.Script,Neo.SmartContract.Manifest.ContractAbi)
  fullName: Neo.SmartContract.Helper.Check(Neo.VM.Script, Neo.SmartContract.Manifest.ContractAbi)
  nameWithType: Helper.Check(Script, ContractAbi)
- uid: Neo.SmartContract.Helper.Check(System.Byte[],Neo.SmartContract.Manifest.ContractAbi)
  name: Check(byte[], ContractAbi)
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_Check_System_Byte___Neo_SmartContract_Manifest_ContractAbi_
  commentId: M:Neo.SmartContract.Helper.Check(System.Byte[],Neo.SmartContract.Manifest.ContractAbi)
  name.vb: Check(Byte(), ContractAbi)
  fullName: Neo.SmartContract.Helper.Check(byte[], Neo.SmartContract.Manifest.ContractAbi)
  fullName.vb: Neo.SmartContract.Helper.Check(Byte(), Neo.SmartContract.Manifest.ContractAbi)
  nameWithType: Helper.Check(byte[], ContractAbi)
  nameWithType.vb: Helper.Check(Byte(), ContractAbi)
- uid: Neo.SmartContract.Helper.Check*
  name: Check
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_Check_
  commentId: Overload:Neo.SmartContract.Helper.Check
  isSpec: "True"
  fullName: Neo.SmartContract.Helper.Check
  nameWithType: Helper.Check
- uid: Neo.SmartContract.Helper.GetContractHash(Neo.UInt160,System.UInt32,System.String)
  name: GetContractHash(UInt160, uint, string)
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_GetContractHash_Neo_UInt160_System_UInt32_System_String_
  commentId: M:Neo.SmartContract.Helper.GetContractHash(Neo.UInt160,System.UInt32,System.String)
  name.vb: GetContractHash(UInt160, UInteger, String)
  fullName: Neo.SmartContract.Helper.GetContractHash(Neo.UInt160, uint, string)
  fullName.vb: Neo.SmartContract.Helper.GetContractHash(Neo.UInt160, UInteger, String)
  nameWithType: Helper.GetContractHash(UInt160, uint, string)
  nameWithType.vb: Helper.GetContractHash(UInt160, UInteger, String)
- uid: Neo.SmartContract.Helper.GetContractHash*
  name: GetContractHash
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_GetContractHash_
  commentId: Overload:Neo.SmartContract.Helper.GetContractHash
  isSpec: "True"
  fullName: Neo.SmartContract.Helper.GetContractHash
  nameWithType: Helper.GetContractHash
- uid: Neo.SmartContract.Helper.GetScriptHash(Neo.VM.ExecutionContext)
  name: GetScriptHash(ExecutionContext)
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_GetScriptHash_Neo_VM_ExecutionContext_
  commentId: M:Neo.SmartContract.Helper.GetScriptHash(Neo.VM.ExecutionContext)
  fullName: Neo.SmartContract.Helper.GetScriptHash(Neo.VM.ExecutionContext)
  nameWithType: Helper.GetScriptHash(ExecutionContext)
- uid: Neo.SmartContract.Helper.GetScriptHash*
  name: GetScriptHash
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_GetScriptHash_
  commentId: Overload:Neo.SmartContract.Helper.GetScriptHash
  isSpec: "True"
  fullName: Neo.SmartContract.Helper.GetScriptHash
  nameWithType: Helper.GetScriptHash
- uid: Neo.SmartContract.Helper.IsMultiSigContract(System.ReadOnlySpan{System.Byte})
  name: IsMultiSigContract(ReadOnlySpan<byte>)
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_IsMultiSigContract_System_ReadOnlySpan_System_Byte__
  commentId: M:Neo.SmartContract.Helper.IsMultiSigContract(System.ReadOnlySpan{System.Byte})
  name.vb: IsMultiSigContract(ReadOnlySpan(Of Byte))
  fullName: Neo.SmartContract.Helper.IsMultiSigContract(System.ReadOnlySpan<byte>)
  fullName.vb: Neo.SmartContract.Helper.IsMultiSigContract(System.ReadOnlySpan(Of Byte))
  nameWithType: Helper.IsMultiSigContract(ReadOnlySpan<byte>)
  nameWithType.vb: Helper.IsMultiSigContract(ReadOnlySpan(Of Byte))
- uid: Neo.SmartContract.Helper.IsMultiSigContract(System.ReadOnlySpan{System.Byte},System.Int32@,Neo.Cryptography.ECC.ECPoint[]@)
  name: IsMultiSigContract(ReadOnlySpan<byte>, out int, out ECPoint[])
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_IsMultiSigContract_System_ReadOnlySpan_System_Byte__System_Int32__Neo_Cryptography_ECC_ECPoint____
  commentId: M:Neo.SmartContract.Helper.IsMultiSigContract(System.ReadOnlySpan{System.Byte},System.Int32@,Neo.Cryptography.ECC.ECPoint[]@)
  name.vb: IsMultiSigContract(ReadOnlySpan(Of Byte), Integer, ECPoint())
  fullName: Neo.SmartContract.Helper.IsMultiSigContract(System.ReadOnlySpan<byte>, out int, out Neo.Cryptography.ECC.ECPoint[])
  fullName.vb: Neo.SmartContract.Helper.IsMultiSigContract(System.ReadOnlySpan(Of Byte), Integer, Neo.Cryptography.ECC.ECPoint())
  nameWithType: Helper.IsMultiSigContract(ReadOnlySpan<byte>, out int, out ECPoint[])
  nameWithType.vb: Helper.IsMultiSigContract(ReadOnlySpan(Of Byte), Integer, ECPoint())
- uid: Neo.SmartContract.Helper.IsMultiSigContract(System.ReadOnlySpan{System.Byte},System.Int32@,System.Int32@)
  name: IsMultiSigContract(ReadOnlySpan<byte>, out int, out int)
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_IsMultiSigContract_System_ReadOnlySpan_System_Byte__System_Int32__System_Int32__
  commentId: M:Neo.SmartContract.Helper.IsMultiSigContract(System.ReadOnlySpan{System.Byte},System.Int32@,System.Int32@)
  name.vb: IsMultiSigContract(ReadOnlySpan(Of Byte), Integer, Integer)
  fullName: Neo.SmartContract.Helper.IsMultiSigContract(System.ReadOnlySpan<byte>, out int, out int)
  fullName.vb: Neo.SmartContract.Helper.IsMultiSigContract(System.ReadOnlySpan(Of Byte), Integer, Integer)
  nameWithType: Helper.IsMultiSigContract(ReadOnlySpan<byte>, out int, out int)
  nameWithType.vb: Helper.IsMultiSigContract(ReadOnlySpan(Of Byte), Integer, Integer)
- uid: Neo.SmartContract.Helper.IsMultiSigContract*
  name: IsMultiSigContract
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_IsMultiSigContract_
  commentId: Overload:Neo.SmartContract.Helper.IsMultiSigContract
  isSpec: "True"
  fullName: Neo.SmartContract.Helper.IsMultiSigContract
  nameWithType: Helper.IsMultiSigContract
- uid: Neo.SmartContract.Helper.IsSignatureContract(System.ReadOnlySpan{System.Byte})
  name: IsSignatureContract(ReadOnlySpan<byte>)
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_IsSignatureContract_System_ReadOnlySpan_System_Byte__
  commentId: M:Neo.SmartContract.Helper.IsSignatureContract(System.ReadOnlySpan{System.Byte})
  name.vb: IsSignatureContract(ReadOnlySpan(Of Byte))
  fullName: Neo.SmartContract.Helper.IsSignatureContract(System.ReadOnlySpan<byte>)
  fullName.vb: Neo.SmartContract.Helper.IsSignatureContract(System.ReadOnlySpan(Of Byte))
  nameWithType: Helper.IsSignatureContract(ReadOnlySpan<byte>)
  nameWithType.vb: Helper.IsSignatureContract(ReadOnlySpan(Of Byte))
- uid: Neo.SmartContract.Helper.IsSignatureContract*
  name: IsSignatureContract
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_IsSignatureContract_
  commentId: Overload:Neo.SmartContract.Helper.IsSignatureContract
  isSpec: "True"
  fullName: Neo.SmartContract.Helper.IsSignatureContract
  nameWithType: Helper.IsSignatureContract
- uid: Neo.SmartContract.Helper.IsStandardContract(System.ReadOnlySpan{System.Byte})
  name: IsStandardContract(ReadOnlySpan<byte>)
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_IsStandardContract_System_ReadOnlySpan_System_Byte__
  commentId: M:Neo.SmartContract.Helper.IsStandardContract(System.ReadOnlySpan{System.Byte})
  name.vb: IsStandardContract(ReadOnlySpan(Of Byte))
  fullName: Neo.SmartContract.Helper.IsStandardContract(System.ReadOnlySpan<byte>)
  fullName.vb: Neo.SmartContract.Helper.IsStandardContract(System.ReadOnlySpan(Of Byte))
  nameWithType: Helper.IsStandardContract(ReadOnlySpan<byte>)
  nameWithType.vb: Helper.IsStandardContract(ReadOnlySpan(Of Byte))
- uid: Neo.SmartContract.Helper.IsStandardContract*
  name: IsStandardContract
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_IsStandardContract_
  commentId: Overload:Neo.SmartContract.Helper.IsStandardContract
  isSpec: "True"
  fullName: Neo.SmartContract.Helper.IsStandardContract
  nameWithType: Helper.IsStandardContract
- uid: Neo.SmartContract.Helper.MaxVerificationGas
  name: MaxVerificationGas
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_MaxVerificationGas
  commentId: F:Neo.SmartContract.Helper.MaxVerificationGas
  fullName: Neo.SmartContract.Helper.MaxVerificationGas
  nameWithType: Helper.MaxVerificationGas
- uid: Neo.SmartContract.Helper.MultiSignatureContractCost(System.Int32,System.Int32)
  name: MultiSignatureContractCost(int, int)
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_MultiSignatureContractCost_System_Int32_System_Int32_
  commentId: M:Neo.SmartContract.Helper.MultiSignatureContractCost(System.Int32,System.Int32)
  name.vb: MultiSignatureContractCost(Integer, Integer)
  fullName: Neo.SmartContract.Helper.MultiSignatureContractCost(int, int)
  fullName.vb: Neo.SmartContract.Helper.MultiSignatureContractCost(Integer, Integer)
  nameWithType: Helper.MultiSignatureContractCost(int, int)
  nameWithType.vb: Helper.MultiSignatureContractCost(Integer, Integer)
- uid: Neo.SmartContract.Helper.MultiSignatureContractCost*
  name: MultiSignatureContractCost
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_MultiSignatureContractCost_
  commentId: Overload:Neo.SmartContract.Helper.MultiSignatureContractCost
  isSpec: "True"
  fullName: Neo.SmartContract.Helper.MultiSignatureContractCost
  nameWithType: Helper.MultiSignatureContractCost
- uid: Neo.SmartContract.Helper.SignatureContractCost
  name: SignatureContractCost()
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_SignatureContractCost
  commentId: M:Neo.SmartContract.Helper.SignatureContractCost
  fullName: Neo.SmartContract.Helper.SignatureContractCost()
  nameWithType: Helper.SignatureContractCost()
- uid: Neo.SmartContract.Helper.SignatureContractCost*
  name: SignatureContractCost
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_SignatureContractCost_
  commentId: Overload:Neo.SmartContract.Helper.SignatureContractCost
  isSpec: "True"
  fullName: Neo.SmartContract.Helper.SignatureContractCost
  nameWithType: Helper.SignatureContractCost
- uid: Neo.SmartContract.Helper.ToInteroperable*
  name: ToInteroperable
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_ToInteroperable_
  commentId: Overload:Neo.SmartContract.Helper.ToInteroperable
  isSpec: "True"
  fullName: Neo.SmartContract.Helper.ToInteroperable
  nameWithType: Helper.ToInteroperable
- uid: Neo.SmartContract.Helper.ToInteroperable``1(Neo.VM.Types.StackItem)
  name: ToInteroperable<T>(StackItem)
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_ToInteroperable__1_Neo_VM_Types_StackItem_
  commentId: M:Neo.SmartContract.Helper.ToInteroperable``1(Neo.VM.Types.StackItem)
  name.vb: ToInteroperable(Of T)(StackItem)
  fullName: Neo.SmartContract.Helper.ToInteroperable<T>(Neo.VM.Types.StackItem)
  fullName.vb: Neo.SmartContract.Helper.ToInteroperable(Of T)(Neo.VM.Types.StackItem)
  nameWithType: Helper.ToInteroperable<T>(StackItem)
  nameWithType.vb: Helper.ToInteroperable(Of T)(StackItem)
- uid: Neo.SmartContract.Helper.ToScriptHash(System.Byte[])
  name: ToScriptHash(byte[])
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_ToScriptHash_System_Byte___
  commentId: M:Neo.SmartContract.Helper.ToScriptHash(System.Byte[])
  name.vb: ToScriptHash(Byte())
  fullName: Neo.SmartContract.Helper.ToScriptHash(byte[])
  fullName.vb: Neo.SmartContract.Helper.ToScriptHash(Byte())
  nameWithType: Helper.ToScriptHash(byte[])
  nameWithType.vb: Helper.ToScriptHash(Byte())
- uid: Neo.SmartContract.Helper.ToScriptHash(System.ReadOnlySpan{System.Byte})
  name: ToScriptHash(ReadOnlySpan<byte>)
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_ToScriptHash_System_ReadOnlySpan_System_Byte__
  commentId: M:Neo.SmartContract.Helper.ToScriptHash(System.ReadOnlySpan{System.Byte})
  name.vb: ToScriptHash(ReadOnlySpan(Of Byte))
  fullName: Neo.SmartContract.Helper.ToScriptHash(System.ReadOnlySpan<byte>)
  fullName.vb: Neo.SmartContract.Helper.ToScriptHash(System.ReadOnlySpan(Of Byte))
  nameWithType: Helper.ToScriptHash(ReadOnlySpan<byte>)
  nameWithType.vb: Helper.ToScriptHash(ReadOnlySpan(Of Byte))
- uid: Neo.SmartContract.Helper.ToScriptHash*
  name: ToScriptHash
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_ToScriptHash_
  commentId: Overload:Neo.SmartContract.Helper.ToScriptHash
  isSpec: "True"
  fullName: Neo.SmartContract.Helper.ToScriptHash
  nameWithType: Helper.ToScriptHash
- uid: Neo.SmartContract.Helper.VerifyWitnesses(Neo.Network.P2P.Payloads.IVerifiable,Neo.ProtocolSettings,Neo.Persistence.DataCache,System.Int64)
  name: VerifyWitnesses(IVerifiable, ProtocolSettings, DataCache, long)
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_VerifyWitnesses_Neo_Network_P2P_Payloads_IVerifiable_Neo_ProtocolSettings_Neo_Persistence_DataCache_System_Int64_
  commentId: M:Neo.SmartContract.Helper.VerifyWitnesses(Neo.Network.P2P.Payloads.IVerifiable,Neo.ProtocolSettings,Neo.Persistence.DataCache,System.Int64)
  name.vb: VerifyWitnesses(IVerifiable, ProtocolSettings, DataCache, Long)
  fullName: Neo.SmartContract.Helper.VerifyWitnesses(Neo.Network.P2P.Payloads.IVerifiable, Neo.ProtocolSettings, Neo.Persistence.DataCache, long)
  fullName.vb: Neo.SmartContract.Helper.VerifyWitnesses(Neo.Network.P2P.Payloads.IVerifiable, Neo.ProtocolSettings, Neo.Persistence.DataCache, Long)
  nameWithType: Helper.VerifyWitnesses(IVerifiable, ProtocolSettings, DataCache, long)
  nameWithType.vb: Helper.VerifyWitnesses(IVerifiable, ProtocolSettings, DataCache, Long)
- uid: Neo.SmartContract.Helper.VerifyWitnesses*
  name: VerifyWitnesses
  href: api/Neo.SmartContract.Helper.html#Neo_SmartContract_Helper_VerifyWitnesses_
  commentId: Overload:Neo.SmartContract.Helper.VerifyWitnesses
  isSpec: "True"
  fullName: Neo.SmartContract.Helper.VerifyWitnesses
  nameWithType: Helper.VerifyWitnesses
- uid: Neo.SmartContract.IApplicationEngineProvider
  name: IApplicationEngineProvider
  href: api/Neo.SmartContract.IApplicationEngineProvider.html
  commentId: T:Neo.SmartContract.IApplicationEngineProvider
  fullName: Neo.SmartContract.IApplicationEngineProvider
  nameWithType: IApplicationEngineProvider
- uid: Neo.SmartContract.IApplicationEngineProvider.Create(Neo.SmartContract.TriggerType,Neo.Network.P2P.Payloads.IVerifiable,Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.Block,Neo.ProtocolSettings,System.Int64,Neo.SmartContract.IDiagnostic)
  name: Create(TriggerType, IVerifiable, DataCache, Block, ProtocolSettings, long, IDiagnostic)
  href: api/Neo.SmartContract.IApplicationEngineProvider.html#Neo_SmartContract_IApplicationEngineProvider_Create_Neo_SmartContract_TriggerType_Neo_Network_P2P_Payloads_IVerifiable_Neo_Persistence_DataCache_Neo_Network_P2P_Payloads_Block_Neo_ProtocolSettings_System_Int64_Neo_SmartContract_IDiagnostic_
  commentId: M:Neo.SmartContract.IApplicationEngineProvider.Create(Neo.SmartContract.TriggerType,Neo.Network.P2P.Payloads.IVerifiable,Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.Block,Neo.ProtocolSettings,System.Int64,Neo.SmartContract.IDiagnostic)
  name.vb: Create(TriggerType, IVerifiable, DataCache, Block, ProtocolSettings, Long, IDiagnostic)
  fullName: Neo.SmartContract.IApplicationEngineProvider.Create(Neo.SmartContract.TriggerType, Neo.Network.P2P.Payloads.IVerifiable, Neo.Persistence.DataCache, Neo.Network.P2P.Payloads.Block, Neo.ProtocolSettings, long, Neo.SmartContract.IDiagnostic)
  fullName.vb: Neo.SmartContract.IApplicationEngineProvider.Create(Neo.SmartContract.TriggerType, Neo.Network.P2P.Payloads.IVerifiable, Neo.Persistence.DataCache, Neo.Network.P2P.Payloads.Block, Neo.ProtocolSettings, Long, Neo.SmartContract.IDiagnostic)
  nameWithType: IApplicationEngineProvider.Create(TriggerType, IVerifiable, DataCache, Block, ProtocolSettings, long, IDiagnostic)
  nameWithType.vb: IApplicationEngineProvider.Create(TriggerType, IVerifiable, DataCache, Block, ProtocolSettings, Long, IDiagnostic)
- uid: Neo.SmartContract.IApplicationEngineProvider.Create*
  name: Create
  href: api/Neo.SmartContract.IApplicationEngineProvider.html#Neo_SmartContract_IApplicationEngineProvider_Create_
  commentId: Overload:Neo.SmartContract.IApplicationEngineProvider.Create
  isSpec: "True"
  fullName: Neo.SmartContract.IApplicationEngineProvider.Create
  nameWithType: IApplicationEngineProvider.Create
- uid: Neo.SmartContract.IDiagnostic
  name: IDiagnostic
  href: api/Neo.SmartContract.IDiagnostic.html
  commentId: T:Neo.SmartContract.IDiagnostic
  fullName: Neo.SmartContract.IDiagnostic
  nameWithType: IDiagnostic
- uid: Neo.SmartContract.IDiagnostic.ContextLoaded(Neo.VM.ExecutionContext)
  name: ContextLoaded(ExecutionContext)
  href: api/Neo.SmartContract.IDiagnostic.html#Neo_SmartContract_IDiagnostic_ContextLoaded_Neo_VM_ExecutionContext_
  commentId: M:Neo.SmartContract.IDiagnostic.ContextLoaded(Neo.VM.ExecutionContext)
  fullName: Neo.SmartContract.IDiagnostic.ContextLoaded(Neo.VM.ExecutionContext)
  nameWithType: IDiagnostic.ContextLoaded(ExecutionContext)
- uid: Neo.SmartContract.IDiagnostic.ContextLoaded*
  name: ContextLoaded
  href: api/Neo.SmartContract.IDiagnostic.html#Neo_SmartContract_IDiagnostic_ContextLoaded_
  commentId: Overload:Neo.SmartContract.IDiagnostic.ContextLoaded
  isSpec: "True"
  fullName: Neo.SmartContract.IDiagnostic.ContextLoaded
  nameWithType: IDiagnostic.ContextLoaded
- uid: Neo.SmartContract.IDiagnostic.ContextUnloaded(Neo.VM.ExecutionContext)
  name: ContextUnloaded(ExecutionContext)
  href: api/Neo.SmartContract.IDiagnostic.html#Neo_SmartContract_IDiagnostic_ContextUnloaded_Neo_VM_ExecutionContext_
  commentId: M:Neo.SmartContract.IDiagnostic.ContextUnloaded(Neo.VM.ExecutionContext)
  fullName: Neo.SmartContract.IDiagnostic.ContextUnloaded(Neo.VM.ExecutionContext)
  nameWithType: IDiagnostic.ContextUnloaded(ExecutionContext)
- uid: Neo.SmartContract.IDiagnostic.ContextUnloaded*
  name: ContextUnloaded
  href: api/Neo.SmartContract.IDiagnostic.html#Neo_SmartContract_IDiagnostic_ContextUnloaded_
  commentId: Overload:Neo.SmartContract.IDiagnostic.ContextUnloaded
  isSpec: "True"
  fullName: Neo.SmartContract.IDiagnostic.ContextUnloaded
  nameWithType: IDiagnostic.ContextUnloaded
- uid: Neo.SmartContract.IDiagnostic.Disposed
  name: Disposed()
  href: api/Neo.SmartContract.IDiagnostic.html#Neo_SmartContract_IDiagnostic_Disposed
  commentId: M:Neo.SmartContract.IDiagnostic.Disposed
  fullName: Neo.SmartContract.IDiagnostic.Disposed()
  nameWithType: IDiagnostic.Disposed()
- uid: Neo.SmartContract.IDiagnostic.Disposed*
  name: Disposed
  href: api/Neo.SmartContract.IDiagnostic.html#Neo_SmartContract_IDiagnostic_Disposed_
  commentId: Overload:Neo.SmartContract.IDiagnostic.Disposed
  isSpec: "True"
  fullName: Neo.SmartContract.IDiagnostic.Disposed
  nameWithType: IDiagnostic.Disposed
- uid: Neo.SmartContract.IDiagnostic.Initialized(Neo.SmartContract.ApplicationEngine)
  name: Initialized(ApplicationEngine)
  href: api/Neo.SmartContract.IDiagnostic.html#Neo_SmartContract_IDiagnostic_Initialized_Neo_SmartContract_ApplicationEngine_
  commentId: M:Neo.SmartContract.IDiagnostic.Initialized(Neo.SmartContract.ApplicationEngine)
  fullName: Neo.SmartContract.IDiagnostic.Initialized(Neo.SmartContract.ApplicationEngine)
  nameWithType: IDiagnostic.Initialized(ApplicationEngine)
- uid: Neo.SmartContract.IDiagnostic.Initialized*
  name: Initialized
  href: api/Neo.SmartContract.IDiagnostic.html#Neo_SmartContract_IDiagnostic_Initialized_
  commentId: Overload:Neo.SmartContract.IDiagnostic.Initialized
  isSpec: "True"
  fullName: Neo.SmartContract.IDiagnostic.Initialized
  nameWithType: IDiagnostic.Initialized
- uid: Neo.SmartContract.IDiagnostic.PostExecuteInstruction(Neo.VM.Instruction)
  name: PostExecuteInstruction(Instruction)
  href: api/Neo.SmartContract.IDiagnostic.html#Neo_SmartContract_IDiagnostic_PostExecuteInstruction_Neo_VM_Instruction_
  commentId: M:Neo.SmartContract.IDiagnostic.PostExecuteInstruction(Neo.VM.Instruction)
  fullName: Neo.SmartContract.IDiagnostic.PostExecuteInstruction(Neo.VM.Instruction)
  nameWithType: IDiagnostic.PostExecuteInstruction(Instruction)
- uid: Neo.SmartContract.IDiagnostic.PostExecuteInstruction*
  name: PostExecuteInstruction
  href: api/Neo.SmartContract.IDiagnostic.html#Neo_SmartContract_IDiagnostic_PostExecuteInstruction_
  commentId: Overload:Neo.SmartContract.IDiagnostic.PostExecuteInstruction
  isSpec: "True"
  fullName: Neo.SmartContract.IDiagnostic.PostExecuteInstruction
  nameWithType: IDiagnostic.PostExecuteInstruction
- uid: Neo.SmartContract.IDiagnostic.PreExecuteInstruction(Neo.VM.Instruction)
  name: PreExecuteInstruction(Instruction)
  href: api/Neo.SmartContract.IDiagnostic.html#Neo_SmartContract_IDiagnostic_PreExecuteInstruction_Neo_VM_Instruction_
  commentId: M:Neo.SmartContract.IDiagnostic.PreExecuteInstruction(Neo.VM.Instruction)
  fullName: Neo.SmartContract.IDiagnostic.PreExecuteInstruction(Neo.VM.Instruction)
  nameWithType: IDiagnostic.PreExecuteInstruction(Instruction)
- uid: Neo.SmartContract.IDiagnostic.PreExecuteInstruction*
  name: PreExecuteInstruction
  href: api/Neo.SmartContract.IDiagnostic.html#Neo_SmartContract_IDiagnostic_PreExecuteInstruction_
  commentId: Overload:Neo.SmartContract.IDiagnostic.PreExecuteInstruction
  isSpec: "True"
  fullName: Neo.SmartContract.IDiagnostic.PreExecuteInstruction
  nameWithType: IDiagnostic.PreExecuteInstruction
- uid: Neo.SmartContract.IInteroperable
  name: IInteroperable
  href: api/Neo.SmartContract.IInteroperable.html
  commentId: T:Neo.SmartContract.IInteroperable
  fullName: Neo.SmartContract.IInteroperable
  nameWithType: IInteroperable
- uid: Neo.SmartContract.IInteroperable.Clone
  name: Clone()
  href: api/Neo.SmartContract.IInteroperable.html#Neo_SmartContract_IInteroperable_Clone
  commentId: M:Neo.SmartContract.IInteroperable.Clone
  fullName: Neo.SmartContract.IInteroperable.Clone()
  nameWithType: IInteroperable.Clone()
- uid: Neo.SmartContract.IInteroperable.Clone*
  name: Clone
  href: api/Neo.SmartContract.IInteroperable.html#Neo_SmartContract_IInteroperable_Clone_
  commentId: Overload:Neo.SmartContract.IInteroperable.Clone
  isSpec: "True"
  fullName: Neo.SmartContract.IInteroperable.Clone
  nameWithType: IInteroperable.Clone
- uid: Neo.SmartContract.IInteroperable.FromReplica(Neo.SmartContract.IInteroperable)
  name: FromReplica(IInteroperable)
  href: api/Neo.SmartContract.IInteroperable.html#Neo_SmartContract_IInteroperable_FromReplica_Neo_SmartContract_IInteroperable_
  commentId: M:Neo.SmartContract.IInteroperable.FromReplica(Neo.SmartContract.IInteroperable)
  fullName: Neo.SmartContract.IInteroperable.FromReplica(Neo.SmartContract.IInteroperable)
  nameWithType: IInteroperable.FromReplica(IInteroperable)
- uid: Neo.SmartContract.IInteroperable.FromReplica*
  name: FromReplica
  href: api/Neo.SmartContract.IInteroperable.html#Neo_SmartContract_IInteroperable_FromReplica_
  commentId: Overload:Neo.SmartContract.IInteroperable.FromReplica
  isSpec: "True"
  fullName: Neo.SmartContract.IInteroperable.FromReplica
  nameWithType: IInteroperable.FromReplica
- uid: Neo.SmartContract.IInteroperable.FromStackItem(Neo.VM.Types.StackItem)
  name: FromStackItem(StackItem)
  href: api/Neo.SmartContract.IInteroperable.html#Neo_SmartContract_IInteroperable_FromStackItem_Neo_VM_Types_StackItem_
  commentId: M:Neo.SmartContract.IInteroperable.FromStackItem(Neo.VM.Types.StackItem)
  fullName: Neo.SmartContract.IInteroperable.FromStackItem(Neo.VM.Types.StackItem)
  nameWithType: IInteroperable.FromStackItem(StackItem)
- uid: Neo.SmartContract.IInteroperable.FromStackItem*
  name: FromStackItem
  href: api/Neo.SmartContract.IInteroperable.html#Neo_SmartContract_IInteroperable_FromStackItem_
  commentId: Overload:Neo.SmartContract.IInteroperable.FromStackItem
  isSpec: "True"
  fullName: Neo.SmartContract.IInteroperable.FromStackItem
  nameWithType: IInteroperable.FromStackItem
- uid: Neo.SmartContract.IInteroperable.ToStackItem(Neo.VM.ReferenceCounter)
  name: ToStackItem(ReferenceCounter)
  href: api/Neo.SmartContract.IInteroperable.html#Neo_SmartContract_IInteroperable_ToStackItem_Neo_VM_ReferenceCounter_
  commentId: M:Neo.SmartContract.IInteroperable.ToStackItem(Neo.VM.ReferenceCounter)
  fullName: Neo.SmartContract.IInteroperable.ToStackItem(Neo.VM.ReferenceCounter)
  nameWithType: IInteroperable.ToStackItem(ReferenceCounter)
- uid: Neo.SmartContract.IInteroperable.ToStackItem*
  name: ToStackItem
  href: api/Neo.SmartContract.IInteroperable.html#Neo_SmartContract_IInteroperable_ToStackItem_
  commentId: Overload:Neo.SmartContract.IInteroperable.ToStackItem
  isSpec: "True"
  fullName: Neo.SmartContract.IInteroperable.ToStackItem
  nameWithType: IInteroperable.ToStackItem
- uid: Neo.SmartContract.InteropDescriptor
  name: InteropDescriptor
  href: api/Neo.SmartContract.InteropDescriptor.html
  commentId: T:Neo.SmartContract.InteropDescriptor
  fullName: Neo.SmartContract.InteropDescriptor
  nameWithType: InteropDescriptor
- uid: Neo.SmartContract.InteropDescriptor.FixedPrice
  name: FixedPrice
  href: api/Neo.SmartContract.InteropDescriptor.html#Neo_SmartContract_InteropDescriptor_FixedPrice
  commentId: P:Neo.SmartContract.InteropDescriptor.FixedPrice
  fullName: Neo.SmartContract.InteropDescriptor.FixedPrice
  nameWithType: InteropDescriptor.FixedPrice
- uid: Neo.SmartContract.InteropDescriptor.FixedPrice*
  name: FixedPrice
  href: api/Neo.SmartContract.InteropDescriptor.html#Neo_SmartContract_InteropDescriptor_FixedPrice_
  commentId: Overload:Neo.SmartContract.InteropDescriptor.FixedPrice
  isSpec: "True"
  fullName: Neo.SmartContract.InteropDescriptor.FixedPrice
  nameWithType: InteropDescriptor.FixedPrice
- uid: Neo.SmartContract.InteropDescriptor.Handler
  name: Handler
  href: api/Neo.SmartContract.InteropDescriptor.html#Neo_SmartContract_InteropDescriptor_Handler
  commentId: P:Neo.SmartContract.InteropDescriptor.Handler
  fullName: Neo.SmartContract.InteropDescriptor.Handler
  nameWithType: InteropDescriptor.Handler
- uid: Neo.SmartContract.InteropDescriptor.Handler*
  name: Handler
  href: api/Neo.SmartContract.InteropDescriptor.html#Neo_SmartContract_InteropDescriptor_Handler_
  commentId: Overload:Neo.SmartContract.InteropDescriptor.Handler
  isSpec: "True"
  fullName: Neo.SmartContract.InteropDescriptor.Handler
  nameWithType: InteropDescriptor.Handler
- uid: Neo.SmartContract.InteropDescriptor.Hash
  name: Hash
  href: api/Neo.SmartContract.InteropDescriptor.html#Neo_SmartContract_InteropDescriptor_Hash
  commentId: P:Neo.SmartContract.InteropDescriptor.Hash
  fullName: Neo.SmartContract.InteropDescriptor.Hash
  nameWithType: InteropDescriptor.Hash
- uid: Neo.SmartContract.InteropDescriptor.Hash*
  name: Hash
  href: api/Neo.SmartContract.InteropDescriptor.html#Neo_SmartContract_InteropDescriptor_Hash_
  commentId: Overload:Neo.SmartContract.InteropDescriptor.Hash
  isSpec: "True"
  fullName: Neo.SmartContract.InteropDescriptor.Hash
  nameWithType: InteropDescriptor.Hash
- uid: Neo.SmartContract.InteropDescriptor.Name
  name: Name
  href: api/Neo.SmartContract.InteropDescriptor.html#Neo_SmartContract_InteropDescriptor_Name
  commentId: P:Neo.SmartContract.InteropDescriptor.Name
  fullName: Neo.SmartContract.InteropDescriptor.Name
  nameWithType: InteropDescriptor.Name
- uid: Neo.SmartContract.InteropDescriptor.Name*
  name: Name
  href: api/Neo.SmartContract.InteropDescriptor.html#Neo_SmartContract_InteropDescriptor_Name_
  commentId: Overload:Neo.SmartContract.InteropDescriptor.Name
  isSpec: "True"
  fullName: Neo.SmartContract.InteropDescriptor.Name
  nameWithType: InteropDescriptor.Name
- uid: Neo.SmartContract.InteropDescriptor.Parameters
  name: Parameters
  href: api/Neo.SmartContract.InteropDescriptor.html#Neo_SmartContract_InteropDescriptor_Parameters
  commentId: P:Neo.SmartContract.InteropDescriptor.Parameters
  fullName: Neo.SmartContract.InteropDescriptor.Parameters
  nameWithType: InteropDescriptor.Parameters
- uid: Neo.SmartContract.InteropDescriptor.Parameters*
  name: Parameters
  href: api/Neo.SmartContract.InteropDescriptor.html#Neo_SmartContract_InteropDescriptor_Parameters_
  commentId: Overload:Neo.SmartContract.InteropDescriptor.Parameters
  isSpec: "True"
  fullName: Neo.SmartContract.InteropDescriptor.Parameters
  nameWithType: InteropDescriptor.Parameters
- uid: Neo.SmartContract.InteropDescriptor.RequiredCallFlags
  name: RequiredCallFlags
  href: api/Neo.SmartContract.InteropDescriptor.html#Neo_SmartContract_InteropDescriptor_RequiredCallFlags
  commentId: P:Neo.SmartContract.InteropDescriptor.RequiredCallFlags
  fullName: Neo.SmartContract.InteropDescriptor.RequiredCallFlags
  nameWithType: InteropDescriptor.RequiredCallFlags
- uid: Neo.SmartContract.InteropDescriptor.RequiredCallFlags*
  name: RequiredCallFlags
  href: api/Neo.SmartContract.InteropDescriptor.html#Neo_SmartContract_InteropDescriptor_RequiredCallFlags_
  commentId: Overload:Neo.SmartContract.InteropDescriptor.RequiredCallFlags
  isSpec: "True"
  fullName: Neo.SmartContract.InteropDescriptor.RequiredCallFlags
  nameWithType: InteropDescriptor.RequiredCallFlags
- uid: Neo.SmartContract.InteropDescriptor.op_Implicit(Neo.SmartContract.InteropDescriptor)~System.UInt32
  name: implicit operator uint(InteropDescriptor)
  href: api/Neo.SmartContract.InteropDescriptor.html#Neo_SmartContract_InteropDescriptor_op_Implicit_Neo_SmartContract_InteropDescriptor__System_UInt32
  commentId: M:Neo.SmartContract.InteropDescriptor.op_Implicit(Neo.SmartContract.InteropDescriptor)~System.UInt32
  name.vb: CType(InteropDescriptor)
  fullName: Neo.SmartContract.InteropDescriptor.implicit operator uint(Neo.SmartContract.InteropDescriptor)
  fullName.vb: Neo.SmartContract.InteropDescriptor.CType(Neo.SmartContract.InteropDescriptor)
  nameWithType: InteropDescriptor.implicit operator uint(InteropDescriptor)
  nameWithType.vb: InteropDescriptor.CType(InteropDescriptor)
- uid: Neo.SmartContract.InteropDescriptor.op_Implicit*
  name: implicit operator
  href: api/Neo.SmartContract.InteropDescriptor.html#Neo_SmartContract_InteropDescriptor_op_Implicit_
  commentId: Overload:Neo.SmartContract.InteropDescriptor.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: Neo.SmartContract.InteropDescriptor.implicit operator
  fullName.vb: Neo.SmartContract.InteropDescriptor.CType
  nameWithType: InteropDescriptor.implicit operator
  nameWithType.vb: InteropDescriptor.CType
- uid: Neo.SmartContract.InteropParameterDescriptor
  name: InteropParameterDescriptor
  href: api/Neo.SmartContract.InteropParameterDescriptor.html
  commentId: T:Neo.SmartContract.InteropParameterDescriptor
  fullName: Neo.SmartContract.InteropParameterDescriptor
  nameWithType: InteropParameterDescriptor
- uid: Neo.SmartContract.InteropParameterDescriptor.Converter
  name: Converter
  href: api/Neo.SmartContract.InteropParameterDescriptor.html#Neo_SmartContract_InteropParameterDescriptor_Converter
  commentId: P:Neo.SmartContract.InteropParameterDescriptor.Converter
  fullName: Neo.SmartContract.InteropParameterDescriptor.Converter
  nameWithType: InteropParameterDescriptor.Converter
- uid: Neo.SmartContract.InteropParameterDescriptor.Converter*
  name: Converter
  href: api/Neo.SmartContract.InteropParameterDescriptor.html#Neo_SmartContract_InteropParameterDescriptor_Converter_
  commentId: Overload:Neo.SmartContract.InteropParameterDescriptor.Converter
  isSpec: "True"
  fullName: Neo.SmartContract.InteropParameterDescriptor.Converter
  nameWithType: InteropParameterDescriptor.Converter
- uid: Neo.SmartContract.InteropParameterDescriptor.IsArray
  name: IsArray
  href: api/Neo.SmartContract.InteropParameterDescriptor.html#Neo_SmartContract_InteropParameterDescriptor_IsArray
  commentId: P:Neo.SmartContract.InteropParameterDescriptor.IsArray
  fullName: Neo.SmartContract.InteropParameterDescriptor.IsArray
  nameWithType: InteropParameterDescriptor.IsArray
- uid: Neo.SmartContract.InteropParameterDescriptor.IsArray*
  name: IsArray
  href: api/Neo.SmartContract.InteropParameterDescriptor.html#Neo_SmartContract_InteropParameterDescriptor_IsArray_
  commentId: Overload:Neo.SmartContract.InteropParameterDescriptor.IsArray
  isSpec: "True"
  fullName: Neo.SmartContract.InteropParameterDescriptor.IsArray
  nameWithType: InteropParameterDescriptor.IsArray
- uid: Neo.SmartContract.InteropParameterDescriptor.IsEnum
  name: IsEnum
  href: api/Neo.SmartContract.InteropParameterDescriptor.html#Neo_SmartContract_InteropParameterDescriptor_IsEnum
  commentId: P:Neo.SmartContract.InteropParameterDescriptor.IsEnum
  fullName: Neo.SmartContract.InteropParameterDescriptor.IsEnum
  nameWithType: InteropParameterDescriptor.IsEnum
- uid: Neo.SmartContract.InteropParameterDescriptor.IsEnum*
  name: IsEnum
  href: api/Neo.SmartContract.InteropParameterDescriptor.html#Neo_SmartContract_InteropParameterDescriptor_IsEnum_
  commentId: Overload:Neo.SmartContract.InteropParameterDescriptor.IsEnum
  isSpec: "True"
  fullName: Neo.SmartContract.InteropParameterDescriptor.IsEnum
  nameWithType: InteropParameterDescriptor.IsEnum
- uid: Neo.SmartContract.InteropParameterDescriptor.IsInterface
  name: IsInterface
  href: api/Neo.SmartContract.InteropParameterDescriptor.html#Neo_SmartContract_InteropParameterDescriptor_IsInterface
  commentId: P:Neo.SmartContract.InteropParameterDescriptor.IsInterface
  fullName: Neo.SmartContract.InteropParameterDescriptor.IsInterface
  nameWithType: InteropParameterDescriptor.IsInterface
- uid: Neo.SmartContract.InteropParameterDescriptor.IsInterface*
  name: IsInterface
  href: api/Neo.SmartContract.InteropParameterDescriptor.html#Neo_SmartContract_InteropParameterDescriptor_IsInterface_
  commentId: Overload:Neo.SmartContract.InteropParameterDescriptor.IsInterface
  isSpec: "True"
  fullName: Neo.SmartContract.InteropParameterDescriptor.IsInterface
  nameWithType: InteropParameterDescriptor.IsInterface
- uid: Neo.SmartContract.InteropParameterDescriptor.Name
  name: Name
  href: api/Neo.SmartContract.InteropParameterDescriptor.html#Neo_SmartContract_InteropParameterDescriptor_Name
  commentId: P:Neo.SmartContract.InteropParameterDescriptor.Name
  fullName: Neo.SmartContract.InteropParameterDescriptor.Name
  nameWithType: InteropParameterDescriptor.Name
- uid: Neo.SmartContract.InteropParameterDescriptor.Name*
  name: Name
  href: api/Neo.SmartContract.InteropParameterDescriptor.html#Neo_SmartContract_InteropParameterDescriptor_Name_
  commentId: Overload:Neo.SmartContract.InteropParameterDescriptor.Name
  isSpec: "True"
  fullName: Neo.SmartContract.InteropParameterDescriptor.Name
  nameWithType: InteropParameterDescriptor.Name
- uid: Neo.SmartContract.InteropParameterDescriptor.Type
  name: Type
  href: api/Neo.SmartContract.InteropParameterDescriptor.html#Neo_SmartContract_InteropParameterDescriptor_Type
  commentId: P:Neo.SmartContract.InteropParameterDescriptor.Type
  fullName: Neo.SmartContract.InteropParameterDescriptor.Type
  nameWithType: InteropParameterDescriptor.Type
- uid: Neo.SmartContract.InteropParameterDescriptor.Type*
  name: Type
  href: api/Neo.SmartContract.InteropParameterDescriptor.html#Neo_SmartContract_InteropParameterDescriptor_Type_
  commentId: Overload:Neo.SmartContract.InteropParameterDescriptor.Type
  isSpec: "True"
  fullName: Neo.SmartContract.InteropParameterDescriptor.Type
  nameWithType: InteropParameterDescriptor.Type
- uid: Neo.SmartContract.InteropParameterDescriptor.Validate(Neo.VM.Types.StackItem)
  name: Validate(StackItem)
  href: api/Neo.SmartContract.InteropParameterDescriptor.html#Neo_SmartContract_InteropParameterDescriptor_Validate_Neo_VM_Types_StackItem_
  commentId: M:Neo.SmartContract.InteropParameterDescriptor.Validate(Neo.VM.Types.StackItem)
  fullName: Neo.SmartContract.InteropParameterDescriptor.Validate(Neo.VM.Types.StackItem)
  nameWithType: InteropParameterDescriptor.Validate(StackItem)
- uid: Neo.SmartContract.InteropParameterDescriptor.Validate*
  name: Validate
  href: api/Neo.SmartContract.InteropParameterDescriptor.html#Neo_SmartContract_InteropParameterDescriptor_Validate_
  commentId: Overload:Neo.SmartContract.InteropParameterDescriptor.Validate
  isSpec: "True"
  fullName: Neo.SmartContract.InteropParameterDescriptor.Validate
  nameWithType: InteropParameterDescriptor.Validate
- uid: Neo.SmartContract.Iterators
  name: Neo.SmartContract.Iterators
  href: api/Neo.SmartContract.Iterators.html
  commentId: N:Neo.SmartContract.Iterators
  fullName: Neo.SmartContract.Iterators
  nameWithType: Neo.SmartContract.Iterators
- uid: Neo.SmartContract.Iterators.IIterator
  name: IIterator
  href: api/Neo.SmartContract.Iterators.IIterator.html
  commentId: T:Neo.SmartContract.Iterators.IIterator
  fullName: Neo.SmartContract.Iterators.IIterator
  nameWithType: IIterator
- uid: Neo.SmartContract.Iterators.IIterator.Next
  name: Next()
  href: api/Neo.SmartContract.Iterators.IIterator.html#Neo_SmartContract_Iterators_IIterator_Next
  commentId: M:Neo.SmartContract.Iterators.IIterator.Next
  fullName: Neo.SmartContract.Iterators.IIterator.Next()
  nameWithType: IIterator.Next()
- uid: Neo.SmartContract.Iterators.IIterator.Next*
  name: Next
  href: api/Neo.SmartContract.Iterators.IIterator.html#Neo_SmartContract_Iterators_IIterator_Next_
  commentId: Overload:Neo.SmartContract.Iterators.IIterator.Next
  isSpec: "True"
  fullName: Neo.SmartContract.Iterators.IIterator.Next
  nameWithType: IIterator.Next
- uid: Neo.SmartContract.Iterators.IIterator.Value(Neo.VM.ReferenceCounter)
  name: Value(ReferenceCounter)
  href: api/Neo.SmartContract.Iterators.IIterator.html#Neo_SmartContract_Iterators_IIterator_Value_Neo_VM_ReferenceCounter_
  commentId: M:Neo.SmartContract.Iterators.IIterator.Value(Neo.VM.ReferenceCounter)
  fullName: Neo.SmartContract.Iterators.IIterator.Value(Neo.VM.ReferenceCounter)
  nameWithType: IIterator.Value(ReferenceCounter)
- uid: Neo.SmartContract.Iterators.IIterator.Value*
  name: Value
  href: api/Neo.SmartContract.Iterators.IIterator.html#Neo_SmartContract_Iterators_IIterator_Value_
  commentId: Overload:Neo.SmartContract.Iterators.IIterator.Value
  isSpec: "True"
  fullName: Neo.SmartContract.Iterators.IIterator.Value
  nameWithType: IIterator.Value
- uid: Neo.SmartContract.JsonSerializer
  name: JsonSerializer
  href: api/Neo.SmartContract.JsonSerializer.html
  commentId: T:Neo.SmartContract.JsonSerializer
  fullName: Neo.SmartContract.JsonSerializer
  nameWithType: JsonSerializer
- uid: Neo.SmartContract.JsonSerializer.Deserialize(Neo.SmartContract.ApplicationEngine,Neo.Json.JToken,Neo.VM.ExecutionEngineLimits,Neo.VM.ReferenceCounter)
  name: Deserialize(ApplicationEngine, JToken, ExecutionEngineLimits, ReferenceCounter)
  href: api/Neo.SmartContract.JsonSerializer.html#Neo_SmartContract_JsonSerializer_Deserialize_Neo_SmartContract_ApplicationEngine_Neo_Json_JToken_Neo_VM_ExecutionEngineLimits_Neo_VM_ReferenceCounter_
  commentId: M:Neo.SmartContract.JsonSerializer.Deserialize(Neo.SmartContract.ApplicationEngine,Neo.Json.JToken,Neo.VM.ExecutionEngineLimits,Neo.VM.ReferenceCounter)
  fullName: Neo.SmartContract.JsonSerializer.Deserialize(Neo.SmartContract.ApplicationEngine, Neo.Json.JToken, Neo.VM.ExecutionEngineLimits, Neo.VM.ReferenceCounter)
  nameWithType: JsonSerializer.Deserialize(ApplicationEngine, JToken, ExecutionEngineLimits, ReferenceCounter)
- uid: Neo.SmartContract.JsonSerializer.Deserialize*
  name: Deserialize
  href: api/Neo.SmartContract.JsonSerializer.html#Neo_SmartContract_JsonSerializer_Deserialize_
  commentId: Overload:Neo.SmartContract.JsonSerializer.Deserialize
  isSpec: "True"
  fullName: Neo.SmartContract.JsonSerializer.Deserialize
  nameWithType: JsonSerializer.Deserialize
- uid: Neo.SmartContract.JsonSerializer.Serialize(Neo.VM.Types.StackItem)
  name: Serialize(StackItem)
  href: api/Neo.SmartContract.JsonSerializer.html#Neo_SmartContract_JsonSerializer_Serialize_Neo_VM_Types_StackItem_
  commentId: M:Neo.SmartContract.JsonSerializer.Serialize(Neo.VM.Types.StackItem)
  fullName: Neo.SmartContract.JsonSerializer.Serialize(Neo.VM.Types.StackItem)
  nameWithType: JsonSerializer.Serialize(StackItem)
- uid: Neo.SmartContract.JsonSerializer.Serialize*
  name: Serialize
  href: api/Neo.SmartContract.JsonSerializer.html#Neo_SmartContract_JsonSerializer_Serialize_
  commentId: Overload:Neo.SmartContract.JsonSerializer.Serialize
  isSpec: "True"
  fullName: Neo.SmartContract.JsonSerializer.Serialize
  nameWithType: JsonSerializer.Serialize
- uid: Neo.SmartContract.JsonSerializer.SerializeToByteArray(Neo.VM.Types.StackItem,System.UInt32)
  name: SerializeToByteArray(StackItem, uint)
  href: api/Neo.SmartContract.JsonSerializer.html#Neo_SmartContract_JsonSerializer_SerializeToByteArray_Neo_VM_Types_StackItem_System_UInt32_
  commentId: M:Neo.SmartContract.JsonSerializer.SerializeToByteArray(Neo.VM.Types.StackItem,System.UInt32)
  name.vb: SerializeToByteArray(StackItem, UInteger)
  fullName: Neo.SmartContract.JsonSerializer.SerializeToByteArray(Neo.VM.Types.StackItem, uint)
  fullName.vb: Neo.SmartContract.JsonSerializer.SerializeToByteArray(Neo.VM.Types.StackItem, UInteger)
  nameWithType: JsonSerializer.SerializeToByteArray(StackItem, uint)
  nameWithType.vb: JsonSerializer.SerializeToByteArray(StackItem, UInteger)
- uid: Neo.SmartContract.JsonSerializer.SerializeToByteArray*
  name: SerializeToByteArray
  href: api/Neo.SmartContract.JsonSerializer.html#Neo_SmartContract_JsonSerializer_SerializeToByteArray_
  commentId: Overload:Neo.SmartContract.JsonSerializer.SerializeToByteArray
  isSpec: "True"
  fullName: Neo.SmartContract.JsonSerializer.SerializeToByteArray
  nameWithType: JsonSerializer.SerializeToByteArray
- uid: Neo.SmartContract.KeyBuilder
  name: KeyBuilder
  href: api/Neo.SmartContract.KeyBuilder.html
  commentId: T:Neo.SmartContract.KeyBuilder
  fullName: Neo.SmartContract.KeyBuilder
  nameWithType: KeyBuilder
- uid: Neo.SmartContract.KeyBuilder.#ctor(System.Int32,System.Byte)
  name: KeyBuilder(int, byte)
  href: api/Neo.SmartContract.KeyBuilder.html#Neo_SmartContract_KeyBuilder__ctor_System_Int32_System_Byte_
  commentId: M:Neo.SmartContract.KeyBuilder.#ctor(System.Int32,System.Byte)
  name.vb: New(Integer, Byte)
  fullName: Neo.SmartContract.KeyBuilder.KeyBuilder(int, byte)
  fullName.vb: Neo.SmartContract.KeyBuilder.New(Integer, Byte)
  nameWithType: KeyBuilder.KeyBuilder(int, byte)
  nameWithType.vb: KeyBuilder.New(Integer, Byte)
- uid: Neo.SmartContract.KeyBuilder.#ctor*
  name: KeyBuilder
  href: api/Neo.SmartContract.KeyBuilder.html#Neo_SmartContract_KeyBuilder__ctor_
  commentId: Overload:Neo.SmartContract.KeyBuilder.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.SmartContract.KeyBuilder.KeyBuilder
  fullName.vb: Neo.SmartContract.KeyBuilder.New
  nameWithType: KeyBuilder.KeyBuilder
  nameWithType.vb: KeyBuilder.New
- uid: Neo.SmartContract.KeyBuilder.Add(Neo.IO.ISerializable)
  name: Add(ISerializable)
  href: api/Neo.SmartContract.KeyBuilder.html#Neo_SmartContract_KeyBuilder_Add_Neo_IO_ISerializable_
  commentId: M:Neo.SmartContract.KeyBuilder.Add(Neo.IO.ISerializable)
  fullName: Neo.SmartContract.KeyBuilder.Add(Neo.IO.ISerializable)
  nameWithType: KeyBuilder.Add(ISerializable)
- uid: Neo.SmartContract.KeyBuilder.Add(System.ReadOnlySpan{System.Byte})
  name: Add(ReadOnlySpan<byte>)
  href: api/Neo.SmartContract.KeyBuilder.html#Neo_SmartContract_KeyBuilder_Add_System_ReadOnlySpan_System_Byte__
  commentId: M:Neo.SmartContract.KeyBuilder.Add(System.ReadOnlySpan{System.Byte})
  name.vb: Add(ReadOnlySpan(Of Byte))
  fullName: Neo.SmartContract.KeyBuilder.Add(System.ReadOnlySpan<byte>)
  fullName.vb: Neo.SmartContract.KeyBuilder.Add(System.ReadOnlySpan(Of Byte))
  nameWithType: KeyBuilder.Add(ReadOnlySpan<byte>)
  nameWithType.vb: KeyBuilder.Add(ReadOnlySpan(Of Byte))
- uid: Neo.SmartContract.KeyBuilder.Add*
  name: Add
  href: api/Neo.SmartContract.KeyBuilder.html#Neo_SmartContract_KeyBuilder_Add_
  commentId: Overload:Neo.SmartContract.KeyBuilder.Add
  isSpec: "True"
  fullName: Neo.SmartContract.KeyBuilder.Add
  nameWithType: KeyBuilder.Add
- uid: Neo.SmartContract.KeyBuilder.AddBigEndian*
  name: AddBigEndian
  href: api/Neo.SmartContract.KeyBuilder.html#Neo_SmartContract_KeyBuilder_AddBigEndian_
  commentId: Overload:Neo.SmartContract.KeyBuilder.AddBigEndian
  isSpec: "True"
  fullName: Neo.SmartContract.KeyBuilder.AddBigEndian
  nameWithType: KeyBuilder.AddBigEndian
- uid: Neo.SmartContract.KeyBuilder.AddBigEndian``1(``0)
  name: AddBigEndian<T>(T)
  href: api/Neo.SmartContract.KeyBuilder.html#Neo_SmartContract_KeyBuilder_AddBigEndian__1___0_
  commentId: M:Neo.SmartContract.KeyBuilder.AddBigEndian``1(``0)
  name.vb: AddBigEndian(Of T)(T)
  fullName: Neo.SmartContract.KeyBuilder.AddBigEndian<T>(T)
  fullName.vb: Neo.SmartContract.KeyBuilder.AddBigEndian(Of T)(T)
  nameWithType: KeyBuilder.AddBigEndian<T>(T)
  nameWithType.vb: KeyBuilder.AddBigEndian(Of T)(T)
- uid: Neo.SmartContract.KeyBuilder.Add``1(``0)
  name: Add<T>(T)
  href: api/Neo.SmartContract.KeyBuilder.html#Neo_SmartContract_KeyBuilder_Add__1___0_
  commentId: M:Neo.SmartContract.KeyBuilder.Add``1(``0)
  name.vb: Add(Of T)(T)
  fullName: Neo.SmartContract.KeyBuilder.Add<T>(T)
  fullName.vb: Neo.SmartContract.KeyBuilder.Add(Of T)(T)
  nameWithType: KeyBuilder.Add<T>(T)
  nameWithType.vb: KeyBuilder.Add(Of T)(T)
- uid: Neo.SmartContract.KeyBuilder.ToArray
  name: ToArray()
  href: api/Neo.SmartContract.KeyBuilder.html#Neo_SmartContract_KeyBuilder_ToArray
  commentId: M:Neo.SmartContract.KeyBuilder.ToArray
  fullName: Neo.SmartContract.KeyBuilder.ToArray()
  nameWithType: KeyBuilder.ToArray()
- uid: Neo.SmartContract.KeyBuilder.ToArray*
  name: ToArray
  href: api/Neo.SmartContract.KeyBuilder.html#Neo_SmartContract_KeyBuilder_ToArray_
  commentId: Overload:Neo.SmartContract.KeyBuilder.ToArray
  isSpec: "True"
  fullName: Neo.SmartContract.KeyBuilder.ToArray
  nameWithType: KeyBuilder.ToArray
- uid: Neo.SmartContract.KeyBuilder.op_Implicit(Neo.SmartContract.KeyBuilder)~Neo.SmartContract.StorageKey
  name: implicit operator StorageKey(KeyBuilder)
  href: api/Neo.SmartContract.KeyBuilder.html#Neo_SmartContract_KeyBuilder_op_Implicit_Neo_SmartContract_KeyBuilder__Neo_SmartContract_StorageKey
  commentId: M:Neo.SmartContract.KeyBuilder.op_Implicit(Neo.SmartContract.KeyBuilder)~Neo.SmartContract.StorageKey
  name.vb: CType(KeyBuilder)
  fullName: Neo.SmartContract.KeyBuilder.implicit operator Neo.SmartContract.StorageKey(Neo.SmartContract.KeyBuilder)
  fullName.vb: Neo.SmartContract.KeyBuilder.CType(Neo.SmartContract.KeyBuilder)
  nameWithType: KeyBuilder.implicit operator StorageKey(KeyBuilder)
  nameWithType.vb: KeyBuilder.CType(KeyBuilder)
- uid: Neo.SmartContract.KeyBuilder.op_Implicit*
  name: implicit operator
  href: api/Neo.SmartContract.KeyBuilder.html#Neo_SmartContract_KeyBuilder_op_Implicit_
  commentId: Overload:Neo.SmartContract.KeyBuilder.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: Neo.SmartContract.KeyBuilder.implicit operator
  fullName.vb: Neo.SmartContract.KeyBuilder.CType
  nameWithType: KeyBuilder.implicit operator
  nameWithType.vb: KeyBuilder.CType
- uid: Neo.SmartContract.LogEventArgs
  name: LogEventArgs
  href: api/Neo.SmartContract.LogEventArgs.html
  commentId: T:Neo.SmartContract.LogEventArgs
  fullName: Neo.SmartContract.LogEventArgs
  nameWithType: LogEventArgs
- uid: Neo.SmartContract.LogEventArgs.#ctor(Neo.Network.P2P.Payloads.IVerifiable,Neo.UInt160,System.String)
  name: LogEventArgs(IVerifiable, UInt160, string)
  href: api/Neo.SmartContract.LogEventArgs.html#Neo_SmartContract_LogEventArgs__ctor_Neo_Network_P2P_Payloads_IVerifiable_Neo_UInt160_System_String_
  commentId: M:Neo.SmartContract.LogEventArgs.#ctor(Neo.Network.P2P.Payloads.IVerifiable,Neo.UInt160,System.String)
  name.vb: New(IVerifiable, UInt160, String)
  fullName: Neo.SmartContract.LogEventArgs.LogEventArgs(Neo.Network.P2P.Payloads.IVerifiable, Neo.UInt160, string)
  fullName.vb: Neo.SmartContract.LogEventArgs.New(Neo.Network.P2P.Payloads.IVerifiable, Neo.UInt160, String)
  nameWithType: LogEventArgs.LogEventArgs(IVerifiable, UInt160, string)
  nameWithType.vb: LogEventArgs.New(IVerifiable, UInt160, String)
- uid: Neo.SmartContract.LogEventArgs.#ctor*
  name: LogEventArgs
  href: api/Neo.SmartContract.LogEventArgs.html#Neo_SmartContract_LogEventArgs__ctor_
  commentId: Overload:Neo.SmartContract.LogEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.SmartContract.LogEventArgs.LogEventArgs
  fullName.vb: Neo.SmartContract.LogEventArgs.New
  nameWithType: LogEventArgs.LogEventArgs
  nameWithType.vb: LogEventArgs.New
- uid: Neo.SmartContract.LogEventArgs.Message
  name: Message
  href: api/Neo.SmartContract.LogEventArgs.html#Neo_SmartContract_LogEventArgs_Message
  commentId: P:Neo.SmartContract.LogEventArgs.Message
  fullName: Neo.SmartContract.LogEventArgs.Message
  nameWithType: LogEventArgs.Message
- uid: Neo.SmartContract.LogEventArgs.Message*
  name: Message
  href: api/Neo.SmartContract.LogEventArgs.html#Neo_SmartContract_LogEventArgs_Message_
  commentId: Overload:Neo.SmartContract.LogEventArgs.Message
  isSpec: "True"
  fullName: Neo.SmartContract.LogEventArgs.Message
  nameWithType: LogEventArgs.Message
- uid: Neo.SmartContract.LogEventArgs.ScriptContainer
  name: ScriptContainer
  href: api/Neo.SmartContract.LogEventArgs.html#Neo_SmartContract_LogEventArgs_ScriptContainer
  commentId: P:Neo.SmartContract.LogEventArgs.ScriptContainer
  fullName: Neo.SmartContract.LogEventArgs.ScriptContainer
  nameWithType: LogEventArgs.ScriptContainer
- uid: Neo.SmartContract.LogEventArgs.ScriptContainer*
  name: ScriptContainer
  href: api/Neo.SmartContract.LogEventArgs.html#Neo_SmartContract_LogEventArgs_ScriptContainer_
  commentId: Overload:Neo.SmartContract.LogEventArgs.ScriptContainer
  isSpec: "True"
  fullName: Neo.SmartContract.LogEventArgs.ScriptContainer
  nameWithType: LogEventArgs.ScriptContainer
- uid: Neo.SmartContract.LogEventArgs.ScriptHash
  name: ScriptHash
  href: api/Neo.SmartContract.LogEventArgs.html#Neo_SmartContract_LogEventArgs_ScriptHash
  commentId: P:Neo.SmartContract.LogEventArgs.ScriptHash
  fullName: Neo.SmartContract.LogEventArgs.ScriptHash
  nameWithType: LogEventArgs.ScriptHash
- uid: Neo.SmartContract.LogEventArgs.ScriptHash*
  name: ScriptHash
  href: api/Neo.SmartContract.LogEventArgs.html#Neo_SmartContract_LogEventArgs_ScriptHash_
  commentId: Overload:Neo.SmartContract.LogEventArgs.ScriptHash
  isSpec: "True"
  fullName: Neo.SmartContract.LogEventArgs.ScriptHash
  nameWithType: LogEventArgs.ScriptHash
- uid: Neo.SmartContract.Manifest
  name: Neo.SmartContract.Manifest
  href: api/Neo.SmartContract.Manifest.html
  commentId: N:Neo.SmartContract.Manifest
  fullName: Neo.SmartContract.Manifest
  nameWithType: Neo.SmartContract.Manifest
- uid: Neo.SmartContract.Manifest.ContractAbi
  name: ContractAbi
  href: api/Neo.SmartContract.Manifest.ContractAbi.html
  commentId: T:Neo.SmartContract.Manifest.ContractAbi
  fullName: Neo.SmartContract.Manifest.ContractAbi
  nameWithType: ContractAbi
- uid: Neo.SmartContract.Manifest.ContractAbi.Events
  name: Events
  href: api/Neo.SmartContract.Manifest.ContractAbi.html#Neo_SmartContract_Manifest_ContractAbi_Events
  commentId: P:Neo.SmartContract.Manifest.ContractAbi.Events
  fullName: Neo.SmartContract.Manifest.ContractAbi.Events
  nameWithType: ContractAbi.Events
- uid: Neo.SmartContract.Manifest.ContractAbi.Events*
  name: Events
  href: api/Neo.SmartContract.Manifest.ContractAbi.html#Neo_SmartContract_Manifest_ContractAbi_Events_
  commentId: Overload:Neo.SmartContract.Manifest.ContractAbi.Events
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractAbi.Events
  nameWithType: ContractAbi.Events
- uid: Neo.SmartContract.Manifest.ContractAbi.FromJson(Neo.Json.JObject)
  name: FromJson(JObject)
  href: api/Neo.SmartContract.Manifest.ContractAbi.html#Neo_SmartContract_Manifest_ContractAbi_FromJson_Neo_Json_JObject_
  commentId: M:Neo.SmartContract.Manifest.ContractAbi.FromJson(Neo.Json.JObject)
  fullName: Neo.SmartContract.Manifest.ContractAbi.FromJson(Neo.Json.JObject)
  nameWithType: ContractAbi.FromJson(JObject)
- uid: Neo.SmartContract.Manifest.ContractAbi.FromJson*
  name: FromJson
  href: api/Neo.SmartContract.Manifest.ContractAbi.html#Neo_SmartContract_Manifest_ContractAbi_FromJson_
  commentId: Overload:Neo.SmartContract.Manifest.ContractAbi.FromJson
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractAbi.FromJson
  nameWithType: ContractAbi.FromJson
- uid: Neo.SmartContract.Manifest.ContractAbi.GetMethod(System.String,System.Int32)
  name: GetMethod(string, int)
  href: api/Neo.SmartContract.Manifest.ContractAbi.html#Neo_SmartContract_Manifest_ContractAbi_GetMethod_System_String_System_Int32_
  commentId: M:Neo.SmartContract.Manifest.ContractAbi.GetMethod(System.String,System.Int32)
  name.vb: GetMethod(String, Integer)
  fullName: Neo.SmartContract.Manifest.ContractAbi.GetMethod(string, int)
  fullName.vb: Neo.SmartContract.Manifest.ContractAbi.GetMethod(String, Integer)
  nameWithType: ContractAbi.GetMethod(string, int)
  nameWithType.vb: ContractAbi.GetMethod(String, Integer)
- uid: Neo.SmartContract.Manifest.ContractAbi.GetMethod*
  name: GetMethod
  href: api/Neo.SmartContract.Manifest.ContractAbi.html#Neo_SmartContract_Manifest_ContractAbi_GetMethod_
  commentId: Overload:Neo.SmartContract.Manifest.ContractAbi.GetMethod
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractAbi.GetMethod
  nameWithType: ContractAbi.GetMethod
- uid: Neo.SmartContract.Manifest.ContractAbi.Methods
  name: Methods
  href: api/Neo.SmartContract.Manifest.ContractAbi.html#Neo_SmartContract_Manifest_ContractAbi_Methods
  commentId: P:Neo.SmartContract.Manifest.ContractAbi.Methods
  fullName: Neo.SmartContract.Manifest.ContractAbi.Methods
  nameWithType: ContractAbi.Methods
- uid: Neo.SmartContract.Manifest.ContractAbi.Methods*
  name: Methods
  href: api/Neo.SmartContract.Manifest.ContractAbi.html#Neo_SmartContract_Manifest_ContractAbi_Methods_
  commentId: Overload:Neo.SmartContract.Manifest.ContractAbi.Methods
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractAbi.Methods
  nameWithType: ContractAbi.Methods
- uid: Neo.SmartContract.Manifest.ContractAbi.ToJson
  name: ToJson()
  href: api/Neo.SmartContract.Manifest.ContractAbi.html#Neo_SmartContract_Manifest_ContractAbi_ToJson
  commentId: M:Neo.SmartContract.Manifest.ContractAbi.ToJson
  fullName: Neo.SmartContract.Manifest.ContractAbi.ToJson()
  nameWithType: ContractAbi.ToJson()
- uid: Neo.SmartContract.Manifest.ContractAbi.ToJson*
  name: ToJson
  href: api/Neo.SmartContract.Manifest.ContractAbi.html#Neo_SmartContract_Manifest_ContractAbi_ToJson_
  commentId: Overload:Neo.SmartContract.Manifest.ContractAbi.ToJson
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractAbi.ToJson
  nameWithType: ContractAbi.ToJson
- uid: Neo.SmartContract.Manifest.ContractAbi.ToStackItem(Neo.VM.ReferenceCounter)
  name: ToStackItem(ReferenceCounter)
  href: api/Neo.SmartContract.Manifest.ContractAbi.html#Neo_SmartContract_Manifest_ContractAbi_ToStackItem_Neo_VM_ReferenceCounter_
  commentId: M:Neo.SmartContract.Manifest.ContractAbi.ToStackItem(Neo.VM.ReferenceCounter)
  fullName: Neo.SmartContract.Manifest.ContractAbi.ToStackItem(Neo.VM.ReferenceCounter)
  nameWithType: ContractAbi.ToStackItem(ReferenceCounter)
- uid: Neo.SmartContract.Manifest.ContractAbi.ToStackItem*
  name: ToStackItem
  href: api/Neo.SmartContract.Manifest.ContractAbi.html#Neo_SmartContract_Manifest_ContractAbi_ToStackItem_
  commentId: Overload:Neo.SmartContract.Manifest.ContractAbi.ToStackItem
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractAbi.ToStackItem
  nameWithType: ContractAbi.ToStackItem
- uid: Neo.SmartContract.Manifest.ContractEventDescriptor
  name: ContractEventDescriptor
  href: api/Neo.SmartContract.Manifest.ContractEventDescriptor.html
  commentId: T:Neo.SmartContract.Manifest.ContractEventDescriptor
  fullName: Neo.SmartContract.Manifest.ContractEventDescriptor
  nameWithType: ContractEventDescriptor
- uid: Neo.SmartContract.Manifest.ContractEventDescriptor.FromJson(Neo.Json.JObject)
  name: FromJson(JObject)
  href: api/Neo.SmartContract.Manifest.ContractEventDescriptor.html#Neo_SmartContract_Manifest_ContractEventDescriptor_FromJson_Neo_Json_JObject_
  commentId: M:Neo.SmartContract.Manifest.ContractEventDescriptor.FromJson(Neo.Json.JObject)
  fullName: Neo.SmartContract.Manifest.ContractEventDescriptor.FromJson(Neo.Json.JObject)
  nameWithType: ContractEventDescriptor.FromJson(JObject)
- uid: Neo.SmartContract.Manifest.ContractEventDescriptor.FromJson*
  name: FromJson
  href: api/Neo.SmartContract.Manifest.ContractEventDescriptor.html#Neo_SmartContract_Manifest_ContractEventDescriptor_FromJson_
  commentId: Overload:Neo.SmartContract.Manifest.ContractEventDescriptor.FromJson
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractEventDescriptor.FromJson
  nameWithType: ContractEventDescriptor.FromJson
- uid: Neo.SmartContract.Manifest.ContractEventDescriptor.FromStackItem(Neo.VM.Types.StackItem)
  name: FromStackItem(StackItem)
  href: api/Neo.SmartContract.Manifest.ContractEventDescriptor.html#Neo_SmartContract_Manifest_ContractEventDescriptor_FromStackItem_Neo_VM_Types_StackItem_
  commentId: M:Neo.SmartContract.Manifest.ContractEventDescriptor.FromStackItem(Neo.VM.Types.StackItem)
  fullName: Neo.SmartContract.Manifest.ContractEventDescriptor.FromStackItem(Neo.VM.Types.StackItem)
  nameWithType: ContractEventDescriptor.FromStackItem(StackItem)
- uid: Neo.SmartContract.Manifest.ContractEventDescriptor.FromStackItem*
  name: FromStackItem
  href: api/Neo.SmartContract.Manifest.ContractEventDescriptor.html#Neo_SmartContract_Manifest_ContractEventDescriptor_FromStackItem_
  commentId: Overload:Neo.SmartContract.Manifest.ContractEventDescriptor.FromStackItem
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractEventDescriptor.FromStackItem
  nameWithType: ContractEventDescriptor.FromStackItem
- uid: Neo.SmartContract.Manifest.ContractEventDescriptor.Name
  name: Name
  href: api/Neo.SmartContract.Manifest.ContractEventDescriptor.html#Neo_SmartContract_Manifest_ContractEventDescriptor_Name
  commentId: P:Neo.SmartContract.Manifest.ContractEventDescriptor.Name
  fullName: Neo.SmartContract.Manifest.ContractEventDescriptor.Name
  nameWithType: ContractEventDescriptor.Name
- uid: Neo.SmartContract.Manifest.ContractEventDescriptor.Name*
  name: Name
  href: api/Neo.SmartContract.Manifest.ContractEventDescriptor.html#Neo_SmartContract_Manifest_ContractEventDescriptor_Name_
  commentId: Overload:Neo.SmartContract.Manifest.ContractEventDescriptor.Name
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractEventDescriptor.Name
  nameWithType: ContractEventDescriptor.Name
- uid: Neo.SmartContract.Manifest.ContractEventDescriptor.Parameters
  name: Parameters
  href: api/Neo.SmartContract.Manifest.ContractEventDescriptor.html#Neo_SmartContract_Manifest_ContractEventDescriptor_Parameters
  commentId: P:Neo.SmartContract.Manifest.ContractEventDescriptor.Parameters
  fullName: Neo.SmartContract.Manifest.ContractEventDescriptor.Parameters
  nameWithType: ContractEventDescriptor.Parameters
- uid: Neo.SmartContract.Manifest.ContractEventDescriptor.Parameters*
  name: Parameters
  href: api/Neo.SmartContract.Manifest.ContractEventDescriptor.html#Neo_SmartContract_Manifest_ContractEventDescriptor_Parameters_
  commentId: Overload:Neo.SmartContract.Manifest.ContractEventDescriptor.Parameters
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractEventDescriptor.Parameters
  nameWithType: ContractEventDescriptor.Parameters
- uid: Neo.SmartContract.Manifest.ContractEventDescriptor.ToJson
  name: ToJson()
  href: api/Neo.SmartContract.Manifest.ContractEventDescriptor.html#Neo_SmartContract_Manifest_ContractEventDescriptor_ToJson
  commentId: M:Neo.SmartContract.Manifest.ContractEventDescriptor.ToJson
  fullName: Neo.SmartContract.Manifest.ContractEventDescriptor.ToJson()
  nameWithType: ContractEventDescriptor.ToJson()
- uid: Neo.SmartContract.Manifest.ContractEventDescriptor.ToJson*
  name: ToJson
  href: api/Neo.SmartContract.Manifest.ContractEventDescriptor.html#Neo_SmartContract_Manifest_ContractEventDescriptor_ToJson_
  commentId: Overload:Neo.SmartContract.Manifest.ContractEventDescriptor.ToJson
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractEventDescriptor.ToJson
  nameWithType: ContractEventDescriptor.ToJson
- uid: Neo.SmartContract.Manifest.ContractEventDescriptor.ToStackItem(Neo.VM.ReferenceCounter)
  name: ToStackItem(ReferenceCounter)
  href: api/Neo.SmartContract.Manifest.ContractEventDescriptor.html#Neo_SmartContract_Manifest_ContractEventDescriptor_ToStackItem_Neo_VM_ReferenceCounter_
  commentId: M:Neo.SmartContract.Manifest.ContractEventDescriptor.ToStackItem(Neo.VM.ReferenceCounter)
  fullName: Neo.SmartContract.Manifest.ContractEventDescriptor.ToStackItem(Neo.VM.ReferenceCounter)
  nameWithType: ContractEventDescriptor.ToStackItem(ReferenceCounter)
- uid: Neo.SmartContract.Manifest.ContractEventDescriptor.ToStackItem*
  name: ToStackItem
  href: api/Neo.SmartContract.Manifest.ContractEventDescriptor.html#Neo_SmartContract_Manifest_ContractEventDescriptor_ToStackItem_
  commentId: Overload:Neo.SmartContract.Manifest.ContractEventDescriptor.ToStackItem
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractEventDescriptor.ToStackItem
  nameWithType: ContractEventDescriptor.ToStackItem
- uid: Neo.SmartContract.Manifest.ContractGroup
  name: ContractGroup
  href: api/Neo.SmartContract.Manifest.ContractGroup.html
  commentId: T:Neo.SmartContract.Manifest.ContractGroup
  fullName: Neo.SmartContract.Manifest.ContractGroup
  nameWithType: ContractGroup
- uid: Neo.SmartContract.Manifest.ContractGroup.FromJson(Neo.Json.JObject)
  name: FromJson(JObject)
  href: api/Neo.SmartContract.Manifest.ContractGroup.html#Neo_SmartContract_Manifest_ContractGroup_FromJson_Neo_Json_JObject_
  commentId: M:Neo.SmartContract.Manifest.ContractGroup.FromJson(Neo.Json.JObject)
  fullName: Neo.SmartContract.Manifest.ContractGroup.FromJson(Neo.Json.JObject)
  nameWithType: ContractGroup.FromJson(JObject)
- uid: Neo.SmartContract.Manifest.ContractGroup.FromJson*
  name: FromJson
  href: api/Neo.SmartContract.Manifest.ContractGroup.html#Neo_SmartContract_Manifest_ContractGroup_FromJson_
  commentId: Overload:Neo.SmartContract.Manifest.ContractGroup.FromJson
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractGroup.FromJson
  nameWithType: ContractGroup.FromJson
- uid: Neo.SmartContract.Manifest.ContractGroup.IsValid(Neo.UInt160)
  name: IsValid(UInt160)
  href: api/Neo.SmartContract.Manifest.ContractGroup.html#Neo_SmartContract_Manifest_ContractGroup_IsValid_Neo_UInt160_
  commentId: M:Neo.SmartContract.Manifest.ContractGroup.IsValid(Neo.UInt160)
  fullName: Neo.SmartContract.Manifest.ContractGroup.IsValid(Neo.UInt160)
  nameWithType: ContractGroup.IsValid(UInt160)
- uid: Neo.SmartContract.Manifest.ContractGroup.IsValid*
  name: IsValid
  href: api/Neo.SmartContract.Manifest.ContractGroup.html#Neo_SmartContract_Manifest_ContractGroup_IsValid_
  commentId: Overload:Neo.SmartContract.Manifest.ContractGroup.IsValid
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractGroup.IsValid
  nameWithType: ContractGroup.IsValid
- uid: Neo.SmartContract.Manifest.ContractGroup.PubKey
  name: PubKey
  href: api/Neo.SmartContract.Manifest.ContractGroup.html#Neo_SmartContract_Manifest_ContractGroup_PubKey
  commentId: P:Neo.SmartContract.Manifest.ContractGroup.PubKey
  fullName: Neo.SmartContract.Manifest.ContractGroup.PubKey
  nameWithType: ContractGroup.PubKey
- uid: Neo.SmartContract.Manifest.ContractGroup.PubKey*
  name: PubKey
  href: api/Neo.SmartContract.Manifest.ContractGroup.html#Neo_SmartContract_Manifest_ContractGroup_PubKey_
  commentId: Overload:Neo.SmartContract.Manifest.ContractGroup.PubKey
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractGroup.PubKey
  nameWithType: ContractGroup.PubKey
- uid: Neo.SmartContract.Manifest.ContractGroup.Signature
  name: Signature
  href: api/Neo.SmartContract.Manifest.ContractGroup.html#Neo_SmartContract_Manifest_ContractGroup_Signature
  commentId: P:Neo.SmartContract.Manifest.ContractGroup.Signature
  fullName: Neo.SmartContract.Manifest.ContractGroup.Signature
  nameWithType: ContractGroup.Signature
- uid: Neo.SmartContract.Manifest.ContractGroup.Signature*
  name: Signature
  href: api/Neo.SmartContract.Manifest.ContractGroup.html#Neo_SmartContract_Manifest_ContractGroup_Signature_
  commentId: Overload:Neo.SmartContract.Manifest.ContractGroup.Signature
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractGroup.Signature
  nameWithType: ContractGroup.Signature
- uid: Neo.SmartContract.Manifest.ContractGroup.ToJson
  name: ToJson()
  href: api/Neo.SmartContract.Manifest.ContractGroup.html#Neo_SmartContract_Manifest_ContractGroup_ToJson
  commentId: M:Neo.SmartContract.Manifest.ContractGroup.ToJson
  fullName: Neo.SmartContract.Manifest.ContractGroup.ToJson()
  nameWithType: ContractGroup.ToJson()
- uid: Neo.SmartContract.Manifest.ContractGroup.ToJson*
  name: ToJson
  href: api/Neo.SmartContract.Manifest.ContractGroup.html#Neo_SmartContract_Manifest_ContractGroup_ToJson_
  commentId: Overload:Neo.SmartContract.Manifest.ContractGroup.ToJson
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractGroup.ToJson
  nameWithType: ContractGroup.ToJson
- uid: Neo.SmartContract.Manifest.ContractGroup.ToStackItem(Neo.VM.ReferenceCounter)
  name: ToStackItem(ReferenceCounter)
  href: api/Neo.SmartContract.Manifest.ContractGroup.html#Neo_SmartContract_Manifest_ContractGroup_ToStackItem_Neo_VM_ReferenceCounter_
  commentId: M:Neo.SmartContract.Manifest.ContractGroup.ToStackItem(Neo.VM.ReferenceCounter)
  fullName: Neo.SmartContract.Manifest.ContractGroup.ToStackItem(Neo.VM.ReferenceCounter)
  nameWithType: ContractGroup.ToStackItem(ReferenceCounter)
- uid: Neo.SmartContract.Manifest.ContractGroup.ToStackItem*
  name: ToStackItem
  href: api/Neo.SmartContract.Manifest.ContractGroup.html#Neo_SmartContract_Manifest_ContractGroup_ToStackItem_
  commentId: Overload:Neo.SmartContract.Manifest.ContractGroup.ToStackItem
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractGroup.ToStackItem
  nameWithType: ContractGroup.ToStackItem
- uid: Neo.SmartContract.Manifest.ContractManifest
  name: ContractManifest
  href: api/Neo.SmartContract.Manifest.ContractManifest.html
  commentId: T:Neo.SmartContract.Manifest.ContractManifest
  fullName: Neo.SmartContract.Manifest.ContractManifest
  nameWithType: ContractManifest
- uid: Neo.SmartContract.Manifest.ContractManifest.Abi
  name: Abi
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_Abi
  commentId: P:Neo.SmartContract.Manifest.ContractManifest.Abi
  fullName: Neo.SmartContract.Manifest.ContractManifest.Abi
  nameWithType: ContractManifest.Abi
- uid: Neo.SmartContract.Manifest.ContractManifest.Abi*
  name: Abi
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_Abi_
  commentId: Overload:Neo.SmartContract.Manifest.ContractManifest.Abi
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractManifest.Abi
  nameWithType: ContractManifest.Abi
- uid: Neo.SmartContract.Manifest.ContractManifest.Extra
  name: Extra
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_Extra
  commentId: P:Neo.SmartContract.Manifest.ContractManifest.Extra
  fullName: Neo.SmartContract.Manifest.ContractManifest.Extra
  nameWithType: ContractManifest.Extra
- uid: Neo.SmartContract.Manifest.ContractManifest.Extra*
  name: Extra
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_Extra_
  commentId: Overload:Neo.SmartContract.Manifest.ContractManifest.Extra
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractManifest.Extra
  nameWithType: ContractManifest.Extra
- uid: Neo.SmartContract.Manifest.ContractManifest.FromJson(Neo.Json.JObject)
  name: FromJson(JObject)
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_FromJson_Neo_Json_JObject_
  commentId: M:Neo.SmartContract.Manifest.ContractManifest.FromJson(Neo.Json.JObject)
  fullName: Neo.SmartContract.Manifest.ContractManifest.FromJson(Neo.Json.JObject)
  nameWithType: ContractManifest.FromJson(JObject)
- uid: Neo.SmartContract.Manifest.ContractManifest.FromJson*
  name: FromJson
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_FromJson_
  commentId: Overload:Neo.SmartContract.Manifest.ContractManifest.FromJson
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractManifest.FromJson
  nameWithType: ContractManifest.FromJson
- uid: Neo.SmartContract.Manifest.ContractManifest.Groups
  name: Groups
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_Groups
  commentId: P:Neo.SmartContract.Manifest.ContractManifest.Groups
  fullName: Neo.SmartContract.Manifest.ContractManifest.Groups
  nameWithType: ContractManifest.Groups
- uid: Neo.SmartContract.Manifest.ContractManifest.Groups*
  name: Groups
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_Groups_
  commentId: Overload:Neo.SmartContract.Manifest.ContractManifest.Groups
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractManifest.Groups
  nameWithType: ContractManifest.Groups
- uid: Neo.SmartContract.Manifest.ContractManifest.IsValid(Neo.UInt160)
  name: IsValid(UInt160)
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_IsValid_Neo_UInt160_
  commentId: M:Neo.SmartContract.Manifest.ContractManifest.IsValid(Neo.UInt160)
  fullName: Neo.SmartContract.Manifest.ContractManifest.IsValid(Neo.UInt160)
  nameWithType: ContractManifest.IsValid(UInt160)
- uid: Neo.SmartContract.Manifest.ContractManifest.IsValid*
  name: IsValid
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_IsValid_
  commentId: Overload:Neo.SmartContract.Manifest.ContractManifest.IsValid
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractManifest.IsValid
  nameWithType: ContractManifest.IsValid
- uid: Neo.SmartContract.Manifest.ContractManifest.MaxLength
  name: MaxLength
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_MaxLength
  commentId: F:Neo.SmartContract.Manifest.ContractManifest.MaxLength
  fullName: Neo.SmartContract.Manifest.ContractManifest.MaxLength
  nameWithType: ContractManifest.MaxLength
- uid: Neo.SmartContract.Manifest.ContractManifest.Name
  name: Name
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_Name
  commentId: P:Neo.SmartContract.Manifest.ContractManifest.Name
  fullName: Neo.SmartContract.Manifest.ContractManifest.Name
  nameWithType: ContractManifest.Name
- uid: Neo.SmartContract.Manifest.ContractManifest.Name*
  name: Name
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_Name_
  commentId: Overload:Neo.SmartContract.Manifest.ContractManifest.Name
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractManifest.Name
  nameWithType: ContractManifest.Name
- uid: Neo.SmartContract.Manifest.ContractManifest.Parse(System.ReadOnlySpan{System.Byte})
  name: Parse(ReadOnlySpan<byte>)
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_Parse_System_ReadOnlySpan_System_Byte__
  commentId: M:Neo.SmartContract.Manifest.ContractManifest.Parse(System.ReadOnlySpan{System.Byte})
  name.vb: Parse(ReadOnlySpan(Of Byte))
  fullName: Neo.SmartContract.Manifest.ContractManifest.Parse(System.ReadOnlySpan<byte>)
  fullName.vb: Neo.SmartContract.Manifest.ContractManifest.Parse(System.ReadOnlySpan(Of Byte))
  nameWithType: ContractManifest.Parse(ReadOnlySpan<byte>)
  nameWithType.vb: ContractManifest.Parse(ReadOnlySpan(Of Byte))
- uid: Neo.SmartContract.Manifest.ContractManifest.Parse(System.String)
  name: Parse(string)
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_Parse_System_String_
  commentId: M:Neo.SmartContract.Manifest.ContractManifest.Parse(System.String)
  name.vb: Parse(String)
  fullName: Neo.SmartContract.Manifest.ContractManifest.Parse(string)
  fullName.vb: Neo.SmartContract.Manifest.ContractManifest.Parse(String)
  nameWithType: ContractManifest.Parse(string)
  nameWithType.vb: ContractManifest.Parse(String)
- uid: Neo.SmartContract.Manifest.ContractManifest.Parse*
  name: Parse
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_Parse_
  commentId: Overload:Neo.SmartContract.Manifest.ContractManifest.Parse
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractManifest.Parse
  nameWithType: ContractManifest.Parse
- uid: Neo.SmartContract.Manifest.ContractManifest.Permissions
  name: Permissions
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_Permissions
  commentId: P:Neo.SmartContract.Manifest.ContractManifest.Permissions
  fullName: Neo.SmartContract.Manifest.ContractManifest.Permissions
  nameWithType: ContractManifest.Permissions
- uid: Neo.SmartContract.Manifest.ContractManifest.Permissions*
  name: Permissions
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_Permissions_
  commentId: Overload:Neo.SmartContract.Manifest.ContractManifest.Permissions
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractManifest.Permissions
  nameWithType: ContractManifest.Permissions
- uid: Neo.SmartContract.Manifest.ContractManifest.SupportedStandards
  name: SupportedStandards
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_SupportedStandards
  commentId: P:Neo.SmartContract.Manifest.ContractManifest.SupportedStandards
  fullName: Neo.SmartContract.Manifest.ContractManifest.SupportedStandards
  nameWithType: ContractManifest.SupportedStandards
- uid: Neo.SmartContract.Manifest.ContractManifest.SupportedStandards*
  name: SupportedStandards
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_SupportedStandards_
  commentId: Overload:Neo.SmartContract.Manifest.ContractManifest.SupportedStandards
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractManifest.SupportedStandards
  nameWithType: ContractManifest.SupportedStandards
- uid: Neo.SmartContract.Manifest.ContractManifest.ToJson
  name: ToJson()
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_ToJson
  commentId: M:Neo.SmartContract.Manifest.ContractManifest.ToJson
  fullName: Neo.SmartContract.Manifest.ContractManifest.ToJson()
  nameWithType: ContractManifest.ToJson()
- uid: Neo.SmartContract.Manifest.ContractManifest.ToJson*
  name: ToJson
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_ToJson_
  commentId: Overload:Neo.SmartContract.Manifest.ContractManifest.ToJson
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractManifest.ToJson
  nameWithType: ContractManifest.ToJson
- uid: Neo.SmartContract.Manifest.ContractManifest.ToStackItem(Neo.VM.ReferenceCounter)
  name: ToStackItem(ReferenceCounter)
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_ToStackItem_Neo_VM_ReferenceCounter_
  commentId: M:Neo.SmartContract.Manifest.ContractManifest.ToStackItem(Neo.VM.ReferenceCounter)
  fullName: Neo.SmartContract.Manifest.ContractManifest.ToStackItem(Neo.VM.ReferenceCounter)
  nameWithType: ContractManifest.ToStackItem(ReferenceCounter)
- uid: Neo.SmartContract.Manifest.ContractManifest.ToStackItem*
  name: ToStackItem
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_ToStackItem_
  commentId: Overload:Neo.SmartContract.Manifest.ContractManifest.ToStackItem
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractManifest.ToStackItem
  nameWithType: ContractManifest.ToStackItem
- uid: Neo.SmartContract.Manifest.ContractManifest.Trusts
  name: Trusts
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_Trusts
  commentId: P:Neo.SmartContract.Manifest.ContractManifest.Trusts
  fullName: Neo.SmartContract.Manifest.ContractManifest.Trusts
  nameWithType: ContractManifest.Trusts
- uid: Neo.SmartContract.Manifest.ContractManifest.Trusts*
  name: Trusts
  href: api/Neo.SmartContract.Manifest.ContractManifest.html#Neo_SmartContract_Manifest_ContractManifest_Trusts_
  commentId: Overload:Neo.SmartContract.Manifest.ContractManifest.Trusts
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractManifest.Trusts
  nameWithType: ContractManifest.Trusts
- uid: Neo.SmartContract.Manifest.ContractMethodDescriptor
  name: ContractMethodDescriptor
  href: api/Neo.SmartContract.Manifest.ContractMethodDescriptor.html
  commentId: T:Neo.SmartContract.Manifest.ContractMethodDescriptor
  fullName: Neo.SmartContract.Manifest.ContractMethodDescriptor
  nameWithType: ContractMethodDescriptor
- uid: Neo.SmartContract.Manifest.ContractMethodDescriptor.FromJson(Neo.Json.JObject)
  name: FromJson(JObject)
  href: api/Neo.SmartContract.Manifest.ContractMethodDescriptor.html#Neo_SmartContract_Manifest_ContractMethodDescriptor_FromJson_Neo_Json_JObject_
  commentId: M:Neo.SmartContract.Manifest.ContractMethodDescriptor.FromJson(Neo.Json.JObject)
  fullName: Neo.SmartContract.Manifest.ContractMethodDescriptor.FromJson(Neo.Json.JObject)
  nameWithType: ContractMethodDescriptor.FromJson(JObject)
- uid: Neo.SmartContract.Manifest.ContractMethodDescriptor.FromJson*
  name: FromJson
  href: api/Neo.SmartContract.Manifest.ContractMethodDescriptor.html#Neo_SmartContract_Manifest_ContractMethodDescriptor_FromJson_
  commentId: Overload:Neo.SmartContract.Manifest.ContractMethodDescriptor.FromJson
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractMethodDescriptor.FromJson
  nameWithType: ContractMethodDescriptor.FromJson
- uid: Neo.SmartContract.Manifest.ContractMethodDescriptor.FromStackItem(Neo.VM.Types.StackItem)
  name: FromStackItem(StackItem)
  href: api/Neo.SmartContract.Manifest.ContractMethodDescriptor.html#Neo_SmartContract_Manifest_ContractMethodDescriptor_FromStackItem_Neo_VM_Types_StackItem_
  commentId: M:Neo.SmartContract.Manifest.ContractMethodDescriptor.FromStackItem(Neo.VM.Types.StackItem)
  fullName: Neo.SmartContract.Manifest.ContractMethodDescriptor.FromStackItem(Neo.VM.Types.StackItem)
  nameWithType: ContractMethodDescriptor.FromStackItem(StackItem)
- uid: Neo.SmartContract.Manifest.ContractMethodDescriptor.FromStackItem*
  name: FromStackItem
  href: api/Neo.SmartContract.Manifest.ContractMethodDescriptor.html#Neo_SmartContract_Manifest_ContractMethodDescriptor_FromStackItem_
  commentId: Overload:Neo.SmartContract.Manifest.ContractMethodDescriptor.FromStackItem
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractMethodDescriptor.FromStackItem
  nameWithType: ContractMethodDescriptor.FromStackItem
- uid: Neo.SmartContract.Manifest.ContractMethodDescriptor.Offset
  name: Offset
  href: api/Neo.SmartContract.Manifest.ContractMethodDescriptor.html#Neo_SmartContract_Manifest_ContractMethodDescriptor_Offset
  commentId: P:Neo.SmartContract.Manifest.ContractMethodDescriptor.Offset
  fullName: Neo.SmartContract.Manifest.ContractMethodDescriptor.Offset
  nameWithType: ContractMethodDescriptor.Offset
- uid: Neo.SmartContract.Manifest.ContractMethodDescriptor.Offset*
  name: Offset
  href: api/Neo.SmartContract.Manifest.ContractMethodDescriptor.html#Neo_SmartContract_Manifest_ContractMethodDescriptor_Offset_
  commentId: Overload:Neo.SmartContract.Manifest.ContractMethodDescriptor.Offset
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractMethodDescriptor.Offset
  nameWithType: ContractMethodDescriptor.Offset
- uid: Neo.SmartContract.Manifest.ContractMethodDescriptor.ReturnType
  name: ReturnType
  href: api/Neo.SmartContract.Manifest.ContractMethodDescriptor.html#Neo_SmartContract_Manifest_ContractMethodDescriptor_ReturnType
  commentId: P:Neo.SmartContract.Manifest.ContractMethodDescriptor.ReturnType
  fullName: Neo.SmartContract.Manifest.ContractMethodDescriptor.ReturnType
  nameWithType: ContractMethodDescriptor.ReturnType
- uid: Neo.SmartContract.Manifest.ContractMethodDescriptor.ReturnType*
  name: ReturnType
  href: api/Neo.SmartContract.Manifest.ContractMethodDescriptor.html#Neo_SmartContract_Manifest_ContractMethodDescriptor_ReturnType_
  commentId: Overload:Neo.SmartContract.Manifest.ContractMethodDescriptor.ReturnType
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractMethodDescriptor.ReturnType
  nameWithType: ContractMethodDescriptor.ReturnType
- uid: Neo.SmartContract.Manifest.ContractMethodDescriptor.Safe
  name: Safe
  href: api/Neo.SmartContract.Manifest.ContractMethodDescriptor.html#Neo_SmartContract_Manifest_ContractMethodDescriptor_Safe
  commentId: P:Neo.SmartContract.Manifest.ContractMethodDescriptor.Safe
  fullName: Neo.SmartContract.Manifest.ContractMethodDescriptor.Safe
  nameWithType: ContractMethodDescriptor.Safe
- uid: Neo.SmartContract.Manifest.ContractMethodDescriptor.Safe*
  name: Safe
  href: api/Neo.SmartContract.Manifest.ContractMethodDescriptor.html#Neo_SmartContract_Manifest_ContractMethodDescriptor_Safe_
  commentId: Overload:Neo.SmartContract.Manifest.ContractMethodDescriptor.Safe
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractMethodDescriptor.Safe
  nameWithType: ContractMethodDescriptor.Safe
- uid: Neo.SmartContract.Manifest.ContractMethodDescriptor.ToJson
  name: ToJson()
  href: api/Neo.SmartContract.Manifest.ContractMethodDescriptor.html#Neo_SmartContract_Manifest_ContractMethodDescriptor_ToJson
  commentId: M:Neo.SmartContract.Manifest.ContractMethodDescriptor.ToJson
  fullName: Neo.SmartContract.Manifest.ContractMethodDescriptor.ToJson()
  nameWithType: ContractMethodDescriptor.ToJson()
- uid: Neo.SmartContract.Manifest.ContractMethodDescriptor.ToJson*
  name: ToJson
  href: api/Neo.SmartContract.Manifest.ContractMethodDescriptor.html#Neo_SmartContract_Manifest_ContractMethodDescriptor_ToJson_
  commentId: Overload:Neo.SmartContract.Manifest.ContractMethodDescriptor.ToJson
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractMethodDescriptor.ToJson
  nameWithType: ContractMethodDescriptor.ToJson
- uid: Neo.SmartContract.Manifest.ContractMethodDescriptor.ToStackItem(Neo.VM.ReferenceCounter)
  name: ToStackItem(ReferenceCounter)
  href: api/Neo.SmartContract.Manifest.ContractMethodDescriptor.html#Neo_SmartContract_Manifest_ContractMethodDescriptor_ToStackItem_Neo_VM_ReferenceCounter_
  commentId: M:Neo.SmartContract.Manifest.ContractMethodDescriptor.ToStackItem(Neo.VM.ReferenceCounter)
  fullName: Neo.SmartContract.Manifest.ContractMethodDescriptor.ToStackItem(Neo.VM.ReferenceCounter)
  nameWithType: ContractMethodDescriptor.ToStackItem(ReferenceCounter)
- uid: Neo.SmartContract.Manifest.ContractMethodDescriptor.ToStackItem*
  name: ToStackItem
  href: api/Neo.SmartContract.Manifest.ContractMethodDescriptor.html#Neo_SmartContract_Manifest_ContractMethodDescriptor_ToStackItem_
  commentId: Overload:Neo.SmartContract.Manifest.ContractMethodDescriptor.ToStackItem
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractMethodDescriptor.ToStackItem
  nameWithType: ContractMethodDescriptor.ToStackItem
- uid: Neo.SmartContract.Manifest.ContractParameterDefinition
  name: ContractParameterDefinition
  href: api/Neo.SmartContract.Manifest.ContractParameterDefinition.html
  commentId: T:Neo.SmartContract.Manifest.ContractParameterDefinition
  fullName: Neo.SmartContract.Manifest.ContractParameterDefinition
  nameWithType: ContractParameterDefinition
- uid: Neo.SmartContract.Manifest.ContractParameterDefinition.FromJson(Neo.Json.JObject)
  name: FromJson(JObject)
  href: api/Neo.SmartContract.Manifest.ContractParameterDefinition.html#Neo_SmartContract_Manifest_ContractParameterDefinition_FromJson_Neo_Json_JObject_
  commentId: M:Neo.SmartContract.Manifest.ContractParameterDefinition.FromJson(Neo.Json.JObject)
  fullName: Neo.SmartContract.Manifest.ContractParameterDefinition.FromJson(Neo.Json.JObject)
  nameWithType: ContractParameterDefinition.FromJson(JObject)
- uid: Neo.SmartContract.Manifest.ContractParameterDefinition.FromJson*
  name: FromJson
  href: api/Neo.SmartContract.Manifest.ContractParameterDefinition.html#Neo_SmartContract_Manifest_ContractParameterDefinition_FromJson_
  commentId: Overload:Neo.SmartContract.Manifest.ContractParameterDefinition.FromJson
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractParameterDefinition.FromJson
  nameWithType: ContractParameterDefinition.FromJson
- uid: Neo.SmartContract.Manifest.ContractParameterDefinition.Name
  name: Name
  href: api/Neo.SmartContract.Manifest.ContractParameterDefinition.html#Neo_SmartContract_Manifest_ContractParameterDefinition_Name
  commentId: P:Neo.SmartContract.Manifest.ContractParameterDefinition.Name
  fullName: Neo.SmartContract.Manifest.ContractParameterDefinition.Name
  nameWithType: ContractParameterDefinition.Name
- uid: Neo.SmartContract.Manifest.ContractParameterDefinition.Name*
  name: Name
  href: api/Neo.SmartContract.Manifest.ContractParameterDefinition.html#Neo_SmartContract_Manifest_ContractParameterDefinition_Name_
  commentId: Overload:Neo.SmartContract.Manifest.ContractParameterDefinition.Name
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractParameterDefinition.Name
  nameWithType: ContractParameterDefinition.Name
- uid: Neo.SmartContract.Manifest.ContractParameterDefinition.ToJson
  name: ToJson()
  href: api/Neo.SmartContract.Manifest.ContractParameterDefinition.html#Neo_SmartContract_Manifest_ContractParameterDefinition_ToJson
  commentId: M:Neo.SmartContract.Manifest.ContractParameterDefinition.ToJson
  fullName: Neo.SmartContract.Manifest.ContractParameterDefinition.ToJson()
  nameWithType: ContractParameterDefinition.ToJson()
- uid: Neo.SmartContract.Manifest.ContractParameterDefinition.ToJson*
  name: ToJson
  href: api/Neo.SmartContract.Manifest.ContractParameterDefinition.html#Neo_SmartContract_Manifest_ContractParameterDefinition_ToJson_
  commentId: Overload:Neo.SmartContract.Manifest.ContractParameterDefinition.ToJson
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractParameterDefinition.ToJson
  nameWithType: ContractParameterDefinition.ToJson
- uid: Neo.SmartContract.Manifest.ContractParameterDefinition.ToStackItem(Neo.VM.ReferenceCounter)
  name: ToStackItem(ReferenceCounter)
  href: api/Neo.SmartContract.Manifest.ContractParameterDefinition.html#Neo_SmartContract_Manifest_ContractParameterDefinition_ToStackItem_Neo_VM_ReferenceCounter_
  commentId: M:Neo.SmartContract.Manifest.ContractParameterDefinition.ToStackItem(Neo.VM.ReferenceCounter)
  fullName: Neo.SmartContract.Manifest.ContractParameterDefinition.ToStackItem(Neo.VM.ReferenceCounter)
  nameWithType: ContractParameterDefinition.ToStackItem(ReferenceCounter)
- uid: Neo.SmartContract.Manifest.ContractParameterDefinition.ToStackItem*
  name: ToStackItem
  href: api/Neo.SmartContract.Manifest.ContractParameterDefinition.html#Neo_SmartContract_Manifest_ContractParameterDefinition_ToStackItem_
  commentId: Overload:Neo.SmartContract.Manifest.ContractParameterDefinition.ToStackItem
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractParameterDefinition.ToStackItem
  nameWithType: ContractParameterDefinition.ToStackItem
- uid: Neo.SmartContract.Manifest.ContractParameterDefinition.Type
  name: Type
  href: api/Neo.SmartContract.Manifest.ContractParameterDefinition.html#Neo_SmartContract_Manifest_ContractParameterDefinition_Type
  commentId: P:Neo.SmartContract.Manifest.ContractParameterDefinition.Type
  fullName: Neo.SmartContract.Manifest.ContractParameterDefinition.Type
  nameWithType: ContractParameterDefinition.Type
- uid: Neo.SmartContract.Manifest.ContractParameterDefinition.Type*
  name: Type
  href: api/Neo.SmartContract.Manifest.ContractParameterDefinition.html#Neo_SmartContract_Manifest_ContractParameterDefinition_Type_
  commentId: Overload:Neo.SmartContract.Manifest.ContractParameterDefinition.Type
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractParameterDefinition.Type
  nameWithType: ContractParameterDefinition.Type
- uid: Neo.SmartContract.Manifest.ContractPermission
  name: ContractPermission
  href: api/Neo.SmartContract.Manifest.ContractPermission.html
  commentId: T:Neo.SmartContract.Manifest.ContractPermission
  fullName: Neo.SmartContract.Manifest.ContractPermission
  nameWithType: ContractPermission
- uid: Neo.SmartContract.Manifest.ContractPermission.Contract
  name: Contract
  href: api/Neo.SmartContract.Manifest.ContractPermission.html#Neo_SmartContract_Manifest_ContractPermission_Contract
  commentId: P:Neo.SmartContract.Manifest.ContractPermission.Contract
  fullName: Neo.SmartContract.Manifest.ContractPermission.Contract
  nameWithType: ContractPermission.Contract
- uid: Neo.SmartContract.Manifest.ContractPermission.Contract*
  name: Contract
  href: api/Neo.SmartContract.Manifest.ContractPermission.html#Neo_SmartContract_Manifest_ContractPermission_Contract_
  commentId: Overload:Neo.SmartContract.Manifest.ContractPermission.Contract
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractPermission.Contract
  nameWithType: ContractPermission.Contract
- uid: Neo.SmartContract.Manifest.ContractPermission.DefaultPermission
  name: DefaultPermission
  href: api/Neo.SmartContract.Manifest.ContractPermission.html#Neo_SmartContract_Manifest_ContractPermission_DefaultPermission
  commentId: F:Neo.SmartContract.Manifest.ContractPermission.DefaultPermission
  fullName: Neo.SmartContract.Manifest.ContractPermission.DefaultPermission
  nameWithType: ContractPermission.DefaultPermission
- uid: Neo.SmartContract.Manifest.ContractPermission.FromJson(Neo.Json.JObject)
  name: FromJson(JObject)
  href: api/Neo.SmartContract.Manifest.ContractPermission.html#Neo_SmartContract_Manifest_ContractPermission_FromJson_Neo_Json_JObject_
  commentId: M:Neo.SmartContract.Manifest.ContractPermission.FromJson(Neo.Json.JObject)
  fullName: Neo.SmartContract.Manifest.ContractPermission.FromJson(Neo.Json.JObject)
  nameWithType: ContractPermission.FromJson(JObject)
- uid: Neo.SmartContract.Manifest.ContractPermission.FromJson*
  name: FromJson
  href: api/Neo.SmartContract.Manifest.ContractPermission.html#Neo_SmartContract_Manifest_ContractPermission_FromJson_
  commentId: Overload:Neo.SmartContract.Manifest.ContractPermission.FromJson
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractPermission.FromJson
  nameWithType: ContractPermission.FromJson
- uid: Neo.SmartContract.Manifest.ContractPermission.IsAllowed(Neo.SmartContract.ContractState,System.String)
  name: IsAllowed(ContractState, string)
  href: api/Neo.SmartContract.Manifest.ContractPermission.html#Neo_SmartContract_Manifest_ContractPermission_IsAllowed_Neo_SmartContract_ContractState_System_String_
  commentId: M:Neo.SmartContract.Manifest.ContractPermission.IsAllowed(Neo.SmartContract.ContractState,System.String)
  name.vb: IsAllowed(ContractState, String)
  fullName: Neo.SmartContract.Manifest.ContractPermission.IsAllowed(Neo.SmartContract.ContractState, string)
  fullName.vb: Neo.SmartContract.Manifest.ContractPermission.IsAllowed(Neo.SmartContract.ContractState, String)
  nameWithType: ContractPermission.IsAllowed(ContractState, string)
  nameWithType.vb: ContractPermission.IsAllowed(ContractState, String)
- uid: Neo.SmartContract.Manifest.ContractPermission.IsAllowed*
  name: IsAllowed
  href: api/Neo.SmartContract.Manifest.ContractPermission.html#Neo_SmartContract_Manifest_ContractPermission_IsAllowed_
  commentId: Overload:Neo.SmartContract.Manifest.ContractPermission.IsAllowed
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractPermission.IsAllowed
  nameWithType: ContractPermission.IsAllowed
- uid: Neo.SmartContract.Manifest.ContractPermission.Methods
  name: Methods
  href: api/Neo.SmartContract.Manifest.ContractPermission.html#Neo_SmartContract_Manifest_ContractPermission_Methods
  commentId: P:Neo.SmartContract.Manifest.ContractPermission.Methods
  fullName: Neo.SmartContract.Manifest.ContractPermission.Methods
  nameWithType: ContractPermission.Methods
- uid: Neo.SmartContract.Manifest.ContractPermission.Methods*
  name: Methods
  href: api/Neo.SmartContract.Manifest.ContractPermission.html#Neo_SmartContract_Manifest_ContractPermission_Methods_
  commentId: Overload:Neo.SmartContract.Manifest.ContractPermission.Methods
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractPermission.Methods
  nameWithType: ContractPermission.Methods
- uid: Neo.SmartContract.Manifest.ContractPermission.ToJson
  name: ToJson()
  href: api/Neo.SmartContract.Manifest.ContractPermission.html#Neo_SmartContract_Manifest_ContractPermission_ToJson
  commentId: M:Neo.SmartContract.Manifest.ContractPermission.ToJson
  fullName: Neo.SmartContract.Manifest.ContractPermission.ToJson()
  nameWithType: ContractPermission.ToJson()
- uid: Neo.SmartContract.Manifest.ContractPermission.ToJson*
  name: ToJson
  href: api/Neo.SmartContract.Manifest.ContractPermission.html#Neo_SmartContract_Manifest_ContractPermission_ToJson_
  commentId: Overload:Neo.SmartContract.Manifest.ContractPermission.ToJson
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractPermission.ToJson
  nameWithType: ContractPermission.ToJson
- uid: Neo.SmartContract.Manifest.ContractPermission.ToStackItem(Neo.VM.ReferenceCounter)
  name: ToStackItem(ReferenceCounter)
  href: api/Neo.SmartContract.Manifest.ContractPermission.html#Neo_SmartContract_Manifest_ContractPermission_ToStackItem_Neo_VM_ReferenceCounter_
  commentId: M:Neo.SmartContract.Manifest.ContractPermission.ToStackItem(Neo.VM.ReferenceCounter)
  fullName: Neo.SmartContract.Manifest.ContractPermission.ToStackItem(Neo.VM.ReferenceCounter)
  nameWithType: ContractPermission.ToStackItem(ReferenceCounter)
- uid: Neo.SmartContract.Manifest.ContractPermission.ToStackItem*
  name: ToStackItem
  href: api/Neo.SmartContract.Manifest.ContractPermission.html#Neo_SmartContract_Manifest_ContractPermission_ToStackItem_
  commentId: Overload:Neo.SmartContract.Manifest.ContractPermission.ToStackItem
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractPermission.ToStackItem
  nameWithType: ContractPermission.ToStackItem
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor
  name: ContractPermissionDescriptor
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html
  commentId: T:Neo.SmartContract.Manifest.ContractPermissionDescriptor
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor
  nameWithType: ContractPermissionDescriptor
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.Create(Neo.Cryptography.ECC.ECPoint)
  name: Create(ECPoint)
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_Create_Neo_Cryptography_ECC_ECPoint_
  commentId: M:Neo.SmartContract.Manifest.ContractPermissionDescriptor.Create(Neo.Cryptography.ECC.ECPoint)
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.Create(Neo.Cryptography.ECC.ECPoint)
  nameWithType: ContractPermissionDescriptor.Create(ECPoint)
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.Create(Neo.UInt160)
  name: Create(UInt160)
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_Create_Neo_UInt160_
  commentId: M:Neo.SmartContract.Manifest.ContractPermissionDescriptor.Create(Neo.UInt160)
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.Create(Neo.UInt160)
  nameWithType: ContractPermissionDescriptor.Create(UInt160)
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.Create(Neo.VM.Types.StackItem)
  name: Create(StackItem)
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_Create_Neo_VM_Types_StackItem_
  commentId: M:Neo.SmartContract.Manifest.ContractPermissionDescriptor.Create(Neo.VM.Types.StackItem)
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.Create(Neo.VM.Types.StackItem)
  nameWithType: ContractPermissionDescriptor.Create(StackItem)
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.Create*
  name: Create
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_Create_
  commentId: Overload:Neo.SmartContract.Manifest.ContractPermissionDescriptor.Create
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.Create
  nameWithType: ContractPermissionDescriptor.Create
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.CreateWildcard
  name: CreateWildcard()
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_CreateWildcard
  commentId: M:Neo.SmartContract.Manifest.ContractPermissionDescriptor.CreateWildcard
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.CreateWildcard()
  nameWithType: ContractPermissionDescriptor.CreateWildcard()
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.CreateWildcard*
  name: CreateWildcard
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_CreateWildcard_
  commentId: Overload:Neo.SmartContract.Manifest.ContractPermissionDescriptor.CreateWildcard
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.CreateWildcard
  nameWithType: ContractPermissionDescriptor.CreateWildcard
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.Equals(Neo.SmartContract.Manifest.ContractPermissionDescriptor)
  name: Equals(ContractPermissionDescriptor)
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_Equals_Neo_SmartContract_Manifest_ContractPermissionDescriptor_
  commentId: M:Neo.SmartContract.Manifest.ContractPermissionDescriptor.Equals(Neo.SmartContract.Manifest.ContractPermissionDescriptor)
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.Equals(Neo.SmartContract.Manifest.ContractPermissionDescriptor)
  nameWithType: ContractPermissionDescriptor.Equals(ContractPermissionDescriptor)
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.Equals(System.Object)
  name: Equals(object)
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_Equals_System_Object_
  commentId: M:Neo.SmartContract.Manifest.ContractPermissionDescriptor.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.Equals(object)
  fullName.vb: Neo.SmartContract.Manifest.ContractPermissionDescriptor.Equals(Object)
  nameWithType: ContractPermissionDescriptor.Equals(object)
  nameWithType.vb: ContractPermissionDescriptor.Equals(Object)
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.Equals*
  name: Equals
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_Equals_
  commentId: Overload:Neo.SmartContract.Manifest.ContractPermissionDescriptor.Equals
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.Equals
  nameWithType: ContractPermissionDescriptor.Equals
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.FromJson(Neo.Json.JString)
  name: FromJson(JString)
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_FromJson_Neo_Json_JString_
  commentId: M:Neo.SmartContract.Manifest.ContractPermissionDescriptor.FromJson(Neo.Json.JString)
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.FromJson(Neo.Json.JString)
  nameWithType: ContractPermissionDescriptor.FromJson(JString)
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.FromJson*
  name: FromJson
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_FromJson_
  commentId: Overload:Neo.SmartContract.Manifest.ContractPermissionDescriptor.FromJson
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.FromJson
  nameWithType: ContractPermissionDescriptor.FromJson
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.GetHashCode
  name: GetHashCode()
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_GetHashCode
  commentId: M:Neo.SmartContract.Manifest.ContractPermissionDescriptor.GetHashCode
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.GetHashCode()
  nameWithType: ContractPermissionDescriptor.GetHashCode()
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.GetHashCode*
  name: GetHashCode
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_GetHashCode_
  commentId: Overload:Neo.SmartContract.Manifest.ContractPermissionDescriptor.GetHashCode
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.GetHashCode
  nameWithType: ContractPermissionDescriptor.GetHashCode
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.Group
  name: Group
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_Group
  commentId: P:Neo.SmartContract.Manifest.ContractPermissionDescriptor.Group
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.Group
  nameWithType: ContractPermissionDescriptor.Group
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.Group*
  name: Group
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_Group_
  commentId: Overload:Neo.SmartContract.Manifest.ContractPermissionDescriptor.Group
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.Group
  nameWithType: ContractPermissionDescriptor.Group
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.Hash
  name: Hash
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_Hash
  commentId: P:Neo.SmartContract.Manifest.ContractPermissionDescriptor.Hash
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.Hash
  nameWithType: ContractPermissionDescriptor.Hash
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.Hash*
  name: Hash
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_Hash_
  commentId: Overload:Neo.SmartContract.Manifest.ContractPermissionDescriptor.Hash
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.Hash
  nameWithType: ContractPermissionDescriptor.Hash
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.IsGroup
  name: IsGroup
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_IsGroup
  commentId: P:Neo.SmartContract.Manifest.ContractPermissionDescriptor.IsGroup
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.IsGroup
  nameWithType: ContractPermissionDescriptor.IsGroup
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.IsGroup*
  name: IsGroup
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_IsGroup_
  commentId: Overload:Neo.SmartContract.Manifest.ContractPermissionDescriptor.IsGroup
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.IsGroup
  nameWithType: ContractPermissionDescriptor.IsGroup
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.IsHash
  name: IsHash
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_IsHash
  commentId: P:Neo.SmartContract.Manifest.ContractPermissionDescriptor.IsHash
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.IsHash
  nameWithType: ContractPermissionDescriptor.IsHash
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.IsHash*
  name: IsHash
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_IsHash_
  commentId: Overload:Neo.SmartContract.Manifest.ContractPermissionDescriptor.IsHash
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.IsHash
  nameWithType: ContractPermissionDescriptor.IsHash
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.IsWildcard
  name: IsWildcard
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_IsWildcard
  commentId: P:Neo.SmartContract.Manifest.ContractPermissionDescriptor.IsWildcard
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.IsWildcard
  nameWithType: ContractPermissionDescriptor.IsWildcard
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.IsWildcard*
  name: IsWildcard
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_IsWildcard_
  commentId: Overload:Neo.SmartContract.Manifest.ContractPermissionDescriptor.IsWildcard
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.IsWildcard
  nameWithType: ContractPermissionDescriptor.IsWildcard
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.ToArray
  name: ToArray()
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_ToArray
  commentId: M:Neo.SmartContract.Manifest.ContractPermissionDescriptor.ToArray
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.ToArray()
  nameWithType: ContractPermissionDescriptor.ToArray()
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.ToArray*
  name: ToArray
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_ToArray_
  commentId: Overload:Neo.SmartContract.Manifest.ContractPermissionDescriptor.ToArray
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.ToArray
  nameWithType: ContractPermissionDescriptor.ToArray
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.ToJson
  name: ToJson()
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_ToJson
  commentId: M:Neo.SmartContract.Manifest.ContractPermissionDescriptor.ToJson
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.ToJson()
  nameWithType: ContractPermissionDescriptor.ToJson()
- uid: Neo.SmartContract.Manifest.ContractPermissionDescriptor.ToJson*
  name: ToJson
  href: api/Neo.SmartContract.Manifest.ContractPermissionDescriptor.html#Neo_SmartContract_Manifest_ContractPermissionDescriptor_ToJson_
  commentId: Overload:Neo.SmartContract.Manifest.ContractPermissionDescriptor.ToJson
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.ContractPermissionDescriptor.ToJson
  nameWithType: ContractPermissionDescriptor.ToJson
- uid: Neo.SmartContract.Manifest.WildcardContainer`1
  name: WildcardContainer<T>
  href: api/Neo.SmartContract.Manifest.WildcardContainer-1.html
  commentId: T:Neo.SmartContract.Manifest.WildcardContainer`1
  name.vb: WildcardContainer(Of T)
  fullName: Neo.SmartContract.Manifest.WildcardContainer<T>
  fullName.vb: Neo.SmartContract.Manifest.WildcardContainer(Of T)
  nameWithType: WildcardContainer<T>
  nameWithType.vb: WildcardContainer(Of T)
- uid: Neo.SmartContract.Manifest.WildcardContainer`1.Count
  name: Count
  href: api/Neo.SmartContract.Manifest.WildcardContainer-1.html#Neo_SmartContract_Manifest_WildcardContainer_1_Count
  commentId: P:Neo.SmartContract.Manifest.WildcardContainer`1.Count
  fullName: Neo.SmartContract.Manifest.WildcardContainer<T>.Count
  fullName.vb: Neo.SmartContract.Manifest.WildcardContainer(Of T).Count
  nameWithType: WildcardContainer<T>.Count
  nameWithType.vb: WildcardContainer(Of T).Count
- uid: Neo.SmartContract.Manifest.WildcardContainer`1.Count*
  name: Count
  href: api/Neo.SmartContract.Manifest.WildcardContainer-1.html#Neo_SmartContract_Manifest_WildcardContainer_1_Count_
  commentId: Overload:Neo.SmartContract.Manifest.WildcardContainer`1.Count
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.WildcardContainer<T>.Count
  fullName.vb: Neo.SmartContract.Manifest.WildcardContainer(Of T).Count
  nameWithType: WildcardContainer<T>.Count
  nameWithType.vb: WildcardContainer(Of T).Count
- uid: Neo.SmartContract.Manifest.WildcardContainer`1.Create(`0[])
  name: Create(params T[])
  href: api/Neo.SmartContract.Manifest.WildcardContainer-1.html#Neo_SmartContract_Manifest_WildcardContainer_1_Create__0___
  commentId: M:Neo.SmartContract.Manifest.WildcardContainer`1.Create(`0[])
  name.vb: Create(ParamArray T())
  fullName: Neo.SmartContract.Manifest.WildcardContainer<T>.Create(params T[])
  fullName.vb: Neo.SmartContract.Manifest.WildcardContainer(Of T).Create(ParamArray T())
  nameWithType: WildcardContainer<T>.Create(params T[])
  nameWithType.vb: WildcardContainer(Of T).Create(ParamArray T())
- uid: Neo.SmartContract.Manifest.WildcardContainer`1.Create*
  name: Create
  href: api/Neo.SmartContract.Manifest.WildcardContainer-1.html#Neo_SmartContract_Manifest_WildcardContainer_1_Create_
  commentId: Overload:Neo.SmartContract.Manifest.WildcardContainer`1.Create
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.WildcardContainer<T>.Create
  fullName.vb: Neo.SmartContract.Manifest.WildcardContainer(Of T).Create
  nameWithType: WildcardContainer<T>.Create
  nameWithType.vb: WildcardContainer(Of T).Create
- uid: Neo.SmartContract.Manifest.WildcardContainer`1.CreateWildcard
  name: CreateWildcard()
  href: api/Neo.SmartContract.Manifest.WildcardContainer-1.html#Neo_SmartContract_Manifest_WildcardContainer_1_CreateWildcard
  commentId: M:Neo.SmartContract.Manifest.WildcardContainer`1.CreateWildcard
  fullName: Neo.SmartContract.Manifest.WildcardContainer<T>.CreateWildcard()
  fullName.vb: Neo.SmartContract.Manifest.WildcardContainer(Of T).CreateWildcard()
  nameWithType: WildcardContainer<T>.CreateWildcard()
  nameWithType.vb: WildcardContainer(Of T).CreateWildcard()
- uid: Neo.SmartContract.Manifest.WildcardContainer`1.CreateWildcard*
  name: CreateWildcard
  href: api/Neo.SmartContract.Manifest.WildcardContainer-1.html#Neo_SmartContract_Manifest_WildcardContainer_1_CreateWildcard_
  commentId: Overload:Neo.SmartContract.Manifest.WildcardContainer`1.CreateWildcard
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.WildcardContainer<T>.CreateWildcard
  fullName.vb: Neo.SmartContract.Manifest.WildcardContainer(Of T).CreateWildcard
  nameWithType: WildcardContainer<T>.CreateWildcard
  nameWithType.vb: WildcardContainer(Of T).CreateWildcard
- uid: Neo.SmartContract.Manifest.WildcardContainer`1.FromJson(Neo.Json.JToken,System.Func{Neo.Json.JToken,`0})
  name: FromJson(JToken, Func<JToken, T>)
  href: api/Neo.SmartContract.Manifest.WildcardContainer-1.html#Neo_SmartContract_Manifest_WildcardContainer_1_FromJson_Neo_Json_JToken_System_Func_Neo_Json_JToken__0__
  commentId: M:Neo.SmartContract.Manifest.WildcardContainer`1.FromJson(Neo.Json.JToken,System.Func{Neo.Json.JToken,`0})
  name.vb: FromJson(JToken, Func(Of JToken, T))
  fullName: Neo.SmartContract.Manifest.WildcardContainer<T>.FromJson(Neo.Json.JToken, System.Func<Neo.Json.JToken, T>)
  fullName.vb: Neo.SmartContract.Manifest.WildcardContainer(Of T).FromJson(Neo.Json.JToken, System.Func(Of Neo.Json.JToken, T))
  nameWithType: WildcardContainer<T>.FromJson(JToken, Func<JToken, T>)
  nameWithType.vb: WildcardContainer(Of T).FromJson(JToken, Func(Of JToken, T))
- uid: Neo.SmartContract.Manifest.WildcardContainer`1.FromJson*
  name: FromJson
  href: api/Neo.SmartContract.Manifest.WildcardContainer-1.html#Neo_SmartContract_Manifest_WildcardContainer_1_FromJson_
  commentId: Overload:Neo.SmartContract.Manifest.WildcardContainer`1.FromJson
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.WildcardContainer<T>.FromJson
  fullName.vb: Neo.SmartContract.Manifest.WildcardContainer(Of T).FromJson
  nameWithType: WildcardContainer<T>.FromJson
  nameWithType.vb: WildcardContainer(Of T).FromJson
- uid: Neo.SmartContract.Manifest.WildcardContainer`1.GetEnumerator
  name: GetEnumerator()
  href: api/Neo.SmartContract.Manifest.WildcardContainer-1.html#Neo_SmartContract_Manifest_WildcardContainer_1_GetEnumerator
  commentId: M:Neo.SmartContract.Manifest.WildcardContainer`1.GetEnumerator
  fullName: Neo.SmartContract.Manifest.WildcardContainer<T>.GetEnumerator()
  fullName.vb: Neo.SmartContract.Manifest.WildcardContainer(Of T).GetEnumerator()
  nameWithType: WildcardContainer<T>.GetEnumerator()
  nameWithType.vb: WildcardContainer(Of T).GetEnumerator()
- uid: Neo.SmartContract.Manifest.WildcardContainer`1.GetEnumerator*
  name: GetEnumerator
  href: api/Neo.SmartContract.Manifest.WildcardContainer-1.html#Neo_SmartContract_Manifest_WildcardContainer_1_GetEnumerator_
  commentId: Overload:Neo.SmartContract.Manifest.WildcardContainer`1.GetEnumerator
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.WildcardContainer<T>.GetEnumerator
  fullName.vb: Neo.SmartContract.Manifest.WildcardContainer(Of T).GetEnumerator
  nameWithType: WildcardContainer<T>.GetEnumerator
  nameWithType.vb: WildcardContainer(Of T).GetEnumerator
- uid: Neo.SmartContract.Manifest.WildcardContainer`1.IsWildcard
  name: IsWildcard
  href: api/Neo.SmartContract.Manifest.WildcardContainer-1.html#Neo_SmartContract_Manifest_WildcardContainer_1_IsWildcard
  commentId: P:Neo.SmartContract.Manifest.WildcardContainer`1.IsWildcard
  fullName: Neo.SmartContract.Manifest.WildcardContainer<T>.IsWildcard
  fullName.vb: Neo.SmartContract.Manifest.WildcardContainer(Of T).IsWildcard
  nameWithType: WildcardContainer<T>.IsWildcard
  nameWithType.vb: WildcardContainer(Of T).IsWildcard
- uid: Neo.SmartContract.Manifest.WildcardContainer`1.IsWildcard*
  name: IsWildcard
  href: api/Neo.SmartContract.Manifest.WildcardContainer-1.html#Neo_SmartContract_Manifest_WildcardContainer_1_IsWildcard_
  commentId: Overload:Neo.SmartContract.Manifest.WildcardContainer`1.IsWildcard
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.WildcardContainer<T>.IsWildcard
  fullName.vb: Neo.SmartContract.Manifest.WildcardContainer(Of T).IsWildcard
  nameWithType: WildcardContainer<T>.IsWildcard
  nameWithType.vb: WildcardContainer(Of T).IsWildcard
- uid: Neo.SmartContract.Manifest.WildcardContainer`1.Item(System.Int32)
  name: this[int]
  href: api/Neo.SmartContract.Manifest.WildcardContainer-1.html#Neo_SmartContract_Manifest_WildcardContainer_1_Item_System_Int32_
  commentId: P:Neo.SmartContract.Manifest.WildcardContainer`1.Item(System.Int32)
  name.vb: this[](Integer)
  fullName: Neo.SmartContract.Manifest.WildcardContainer<T>.this[int]
  fullName.vb: Neo.SmartContract.Manifest.WildcardContainer(Of T).this[](Integer)
  nameWithType: WildcardContainer<T>.this[int]
  nameWithType.vb: WildcardContainer(Of T).this[](Integer)
- uid: Neo.SmartContract.Manifest.WildcardContainer`1.Item*
  name: this
  href: api/Neo.SmartContract.Manifest.WildcardContainer-1.html#Neo_SmartContract_Manifest_WildcardContainer_1_Item_
  commentId: Overload:Neo.SmartContract.Manifest.WildcardContainer`1.Item
  isSpec: "True"
  name.vb: this[]
  fullName: Neo.SmartContract.Manifest.WildcardContainer<T>.this
  fullName.vb: Neo.SmartContract.Manifest.WildcardContainer(Of T).this[]
  nameWithType: WildcardContainer<T>.this
  nameWithType.vb: WildcardContainer(Of T).this[]
- uid: Neo.SmartContract.Manifest.WildcardContainer`1.ToJson(System.Func{`0,Neo.Json.JToken})
  name: ToJson(Func<T, JToken>)
  href: api/Neo.SmartContract.Manifest.WildcardContainer-1.html#Neo_SmartContract_Manifest_WildcardContainer_1_ToJson_System_Func__0_Neo_Json_JToken__
  commentId: M:Neo.SmartContract.Manifest.WildcardContainer`1.ToJson(System.Func{`0,Neo.Json.JToken})
  name.vb: ToJson(Func(Of T, JToken))
  fullName: Neo.SmartContract.Manifest.WildcardContainer<T>.ToJson(System.Func<T, Neo.Json.JToken>)
  fullName.vb: Neo.SmartContract.Manifest.WildcardContainer(Of T).ToJson(System.Func(Of T, Neo.Json.JToken))
  nameWithType: WildcardContainer<T>.ToJson(Func<T, JToken>)
  nameWithType.vb: WildcardContainer(Of T).ToJson(Func(Of T, JToken))
- uid: Neo.SmartContract.Manifest.WildcardContainer`1.ToJson*
  name: ToJson
  href: api/Neo.SmartContract.Manifest.WildcardContainer-1.html#Neo_SmartContract_Manifest_WildcardContainer_1_ToJson_
  commentId: Overload:Neo.SmartContract.Manifest.WildcardContainer`1.ToJson
  isSpec: "True"
  fullName: Neo.SmartContract.Manifest.WildcardContainer<T>.ToJson
  fullName.vb: Neo.SmartContract.Manifest.WildcardContainer(Of T).ToJson
  nameWithType: WildcardContainer<T>.ToJson
  nameWithType.vb: WildcardContainer(Of T).ToJson
- uid: Neo.SmartContract.MethodToken
  name: MethodToken
  href: api/Neo.SmartContract.MethodToken.html
  commentId: T:Neo.SmartContract.MethodToken
  fullName: Neo.SmartContract.MethodToken
  nameWithType: MethodToken
- uid: Neo.SmartContract.MethodToken.CallFlags
  name: CallFlags
  href: api/Neo.SmartContract.MethodToken.html#Neo_SmartContract_MethodToken_CallFlags
  commentId: F:Neo.SmartContract.MethodToken.CallFlags
  fullName: Neo.SmartContract.MethodToken.CallFlags
  nameWithType: MethodToken.CallFlags
- uid: Neo.SmartContract.MethodToken.HasReturnValue
  name: HasReturnValue
  href: api/Neo.SmartContract.MethodToken.html#Neo_SmartContract_MethodToken_HasReturnValue
  commentId: F:Neo.SmartContract.MethodToken.HasReturnValue
  fullName: Neo.SmartContract.MethodToken.HasReturnValue
  nameWithType: MethodToken.HasReturnValue
- uid: Neo.SmartContract.MethodToken.Hash
  name: Hash
  href: api/Neo.SmartContract.MethodToken.html#Neo_SmartContract_MethodToken_Hash
  commentId: F:Neo.SmartContract.MethodToken.Hash
  fullName: Neo.SmartContract.MethodToken.Hash
  nameWithType: MethodToken.Hash
- uid: Neo.SmartContract.MethodToken.Method
  name: Method
  href: api/Neo.SmartContract.MethodToken.html#Neo_SmartContract_MethodToken_Method
  commentId: F:Neo.SmartContract.MethodToken.Method
  fullName: Neo.SmartContract.MethodToken.Method
  nameWithType: MethodToken.Method
- uid: Neo.SmartContract.MethodToken.ParametersCount
  name: ParametersCount
  href: api/Neo.SmartContract.MethodToken.html#Neo_SmartContract_MethodToken_ParametersCount
  commentId: F:Neo.SmartContract.MethodToken.ParametersCount
  fullName: Neo.SmartContract.MethodToken.ParametersCount
  nameWithType: MethodToken.ParametersCount
- uid: Neo.SmartContract.MethodToken.Size
  name: Size
  href: api/Neo.SmartContract.MethodToken.html#Neo_SmartContract_MethodToken_Size
  commentId: P:Neo.SmartContract.MethodToken.Size
  fullName: Neo.SmartContract.MethodToken.Size
  nameWithType: MethodToken.Size
- uid: Neo.SmartContract.MethodToken.Size*
  name: Size
  href: api/Neo.SmartContract.MethodToken.html#Neo_SmartContract_MethodToken_Size_
  commentId: Overload:Neo.SmartContract.MethodToken.Size
  isSpec: "True"
  fullName: Neo.SmartContract.MethodToken.Size
  nameWithType: MethodToken.Size
- uid: Neo.SmartContract.MethodToken.ToJson
  name: ToJson()
  href: api/Neo.SmartContract.MethodToken.html#Neo_SmartContract_MethodToken_ToJson
  commentId: M:Neo.SmartContract.MethodToken.ToJson
  fullName: Neo.SmartContract.MethodToken.ToJson()
  nameWithType: MethodToken.ToJson()
- uid: Neo.SmartContract.MethodToken.ToJson*
  name: ToJson
  href: api/Neo.SmartContract.MethodToken.html#Neo_SmartContract_MethodToken_ToJson_
  commentId: Overload:Neo.SmartContract.MethodToken.ToJson
  isSpec: "True"
  fullName: Neo.SmartContract.MethodToken.ToJson
  nameWithType: MethodToken.ToJson
- uid: Neo.SmartContract.Native
  name: Neo.SmartContract.Native
  href: api/Neo.SmartContract.Native.html
  commentId: N:Neo.SmartContract.Native
  fullName: Neo.SmartContract.Native
  nameWithType: Neo.SmartContract.Native
- uid: Neo.SmartContract.Native.AccountState
  name: AccountState
  href: api/Neo.SmartContract.Native.AccountState.html
  commentId: T:Neo.SmartContract.Native.AccountState
  fullName: Neo.SmartContract.Native.AccountState
  nameWithType: AccountState
- uid: Neo.SmartContract.Native.AccountState.Balance
  name: Balance
  href: api/Neo.SmartContract.Native.AccountState.html#Neo_SmartContract_Native_AccountState_Balance
  commentId: F:Neo.SmartContract.Native.AccountState.Balance
  fullName: Neo.SmartContract.Native.AccountState.Balance
  nameWithType: AccountState.Balance
- uid: Neo.SmartContract.Native.AccountState.FromStackItem(Neo.VM.Types.StackItem)
  name: FromStackItem(StackItem)
  href: api/Neo.SmartContract.Native.AccountState.html#Neo_SmartContract_Native_AccountState_FromStackItem_Neo_VM_Types_StackItem_
  commentId: M:Neo.SmartContract.Native.AccountState.FromStackItem(Neo.VM.Types.StackItem)
  fullName: Neo.SmartContract.Native.AccountState.FromStackItem(Neo.VM.Types.StackItem)
  nameWithType: AccountState.FromStackItem(StackItem)
- uid: Neo.SmartContract.Native.AccountState.FromStackItem*
  name: FromStackItem
  href: api/Neo.SmartContract.Native.AccountState.html#Neo_SmartContract_Native_AccountState_FromStackItem_
  commentId: Overload:Neo.SmartContract.Native.AccountState.FromStackItem
  isSpec: "True"
  fullName: Neo.SmartContract.Native.AccountState.FromStackItem
  nameWithType: AccountState.FromStackItem
- uid: Neo.SmartContract.Native.AccountState.ToStackItem(Neo.VM.ReferenceCounter)
  name: ToStackItem(ReferenceCounter)
  href: api/Neo.SmartContract.Native.AccountState.html#Neo_SmartContract_Native_AccountState_ToStackItem_Neo_VM_ReferenceCounter_
  commentId: M:Neo.SmartContract.Native.AccountState.ToStackItem(Neo.VM.ReferenceCounter)
  fullName: Neo.SmartContract.Native.AccountState.ToStackItem(Neo.VM.ReferenceCounter)
  nameWithType: AccountState.ToStackItem(ReferenceCounter)
- uid: Neo.SmartContract.Native.AccountState.ToStackItem*
  name: ToStackItem
  href: api/Neo.SmartContract.Native.AccountState.html#Neo_SmartContract_Native_AccountState_ToStackItem_
  commentId: Overload:Neo.SmartContract.Native.AccountState.ToStackItem
  isSpec: "True"
  fullName: Neo.SmartContract.Native.AccountState.ToStackItem
  nameWithType: AccountState.ToStackItem
- uid: Neo.SmartContract.Native.ContractManagement
  name: ContractManagement
  href: api/Neo.SmartContract.Native.ContractManagement.html
  commentId: T:Neo.SmartContract.Native.ContractManagement
  fullName: Neo.SmartContract.Native.ContractManagement
  nameWithType: ContractManagement
- uid: Neo.SmartContract.Native.ContractManagement.GetContract(Neo.Persistence.DataCache,Neo.UInt160)
  name: GetContract(DataCache, UInt160)
  href: api/Neo.SmartContract.Native.ContractManagement.html#Neo_SmartContract_Native_ContractManagement_GetContract_Neo_Persistence_DataCache_Neo_UInt160_
  commentId: M:Neo.SmartContract.Native.ContractManagement.GetContract(Neo.Persistence.DataCache,Neo.UInt160)
  fullName: Neo.SmartContract.Native.ContractManagement.GetContract(Neo.Persistence.DataCache, Neo.UInt160)
  nameWithType: ContractManagement.GetContract(DataCache, UInt160)
- uid: Neo.SmartContract.Native.ContractManagement.GetContract*
  name: GetContract
  href: api/Neo.SmartContract.Native.ContractManagement.html#Neo_SmartContract_Native_ContractManagement_GetContract_
  commentId: Overload:Neo.SmartContract.Native.ContractManagement.GetContract
  isSpec: "True"
  fullName: Neo.SmartContract.Native.ContractManagement.GetContract
  nameWithType: ContractManagement.GetContract
- uid: Neo.SmartContract.Native.ContractManagement.GetContractById(Neo.Persistence.DataCache,System.Int32)
  name: GetContractById(DataCache, int)
  href: api/Neo.SmartContract.Native.ContractManagement.html#Neo_SmartContract_Native_ContractManagement_GetContractById_Neo_Persistence_DataCache_System_Int32_
  commentId: M:Neo.SmartContract.Native.ContractManagement.GetContractById(Neo.Persistence.DataCache,System.Int32)
  name.vb: GetContractById(DataCache, Integer)
  fullName: Neo.SmartContract.Native.ContractManagement.GetContractById(Neo.Persistence.DataCache, int)
  fullName.vb: Neo.SmartContract.Native.ContractManagement.GetContractById(Neo.Persistence.DataCache, Integer)
  nameWithType: ContractManagement.GetContractById(DataCache, int)
  nameWithType.vb: ContractManagement.GetContractById(DataCache, Integer)
- uid: Neo.SmartContract.Native.ContractManagement.GetContractById*
  name: GetContractById
  href: api/Neo.SmartContract.Native.ContractManagement.html#Neo_SmartContract_Native_ContractManagement_GetContractById_
  commentId: Overload:Neo.SmartContract.Native.ContractManagement.GetContractById
  isSpec: "True"
  fullName: Neo.SmartContract.Native.ContractManagement.GetContractById
  nameWithType: ContractManagement.GetContractById
- uid: Neo.SmartContract.Native.ContractManagement.HasMethod(Neo.Persistence.DataCache,Neo.UInt160,System.String,System.Int32)
  name: HasMethod(DataCache, UInt160, string, int)
  href: api/Neo.SmartContract.Native.ContractManagement.html#Neo_SmartContract_Native_ContractManagement_HasMethod_Neo_Persistence_DataCache_Neo_UInt160_System_String_System_Int32_
  commentId: M:Neo.SmartContract.Native.ContractManagement.HasMethod(Neo.Persistence.DataCache,Neo.UInt160,System.String,System.Int32)
  name.vb: HasMethod(DataCache, UInt160, String, Integer)
  fullName: Neo.SmartContract.Native.ContractManagement.HasMethod(Neo.Persistence.DataCache, Neo.UInt160, string, int)
  fullName.vb: Neo.SmartContract.Native.ContractManagement.HasMethod(Neo.Persistence.DataCache, Neo.UInt160, String, Integer)
  nameWithType: ContractManagement.HasMethod(DataCache, UInt160, string, int)
  nameWithType.vb: ContractManagement.HasMethod(DataCache, UInt160, String, Integer)
- uid: Neo.SmartContract.Native.ContractManagement.HasMethod*
  name: HasMethod
  href: api/Neo.SmartContract.Native.ContractManagement.html#Neo_SmartContract_Native_ContractManagement_HasMethod_
  commentId: Overload:Neo.SmartContract.Native.ContractManagement.HasMethod
  isSpec: "True"
  fullName: Neo.SmartContract.Native.ContractManagement.HasMethod
  nameWithType: ContractManagement.HasMethod
- uid: Neo.SmartContract.Native.ContractManagement.ListContracts(Neo.Persistence.DataCache)
  name: ListContracts(DataCache)
  href: api/Neo.SmartContract.Native.ContractManagement.html#Neo_SmartContract_Native_ContractManagement_ListContracts_Neo_Persistence_DataCache_
  commentId: M:Neo.SmartContract.Native.ContractManagement.ListContracts(Neo.Persistence.DataCache)
  fullName: Neo.SmartContract.Native.ContractManagement.ListContracts(Neo.Persistence.DataCache)
  nameWithType: ContractManagement.ListContracts(DataCache)
- uid: Neo.SmartContract.Native.ContractManagement.ListContracts*
  name: ListContracts
  href: api/Neo.SmartContract.Native.ContractManagement.html#Neo_SmartContract_Native_ContractManagement_ListContracts_
  commentId: Overload:Neo.SmartContract.Native.ContractManagement.ListContracts
  isSpec: "True"
  fullName: Neo.SmartContract.Native.ContractManagement.ListContracts
  nameWithType: ContractManagement.ListContracts
- uid: Neo.SmartContract.Native.CryptoLib
  name: CryptoLib
  href: api/Neo.SmartContract.Native.CryptoLib.html
  commentId: T:Neo.SmartContract.Native.CryptoLib
  fullName: Neo.SmartContract.Native.CryptoLib
  nameWithType: CryptoLib
- uid: Neo.SmartContract.Native.CryptoLib.Bls12381Add(Neo.VM.Types.InteropInterface,Neo.VM.Types.InteropInterface)
  name: Bls12381Add(InteropInterface, InteropInterface)
  href: api/Neo.SmartContract.Native.CryptoLib.html#Neo_SmartContract_Native_CryptoLib_Bls12381Add_Neo_VM_Types_InteropInterface_Neo_VM_Types_InteropInterface_
  commentId: M:Neo.SmartContract.Native.CryptoLib.Bls12381Add(Neo.VM.Types.InteropInterface,Neo.VM.Types.InteropInterface)
  fullName: Neo.SmartContract.Native.CryptoLib.Bls12381Add(Neo.VM.Types.InteropInterface, Neo.VM.Types.InteropInterface)
  nameWithType: CryptoLib.Bls12381Add(InteropInterface, InteropInterface)
- uid: Neo.SmartContract.Native.CryptoLib.Bls12381Add*
  name: Bls12381Add
  href: api/Neo.SmartContract.Native.CryptoLib.html#Neo_SmartContract_Native_CryptoLib_Bls12381Add_
  commentId: Overload:Neo.SmartContract.Native.CryptoLib.Bls12381Add
  isSpec: "True"
  fullName: Neo.SmartContract.Native.CryptoLib.Bls12381Add
  nameWithType: CryptoLib.Bls12381Add
- uid: Neo.SmartContract.Native.CryptoLib.Bls12381Deserialize(System.Byte[])
  name: Bls12381Deserialize(byte[])
  href: api/Neo.SmartContract.Native.CryptoLib.html#Neo_SmartContract_Native_CryptoLib_Bls12381Deserialize_System_Byte___
  commentId: M:Neo.SmartContract.Native.CryptoLib.Bls12381Deserialize(System.Byte[])
  name.vb: Bls12381Deserialize(Byte())
  fullName: Neo.SmartContract.Native.CryptoLib.Bls12381Deserialize(byte[])
  fullName.vb: Neo.SmartContract.Native.CryptoLib.Bls12381Deserialize(Byte())
  nameWithType: CryptoLib.Bls12381Deserialize(byte[])
  nameWithType.vb: CryptoLib.Bls12381Deserialize(Byte())
- uid: Neo.SmartContract.Native.CryptoLib.Bls12381Deserialize*
  name: Bls12381Deserialize
  href: api/Neo.SmartContract.Native.CryptoLib.html#Neo_SmartContract_Native_CryptoLib_Bls12381Deserialize_
  commentId: Overload:Neo.SmartContract.Native.CryptoLib.Bls12381Deserialize
  isSpec: "True"
  fullName: Neo.SmartContract.Native.CryptoLib.Bls12381Deserialize
  nameWithType: CryptoLib.Bls12381Deserialize
- uid: Neo.SmartContract.Native.CryptoLib.Bls12381Equal(Neo.VM.Types.InteropInterface,Neo.VM.Types.InteropInterface)
  name: Bls12381Equal(InteropInterface, InteropInterface)
  href: api/Neo.SmartContract.Native.CryptoLib.html#Neo_SmartContract_Native_CryptoLib_Bls12381Equal_Neo_VM_Types_InteropInterface_Neo_VM_Types_InteropInterface_
  commentId: M:Neo.SmartContract.Native.CryptoLib.Bls12381Equal(Neo.VM.Types.InteropInterface,Neo.VM.Types.InteropInterface)
  fullName: Neo.SmartContract.Native.CryptoLib.Bls12381Equal(Neo.VM.Types.InteropInterface, Neo.VM.Types.InteropInterface)
  nameWithType: CryptoLib.Bls12381Equal(InteropInterface, InteropInterface)
- uid: Neo.SmartContract.Native.CryptoLib.Bls12381Equal*
  name: Bls12381Equal
  href: api/Neo.SmartContract.Native.CryptoLib.html#Neo_SmartContract_Native_CryptoLib_Bls12381Equal_
  commentId: Overload:Neo.SmartContract.Native.CryptoLib.Bls12381Equal
  isSpec: "True"
  fullName: Neo.SmartContract.Native.CryptoLib.Bls12381Equal
  nameWithType: CryptoLib.Bls12381Equal
- uid: Neo.SmartContract.Native.CryptoLib.Bls12381Mul(Neo.VM.Types.InteropInterface,System.Byte[],System.Boolean)
  name: Bls12381Mul(InteropInterface, byte[], bool)
  href: api/Neo.SmartContract.Native.CryptoLib.html#Neo_SmartContract_Native_CryptoLib_Bls12381Mul_Neo_VM_Types_InteropInterface_System_Byte___System_Boolean_
  commentId: M:Neo.SmartContract.Native.CryptoLib.Bls12381Mul(Neo.VM.Types.InteropInterface,System.Byte[],System.Boolean)
  name.vb: Bls12381Mul(InteropInterface, Byte(), Boolean)
  fullName: Neo.SmartContract.Native.CryptoLib.Bls12381Mul(Neo.VM.Types.InteropInterface, byte[], bool)
  fullName.vb: Neo.SmartContract.Native.CryptoLib.Bls12381Mul(Neo.VM.Types.InteropInterface, Byte(), Boolean)
  nameWithType: CryptoLib.Bls12381Mul(InteropInterface, byte[], bool)
  nameWithType.vb: CryptoLib.Bls12381Mul(InteropInterface, Byte(), Boolean)
- uid: Neo.SmartContract.Native.CryptoLib.Bls12381Mul*
  name: Bls12381Mul
  href: api/Neo.SmartContract.Native.CryptoLib.html#Neo_SmartContract_Native_CryptoLib_Bls12381Mul_
  commentId: Overload:Neo.SmartContract.Native.CryptoLib.Bls12381Mul
  isSpec: "True"
  fullName: Neo.SmartContract.Native.CryptoLib.Bls12381Mul
  nameWithType: CryptoLib.Bls12381Mul
- uid: Neo.SmartContract.Native.CryptoLib.Bls12381Pairing(Neo.VM.Types.InteropInterface,Neo.VM.Types.InteropInterface)
  name: Bls12381Pairing(InteropInterface, InteropInterface)
  href: api/Neo.SmartContract.Native.CryptoLib.html#Neo_SmartContract_Native_CryptoLib_Bls12381Pairing_Neo_VM_Types_InteropInterface_Neo_VM_Types_InteropInterface_
  commentId: M:Neo.SmartContract.Native.CryptoLib.Bls12381Pairing(Neo.VM.Types.InteropInterface,Neo.VM.Types.InteropInterface)
  fullName: Neo.SmartContract.Native.CryptoLib.Bls12381Pairing(Neo.VM.Types.InteropInterface, Neo.VM.Types.InteropInterface)
  nameWithType: CryptoLib.Bls12381Pairing(InteropInterface, InteropInterface)
- uid: Neo.SmartContract.Native.CryptoLib.Bls12381Pairing*
  name: Bls12381Pairing
  href: api/Neo.SmartContract.Native.CryptoLib.html#Neo_SmartContract_Native_CryptoLib_Bls12381Pairing_
  commentId: Overload:Neo.SmartContract.Native.CryptoLib.Bls12381Pairing
  isSpec: "True"
  fullName: Neo.SmartContract.Native.CryptoLib.Bls12381Pairing
  nameWithType: CryptoLib.Bls12381Pairing
- uid: Neo.SmartContract.Native.CryptoLib.Bls12381Serialize(Neo.VM.Types.InteropInterface)
  name: Bls12381Serialize(InteropInterface)
  href: api/Neo.SmartContract.Native.CryptoLib.html#Neo_SmartContract_Native_CryptoLib_Bls12381Serialize_Neo_VM_Types_InteropInterface_
  commentId: M:Neo.SmartContract.Native.CryptoLib.Bls12381Serialize(Neo.VM.Types.InteropInterface)
  fullName: Neo.SmartContract.Native.CryptoLib.Bls12381Serialize(Neo.VM.Types.InteropInterface)
  nameWithType: CryptoLib.Bls12381Serialize(InteropInterface)
- uid: Neo.SmartContract.Native.CryptoLib.Bls12381Serialize*
  name: Bls12381Serialize
  href: api/Neo.SmartContract.Native.CryptoLib.html#Neo_SmartContract_Native_CryptoLib_Bls12381Serialize_
  commentId: Overload:Neo.SmartContract.Native.CryptoLib.Bls12381Serialize
  isSpec: "True"
  fullName: Neo.SmartContract.Native.CryptoLib.Bls12381Serialize
  nameWithType: CryptoLib.Bls12381Serialize
- uid: Neo.SmartContract.Native.CryptoLib.Murmur32(System.Byte[],System.UInt32)
  name: Murmur32(byte[], uint)
  href: api/Neo.SmartContract.Native.CryptoLib.html#Neo_SmartContract_Native_CryptoLib_Murmur32_System_Byte___System_UInt32_
  commentId: M:Neo.SmartContract.Native.CryptoLib.Murmur32(System.Byte[],System.UInt32)
  name.vb: Murmur32(Byte(), UInteger)
  fullName: Neo.SmartContract.Native.CryptoLib.Murmur32(byte[], uint)
  fullName.vb: Neo.SmartContract.Native.CryptoLib.Murmur32(Byte(), UInteger)
  nameWithType: CryptoLib.Murmur32(byte[], uint)
  nameWithType.vb: CryptoLib.Murmur32(Byte(), UInteger)
- uid: Neo.SmartContract.Native.CryptoLib.Murmur32*
  name: Murmur32
  href: api/Neo.SmartContract.Native.CryptoLib.html#Neo_SmartContract_Native_CryptoLib_Murmur32_
  commentId: Overload:Neo.SmartContract.Native.CryptoLib.Murmur32
  isSpec: "True"
  fullName: Neo.SmartContract.Native.CryptoLib.Murmur32
  nameWithType: CryptoLib.Murmur32
- uid: Neo.SmartContract.Native.CryptoLib.RIPEMD160(System.Byte[])
  name: RIPEMD160(byte[])
  href: api/Neo.SmartContract.Native.CryptoLib.html#Neo_SmartContract_Native_CryptoLib_RIPEMD160_System_Byte___
  commentId: M:Neo.SmartContract.Native.CryptoLib.RIPEMD160(System.Byte[])
  name.vb: RIPEMD160(Byte())
  fullName: Neo.SmartContract.Native.CryptoLib.RIPEMD160(byte[])
  fullName.vb: Neo.SmartContract.Native.CryptoLib.RIPEMD160(Byte())
  nameWithType: CryptoLib.RIPEMD160(byte[])
  nameWithType.vb: CryptoLib.RIPEMD160(Byte())
- uid: Neo.SmartContract.Native.CryptoLib.RIPEMD160*
  name: RIPEMD160
  href: api/Neo.SmartContract.Native.CryptoLib.html#Neo_SmartContract_Native_CryptoLib_RIPEMD160_
  commentId: Overload:Neo.SmartContract.Native.CryptoLib.RIPEMD160
  isSpec: "True"
  fullName: Neo.SmartContract.Native.CryptoLib.RIPEMD160
  nameWithType: CryptoLib.RIPEMD160
- uid: Neo.SmartContract.Native.CryptoLib.Sha256(System.Byte[])
  name: Sha256(byte[])
  href: api/Neo.SmartContract.Native.CryptoLib.html#Neo_SmartContract_Native_CryptoLib_Sha256_System_Byte___
  commentId: M:Neo.SmartContract.Native.CryptoLib.Sha256(System.Byte[])
  name.vb: Sha256(Byte())
  fullName: Neo.SmartContract.Native.CryptoLib.Sha256(byte[])
  fullName.vb: Neo.SmartContract.Native.CryptoLib.Sha256(Byte())
  nameWithType: CryptoLib.Sha256(byte[])
  nameWithType.vb: CryptoLib.Sha256(Byte())
- uid: Neo.SmartContract.Native.CryptoLib.Sha256*
  name: Sha256
  href: api/Neo.SmartContract.Native.CryptoLib.html#Neo_SmartContract_Native_CryptoLib_Sha256_
  commentId: Overload:Neo.SmartContract.Native.CryptoLib.Sha256
  isSpec: "True"
  fullName: Neo.SmartContract.Native.CryptoLib.Sha256
  nameWithType: CryptoLib.Sha256
- uid: Neo.SmartContract.Native.CryptoLib.VerifyWithECDsa(System.Byte[],System.Byte[],System.Byte[],Neo.SmartContract.Native.NamedCurve)
  name: VerifyWithECDsa(byte[], byte[], byte[], NamedCurve)
  href: api/Neo.SmartContract.Native.CryptoLib.html#Neo_SmartContract_Native_CryptoLib_VerifyWithECDsa_System_Byte___System_Byte___System_Byte___Neo_SmartContract_Native_NamedCurve_
  commentId: M:Neo.SmartContract.Native.CryptoLib.VerifyWithECDsa(System.Byte[],System.Byte[],System.Byte[],Neo.SmartContract.Native.NamedCurve)
  name.vb: VerifyWithECDsa(Byte(), Byte(), Byte(), NamedCurve)
  fullName: Neo.SmartContract.Native.CryptoLib.VerifyWithECDsa(byte[], byte[], byte[], Neo.SmartContract.Native.NamedCurve)
  fullName.vb: Neo.SmartContract.Native.CryptoLib.VerifyWithECDsa(Byte(), Byte(), Byte(), Neo.SmartContract.Native.NamedCurve)
  nameWithType: CryptoLib.VerifyWithECDsa(byte[], byte[], byte[], NamedCurve)
  nameWithType.vb: CryptoLib.VerifyWithECDsa(Byte(), Byte(), Byte(), NamedCurve)
- uid: Neo.SmartContract.Native.CryptoLib.VerifyWithECDsa*
  name: VerifyWithECDsa
  href: api/Neo.SmartContract.Native.CryptoLib.html#Neo_SmartContract_Native_CryptoLib_VerifyWithECDsa_
  commentId: Overload:Neo.SmartContract.Native.CryptoLib.VerifyWithECDsa
  isSpec: "True"
  fullName: Neo.SmartContract.Native.CryptoLib.VerifyWithECDsa
  nameWithType: CryptoLib.VerifyWithECDsa
- uid: Neo.SmartContract.Native.FungibleToken`1
  name: FungibleToken<TState>
  href: api/Neo.SmartContract.Native.FungibleToken-1.html
  commentId: T:Neo.SmartContract.Native.FungibleToken`1
  name.vb: FungibleToken(Of TState)
  fullName: Neo.SmartContract.Native.FungibleToken<TState>
  fullName.vb: Neo.SmartContract.Native.FungibleToken(Of TState)
  nameWithType: FungibleToken<TState>
  nameWithType.vb: FungibleToken(Of TState)
- uid: Neo.SmartContract.Native.FungibleToken`1.#ctor
  name: FungibleToken()
  href: api/Neo.SmartContract.Native.FungibleToken-1.html#Neo_SmartContract_Native_FungibleToken_1__ctor
  commentId: M:Neo.SmartContract.Native.FungibleToken`1.#ctor
  name.vb: New()
  fullName: Neo.SmartContract.Native.FungibleToken<TState>.FungibleToken()
  fullName.vb: Neo.SmartContract.Native.FungibleToken(Of TState).New()
  nameWithType: FungibleToken<TState>.FungibleToken()
  nameWithType.vb: FungibleToken(Of TState).New()
- uid: Neo.SmartContract.Native.FungibleToken`1.#ctor*
  name: FungibleToken
  href: api/Neo.SmartContract.Native.FungibleToken-1.html#Neo_SmartContract_Native_FungibleToken_1__ctor_
  commentId: Overload:Neo.SmartContract.Native.FungibleToken`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.SmartContract.Native.FungibleToken<TState>.FungibleToken
  fullName.vb: Neo.SmartContract.Native.FungibleToken(Of TState).New
  nameWithType: FungibleToken<TState>.FungibleToken
  nameWithType.vb: FungibleToken(Of TState).New
- uid: Neo.SmartContract.Native.FungibleToken`1.BalanceOf(Neo.Persistence.DataCache,Neo.UInt160)
  name: BalanceOf(DataCache, UInt160)
  href: api/Neo.SmartContract.Native.FungibleToken-1.html#Neo_SmartContract_Native_FungibleToken_1_BalanceOf_Neo_Persistence_DataCache_Neo_UInt160_
  commentId: M:Neo.SmartContract.Native.FungibleToken`1.BalanceOf(Neo.Persistence.DataCache,Neo.UInt160)
  fullName: Neo.SmartContract.Native.FungibleToken<TState>.BalanceOf(Neo.Persistence.DataCache, Neo.UInt160)
  fullName.vb: Neo.SmartContract.Native.FungibleToken(Of TState).BalanceOf(Neo.Persistence.DataCache, Neo.UInt160)
  nameWithType: FungibleToken<TState>.BalanceOf(DataCache, UInt160)
  nameWithType.vb: FungibleToken(Of TState).BalanceOf(DataCache, UInt160)
- uid: Neo.SmartContract.Native.FungibleToken`1.BalanceOf*
  name: BalanceOf
  href: api/Neo.SmartContract.Native.FungibleToken-1.html#Neo_SmartContract_Native_FungibleToken_1_BalanceOf_
  commentId: Overload:Neo.SmartContract.Native.FungibleToken`1.BalanceOf
  isSpec: "True"
  fullName: Neo.SmartContract.Native.FungibleToken<TState>.BalanceOf
  fullName.vb: Neo.SmartContract.Native.FungibleToken(Of TState).BalanceOf
  nameWithType: FungibleToken<TState>.BalanceOf
  nameWithType.vb: FungibleToken(Of TState).BalanceOf
- uid: Neo.SmartContract.Native.FungibleToken`1.Decimals
  name: Decimals
  href: api/Neo.SmartContract.Native.FungibleToken-1.html#Neo_SmartContract_Native_FungibleToken_1_Decimals
  commentId: P:Neo.SmartContract.Native.FungibleToken`1.Decimals
  fullName: Neo.SmartContract.Native.FungibleToken<TState>.Decimals
  fullName.vb: Neo.SmartContract.Native.FungibleToken(Of TState).Decimals
  nameWithType: FungibleToken<TState>.Decimals
  nameWithType.vb: FungibleToken(Of TState).Decimals
- uid: Neo.SmartContract.Native.FungibleToken`1.Decimals*
  name: Decimals
  href: api/Neo.SmartContract.Native.FungibleToken-1.html#Neo_SmartContract_Native_FungibleToken_1_Decimals_
  commentId: Overload:Neo.SmartContract.Native.FungibleToken`1.Decimals
  isSpec: "True"
  fullName: Neo.SmartContract.Native.FungibleToken<TState>.Decimals
  fullName.vb: Neo.SmartContract.Native.FungibleToken(Of TState).Decimals
  nameWithType: FungibleToken<TState>.Decimals
  nameWithType.vb: FungibleToken(Of TState).Decimals
- uid: Neo.SmartContract.Native.FungibleToken`1.Factor
  name: Factor
  href: api/Neo.SmartContract.Native.FungibleToken-1.html#Neo_SmartContract_Native_FungibleToken_1_Factor
  commentId: P:Neo.SmartContract.Native.FungibleToken`1.Factor
  fullName: Neo.SmartContract.Native.FungibleToken<TState>.Factor
  fullName.vb: Neo.SmartContract.Native.FungibleToken(Of TState).Factor
  nameWithType: FungibleToken<TState>.Factor
  nameWithType.vb: FungibleToken(Of TState).Factor
- uid: Neo.SmartContract.Native.FungibleToken`1.Factor*
  name: Factor
  href: api/Neo.SmartContract.Native.FungibleToken-1.html#Neo_SmartContract_Native_FungibleToken_1_Factor_
  commentId: Overload:Neo.SmartContract.Native.FungibleToken`1.Factor
  isSpec: "True"
  fullName: Neo.SmartContract.Native.FungibleToken<TState>.Factor
  fullName.vb: Neo.SmartContract.Native.FungibleToken(Of TState).Factor
  nameWithType: FungibleToken<TState>.Factor
  nameWithType.vb: FungibleToken(Of TState).Factor
- uid: Neo.SmartContract.Native.FungibleToken`1.Prefix_Account
  name: Prefix_Account
  href: api/Neo.SmartContract.Native.FungibleToken-1.html#Neo_SmartContract_Native_FungibleToken_1_Prefix_Account
  commentId: F:Neo.SmartContract.Native.FungibleToken`1.Prefix_Account
  fullName: Neo.SmartContract.Native.FungibleToken<TState>.Prefix_Account
  fullName.vb: Neo.SmartContract.Native.FungibleToken(Of TState).Prefix_Account
  nameWithType: FungibleToken<TState>.Prefix_Account
  nameWithType.vb: FungibleToken(Of TState).Prefix_Account
- uid: Neo.SmartContract.Native.FungibleToken`1.Prefix_TotalSupply
  name: Prefix_TotalSupply
  href: api/Neo.SmartContract.Native.FungibleToken-1.html#Neo_SmartContract_Native_FungibleToken_1_Prefix_TotalSupply
  commentId: F:Neo.SmartContract.Native.FungibleToken`1.Prefix_TotalSupply
  fullName: Neo.SmartContract.Native.FungibleToken<TState>.Prefix_TotalSupply
  fullName.vb: Neo.SmartContract.Native.FungibleToken(Of TState).Prefix_TotalSupply
  nameWithType: FungibleToken<TState>.Prefix_TotalSupply
  nameWithType.vb: FungibleToken(Of TState).Prefix_TotalSupply
- uid: Neo.SmartContract.Native.FungibleToken`1.Symbol
  name: Symbol
  href: api/Neo.SmartContract.Native.FungibleToken-1.html#Neo_SmartContract_Native_FungibleToken_1_Symbol
  commentId: P:Neo.SmartContract.Native.FungibleToken`1.Symbol
  fullName: Neo.SmartContract.Native.FungibleToken<TState>.Symbol
  fullName.vb: Neo.SmartContract.Native.FungibleToken(Of TState).Symbol
  nameWithType: FungibleToken<TState>.Symbol
  nameWithType.vb: FungibleToken(Of TState).Symbol
- uid: Neo.SmartContract.Native.FungibleToken`1.Symbol*
  name: Symbol
  href: api/Neo.SmartContract.Native.FungibleToken-1.html#Neo_SmartContract_Native_FungibleToken_1_Symbol_
  commentId: Overload:Neo.SmartContract.Native.FungibleToken`1.Symbol
  isSpec: "True"
  fullName: Neo.SmartContract.Native.FungibleToken<TState>.Symbol
  fullName.vb: Neo.SmartContract.Native.FungibleToken(Of TState).Symbol
  nameWithType: FungibleToken<TState>.Symbol
  nameWithType.vb: FungibleToken(Of TState).Symbol
- uid: Neo.SmartContract.Native.FungibleToken`1.TotalSupply(Neo.Persistence.DataCache)
  name: TotalSupply(DataCache)
  href: api/Neo.SmartContract.Native.FungibleToken-1.html#Neo_SmartContract_Native_FungibleToken_1_TotalSupply_Neo_Persistence_DataCache_
  commentId: M:Neo.SmartContract.Native.FungibleToken`1.TotalSupply(Neo.Persistence.DataCache)
  fullName: Neo.SmartContract.Native.FungibleToken<TState>.TotalSupply(Neo.Persistence.DataCache)
  fullName.vb: Neo.SmartContract.Native.FungibleToken(Of TState).TotalSupply(Neo.Persistence.DataCache)
  nameWithType: FungibleToken<TState>.TotalSupply(DataCache)
  nameWithType.vb: FungibleToken(Of TState).TotalSupply(DataCache)
- uid: Neo.SmartContract.Native.FungibleToken`1.TotalSupply*
  name: TotalSupply
  href: api/Neo.SmartContract.Native.FungibleToken-1.html#Neo_SmartContract_Native_FungibleToken_1_TotalSupply_
  commentId: Overload:Neo.SmartContract.Native.FungibleToken`1.TotalSupply
  isSpec: "True"
  fullName: Neo.SmartContract.Native.FungibleToken<TState>.TotalSupply
  fullName.vb: Neo.SmartContract.Native.FungibleToken(Of TState).TotalSupply
  nameWithType: FungibleToken<TState>.TotalSupply
  nameWithType.vb: FungibleToken(Of TState).TotalSupply
- uid: Neo.SmartContract.Native.GasToken
  name: GasToken
  href: api/Neo.SmartContract.Native.GasToken.html
  commentId: T:Neo.SmartContract.Native.GasToken
  fullName: Neo.SmartContract.Native.GasToken
  nameWithType: GasToken
- uid: Neo.SmartContract.Native.GasToken.Decimals
  name: Decimals
  href: api/Neo.SmartContract.Native.GasToken.html#Neo_SmartContract_Native_GasToken_Decimals
  commentId: P:Neo.SmartContract.Native.GasToken.Decimals
  fullName: Neo.SmartContract.Native.GasToken.Decimals
  nameWithType: GasToken.Decimals
- uid: Neo.SmartContract.Native.GasToken.Decimals*
  name: Decimals
  href: api/Neo.SmartContract.Native.GasToken.html#Neo_SmartContract_Native_GasToken_Decimals_
  commentId: Overload:Neo.SmartContract.Native.GasToken.Decimals
  isSpec: "True"
  fullName: Neo.SmartContract.Native.GasToken.Decimals
  nameWithType: GasToken.Decimals
- uid: Neo.SmartContract.Native.GasToken.Symbol
  name: Symbol
  href: api/Neo.SmartContract.Native.GasToken.html#Neo_SmartContract_Native_GasToken_Symbol
  commentId: P:Neo.SmartContract.Native.GasToken.Symbol
  fullName: Neo.SmartContract.Native.GasToken.Symbol
  nameWithType: GasToken.Symbol
- uid: Neo.SmartContract.Native.GasToken.Symbol*
  name: Symbol
  href: api/Neo.SmartContract.Native.GasToken.html#Neo_SmartContract_Native_GasToken_Symbol_
  commentId: Overload:Neo.SmartContract.Native.GasToken.Symbol
  isSpec: "True"
  fullName: Neo.SmartContract.Native.GasToken.Symbol
  nameWithType: GasToken.Symbol
- uid: Neo.SmartContract.Native.LedgerContract
  name: LedgerContract
  href: api/Neo.SmartContract.Native.LedgerContract.html
  commentId: T:Neo.SmartContract.Native.LedgerContract
  fullName: Neo.SmartContract.Native.LedgerContract
  nameWithType: LedgerContract
- uid: Neo.SmartContract.Native.LedgerContract.ContainsBlock(Neo.Persistence.DataCache,Neo.UInt256)
  name: ContainsBlock(DataCache, UInt256)
  href: api/Neo.SmartContract.Native.LedgerContract.html#Neo_SmartContract_Native_LedgerContract_ContainsBlock_Neo_Persistence_DataCache_Neo_UInt256_
  commentId: M:Neo.SmartContract.Native.LedgerContract.ContainsBlock(Neo.Persistence.DataCache,Neo.UInt256)
  fullName: Neo.SmartContract.Native.LedgerContract.ContainsBlock(Neo.Persistence.DataCache, Neo.UInt256)
  nameWithType: LedgerContract.ContainsBlock(DataCache, UInt256)
- uid: Neo.SmartContract.Native.LedgerContract.ContainsBlock*
  name: ContainsBlock
  href: api/Neo.SmartContract.Native.LedgerContract.html#Neo_SmartContract_Native_LedgerContract_ContainsBlock_
  commentId: Overload:Neo.SmartContract.Native.LedgerContract.ContainsBlock
  isSpec: "True"
  fullName: Neo.SmartContract.Native.LedgerContract.ContainsBlock
  nameWithType: LedgerContract.ContainsBlock
- uid: Neo.SmartContract.Native.LedgerContract.ContainsConflictHash(Neo.Persistence.DataCache,Neo.UInt256,System.Collections.Generic.IEnumerable{Neo.UInt160})
  name: ContainsConflictHash(DataCache, UInt256, IEnumerable<UInt160>)
  href: api/Neo.SmartContract.Native.LedgerContract.html#Neo_SmartContract_Native_LedgerContract_ContainsConflictHash_Neo_Persistence_DataCache_Neo_UInt256_System_Collections_Generic_IEnumerable_Neo_UInt160__
  commentId: M:Neo.SmartContract.Native.LedgerContract.ContainsConflictHash(Neo.Persistence.DataCache,Neo.UInt256,System.Collections.Generic.IEnumerable{Neo.UInt160})
  name.vb: ContainsConflictHash(DataCache, UInt256, IEnumerable(Of UInt160))
  fullName: Neo.SmartContract.Native.LedgerContract.ContainsConflictHash(Neo.Persistence.DataCache, Neo.UInt256, System.Collections.Generic.IEnumerable<Neo.UInt160>)
  fullName.vb: Neo.SmartContract.Native.LedgerContract.ContainsConflictHash(Neo.Persistence.DataCache, Neo.UInt256, System.Collections.Generic.IEnumerable(Of Neo.UInt160))
  nameWithType: LedgerContract.ContainsConflictHash(DataCache, UInt256, IEnumerable<UInt160>)
  nameWithType.vb: LedgerContract.ContainsConflictHash(DataCache, UInt256, IEnumerable(Of UInt160))
- uid: Neo.SmartContract.Native.LedgerContract.ContainsConflictHash*
  name: ContainsConflictHash
  href: api/Neo.SmartContract.Native.LedgerContract.html#Neo_SmartContract_Native_LedgerContract_ContainsConflictHash_
  commentId: Overload:Neo.SmartContract.Native.LedgerContract.ContainsConflictHash
  isSpec: "True"
  fullName: Neo.SmartContract.Native.LedgerContract.ContainsConflictHash
  nameWithType: LedgerContract.ContainsConflictHash
- uid: Neo.SmartContract.Native.LedgerContract.ContainsTransaction(Neo.Persistence.DataCache,Neo.UInt256)
  name: ContainsTransaction(DataCache, UInt256)
  href: api/Neo.SmartContract.Native.LedgerContract.html#Neo_SmartContract_Native_LedgerContract_ContainsTransaction_Neo_Persistence_DataCache_Neo_UInt256_
  commentId: M:Neo.SmartContract.Native.LedgerContract.ContainsTransaction(Neo.Persistence.DataCache,Neo.UInt256)
  fullName: Neo.SmartContract.Native.LedgerContract.ContainsTransaction(Neo.Persistence.DataCache, Neo.UInt256)
  nameWithType: LedgerContract.ContainsTransaction(DataCache, UInt256)
- uid: Neo.SmartContract.Native.LedgerContract.ContainsTransaction*
  name: ContainsTransaction
  href: api/Neo.SmartContract.Native.LedgerContract.html#Neo_SmartContract_Native_LedgerContract_ContainsTransaction_
  commentId: Overload:Neo.SmartContract.Native.LedgerContract.ContainsTransaction
  isSpec: "True"
  fullName: Neo.SmartContract.Native.LedgerContract.ContainsTransaction
  nameWithType: LedgerContract.ContainsTransaction
- uid: Neo.SmartContract.Native.LedgerContract.CurrentHash(Neo.Persistence.DataCache)
  name: CurrentHash(DataCache)
  href: api/Neo.SmartContract.Native.LedgerContract.html#Neo_SmartContract_Native_LedgerContract_CurrentHash_Neo_Persistence_DataCache_
  commentId: M:Neo.SmartContract.Native.LedgerContract.CurrentHash(Neo.Persistence.DataCache)
  fullName: Neo.SmartContract.Native.LedgerContract.CurrentHash(Neo.Persistence.DataCache)
  nameWithType: LedgerContract.CurrentHash(DataCache)
- uid: Neo.SmartContract.Native.LedgerContract.CurrentHash*
  name: CurrentHash
  href: api/Neo.SmartContract.Native.LedgerContract.html#Neo_SmartContract_Native_LedgerContract_CurrentHash_
  commentId: Overload:Neo.SmartContract.Native.LedgerContract.CurrentHash
  isSpec: "True"
  fullName: Neo.SmartContract.Native.LedgerContract.CurrentHash
  nameWithType: LedgerContract.CurrentHash
- uid: Neo.SmartContract.Native.LedgerContract.CurrentIndex(Neo.Persistence.DataCache)
  name: CurrentIndex(DataCache)
  href: api/Neo.SmartContract.Native.LedgerContract.html#Neo_SmartContract_Native_LedgerContract_CurrentIndex_Neo_Persistence_DataCache_
  commentId: M:Neo.SmartContract.Native.LedgerContract.CurrentIndex(Neo.Persistence.DataCache)
  fullName: Neo.SmartContract.Native.LedgerContract.CurrentIndex(Neo.Persistence.DataCache)
  nameWithType: LedgerContract.CurrentIndex(DataCache)
- uid: Neo.SmartContract.Native.LedgerContract.CurrentIndex*
  name: CurrentIndex
  href: api/Neo.SmartContract.Native.LedgerContract.html#Neo_SmartContract_Native_LedgerContract_CurrentIndex_
  commentId: Overload:Neo.SmartContract.Native.LedgerContract.CurrentIndex
  isSpec: "True"
  fullName: Neo.SmartContract.Native.LedgerContract.CurrentIndex
  nameWithType: LedgerContract.CurrentIndex
- uid: Neo.SmartContract.Native.LedgerContract.GetBlock(Neo.Persistence.DataCache,Neo.UInt256)
  name: GetBlock(DataCache, UInt256)
  href: api/Neo.SmartContract.Native.LedgerContract.html#Neo_SmartContract_Native_LedgerContract_GetBlock_Neo_Persistence_DataCache_Neo_UInt256_
  commentId: M:Neo.SmartContract.Native.LedgerContract.GetBlock(Neo.Persistence.DataCache,Neo.UInt256)
  fullName: Neo.SmartContract.Native.LedgerContract.GetBlock(Neo.Persistence.DataCache, Neo.UInt256)
  nameWithType: LedgerContract.GetBlock(DataCache, UInt256)
- uid: Neo.SmartContract.Native.LedgerContract.GetBlock(Neo.Persistence.DataCache,System.UInt32)
  name: GetBlock(DataCache, uint)
  href: api/Neo.SmartContract.Native.LedgerContract.html#Neo_SmartContract_Native_LedgerContract_GetBlock_Neo_Persistence_DataCache_System_UInt32_
  commentId: M:Neo.SmartContract.Native.LedgerContract.GetBlock(Neo.Persistence.DataCache,System.UInt32)
  name.vb: GetBlock(DataCache, UInteger)
  fullName: Neo.SmartContract.Native.LedgerContract.GetBlock(Neo.Persistence.DataCache, uint)
  fullName.vb: Neo.SmartContract.Native.LedgerContract.GetBlock(Neo.Persistence.DataCache, UInteger)
  nameWithType: LedgerContract.GetBlock(DataCache, uint)
  nameWithType.vb: LedgerContract.GetBlock(DataCache, UInteger)
- uid: Neo.SmartContract.Native.LedgerContract.GetBlock*
  name: GetBlock
  href: api/Neo.SmartContract.Native.LedgerContract.html#Neo_SmartContract_Native_LedgerContract_GetBlock_
  commentId: Overload:Neo.SmartContract.Native.LedgerContract.GetBlock
  isSpec: "True"
  fullName: Neo.SmartContract.Native.LedgerContract.GetBlock
  nameWithType: LedgerContract.GetBlock
- uid: Neo.SmartContract.Native.LedgerContract.GetBlockHash(Neo.Persistence.DataCache,System.UInt32)
  name: GetBlockHash(DataCache, uint)
  href: api/Neo.SmartContract.Native.LedgerContract.html#Neo_SmartContract_Native_LedgerContract_GetBlockHash_Neo_Persistence_DataCache_System_UInt32_
  commentId: M:Neo.SmartContract.Native.LedgerContract.GetBlockHash(Neo.Persistence.DataCache,System.UInt32)
  name.vb: GetBlockHash(DataCache, UInteger)
  fullName: Neo.SmartContract.Native.LedgerContract.GetBlockHash(Neo.Persistence.DataCache, uint)
  fullName.vb: Neo.SmartContract.Native.LedgerContract.GetBlockHash(Neo.Persistence.DataCache, UInteger)
  nameWithType: LedgerContract.GetBlockHash(DataCache, uint)
  nameWithType.vb: LedgerContract.GetBlockHash(DataCache, UInteger)
- uid: Neo.SmartContract.Native.LedgerContract.GetBlockHash*
  name: GetBlockHash
  href: api/Neo.SmartContract.Native.LedgerContract.html#Neo_SmartContract_Native_LedgerContract_GetBlockHash_
  commentId: Overload:Neo.SmartContract.Native.LedgerContract.GetBlockHash
  isSpec: "True"
  fullName: Neo.SmartContract.Native.LedgerContract.GetBlockHash
  nameWithType: LedgerContract.GetBlockHash
- uid: Neo.SmartContract.Native.LedgerContract.GetHeader(Neo.Persistence.DataCache,Neo.UInt256)
  name: GetHeader(DataCache, UInt256)
  href: api/Neo.SmartContract.Native.LedgerContract.html#Neo_SmartContract_Native_LedgerContract_GetHeader_Neo_Persistence_DataCache_Neo_UInt256_
  commentId: M:Neo.SmartContract.Native.LedgerContract.GetHeader(Neo.Persistence.DataCache,Neo.UInt256)
  fullName: Neo.SmartContract.Native.LedgerContract.GetHeader(Neo.Persistence.DataCache, Neo.UInt256)
  nameWithType: LedgerContract.GetHeader(DataCache, UInt256)
- uid: Neo.SmartContract.Native.LedgerContract.GetHeader(Neo.Persistence.DataCache,System.UInt32)
  name: GetHeader(DataCache, uint)
  href: api/Neo.SmartContract.Native.LedgerContract.html#Neo_SmartContract_Native_LedgerContract_GetHeader_Neo_Persistence_DataCache_System_UInt32_
  commentId: M:Neo.SmartContract.Native.LedgerContract.GetHeader(Neo.Persistence.DataCache,System.UInt32)
  name.vb: GetHeader(DataCache, UInteger)
  fullName: Neo.SmartContract.Native.LedgerContract.GetHeader(Neo.Persistence.DataCache, uint)
  fullName.vb: Neo.SmartContract.Native.LedgerContract.GetHeader(Neo.Persistence.DataCache, UInteger)
  nameWithType: LedgerContract.GetHeader(DataCache, uint)
  nameWithType.vb: LedgerContract.GetHeader(DataCache, UInteger)
- uid: Neo.SmartContract.Native.LedgerContract.GetHeader*
  name: GetHeader
  href: api/Neo.SmartContract.Native.LedgerContract.html#Neo_SmartContract_Native_LedgerContract_GetHeader_
  commentId: Overload:Neo.SmartContract.Native.LedgerContract.GetHeader
  isSpec: "True"
  fullName: Neo.SmartContract.Native.LedgerContract.GetHeader
  nameWithType: LedgerContract.GetHeader
- uid: Neo.SmartContract.Native.LedgerContract.GetTransaction(Neo.Persistence.DataCache,Neo.UInt256)
  name: GetTransaction(DataCache, UInt256)
  href: api/Neo.SmartContract.Native.LedgerContract.html#Neo_SmartContract_Native_LedgerContract_GetTransaction_Neo_Persistence_DataCache_Neo_UInt256_
  commentId: M:Neo.SmartContract.Native.LedgerContract.GetTransaction(Neo.Persistence.DataCache,Neo.UInt256)
  fullName: Neo.SmartContract.Native.LedgerContract.GetTransaction(Neo.Persistence.DataCache, Neo.UInt256)
  nameWithType: LedgerContract.GetTransaction(DataCache, UInt256)
- uid: Neo.SmartContract.Native.LedgerContract.GetTransaction*
  name: GetTransaction
  href: api/Neo.SmartContract.Native.LedgerContract.html#Neo_SmartContract_Native_LedgerContract_GetTransaction_
  commentId: Overload:Neo.SmartContract.Native.LedgerContract.GetTransaction
  isSpec: "True"
  fullName: Neo.SmartContract.Native.LedgerContract.GetTransaction
  nameWithType: LedgerContract.GetTransaction
- uid: Neo.SmartContract.Native.LedgerContract.GetTransactionState(Neo.Persistence.DataCache,Neo.UInt256)
  name: GetTransactionState(DataCache, UInt256)
  href: api/Neo.SmartContract.Native.LedgerContract.html#Neo_SmartContract_Native_LedgerContract_GetTransactionState_Neo_Persistence_DataCache_Neo_UInt256_
  commentId: M:Neo.SmartContract.Native.LedgerContract.GetTransactionState(Neo.Persistence.DataCache,Neo.UInt256)
  fullName: Neo.SmartContract.Native.LedgerContract.GetTransactionState(Neo.Persistence.DataCache, Neo.UInt256)
  nameWithType: LedgerContract.GetTransactionState(DataCache, UInt256)
- uid: Neo.SmartContract.Native.LedgerContract.GetTransactionState*
  name: GetTransactionState
  href: api/Neo.SmartContract.Native.LedgerContract.html#Neo_SmartContract_Native_LedgerContract_GetTransactionState_
  commentId: Overload:Neo.SmartContract.Native.LedgerContract.GetTransactionState
  isSpec: "True"
  fullName: Neo.SmartContract.Native.LedgerContract.GetTransactionState
  nameWithType: LedgerContract.GetTransactionState
- uid: Neo.SmartContract.Native.LedgerContract.GetTrimmedBlock(Neo.Persistence.DataCache,Neo.UInt256)
  name: GetTrimmedBlock(DataCache, UInt256)
  href: api/Neo.SmartContract.Native.LedgerContract.html#Neo_SmartContract_Native_LedgerContract_GetTrimmedBlock_Neo_Persistence_DataCache_Neo_UInt256_
  commentId: M:Neo.SmartContract.Native.LedgerContract.GetTrimmedBlock(Neo.Persistence.DataCache,Neo.UInt256)
  fullName: Neo.SmartContract.Native.LedgerContract.GetTrimmedBlock(Neo.Persistence.DataCache, Neo.UInt256)
  nameWithType: LedgerContract.GetTrimmedBlock(DataCache, UInt256)
- uid: Neo.SmartContract.Native.LedgerContract.GetTrimmedBlock*
  name: GetTrimmedBlock
  href: api/Neo.SmartContract.Native.LedgerContract.html#Neo_SmartContract_Native_LedgerContract_GetTrimmedBlock_
  commentId: Overload:Neo.SmartContract.Native.LedgerContract.GetTrimmedBlock
  isSpec: "True"
  fullName: Neo.SmartContract.Native.LedgerContract.GetTrimmedBlock
  nameWithType: LedgerContract.GetTrimmedBlock
- uid: Neo.SmartContract.Native.NamedCurve
  name: NamedCurve
  href: api/Neo.SmartContract.Native.NamedCurve.html
  commentId: T:Neo.SmartContract.Native.NamedCurve
  fullName: Neo.SmartContract.Native.NamedCurve
  nameWithType: NamedCurve
- uid: Neo.SmartContract.Native.NamedCurve.secp256k1
  name: secp256k1
  href: api/Neo.SmartContract.Native.NamedCurve.html#Neo_SmartContract_Native_NamedCurve_secp256k1
  commentId: F:Neo.SmartContract.Native.NamedCurve.secp256k1
  fullName: Neo.SmartContract.Native.NamedCurve.secp256k1
  nameWithType: NamedCurve.secp256k1
- uid: Neo.SmartContract.Native.NamedCurve.secp256r1
  name: secp256r1
  href: api/Neo.SmartContract.Native.NamedCurve.html#Neo_SmartContract_Native_NamedCurve_secp256r1
  commentId: F:Neo.SmartContract.Native.NamedCurve.secp256r1
  fullName: Neo.SmartContract.Native.NamedCurve.secp256r1
  nameWithType: NamedCurve.secp256r1
- uid: Neo.SmartContract.Native.NativeContract
  name: NativeContract
  href: api/Neo.SmartContract.Native.NativeContract.html
  commentId: T:Neo.SmartContract.Native.NativeContract
  fullName: Neo.SmartContract.Native.NativeContract
  nameWithType: NativeContract
- uid: Neo.SmartContract.Native.NativeContract.#ctor
  name: NativeContract()
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract__ctor
  commentId: M:Neo.SmartContract.Native.NativeContract.#ctor
  name.vb: New()
  fullName: Neo.SmartContract.Native.NativeContract.NativeContract()
  fullName.vb: Neo.SmartContract.Native.NativeContract.New()
  nameWithType: NativeContract.NativeContract()
  nameWithType.vb: NativeContract.New()
- uid: Neo.SmartContract.Native.NativeContract.#ctor*
  name: NativeContract
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract__ctor_
  commentId: Overload:Neo.SmartContract.Native.NativeContract.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.SmartContract.Native.NativeContract.NativeContract
  fullName.vb: Neo.SmartContract.Native.NativeContract.New
  nameWithType: NativeContract.NativeContract
  nameWithType.vb: NativeContract.New
- uid: Neo.SmartContract.Native.NativeContract.CheckCommittee(Neo.SmartContract.ApplicationEngine)
  name: CheckCommittee(ApplicationEngine)
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_CheckCommittee_Neo_SmartContract_ApplicationEngine_
  commentId: M:Neo.SmartContract.Native.NativeContract.CheckCommittee(Neo.SmartContract.ApplicationEngine)
  fullName: Neo.SmartContract.Native.NativeContract.CheckCommittee(Neo.SmartContract.ApplicationEngine)
  nameWithType: NativeContract.CheckCommittee(ApplicationEngine)
- uid: Neo.SmartContract.Native.NativeContract.CheckCommittee*
  name: CheckCommittee
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_CheckCommittee_
  commentId: Overload:Neo.SmartContract.Native.NativeContract.CheckCommittee
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NativeContract.CheckCommittee
  nameWithType: NativeContract.CheckCommittee
- uid: Neo.SmartContract.Native.NativeContract.ContractManagement
  name: ContractManagement
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_ContractManagement
  commentId: P:Neo.SmartContract.Native.NativeContract.ContractManagement
  fullName: Neo.SmartContract.Native.NativeContract.ContractManagement
  nameWithType: NativeContract.ContractManagement
- uid: Neo.SmartContract.Native.NativeContract.ContractManagement*
  name: ContractManagement
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_ContractManagement_
  commentId: Overload:Neo.SmartContract.Native.NativeContract.ContractManagement
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NativeContract.ContractManagement
  nameWithType: NativeContract.ContractManagement
- uid: Neo.SmartContract.Native.NativeContract.Contracts
  name: Contracts
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_Contracts
  commentId: P:Neo.SmartContract.Native.NativeContract.Contracts
  fullName: Neo.SmartContract.Native.NativeContract.Contracts
  nameWithType: NativeContract.Contracts
- uid: Neo.SmartContract.Native.NativeContract.Contracts*
  name: Contracts
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_Contracts_
  commentId: Overload:Neo.SmartContract.Native.NativeContract.Contracts
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NativeContract.Contracts
  nameWithType: NativeContract.Contracts
- uid: Neo.SmartContract.Native.NativeContract.CryptoLib
  name: CryptoLib
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_CryptoLib
  commentId: P:Neo.SmartContract.Native.NativeContract.CryptoLib
  fullName: Neo.SmartContract.Native.NativeContract.CryptoLib
  nameWithType: NativeContract.CryptoLib
- uid: Neo.SmartContract.Native.NativeContract.CryptoLib*
  name: CryptoLib
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_CryptoLib_
  commentId: Overload:Neo.SmartContract.Native.NativeContract.CryptoLib
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NativeContract.CryptoLib
  nameWithType: NativeContract.CryptoLib
- uid: Neo.SmartContract.Native.NativeContract.GAS
  name: GAS
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_GAS
  commentId: P:Neo.SmartContract.Native.NativeContract.GAS
  fullName: Neo.SmartContract.Native.NativeContract.GAS
  nameWithType: NativeContract.GAS
- uid: Neo.SmartContract.Native.NativeContract.GAS*
  name: GAS
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_GAS_
  commentId: Overload:Neo.SmartContract.Native.NativeContract.GAS
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NativeContract.GAS
  nameWithType: NativeContract.GAS
- uid: Neo.SmartContract.Native.NativeContract.GetContract(Neo.UInt160)
  name: GetContract(UInt160)
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_GetContract_Neo_UInt160_
  commentId: M:Neo.SmartContract.Native.NativeContract.GetContract(Neo.UInt160)
  fullName: Neo.SmartContract.Native.NativeContract.GetContract(Neo.UInt160)
  nameWithType: NativeContract.GetContract(UInt160)
- uid: Neo.SmartContract.Native.NativeContract.GetContract*
  name: GetContract
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_GetContract_
  commentId: Overload:Neo.SmartContract.Native.NativeContract.GetContract
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NativeContract.GetContract
  nameWithType: NativeContract.GetContract
- uid: Neo.SmartContract.Native.NativeContract.Hash
  name: Hash
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_Hash
  commentId: P:Neo.SmartContract.Native.NativeContract.Hash
  fullName: Neo.SmartContract.Native.NativeContract.Hash
  nameWithType: NativeContract.Hash
- uid: Neo.SmartContract.Native.NativeContract.Hash*
  name: Hash
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_Hash_
  commentId: Overload:Neo.SmartContract.Native.NativeContract.Hash
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NativeContract.Hash
  nameWithType: NativeContract.Hash
- uid: Neo.SmartContract.Native.NativeContract.Id
  name: Id
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_Id
  commentId: P:Neo.SmartContract.Native.NativeContract.Id
  fullName: Neo.SmartContract.Native.NativeContract.Id
  nameWithType: NativeContract.Id
- uid: Neo.SmartContract.Native.NativeContract.Id*
  name: Id
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_Id_
  commentId: Overload:Neo.SmartContract.Native.NativeContract.Id
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NativeContract.Id
  nameWithType: NativeContract.Id
- uid: Neo.SmartContract.Native.NativeContract.IsNative(Neo.UInt160)
  name: IsNative(UInt160)
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_IsNative_Neo_UInt160_
  commentId: M:Neo.SmartContract.Native.NativeContract.IsNative(Neo.UInt160)
  fullName: Neo.SmartContract.Native.NativeContract.IsNative(Neo.UInt160)
  nameWithType: NativeContract.IsNative(UInt160)
- uid: Neo.SmartContract.Native.NativeContract.IsNative*
  name: IsNative
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_IsNative_
  commentId: Overload:Neo.SmartContract.Native.NativeContract.IsNative
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NativeContract.IsNative
  nameWithType: NativeContract.IsNative
- uid: Neo.SmartContract.Native.NativeContract.Ledger
  name: Ledger
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_Ledger
  commentId: P:Neo.SmartContract.Native.NativeContract.Ledger
  fullName: Neo.SmartContract.Native.NativeContract.Ledger
  nameWithType: NativeContract.Ledger
- uid: Neo.SmartContract.Native.NativeContract.Ledger*
  name: Ledger
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_Ledger_
  commentId: Overload:Neo.SmartContract.Native.NativeContract.Ledger
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NativeContract.Ledger
  nameWithType: NativeContract.Ledger
- uid: Neo.SmartContract.Native.NativeContract.Manifest
  name: Manifest
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_Manifest
  commentId: P:Neo.SmartContract.Native.NativeContract.Manifest
  fullName: Neo.SmartContract.Native.NativeContract.Manifest
  nameWithType: NativeContract.Manifest
- uid: Neo.SmartContract.Native.NativeContract.Manifest*
  name: Manifest
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_Manifest_
  commentId: Overload:Neo.SmartContract.Native.NativeContract.Manifest
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NativeContract.Manifest
  nameWithType: NativeContract.Manifest
- uid: Neo.SmartContract.Native.NativeContract.NEO
  name: NEO
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_NEO
  commentId: P:Neo.SmartContract.Native.NativeContract.NEO
  fullName: Neo.SmartContract.Native.NativeContract.NEO
  nameWithType: NativeContract.NEO
- uid: Neo.SmartContract.Native.NativeContract.NEO*
  name: NEO
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_NEO_
  commentId: Overload:Neo.SmartContract.Native.NativeContract.NEO
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NativeContract.NEO
  nameWithType: NativeContract.NEO
- uid: Neo.SmartContract.Native.NativeContract.Name
  name: Name
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_Name
  commentId: P:Neo.SmartContract.Native.NativeContract.Name
  fullName: Neo.SmartContract.Native.NativeContract.Name
  nameWithType: NativeContract.Name
- uid: Neo.SmartContract.Native.NativeContract.Name*
  name: Name
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_Name_
  commentId: Overload:Neo.SmartContract.Native.NativeContract.Name
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NativeContract.Name
  nameWithType: NativeContract.Name
- uid: Neo.SmartContract.Native.NativeContract.Nef
  name: Nef
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_Nef
  commentId: P:Neo.SmartContract.Native.NativeContract.Nef
  fullName: Neo.SmartContract.Native.NativeContract.Nef
  nameWithType: NativeContract.Nef
- uid: Neo.SmartContract.Native.NativeContract.Nef*
  name: Nef
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_Nef_
  commentId: Overload:Neo.SmartContract.Native.NativeContract.Nef
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NativeContract.Nef
  nameWithType: NativeContract.Nef
- uid: Neo.SmartContract.Native.NativeContract.Oracle
  name: Oracle
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_Oracle
  commentId: P:Neo.SmartContract.Native.NativeContract.Oracle
  fullName: Neo.SmartContract.Native.NativeContract.Oracle
  nameWithType: NativeContract.Oracle
- uid: Neo.SmartContract.Native.NativeContract.Oracle*
  name: Oracle
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_Oracle_
  commentId: Overload:Neo.SmartContract.Native.NativeContract.Oracle
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NativeContract.Oracle
  nameWithType: NativeContract.Oracle
- uid: Neo.SmartContract.Native.NativeContract.Policy
  name: Policy
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_Policy
  commentId: P:Neo.SmartContract.Native.NativeContract.Policy
  fullName: Neo.SmartContract.Native.NativeContract.Policy
  nameWithType: NativeContract.Policy
- uid: Neo.SmartContract.Native.NativeContract.Policy*
  name: Policy
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_Policy_
  commentId: Overload:Neo.SmartContract.Native.NativeContract.Policy
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NativeContract.Policy
  nameWithType: NativeContract.Policy
- uid: Neo.SmartContract.Native.NativeContract.RoleManagement
  name: RoleManagement
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_RoleManagement
  commentId: P:Neo.SmartContract.Native.NativeContract.RoleManagement
  fullName: Neo.SmartContract.Native.NativeContract.RoleManagement
  nameWithType: NativeContract.RoleManagement
- uid: Neo.SmartContract.Native.NativeContract.RoleManagement*
  name: RoleManagement
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_RoleManagement_
  commentId: Overload:Neo.SmartContract.Native.NativeContract.RoleManagement
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NativeContract.RoleManagement
  nameWithType: NativeContract.RoleManagement
- uid: Neo.SmartContract.Native.NativeContract.StdLib
  name: StdLib
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_StdLib
  commentId: P:Neo.SmartContract.Native.NativeContract.StdLib
  fullName: Neo.SmartContract.Native.NativeContract.StdLib
  nameWithType: NativeContract.StdLib
- uid: Neo.SmartContract.Native.NativeContract.StdLib*
  name: StdLib
  href: api/Neo.SmartContract.Native.NativeContract.html#Neo_SmartContract_Native_NativeContract_StdLib_
  commentId: Overload:Neo.SmartContract.Native.NativeContract.StdLib
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NativeContract.StdLib
  nameWithType: NativeContract.StdLib
- uid: Neo.SmartContract.Native.NeoToken
  name: NeoToken
  href: api/Neo.SmartContract.Native.NeoToken.html
  commentId: T:Neo.SmartContract.Native.NeoToken
  fullName: Neo.SmartContract.Native.NeoToken
  nameWithType: NeoToken
- uid: Neo.SmartContract.Native.NeoToken.ComputeNextBlockValidators(Neo.Persistence.DataCache,Neo.ProtocolSettings)
  name: ComputeNextBlockValidators(DataCache, ProtocolSettings)
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_ComputeNextBlockValidators_Neo_Persistence_DataCache_Neo_ProtocolSettings_
  commentId: M:Neo.SmartContract.Native.NeoToken.ComputeNextBlockValidators(Neo.Persistence.DataCache,Neo.ProtocolSettings)
  fullName: Neo.SmartContract.Native.NeoToken.ComputeNextBlockValidators(Neo.Persistence.DataCache, Neo.ProtocolSettings)
  nameWithType: NeoToken.ComputeNextBlockValidators(DataCache, ProtocolSettings)
- uid: Neo.SmartContract.Native.NeoToken.ComputeNextBlockValidators*
  name: ComputeNextBlockValidators
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_ComputeNextBlockValidators_
  commentId: Overload:Neo.SmartContract.Native.NeoToken.ComputeNextBlockValidators
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NeoToken.ComputeNextBlockValidators
  nameWithType: NeoToken.ComputeNextBlockValidators
- uid: Neo.SmartContract.Native.NeoToken.Decimals
  name: Decimals
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_Decimals
  commentId: P:Neo.SmartContract.Native.NeoToken.Decimals
  fullName: Neo.SmartContract.Native.NeoToken.Decimals
  nameWithType: NeoToken.Decimals
- uid: Neo.SmartContract.Native.NeoToken.Decimals*
  name: Decimals
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_Decimals_
  commentId: Overload:Neo.SmartContract.Native.NeoToken.Decimals
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NeoToken.Decimals
  nameWithType: NeoToken.Decimals
- uid: Neo.SmartContract.Native.NeoToken.EffectiveVoterTurnout
  name: EffectiveVoterTurnout
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_EffectiveVoterTurnout
  commentId: F:Neo.SmartContract.Native.NeoToken.EffectiveVoterTurnout
  fullName: Neo.SmartContract.Native.NeoToken.EffectiveVoterTurnout
  nameWithType: NeoToken.EffectiveVoterTurnout
- uid: Neo.SmartContract.Native.NeoToken.GetAccountState(Neo.Persistence.DataCache,Neo.UInt160)
  name: GetAccountState(DataCache, UInt160)
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_GetAccountState_Neo_Persistence_DataCache_Neo_UInt160_
  commentId: M:Neo.SmartContract.Native.NeoToken.GetAccountState(Neo.Persistence.DataCache,Neo.UInt160)
  fullName: Neo.SmartContract.Native.NeoToken.GetAccountState(Neo.Persistence.DataCache, Neo.UInt160)
  nameWithType: NeoToken.GetAccountState(DataCache, UInt160)
- uid: Neo.SmartContract.Native.NeoToken.GetAccountState*
  name: GetAccountState
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_GetAccountState_
  commentId: Overload:Neo.SmartContract.Native.NeoToken.GetAccountState
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NeoToken.GetAccountState
  nameWithType: NeoToken.GetAccountState
- uid: Neo.SmartContract.Native.NeoToken.GetCandidateVote(Neo.Persistence.DataCache,Neo.Cryptography.ECC.ECPoint)
  name: GetCandidateVote(DataCache, ECPoint)
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_GetCandidateVote_Neo_Persistence_DataCache_Neo_Cryptography_ECC_ECPoint_
  commentId: M:Neo.SmartContract.Native.NeoToken.GetCandidateVote(Neo.Persistence.DataCache,Neo.Cryptography.ECC.ECPoint)
  fullName: Neo.SmartContract.Native.NeoToken.GetCandidateVote(Neo.Persistence.DataCache, Neo.Cryptography.ECC.ECPoint)
  nameWithType: NeoToken.GetCandidateVote(DataCache, ECPoint)
- uid: Neo.SmartContract.Native.NeoToken.GetCandidateVote*
  name: GetCandidateVote
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_GetCandidateVote_
  commentId: Overload:Neo.SmartContract.Native.NeoToken.GetCandidateVote
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NeoToken.GetCandidateVote
  nameWithType: NeoToken.GetCandidateVote
- uid: Neo.SmartContract.Native.NeoToken.GetCommittee(Neo.Persistence.DataCache)
  name: GetCommittee(DataCache)
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_GetCommittee_Neo_Persistence_DataCache_
  commentId: M:Neo.SmartContract.Native.NeoToken.GetCommittee(Neo.Persistence.DataCache)
  fullName: Neo.SmartContract.Native.NeoToken.GetCommittee(Neo.Persistence.DataCache)
  nameWithType: NeoToken.GetCommittee(DataCache)
- uid: Neo.SmartContract.Native.NeoToken.GetCommittee*
  name: GetCommittee
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_GetCommittee_
  commentId: Overload:Neo.SmartContract.Native.NeoToken.GetCommittee
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NeoToken.GetCommittee
  nameWithType: NeoToken.GetCommittee
- uid: Neo.SmartContract.Native.NeoToken.GetCommitteeAddress(Neo.Persistence.DataCache)
  name: GetCommitteeAddress(DataCache)
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_GetCommitteeAddress_Neo_Persistence_DataCache_
  commentId: M:Neo.SmartContract.Native.NeoToken.GetCommitteeAddress(Neo.Persistence.DataCache)
  fullName: Neo.SmartContract.Native.NeoToken.GetCommitteeAddress(Neo.Persistence.DataCache)
  nameWithType: NeoToken.GetCommitteeAddress(DataCache)
- uid: Neo.SmartContract.Native.NeoToken.GetCommitteeAddress*
  name: GetCommitteeAddress
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_GetCommitteeAddress_
  commentId: Overload:Neo.SmartContract.Native.NeoToken.GetCommitteeAddress
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NeoToken.GetCommitteeAddress
  nameWithType: NeoToken.GetCommitteeAddress
- uid: Neo.SmartContract.Native.NeoToken.GetGasPerBlock(Neo.Persistence.DataCache)
  name: GetGasPerBlock(DataCache)
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_GetGasPerBlock_Neo_Persistence_DataCache_
  commentId: M:Neo.SmartContract.Native.NeoToken.GetGasPerBlock(Neo.Persistence.DataCache)
  fullName: Neo.SmartContract.Native.NeoToken.GetGasPerBlock(Neo.Persistence.DataCache)
  nameWithType: NeoToken.GetGasPerBlock(DataCache)
- uid: Neo.SmartContract.Native.NeoToken.GetGasPerBlock*
  name: GetGasPerBlock
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_GetGasPerBlock_
  commentId: Overload:Neo.SmartContract.Native.NeoToken.GetGasPerBlock
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NeoToken.GetGasPerBlock
  nameWithType: NeoToken.GetGasPerBlock
- uid: Neo.SmartContract.Native.NeoToken.GetNextBlockValidators(Neo.Persistence.DataCache,System.Int32)
  name: GetNextBlockValidators(DataCache, int)
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_GetNextBlockValidators_Neo_Persistence_DataCache_System_Int32_
  commentId: M:Neo.SmartContract.Native.NeoToken.GetNextBlockValidators(Neo.Persistence.DataCache,System.Int32)
  name.vb: GetNextBlockValidators(DataCache, Integer)
  fullName: Neo.SmartContract.Native.NeoToken.GetNextBlockValidators(Neo.Persistence.DataCache, int)
  fullName.vb: Neo.SmartContract.Native.NeoToken.GetNextBlockValidators(Neo.Persistence.DataCache, Integer)
  nameWithType: NeoToken.GetNextBlockValidators(DataCache, int)
  nameWithType.vb: NeoToken.GetNextBlockValidators(DataCache, Integer)
- uid: Neo.SmartContract.Native.NeoToken.GetNextBlockValidators*
  name: GetNextBlockValidators
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_GetNextBlockValidators_
  commentId: Overload:Neo.SmartContract.Native.NeoToken.GetNextBlockValidators
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NeoToken.GetNextBlockValidators
  nameWithType: NeoToken.GetNextBlockValidators
- uid: Neo.SmartContract.Native.NeoToken.GetRegisterPrice(Neo.Persistence.DataCache)
  name: GetRegisterPrice(DataCache)
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_GetRegisterPrice_Neo_Persistence_DataCache_
  commentId: M:Neo.SmartContract.Native.NeoToken.GetRegisterPrice(Neo.Persistence.DataCache)
  fullName: Neo.SmartContract.Native.NeoToken.GetRegisterPrice(Neo.Persistence.DataCache)
  nameWithType: NeoToken.GetRegisterPrice(DataCache)
- uid: Neo.SmartContract.Native.NeoToken.GetRegisterPrice*
  name: GetRegisterPrice
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_GetRegisterPrice_
  commentId: Overload:Neo.SmartContract.Native.NeoToken.GetRegisterPrice
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NeoToken.GetRegisterPrice
  nameWithType: NeoToken.GetRegisterPrice
- uid: Neo.SmartContract.Native.NeoToken.NeoAccountState
  name: NeoToken.NeoAccountState
  href: api/Neo.SmartContract.Native.NeoToken.NeoAccountState.html
  commentId: T:Neo.SmartContract.Native.NeoToken.NeoAccountState
  fullName: Neo.SmartContract.Native.NeoToken.NeoAccountState
  nameWithType: NeoToken.NeoAccountState
- uid: Neo.SmartContract.Native.NeoToken.NeoAccountState.BalanceHeight
  name: BalanceHeight
  href: api/Neo.SmartContract.Native.NeoToken.NeoAccountState.html#Neo_SmartContract_Native_NeoToken_NeoAccountState_BalanceHeight
  commentId: F:Neo.SmartContract.Native.NeoToken.NeoAccountState.BalanceHeight
  fullName: Neo.SmartContract.Native.NeoToken.NeoAccountState.BalanceHeight
  nameWithType: NeoToken.NeoAccountState.BalanceHeight
- uid: Neo.SmartContract.Native.NeoToken.NeoAccountState.FromStackItem(Neo.VM.Types.StackItem)
  name: FromStackItem(StackItem)
  href: api/Neo.SmartContract.Native.NeoToken.NeoAccountState.html#Neo_SmartContract_Native_NeoToken_NeoAccountState_FromStackItem_Neo_VM_Types_StackItem_
  commentId: M:Neo.SmartContract.Native.NeoToken.NeoAccountState.FromStackItem(Neo.VM.Types.StackItem)
  fullName: Neo.SmartContract.Native.NeoToken.NeoAccountState.FromStackItem(Neo.VM.Types.StackItem)
  nameWithType: NeoToken.NeoAccountState.FromStackItem(StackItem)
- uid: Neo.SmartContract.Native.NeoToken.NeoAccountState.FromStackItem*
  name: FromStackItem
  href: api/Neo.SmartContract.Native.NeoToken.NeoAccountState.html#Neo_SmartContract_Native_NeoToken_NeoAccountState_FromStackItem_
  commentId: Overload:Neo.SmartContract.Native.NeoToken.NeoAccountState.FromStackItem
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NeoToken.NeoAccountState.FromStackItem
  nameWithType: NeoToken.NeoAccountState.FromStackItem
- uid: Neo.SmartContract.Native.NeoToken.NeoAccountState.LastGasPerVote
  name: LastGasPerVote
  href: api/Neo.SmartContract.Native.NeoToken.NeoAccountState.html#Neo_SmartContract_Native_NeoToken_NeoAccountState_LastGasPerVote
  commentId: F:Neo.SmartContract.Native.NeoToken.NeoAccountState.LastGasPerVote
  fullName: Neo.SmartContract.Native.NeoToken.NeoAccountState.LastGasPerVote
  nameWithType: NeoToken.NeoAccountState.LastGasPerVote
- uid: Neo.SmartContract.Native.NeoToken.NeoAccountState.ToStackItem(Neo.VM.ReferenceCounter)
  name: ToStackItem(ReferenceCounter)
  href: api/Neo.SmartContract.Native.NeoToken.NeoAccountState.html#Neo_SmartContract_Native_NeoToken_NeoAccountState_ToStackItem_Neo_VM_ReferenceCounter_
  commentId: M:Neo.SmartContract.Native.NeoToken.NeoAccountState.ToStackItem(Neo.VM.ReferenceCounter)
  fullName: Neo.SmartContract.Native.NeoToken.NeoAccountState.ToStackItem(Neo.VM.ReferenceCounter)
  nameWithType: NeoToken.NeoAccountState.ToStackItem(ReferenceCounter)
- uid: Neo.SmartContract.Native.NeoToken.NeoAccountState.ToStackItem*
  name: ToStackItem
  href: api/Neo.SmartContract.Native.NeoToken.NeoAccountState.html#Neo_SmartContract_Native_NeoToken_NeoAccountState_ToStackItem_
  commentId: Overload:Neo.SmartContract.Native.NeoToken.NeoAccountState.ToStackItem
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NeoToken.NeoAccountState.ToStackItem
  nameWithType: NeoToken.NeoAccountState.ToStackItem
- uid: Neo.SmartContract.Native.NeoToken.NeoAccountState.VoteTo
  name: VoteTo
  href: api/Neo.SmartContract.Native.NeoToken.NeoAccountState.html#Neo_SmartContract_Native_NeoToken_NeoAccountState_VoteTo
  commentId: F:Neo.SmartContract.Native.NeoToken.NeoAccountState.VoteTo
  fullName: Neo.SmartContract.Native.NeoToken.NeoAccountState.VoteTo
  nameWithType: NeoToken.NeoAccountState.VoteTo
- uid: Neo.SmartContract.Native.NeoToken.ShouldRefreshCommittee(System.UInt32,System.Int32)
  name: ShouldRefreshCommittee(uint, int)
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_ShouldRefreshCommittee_System_UInt32_System_Int32_
  commentId: M:Neo.SmartContract.Native.NeoToken.ShouldRefreshCommittee(System.UInt32,System.Int32)
  name.vb: ShouldRefreshCommittee(UInteger, Integer)
  fullName: Neo.SmartContract.Native.NeoToken.ShouldRefreshCommittee(uint, int)
  fullName.vb: Neo.SmartContract.Native.NeoToken.ShouldRefreshCommittee(UInteger, Integer)
  nameWithType: NeoToken.ShouldRefreshCommittee(uint, int)
  nameWithType.vb: NeoToken.ShouldRefreshCommittee(UInteger, Integer)
- uid: Neo.SmartContract.Native.NeoToken.ShouldRefreshCommittee*
  name: ShouldRefreshCommittee
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_ShouldRefreshCommittee_
  commentId: Overload:Neo.SmartContract.Native.NeoToken.ShouldRefreshCommittee
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NeoToken.ShouldRefreshCommittee
  nameWithType: NeoToken.ShouldRefreshCommittee
- uid: Neo.SmartContract.Native.NeoToken.Symbol
  name: Symbol
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_Symbol
  commentId: P:Neo.SmartContract.Native.NeoToken.Symbol
  fullName: Neo.SmartContract.Native.NeoToken.Symbol
  nameWithType: NeoToken.Symbol
- uid: Neo.SmartContract.Native.NeoToken.Symbol*
  name: Symbol
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_Symbol_
  commentId: Overload:Neo.SmartContract.Native.NeoToken.Symbol
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NeoToken.Symbol
  nameWithType: NeoToken.Symbol
- uid: Neo.SmartContract.Native.NeoToken.TotalAmount
  name: TotalAmount
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_TotalAmount
  commentId: P:Neo.SmartContract.Native.NeoToken.TotalAmount
  fullName: Neo.SmartContract.Native.NeoToken.TotalAmount
  nameWithType: NeoToken.TotalAmount
- uid: Neo.SmartContract.Native.NeoToken.TotalAmount*
  name: TotalAmount
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_TotalAmount_
  commentId: Overload:Neo.SmartContract.Native.NeoToken.TotalAmount
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NeoToken.TotalAmount
  nameWithType: NeoToken.TotalAmount
- uid: Neo.SmartContract.Native.NeoToken.TotalSupply(Neo.Persistence.DataCache)
  name: TotalSupply(DataCache)
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_TotalSupply_Neo_Persistence_DataCache_
  commentId: M:Neo.SmartContract.Native.NeoToken.TotalSupply(Neo.Persistence.DataCache)
  fullName: Neo.SmartContract.Native.NeoToken.TotalSupply(Neo.Persistence.DataCache)
  nameWithType: NeoToken.TotalSupply(DataCache)
- uid: Neo.SmartContract.Native.NeoToken.TotalSupply*
  name: TotalSupply
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_TotalSupply_
  commentId: Overload:Neo.SmartContract.Native.NeoToken.TotalSupply
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NeoToken.TotalSupply
  nameWithType: NeoToken.TotalSupply
- uid: Neo.SmartContract.Native.NeoToken.UnclaimedGas(Neo.Persistence.DataCache,Neo.UInt160,System.UInt32)
  name: UnclaimedGas(DataCache, UInt160, uint)
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_UnclaimedGas_Neo_Persistence_DataCache_Neo_UInt160_System_UInt32_
  commentId: M:Neo.SmartContract.Native.NeoToken.UnclaimedGas(Neo.Persistence.DataCache,Neo.UInt160,System.UInt32)
  name.vb: UnclaimedGas(DataCache, UInt160, UInteger)
  fullName: Neo.SmartContract.Native.NeoToken.UnclaimedGas(Neo.Persistence.DataCache, Neo.UInt160, uint)
  fullName.vb: Neo.SmartContract.Native.NeoToken.UnclaimedGas(Neo.Persistence.DataCache, Neo.UInt160, UInteger)
  nameWithType: NeoToken.UnclaimedGas(DataCache, UInt160, uint)
  nameWithType.vb: NeoToken.UnclaimedGas(DataCache, UInt160, UInteger)
- uid: Neo.SmartContract.Native.NeoToken.UnclaimedGas*
  name: UnclaimedGas
  href: api/Neo.SmartContract.Native.NeoToken.html#Neo_SmartContract_Native_NeoToken_UnclaimedGas_
  commentId: Overload:Neo.SmartContract.Native.NeoToken.UnclaimedGas
  isSpec: "True"
  fullName: Neo.SmartContract.Native.NeoToken.UnclaimedGas
  nameWithType: NeoToken.UnclaimedGas
- uid: Neo.SmartContract.Native.OracleContract
  name: OracleContract
  href: api/Neo.SmartContract.Native.OracleContract.html
  commentId: T:Neo.SmartContract.Native.OracleContract
  fullName: Neo.SmartContract.Native.OracleContract
  nameWithType: OracleContract
- uid: Neo.SmartContract.Native.OracleContract.GetPrice(Neo.Persistence.DataCache)
  name: GetPrice(DataCache)
  href: api/Neo.SmartContract.Native.OracleContract.html#Neo_SmartContract_Native_OracleContract_GetPrice_Neo_Persistence_DataCache_
  commentId: M:Neo.SmartContract.Native.OracleContract.GetPrice(Neo.Persistence.DataCache)
  fullName: Neo.SmartContract.Native.OracleContract.GetPrice(Neo.Persistence.DataCache)
  nameWithType: OracleContract.GetPrice(DataCache)
- uid: Neo.SmartContract.Native.OracleContract.GetPrice*
  name: GetPrice
  href: api/Neo.SmartContract.Native.OracleContract.html#Neo_SmartContract_Native_OracleContract_GetPrice_
  commentId: Overload:Neo.SmartContract.Native.OracleContract.GetPrice
  isSpec: "True"
  fullName: Neo.SmartContract.Native.OracleContract.GetPrice
  nameWithType: OracleContract.GetPrice
- uid: Neo.SmartContract.Native.OracleContract.GetRequest(Neo.Persistence.DataCache,System.UInt64)
  name: GetRequest(DataCache, ulong)
  href: api/Neo.SmartContract.Native.OracleContract.html#Neo_SmartContract_Native_OracleContract_GetRequest_Neo_Persistence_DataCache_System_UInt64_
  commentId: M:Neo.SmartContract.Native.OracleContract.GetRequest(Neo.Persistence.DataCache,System.UInt64)
  name.vb: GetRequest(DataCache, ULong)
  fullName: Neo.SmartContract.Native.OracleContract.GetRequest(Neo.Persistence.DataCache, ulong)
  fullName.vb: Neo.SmartContract.Native.OracleContract.GetRequest(Neo.Persistence.DataCache, ULong)
  nameWithType: OracleContract.GetRequest(DataCache, ulong)
  nameWithType.vb: OracleContract.GetRequest(DataCache, ULong)
- uid: Neo.SmartContract.Native.OracleContract.GetRequest*
  name: GetRequest
  href: api/Neo.SmartContract.Native.OracleContract.html#Neo_SmartContract_Native_OracleContract_GetRequest_
  commentId: Overload:Neo.SmartContract.Native.OracleContract.GetRequest
  isSpec: "True"
  fullName: Neo.SmartContract.Native.OracleContract.GetRequest
  nameWithType: OracleContract.GetRequest
- uid: Neo.SmartContract.Native.OracleContract.GetRequests(Neo.Persistence.DataCache)
  name: GetRequests(DataCache)
  href: api/Neo.SmartContract.Native.OracleContract.html#Neo_SmartContract_Native_OracleContract_GetRequests_Neo_Persistence_DataCache_
  commentId: M:Neo.SmartContract.Native.OracleContract.GetRequests(Neo.Persistence.DataCache)
  fullName: Neo.SmartContract.Native.OracleContract.GetRequests(Neo.Persistence.DataCache)
  nameWithType: OracleContract.GetRequests(DataCache)
- uid: Neo.SmartContract.Native.OracleContract.GetRequests*
  name: GetRequests
  href: api/Neo.SmartContract.Native.OracleContract.html#Neo_SmartContract_Native_OracleContract_GetRequests_
  commentId: Overload:Neo.SmartContract.Native.OracleContract.GetRequests
  isSpec: "True"
  fullName: Neo.SmartContract.Native.OracleContract.GetRequests
  nameWithType: OracleContract.GetRequests
- uid: Neo.SmartContract.Native.OracleContract.GetRequestsByUrl(Neo.Persistence.DataCache,System.String)
  name: GetRequestsByUrl(DataCache, string)
  href: api/Neo.SmartContract.Native.OracleContract.html#Neo_SmartContract_Native_OracleContract_GetRequestsByUrl_Neo_Persistence_DataCache_System_String_
  commentId: M:Neo.SmartContract.Native.OracleContract.GetRequestsByUrl(Neo.Persistence.DataCache,System.String)
  name.vb: GetRequestsByUrl(DataCache, String)
  fullName: Neo.SmartContract.Native.OracleContract.GetRequestsByUrl(Neo.Persistence.DataCache, string)
  fullName.vb: Neo.SmartContract.Native.OracleContract.GetRequestsByUrl(Neo.Persistence.DataCache, String)
  nameWithType: OracleContract.GetRequestsByUrl(DataCache, string)
  nameWithType.vb: OracleContract.GetRequestsByUrl(DataCache, String)
- uid: Neo.SmartContract.Native.OracleContract.GetRequestsByUrl*
  name: GetRequestsByUrl
  href: api/Neo.SmartContract.Native.OracleContract.html#Neo_SmartContract_Native_OracleContract_GetRequestsByUrl_
  commentId: Overload:Neo.SmartContract.Native.OracleContract.GetRequestsByUrl
  isSpec: "True"
  fullName: Neo.SmartContract.Native.OracleContract.GetRequestsByUrl
  nameWithType: OracleContract.GetRequestsByUrl
- uid: Neo.SmartContract.Native.OracleRequest
  name: OracleRequest
  href: api/Neo.SmartContract.Native.OracleRequest.html
  commentId: T:Neo.SmartContract.Native.OracleRequest
  fullName: Neo.SmartContract.Native.OracleRequest
  nameWithType: OracleRequest
- uid: Neo.SmartContract.Native.OracleRequest.CallbackContract
  name: CallbackContract
  href: api/Neo.SmartContract.Native.OracleRequest.html#Neo_SmartContract_Native_OracleRequest_CallbackContract
  commentId: F:Neo.SmartContract.Native.OracleRequest.CallbackContract
  fullName: Neo.SmartContract.Native.OracleRequest.CallbackContract
  nameWithType: OracleRequest.CallbackContract
- uid: Neo.SmartContract.Native.OracleRequest.CallbackMethod
  name: CallbackMethod
  href: api/Neo.SmartContract.Native.OracleRequest.html#Neo_SmartContract_Native_OracleRequest_CallbackMethod
  commentId: F:Neo.SmartContract.Native.OracleRequest.CallbackMethod
  fullName: Neo.SmartContract.Native.OracleRequest.CallbackMethod
  nameWithType: OracleRequest.CallbackMethod
- uid: Neo.SmartContract.Native.OracleRequest.Filter
  name: Filter
  href: api/Neo.SmartContract.Native.OracleRequest.html#Neo_SmartContract_Native_OracleRequest_Filter
  commentId: F:Neo.SmartContract.Native.OracleRequest.Filter
  fullName: Neo.SmartContract.Native.OracleRequest.Filter
  nameWithType: OracleRequest.Filter
- uid: Neo.SmartContract.Native.OracleRequest.FromStackItem(Neo.VM.Types.StackItem)
  name: FromStackItem(StackItem)
  href: api/Neo.SmartContract.Native.OracleRequest.html#Neo_SmartContract_Native_OracleRequest_FromStackItem_Neo_VM_Types_StackItem_
  commentId: M:Neo.SmartContract.Native.OracleRequest.FromStackItem(Neo.VM.Types.StackItem)
  fullName: Neo.SmartContract.Native.OracleRequest.FromStackItem(Neo.VM.Types.StackItem)
  nameWithType: OracleRequest.FromStackItem(StackItem)
- uid: Neo.SmartContract.Native.OracleRequest.FromStackItem*
  name: FromStackItem
  href: api/Neo.SmartContract.Native.OracleRequest.html#Neo_SmartContract_Native_OracleRequest_FromStackItem_
  commentId: Overload:Neo.SmartContract.Native.OracleRequest.FromStackItem
  isSpec: "True"
  fullName: Neo.SmartContract.Native.OracleRequest.FromStackItem
  nameWithType: OracleRequest.FromStackItem
- uid: Neo.SmartContract.Native.OracleRequest.GasForResponse
  name: GasForResponse
  href: api/Neo.SmartContract.Native.OracleRequest.html#Neo_SmartContract_Native_OracleRequest_GasForResponse
  commentId: F:Neo.SmartContract.Native.OracleRequest.GasForResponse
  fullName: Neo.SmartContract.Native.OracleRequest.GasForResponse
  nameWithType: OracleRequest.GasForResponse
- uid: Neo.SmartContract.Native.OracleRequest.OriginalTxid
  name: OriginalTxid
  href: api/Neo.SmartContract.Native.OracleRequest.html#Neo_SmartContract_Native_OracleRequest_OriginalTxid
  commentId: F:Neo.SmartContract.Native.OracleRequest.OriginalTxid
  fullName: Neo.SmartContract.Native.OracleRequest.OriginalTxid
  nameWithType: OracleRequest.OriginalTxid
- uid: Neo.SmartContract.Native.OracleRequest.ToStackItem(Neo.VM.ReferenceCounter)
  name: ToStackItem(ReferenceCounter)
  href: api/Neo.SmartContract.Native.OracleRequest.html#Neo_SmartContract_Native_OracleRequest_ToStackItem_Neo_VM_ReferenceCounter_
  commentId: M:Neo.SmartContract.Native.OracleRequest.ToStackItem(Neo.VM.ReferenceCounter)
  fullName: Neo.SmartContract.Native.OracleRequest.ToStackItem(Neo.VM.ReferenceCounter)
  nameWithType: OracleRequest.ToStackItem(ReferenceCounter)
- uid: Neo.SmartContract.Native.OracleRequest.ToStackItem*
  name: ToStackItem
  href: api/Neo.SmartContract.Native.OracleRequest.html#Neo_SmartContract_Native_OracleRequest_ToStackItem_
  commentId: Overload:Neo.SmartContract.Native.OracleRequest.ToStackItem
  isSpec: "True"
  fullName: Neo.SmartContract.Native.OracleRequest.ToStackItem
  nameWithType: OracleRequest.ToStackItem
- uid: Neo.SmartContract.Native.OracleRequest.Url
  name: Url
  href: api/Neo.SmartContract.Native.OracleRequest.html#Neo_SmartContract_Native_OracleRequest_Url
  commentId: F:Neo.SmartContract.Native.OracleRequest.Url
  fullName: Neo.SmartContract.Native.OracleRequest.Url
  nameWithType: OracleRequest.Url
- uid: Neo.SmartContract.Native.OracleRequest.UserData
  name: UserData
  href: api/Neo.SmartContract.Native.OracleRequest.html#Neo_SmartContract_Native_OracleRequest_UserData
  commentId: F:Neo.SmartContract.Native.OracleRequest.UserData
  fullName: Neo.SmartContract.Native.OracleRequest.UserData
  nameWithType: OracleRequest.UserData
- uid: Neo.SmartContract.Native.PolicyContract
  name: PolicyContract
  href: api/Neo.SmartContract.Native.PolicyContract.html
  commentId: T:Neo.SmartContract.Native.PolicyContract
  fullName: Neo.SmartContract.Native.PolicyContract
  nameWithType: PolicyContract
- uid: Neo.SmartContract.Native.PolicyContract.DefaultAttributeFee
  name: DefaultAttributeFee
  href: api/Neo.SmartContract.Native.PolicyContract.html#Neo_SmartContract_Native_PolicyContract_DefaultAttributeFee
  commentId: F:Neo.SmartContract.Native.PolicyContract.DefaultAttributeFee
  fullName: Neo.SmartContract.Native.PolicyContract.DefaultAttributeFee
  nameWithType: PolicyContract.DefaultAttributeFee
- uid: Neo.SmartContract.Native.PolicyContract.DefaultExecFeeFactor
  name: DefaultExecFeeFactor
  href: api/Neo.SmartContract.Native.PolicyContract.html#Neo_SmartContract_Native_PolicyContract_DefaultExecFeeFactor
  commentId: F:Neo.SmartContract.Native.PolicyContract.DefaultExecFeeFactor
  fullName: Neo.SmartContract.Native.PolicyContract.DefaultExecFeeFactor
  nameWithType: PolicyContract.DefaultExecFeeFactor
- uid: Neo.SmartContract.Native.PolicyContract.DefaultFeePerByte
  name: DefaultFeePerByte
  href: api/Neo.SmartContract.Native.PolicyContract.html#Neo_SmartContract_Native_PolicyContract_DefaultFeePerByte
  commentId: F:Neo.SmartContract.Native.PolicyContract.DefaultFeePerByte
  fullName: Neo.SmartContract.Native.PolicyContract.DefaultFeePerByte
  nameWithType: PolicyContract.DefaultFeePerByte
- uid: Neo.SmartContract.Native.PolicyContract.DefaultStoragePrice
  name: DefaultStoragePrice
  href: api/Neo.SmartContract.Native.PolicyContract.html#Neo_SmartContract_Native_PolicyContract_DefaultStoragePrice
  commentId: F:Neo.SmartContract.Native.PolicyContract.DefaultStoragePrice
  fullName: Neo.SmartContract.Native.PolicyContract.DefaultStoragePrice
  nameWithType: PolicyContract.DefaultStoragePrice
- uid: Neo.SmartContract.Native.PolicyContract.GetAttributeFee(Neo.Persistence.DataCache,System.Byte)
  name: GetAttributeFee(DataCache, byte)
  href: api/Neo.SmartContract.Native.PolicyContract.html#Neo_SmartContract_Native_PolicyContract_GetAttributeFee_Neo_Persistence_DataCache_System_Byte_
  commentId: M:Neo.SmartContract.Native.PolicyContract.GetAttributeFee(Neo.Persistence.DataCache,System.Byte)
  name.vb: GetAttributeFee(DataCache, Byte)
  fullName: Neo.SmartContract.Native.PolicyContract.GetAttributeFee(Neo.Persistence.DataCache, byte)
  fullName.vb: Neo.SmartContract.Native.PolicyContract.GetAttributeFee(Neo.Persistence.DataCache, Byte)
  nameWithType: PolicyContract.GetAttributeFee(DataCache, byte)
  nameWithType.vb: PolicyContract.GetAttributeFee(DataCache, Byte)
- uid: Neo.SmartContract.Native.PolicyContract.GetAttributeFee*
  name: GetAttributeFee
  href: api/Neo.SmartContract.Native.PolicyContract.html#Neo_SmartContract_Native_PolicyContract_GetAttributeFee_
  commentId: Overload:Neo.SmartContract.Native.PolicyContract.GetAttributeFee
  isSpec: "True"
  fullName: Neo.SmartContract.Native.PolicyContract.GetAttributeFee
  nameWithType: PolicyContract.GetAttributeFee
- uid: Neo.SmartContract.Native.PolicyContract.GetExecFeeFactor(Neo.Persistence.DataCache)
  name: GetExecFeeFactor(DataCache)
  href: api/Neo.SmartContract.Native.PolicyContract.html#Neo_SmartContract_Native_PolicyContract_GetExecFeeFactor_Neo_Persistence_DataCache_
  commentId: M:Neo.SmartContract.Native.PolicyContract.GetExecFeeFactor(Neo.Persistence.DataCache)
  fullName: Neo.SmartContract.Native.PolicyContract.GetExecFeeFactor(Neo.Persistence.DataCache)
  nameWithType: PolicyContract.GetExecFeeFactor(DataCache)
- uid: Neo.SmartContract.Native.PolicyContract.GetExecFeeFactor*
  name: GetExecFeeFactor
  href: api/Neo.SmartContract.Native.PolicyContract.html#Neo_SmartContract_Native_PolicyContract_GetExecFeeFactor_
  commentId: Overload:Neo.SmartContract.Native.PolicyContract.GetExecFeeFactor
  isSpec: "True"
  fullName: Neo.SmartContract.Native.PolicyContract.GetExecFeeFactor
  nameWithType: PolicyContract.GetExecFeeFactor
- uid: Neo.SmartContract.Native.PolicyContract.GetFeePerByte(Neo.Persistence.DataCache)
  name: GetFeePerByte(DataCache)
  href: api/Neo.SmartContract.Native.PolicyContract.html#Neo_SmartContract_Native_PolicyContract_GetFeePerByte_Neo_Persistence_DataCache_
  commentId: M:Neo.SmartContract.Native.PolicyContract.GetFeePerByte(Neo.Persistence.DataCache)
  fullName: Neo.SmartContract.Native.PolicyContract.GetFeePerByte(Neo.Persistence.DataCache)
  nameWithType: PolicyContract.GetFeePerByte(DataCache)
- uid: Neo.SmartContract.Native.PolicyContract.GetFeePerByte*
  name: GetFeePerByte
  href: api/Neo.SmartContract.Native.PolicyContract.html#Neo_SmartContract_Native_PolicyContract_GetFeePerByte_
  commentId: Overload:Neo.SmartContract.Native.PolicyContract.GetFeePerByte
  isSpec: "True"
  fullName: Neo.SmartContract.Native.PolicyContract.GetFeePerByte
  nameWithType: PolicyContract.GetFeePerByte
- uid: Neo.SmartContract.Native.PolicyContract.GetStoragePrice(Neo.Persistence.DataCache)
  name: GetStoragePrice(DataCache)
  href: api/Neo.SmartContract.Native.PolicyContract.html#Neo_SmartContract_Native_PolicyContract_GetStoragePrice_Neo_Persistence_DataCache_
  commentId: M:Neo.SmartContract.Native.PolicyContract.GetStoragePrice(Neo.Persistence.DataCache)
  fullName: Neo.SmartContract.Native.PolicyContract.GetStoragePrice(Neo.Persistence.DataCache)
  nameWithType: PolicyContract.GetStoragePrice(DataCache)
- uid: Neo.SmartContract.Native.PolicyContract.GetStoragePrice*
  name: GetStoragePrice
  href: api/Neo.SmartContract.Native.PolicyContract.html#Neo_SmartContract_Native_PolicyContract_GetStoragePrice_
  commentId: Overload:Neo.SmartContract.Native.PolicyContract.GetStoragePrice
  isSpec: "True"
  fullName: Neo.SmartContract.Native.PolicyContract.GetStoragePrice
  nameWithType: PolicyContract.GetStoragePrice
- uid: Neo.SmartContract.Native.PolicyContract.IsBlocked(Neo.Persistence.DataCache,Neo.UInt160)
  name: IsBlocked(DataCache, UInt160)
  href: api/Neo.SmartContract.Native.PolicyContract.html#Neo_SmartContract_Native_PolicyContract_IsBlocked_Neo_Persistence_DataCache_Neo_UInt160_
  commentId: M:Neo.SmartContract.Native.PolicyContract.IsBlocked(Neo.Persistence.DataCache,Neo.UInt160)
  fullName: Neo.SmartContract.Native.PolicyContract.IsBlocked(Neo.Persistence.DataCache, Neo.UInt160)
  nameWithType: PolicyContract.IsBlocked(DataCache, UInt160)
- uid: Neo.SmartContract.Native.PolicyContract.IsBlocked*
  name: IsBlocked
  href: api/Neo.SmartContract.Native.PolicyContract.html#Neo_SmartContract_Native_PolicyContract_IsBlocked_
  commentId: Overload:Neo.SmartContract.Native.PolicyContract.IsBlocked
  isSpec: "True"
  fullName: Neo.SmartContract.Native.PolicyContract.IsBlocked
  nameWithType: PolicyContract.IsBlocked
- uid: Neo.SmartContract.Native.PolicyContract.MaxAttributeFee
  name: MaxAttributeFee
  href: api/Neo.SmartContract.Native.PolicyContract.html#Neo_SmartContract_Native_PolicyContract_MaxAttributeFee
  commentId: F:Neo.SmartContract.Native.PolicyContract.MaxAttributeFee
  fullName: Neo.SmartContract.Native.PolicyContract.MaxAttributeFee
  nameWithType: PolicyContract.MaxAttributeFee
- uid: Neo.SmartContract.Native.PolicyContract.MaxExecFeeFactor
  name: MaxExecFeeFactor
  href: api/Neo.SmartContract.Native.PolicyContract.html#Neo_SmartContract_Native_PolicyContract_MaxExecFeeFactor
  commentId: F:Neo.SmartContract.Native.PolicyContract.MaxExecFeeFactor
  fullName: Neo.SmartContract.Native.PolicyContract.MaxExecFeeFactor
  nameWithType: PolicyContract.MaxExecFeeFactor
- uid: Neo.SmartContract.Native.PolicyContract.MaxStoragePrice
  name: MaxStoragePrice
  href: api/Neo.SmartContract.Native.PolicyContract.html#Neo_SmartContract_Native_PolicyContract_MaxStoragePrice
  commentId: F:Neo.SmartContract.Native.PolicyContract.MaxStoragePrice
  fullName: Neo.SmartContract.Native.PolicyContract.MaxStoragePrice
  nameWithType: PolicyContract.MaxStoragePrice
- uid: Neo.SmartContract.Native.Role
  name: Role
  href: api/Neo.SmartContract.Native.Role.html
  commentId: T:Neo.SmartContract.Native.Role
  fullName: Neo.SmartContract.Native.Role
  nameWithType: Role
- uid: Neo.SmartContract.Native.Role.NeoFSAlphabetNode
  name: NeoFSAlphabetNode
  href: api/Neo.SmartContract.Native.Role.html#Neo_SmartContract_Native_Role_NeoFSAlphabetNode
  commentId: F:Neo.SmartContract.Native.Role.NeoFSAlphabetNode
  fullName: Neo.SmartContract.Native.Role.NeoFSAlphabetNode
  nameWithType: Role.NeoFSAlphabetNode
- uid: Neo.SmartContract.Native.Role.Oracle
  name: Oracle
  href: api/Neo.SmartContract.Native.Role.html#Neo_SmartContract_Native_Role_Oracle
  commentId: F:Neo.SmartContract.Native.Role.Oracle
  fullName: Neo.SmartContract.Native.Role.Oracle
  nameWithType: Role.Oracle
- uid: Neo.SmartContract.Native.Role.StateValidator
  name: StateValidator
  href: api/Neo.SmartContract.Native.Role.html#Neo_SmartContract_Native_Role_StateValidator
  commentId: F:Neo.SmartContract.Native.Role.StateValidator
  fullName: Neo.SmartContract.Native.Role.StateValidator
  nameWithType: Role.StateValidator
- uid: Neo.SmartContract.Native.RoleManagement
  name: RoleManagement
  href: api/Neo.SmartContract.Native.RoleManagement.html
  commentId: T:Neo.SmartContract.Native.RoleManagement
  fullName: Neo.SmartContract.Native.RoleManagement
  nameWithType: RoleManagement
- uid: Neo.SmartContract.Native.RoleManagement.GetDesignatedByRole(Neo.Persistence.DataCache,Neo.SmartContract.Native.Role,System.UInt32)
  name: GetDesignatedByRole(DataCache, Role, uint)
  href: api/Neo.SmartContract.Native.RoleManagement.html#Neo_SmartContract_Native_RoleManagement_GetDesignatedByRole_Neo_Persistence_DataCache_Neo_SmartContract_Native_Role_System_UInt32_
  commentId: M:Neo.SmartContract.Native.RoleManagement.GetDesignatedByRole(Neo.Persistence.DataCache,Neo.SmartContract.Native.Role,System.UInt32)
  name.vb: GetDesignatedByRole(DataCache, Role, UInteger)
  fullName: Neo.SmartContract.Native.RoleManagement.GetDesignatedByRole(Neo.Persistence.DataCache, Neo.SmartContract.Native.Role, uint)
  fullName.vb: Neo.SmartContract.Native.RoleManagement.GetDesignatedByRole(Neo.Persistence.DataCache, Neo.SmartContract.Native.Role, UInteger)
  nameWithType: RoleManagement.GetDesignatedByRole(DataCache, Role, uint)
  nameWithType.vb: RoleManagement.GetDesignatedByRole(DataCache, Role, UInteger)
- uid: Neo.SmartContract.Native.RoleManagement.GetDesignatedByRole*
  name: GetDesignatedByRole
  href: api/Neo.SmartContract.Native.RoleManagement.html#Neo_SmartContract_Native_RoleManagement_GetDesignatedByRole_
  commentId: Overload:Neo.SmartContract.Native.RoleManagement.GetDesignatedByRole
  isSpec: "True"
  fullName: Neo.SmartContract.Native.RoleManagement.GetDesignatedByRole
  nameWithType: RoleManagement.GetDesignatedByRole
- uid: Neo.SmartContract.Native.StdLib
  name: StdLib
  href: api/Neo.SmartContract.Native.StdLib.html
  commentId: T:Neo.SmartContract.Native.StdLib
  fullName: Neo.SmartContract.Native.StdLib
  nameWithType: StdLib
- uid: Neo.SmartContract.Native.StdLib.Atoi(System.String)
  name: Atoi(string)
  href: api/Neo.SmartContract.Native.StdLib.html#Neo_SmartContract_Native_StdLib_Atoi_System_String_
  commentId: M:Neo.SmartContract.Native.StdLib.Atoi(System.String)
  name.vb: Atoi(String)
  fullName: Neo.SmartContract.Native.StdLib.Atoi(string)
  fullName.vb: Neo.SmartContract.Native.StdLib.Atoi(String)
  nameWithType: StdLib.Atoi(string)
  nameWithType.vb: StdLib.Atoi(String)
- uid: Neo.SmartContract.Native.StdLib.Atoi(System.String,System.Int32)
  name: Atoi(string, int)
  href: api/Neo.SmartContract.Native.StdLib.html#Neo_SmartContract_Native_StdLib_Atoi_System_String_System_Int32_
  commentId: M:Neo.SmartContract.Native.StdLib.Atoi(System.String,System.Int32)
  name.vb: Atoi(String, Integer)
  fullName: Neo.SmartContract.Native.StdLib.Atoi(string, int)
  fullName.vb: Neo.SmartContract.Native.StdLib.Atoi(String, Integer)
  nameWithType: StdLib.Atoi(string, int)
  nameWithType.vb: StdLib.Atoi(String, Integer)
- uid: Neo.SmartContract.Native.StdLib.Atoi*
  name: Atoi
  href: api/Neo.SmartContract.Native.StdLib.html#Neo_SmartContract_Native_StdLib_Atoi_
  commentId: Overload:Neo.SmartContract.Native.StdLib.Atoi
  isSpec: "True"
  fullName: Neo.SmartContract.Native.StdLib.Atoi
  nameWithType: StdLib.Atoi
- uid: Neo.SmartContract.Native.StdLib.Base58CheckDecode(System.String)
  name: Base58CheckDecode(string)
  href: api/Neo.SmartContract.Native.StdLib.html#Neo_SmartContract_Native_StdLib_Base58CheckDecode_System_String_
  commentId: M:Neo.SmartContract.Native.StdLib.Base58CheckDecode(System.String)
  name.vb: Base58CheckDecode(String)
  fullName: Neo.SmartContract.Native.StdLib.Base58CheckDecode(string)
  fullName.vb: Neo.SmartContract.Native.StdLib.Base58CheckDecode(String)
  nameWithType: StdLib.Base58CheckDecode(string)
  nameWithType.vb: StdLib.Base58CheckDecode(String)
- uid: Neo.SmartContract.Native.StdLib.Base58CheckDecode*
  name: Base58CheckDecode
  href: api/Neo.SmartContract.Native.StdLib.html#Neo_SmartContract_Native_StdLib_Base58CheckDecode_
  commentId: Overload:Neo.SmartContract.Native.StdLib.Base58CheckDecode
  isSpec: "True"
  fullName: Neo.SmartContract.Native.StdLib.Base58CheckDecode
  nameWithType: StdLib.Base58CheckDecode
- uid: Neo.SmartContract.Native.StdLib.Base58CheckEncode(System.Byte[])
  name: Base58CheckEncode(byte[])
  href: api/Neo.SmartContract.Native.StdLib.html#Neo_SmartContract_Native_StdLib_Base58CheckEncode_System_Byte___
  commentId: M:Neo.SmartContract.Native.StdLib.Base58CheckEncode(System.Byte[])
  name.vb: Base58CheckEncode(Byte())
  fullName: Neo.SmartContract.Native.StdLib.Base58CheckEncode(byte[])
  fullName.vb: Neo.SmartContract.Native.StdLib.Base58CheckEncode(Byte())
  nameWithType: StdLib.Base58CheckEncode(byte[])
  nameWithType.vb: StdLib.Base58CheckEncode(Byte())
- uid: Neo.SmartContract.Native.StdLib.Base58CheckEncode*
  name: Base58CheckEncode
  href: api/Neo.SmartContract.Native.StdLib.html#Neo_SmartContract_Native_StdLib_Base58CheckEncode_
  commentId: Overload:Neo.SmartContract.Native.StdLib.Base58CheckEncode
  isSpec: "True"
  fullName: Neo.SmartContract.Native.StdLib.Base58CheckEncode
  nameWithType: StdLib.Base58CheckEncode
- uid: Neo.SmartContract.Native.StdLib.Base58Decode(System.String)
  name: Base58Decode(string)
  href: api/Neo.SmartContract.Native.StdLib.html#Neo_SmartContract_Native_StdLib_Base58Decode_System_String_
  commentId: M:Neo.SmartContract.Native.StdLib.Base58Decode(System.String)
  name.vb: Base58Decode(String)
  fullName: Neo.SmartContract.Native.StdLib.Base58Decode(string)
  fullName.vb: Neo.SmartContract.Native.StdLib.Base58Decode(String)
  nameWithType: StdLib.Base58Decode(string)
  nameWithType.vb: StdLib.Base58Decode(String)
- uid: Neo.SmartContract.Native.StdLib.Base58Decode*
  name: Base58Decode
  href: api/Neo.SmartContract.Native.StdLib.html#Neo_SmartContract_Native_StdLib_Base58Decode_
  commentId: Overload:Neo.SmartContract.Native.StdLib.Base58Decode
  isSpec: "True"
  fullName: Neo.SmartContract.Native.StdLib.Base58Decode
  nameWithType: StdLib.Base58Decode
- uid: Neo.SmartContract.Native.StdLib.Base58Encode(System.Byte[])
  name: Base58Encode(byte[])
  href: api/Neo.SmartContract.Native.StdLib.html#Neo_SmartContract_Native_StdLib_Base58Encode_System_Byte___
  commentId: M:Neo.SmartContract.Native.StdLib.Base58Encode(System.Byte[])
  name.vb: Base58Encode(Byte())
  fullName: Neo.SmartContract.Native.StdLib.Base58Encode(byte[])
  fullName.vb: Neo.SmartContract.Native.StdLib.Base58Encode(Byte())
  nameWithType: StdLib.Base58Encode(byte[])
  nameWithType.vb: StdLib.Base58Encode(Byte())
- uid: Neo.SmartContract.Native.StdLib.Base58Encode*
  name: Base58Encode
  href: api/Neo.SmartContract.Native.StdLib.html#Neo_SmartContract_Native_StdLib_Base58Encode_
  commentId: Overload:Neo.SmartContract.Native.StdLib.Base58Encode
  isSpec: "True"
  fullName: Neo.SmartContract.Native.StdLib.Base58Encode
  nameWithType: StdLib.Base58Encode
- uid: Neo.SmartContract.Native.StdLib.Base64Decode(System.String)
  name: Base64Decode(string)
  href: api/Neo.SmartContract.Native.StdLib.html#Neo_SmartContract_Native_StdLib_Base64Decode_System_String_
  commentId: M:Neo.SmartContract.Native.StdLib.Base64Decode(System.String)
  name.vb: Base64Decode(String)
  fullName: Neo.SmartContract.Native.StdLib.Base64Decode(string)
  fullName.vb: Neo.SmartContract.Native.StdLib.Base64Decode(String)
  nameWithType: StdLib.Base64Decode(string)
  nameWithType.vb: StdLib.Base64Decode(String)
- uid: Neo.SmartContract.Native.StdLib.Base64Decode*
  name: Base64Decode
  href: api/Neo.SmartContract.Native.StdLib.html#Neo_SmartContract_Native_StdLib_Base64Decode_
  commentId: Overload:Neo.SmartContract.Native.StdLib.Base64Decode
  isSpec: "True"
  fullName: Neo.SmartContract.Native.StdLib.Base64Decode
  nameWithType: StdLib.Base64Decode
- uid: Neo.SmartContract.Native.StdLib.Base64Encode(System.Byte[])
  name: Base64Encode(byte[])
  href: api/Neo.SmartContract.Native.StdLib.html#Neo_SmartContract_Native_StdLib_Base64Encode_System_Byte___
  commentId: M:Neo.SmartContract.Native.StdLib.Base64Encode(System.Byte[])
  name.vb: Base64Encode(Byte())
  fullName: Neo.SmartContract.Native.StdLib.Base64Encode(byte[])
  fullName.vb: Neo.SmartContract.Native.StdLib.Base64Encode(Byte())
  nameWithType: StdLib.Base64Encode(byte[])
  nameWithType.vb: StdLib.Base64Encode(Byte())
- uid: Neo.SmartContract.Native.StdLib.Base64Encode*
  name: Base64Encode
  href: api/Neo.SmartContract.Native.StdLib.html#Neo_SmartContract_Native_StdLib_Base64Encode_
  commentId: Overload:Neo.SmartContract.Native.StdLib.Base64Encode
  isSpec: "True"
  fullName: Neo.SmartContract.Native.StdLib.Base64Encode
  nameWithType: StdLib.Base64Encode
- uid: Neo.SmartContract.Native.StdLib.Itoa(System.Numerics.BigInteger)
  name: Itoa(BigInteger)
  href: api/Neo.SmartContract.Native.StdLib.html#Neo_SmartContract_Native_StdLib_Itoa_System_Numerics_BigInteger_
  commentId: M:Neo.SmartContract.Native.StdLib.Itoa(System.Numerics.BigInteger)
  fullName: Neo.SmartContract.Native.StdLib.Itoa(System.Numerics.BigInteger)
  nameWithType: StdLib.Itoa(BigInteger)
- uid: Neo.SmartContract.Native.StdLib.Itoa(System.Numerics.BigInteger,System.Int32)
  name: Itoa(BigInteger, int)
  href: api/Neo.SmartContract.Native.StdLib.html#Neo_SmartContract_Native_StdLib_Itoa_System_Numerics_BigInteger_System_Int32_
  commentId: M:Neo.SmartContract.Native.StdLib.Itoa(System.Numerics.BigInteger,System.Int32)
  name.vb: Itoa(BigInteger, Integer)
  fullName: Neo.SmartContract.Native.StdLib.Itoa(System.Numerics.BigInteger, int)
  fullName.vb: Neo.SmartContract.Native.StdLib.Itoa(System.Numerics.BigInteger, Integer)
  nameWithType: StdLib.Itoa(BigInteger, int)
  nameWithType.vb: StdLib.Itoa(BigInteger, Integer)
- uid: Neo.SmartContract.Native.StdLib.Itoa*
  name: Itoa
  href: api/Neo.SmartContract.Native.StdLib.html#Neo_SmartContract_Native_StdLib_Itoa_
  commentId: Overload:Neo.SmartContract.Native.StdLib.Itoa
  isSpec: "True"
  fullName: Neo.SmartContract.Native.StdLib.Itoa
  nameWithType: StdLib.Itoa
- uid: Neo.SmartContract.Native.TransactionState
  name: TransactionState
  href: api/Neo.SmartContract.Native.TransactionState.html
  commentId: T:Neo.SmartContract.Native.TransactionState
  fullName: Neo.SmartContract.Native.TransactionState
  nameWithType: TransactionState
- uid: Neo.SmartContract.Native.TransactionState.BlockIndex
  name: BlockIndex
  href: api/Neo.SmartContract.Native.TransactionState.html#Neo_SmartContract_Native_TransactionState_BlockIndex
  commentId: F:Neo.SmartContract.Native.TransactionState.BlockIndex
  fullName: Neo.SmartContract.Native.TransactionState.BlockIndex
  nameWithType: TransactionState.BlockIndex
- uid: Neo.SmartContract.Native.TransactionState.ConflictingSigners
  name: ConflictingSigners
  href: api/Neo.SmartContract.Native.TransactionState.html#Neo_SmartContract_Native_TransactionState_ConflictingSigners
  commentId: F:Neo.SmartContract.Native.TransactionState.ConflictingSigners
  fullName: Neo.SmartContract.Native.TransactionState.ConflictingSigners
  nameWithType: TransactionState.ConflictingSigners
- uid: Neo.SmartContract.Native.TransactionState.State
  name: State
  href: api/Neo.SmartContract.Native.TransactionState.html#Neo_SmartContract_Native_TransactionState_State
  commentId: F:Neo.SmartContract.Native.TransactionState.State
  fullName: Neo.SmartContract.Native.TransactionState.State
  nameWithType: TransactionState.State
- uid: Neo.SmartContract.Native.TransactionState.Transaction
  name: Transaction
  href: api/Neo.SmartContract.Native.TransactionState.html#Neo_SmartContract_Native_TransactionState_Transaction
  commentId: F:Neo.SmartContract.Native.TransactionState.Transaction
  fullName: Neo.SmartContract.Native.TransactionState.Transaction
  nameWithType: TransactionState.Transaction
- uid: Neo.SmartContract.Native.TrimmedBlock
  name: TrimmedBlock
  href: api/Neo.SmartContract.Native.TrimmedBlock.html
  commentId: T:Neo.SmartContract.Native.TrimmedBlock
  fullName: Neo.SmartContract.Native.TrimmedBlock
  nameWithType: TrimmedBlock
- uid: Neo.SmartContract.Native.TrimmedBlock.Deserialize(Neo.IO.MemoryReader@)
  name: Deserialize(ref MemoryReader)
  href: api/Neo.SmartContract.Native.TrimmedBlock.html#Neo_SmartContract_Native_TrimmedBlock_Deserialize_Neo_IO_MemoryReader__
  commentId: M:Neo.SmartContract.Native.TrimmedBlock.Deserialize(Neo.IO.MemoryReader@)
  name.vb: Deserialize(MemoryReader)
  fullName: Neo.SmartContract.Native.TrimmedBlock.Deserialize(ref Neo.IO.MemoryReader)
  fullName.vb: Neo.SmartContract.Native.TrimmedBlock.Deserialize(Neo.IO.MemoryReader)
  nameWithType: TrimmedBlock.Deserialize(ref MemoryReader)
  nameWithType.vb: TrimmedBlock.Deserialize(MemoryReader)
- uid: Neo.SmartContract.Native.TrimmedBlock.Deserialize*
  name: Deserialize
  href: api/Neo.SmartContract.Native.TrimmedBlock.html#Neo_SmartContract_Native_TrimmedBlock_Deserialize_
  commentId: Overload:Neo.SmartContract.Native.TrimmedBlock.Deserialize
  isSpec: "True"
  fullName: Neo.SmartContract.Native.TrimmedBlock.Deserialize
  nameWithType: TrimmedBlock.Deserialize
- uid: Neo.SmartContract.Native.TrimmedBlock.Hash
  name: Hash
  href: api/Neo.SmartContract.Native.TrimmedBlock.html#Neo_SmartContract_Native_TrimmedBlock_Hash
  commentId: P:Neo.SmartContract.Native.TrimmedBlock.Hash
  fullName: Neo.SmartContract.Native.TrimmedBlock.Hash
  nameWithType: TrimmedBlock.Hash
- uid: Neo.SmartContract.Native.TrimmedBlock.Hash*
  name: Hash
  href: api/Neo.SmartContract.Native.TrimmedBlock.html#Neo_SmartContract_Native_TrimmedBlock_Hash_
  commentId: Overload:Neo.SmartContract.Native.TrimmedBlock.Hash
  isSpec: "True"
  fullName: Neo.SmartContract.Native.TrimmedBlock.Hash
  nameWithType: TrimmedBlock.Hash
- uid: Neo.SmartContract.Native.TrimmedBlock.Hashes
  name: Hashes
  href: api/Neo.SmartContract.Native.TrimmedBlock.html#Neo_SmartContract_Native_TrimmedBlock_Hashes
  commentId: F:Neo.SmartContract.Native.TrimmedBlock.Hashes
  fullName: Neo.SmartContract.Native.TrimmedBlock.Hashes
  nameWithType: TrimmedBlock.Hashes
- uid: Neo.SmartContract.Native.TrimmedBlock.Header
  name: Header
  href: api/Neo.SmartContract.Native.TrimmedBlock.html#Neo_SmartContract_Native_TrimmedBlock_Header
  commentId: F:Neo.SmartContract.Native.TrimmedBlock.Header
  fullName: Neo.SmartContract.Native.TrimmedBlock.Header
  nameWithType: TrimmedBlock.Header
- uid: Neo.SmartContract.Native.TrimmedBlock.Index
  name: Index
  href: api/Neo.SmartContract.Native.TrimmedBlock.html#Neo_SmartContract_Native_TrimmedBlock_Index
  commentId: P:Neo.SmartContract.Native.TrimmedBlock.Index
  fullName: Neo.SmartContract.Native.TrimmedBlock.Index
  nameWithType: TrimmedBlock.Index
- uid: Neo.SmartContract.Native.TrimmedBlock.Index*
  name: Index
  href: api/Neo.SmartContract.Native.TrimmedBlock.html#Neo_SmartContract_Native_TrimmedBlock_Index_
  commentId: Overload:Neo.SmartContract.Native.TrimmedBlock.Index
  isSpec: "True"
  fullName: Neo.SmartContract.Native.TrimmedBlock.Index
  nameWithType: TrimmedBlock.Index
- uid: Neo.SmartContract.Native.TrimmedBlock.Serialize(System.IO.BinaryWriter)
  name: Serialize(BinaryWriter)
  href: api/Neo.SmartContract.Native.TrimmedBlock.html#Neo_SmartContract_Native_TrimmedBlock_Serialize_System_IO_BinaryWriter_
  commentId: M:Neo.SmartContract.Native.TrimmedBlock.Serialize(System.IO.BinaryWriter)
  fullName: Neo.SmartContract.Native.TrimmedBlock.Serialize(System.IO.BinaryWriter)
  nameWithType: TrimmedBlock.Serialize(BinaryWriter)
- uid: Neo.SmartContract.Native.TrimmedBlock.Serialize*
  name: Serialize
  href: api/Neo.SmartContract.Native.TrimmedBlock.html#Neo_SmartContract_Native_TrimmedBlock_Serialize_
  commentId: Overload:Neo.SmartContract.Native.TrimmedBlock.Serialize
  isSpec: "True"
  fullName: Neo.SmartContract.Native.TrimmedBlock.Serialize
  nameWithType: TrimmedBlock.Serialize
- uid: Neo.SmartContract.Native.TrimmedBlock.Size
  name: Size
  href: api/Neo.SmartContract.Native.TrimmedBlock.html#Neo_SmartContract_Native_TrimmedBlock_Size
  commentId: P:Neo.SmartContract.Native.TrimmedBlock.Size
  fullName: Neo.SmartContract.Native.TrimmedBlock.Size
  nameWithType: TrimmedBlock.Size
- uid: Neo.SmartContract.Native.TrimmedBlock.Size*
  name: Size
  href: api/Neo.SmartContract.Native.TrimmedBlock.html#Neo_SmartContract_Native_TrimmedBlock_Size_
  commentId: Overload:Neo.SmartContract.Native.TrimmedBlock.Size
  isSpec: "True"
  fullName: Neo.SmartContract.Native.TrimmedBlock.Size
  nameWithType: TrimmedBlock.Size
- uid: Neo.SmartContract.NefFile
  name: NefFile
  href: api/Neo.SmartContract.NefFile.html
  commentId: T:Neo.SmartContract.NefFile
  fullName: Neo.SmartContract.NefFile
  nameWithType: NefFile
- uid: Neo.SmartContract.NefFile.CheckSum
  name: CheckSum
  href: api/Neo.SmartContract.NefFile.html#Neo_SmartContract_NefFile_CheckSum
  commentId: P:Neo.SmartContract.NefFile.CheckSum
  fullName: Neo.SmartContract.NefFile.CheckSum
  nameWithType: NefFile.CheckSum
- uid: Neo.SmartContract.NefFile.CheckSum*
  name: CheckSum
  href: api/Neo.SmartContract.NefFile.html#Neo_SmartContract_NefFile_CheckSum_
  commentId: Overload:Neo.SmartContract.NefFile.CheckSum
  isSpec: "True"
  fullName: Neo.SmartContract.NefFile.CheckSum
  nameWithType: NefFile.CheckSum
- uid: Neo.SmartContract.NefFile.Compiler
  name: Compiler
  href: api/Neo.SmartContract.NefFile.html#Neo_SmartContract_NefFile_Compiler
  commentId: P:Neo.SmartContract.NefFile.Compiler
  fullName: Neo.SmartContract.NefFile.Compiler
  nameWithType: NefFile.Compiler
- uid: Neo.SmartContract.NefFile.Compiler*
  name: Compiler
  href: api/Neo.SmartContract.NefFile.html#Neo_SmartContract_NefFile_Compiler_
  commentId: Overload:Neo.SmartContract.NefFile.Compiler
  isSpec: "True"
  fullName: Neo.SmartContract.NefFile.Compiler
  nameWithType: NefFile.Compiler
- uid: Neo.SmartContract.NefFile.ComputeChecksum(Neo.SmartContract.NefFile)
  name: ComputeChecksum(NefFile)
  href: api/Neo.SmartContract.NefFile.html#Neo_SmartContract_NefFile_ComputeChecksum_Neo_SmartContract_NefFile_
  commentId: M:Neo.SmartContract.NefFile.ComputeChecksum(Neo.SmartContract.NefFile)
  fullName: Neo.SmartContract.NefFile.ComputeChecksum(Neo.SmartContract.NefFile)
  nameWithType: NefFile.ComputeChecksum(NefFile)
- uid: Neo.SmartContract.NefFile.ComputeChecksum*
  name: ComputeChecksum
  href: api/Neo.SmartContract.NefFile.html#Neo_SmartContract_NefFile_ComputeChecksum_
  commentId: Overload:Neo.SmartContract.NefFile.ComputeChecksum
  isSpec: "True"
  fullName: Neo.SmartContract.NefFile.ComputeChecksum
  nameWithType: NefFile.ComputeChecksum
- uid: Neo.SmartContract.NefFile.Deserialize(Neo.IO.MemoryReader@)
  name: Deserialize(ref MemoryReader)
  href: api/Neo.SmartContract.NefFile.html#Neo_SmartContract_NefFile_Deserialize_Neo_IO_MemoryReader__
  commentId: M:Neo.SmartContract.NefFile.Deserialize(Neo.IO.MemoryReader@)
  name.vb: Deserialize(MemoryReader)
  fullName: Neo.SmartContract.NefFile.Deserialize(ref Neo.IO.MemoryReader)
  fullName.vb: Neo.SmartContract.NefFile.Deserialize(Neo.IO.MemoryReader)
  nameWithType: NefFile.Deserialize(ref MemoryReader)
  nameWithType.vb: NefFile.Deserialize(MemoryReader)
- uid: Neo.SmartContract.NefFile.Deserialize*
  name: Deserialize
  href: api/Neo.SmartContract.NefFile.html#Neo_SmartContract_NefFile_Deserialize_
  commentId: Overload:Neo.SmartContract.NefFile.Deserialize
  isSpec: "True"
  fullName: Neo.SmartContract.NefFile.Deserialize
  nameWithType: NefFile.Deserialize
- uid: Neo.SmartContract.NefFile.MaxScriptLength
  name: MaxScriptLength
  href: api/Neo.SmartContract.NefFile.html#Neo_SmartContract_NefFile_MaxScriptLength
  commentId: F:Neo.SmartContract.NefFile.MaxScriptLength
  fullName: Neo.SmartContract.NefFile.MaxScriptLength
  nameWithType: NefFile.MaxScriptLength
- uid: Neo.SmartContract.NefFile.Script
  name: Script
  href: api/Neo.SmartContract.NefFile.html#Neo_SmartContract_NefFile_Script
  commentId: P:Neo.SmartContract.NefFile.Script
  fullName: Neo.SmartContract.NefFile.Script
  nameWithType: NefFile.Script
- uid: Neo.SmartContract.NefFile.Script*
  name: Script
  href: api/Neo.SmartContract.NefFile.html#Neo_SmartContract_NefFile_Script_
  commentId: Overload:Neo.SmartContract.NefFile.Script
  isSpec: "True"
  fullName: Neo.SmartContract.NefFile.Script
  nameWithType: NefFile.Script
- uid: Neo.SmartContract.NefFile.Serialize(System.IO.BinaryWriter)
  name: Serialize(BinaryWriter)
  href: api/Neo.SmartContract.NefFile.html#Neo_SmartContract_NefFile_Serialize_System_IO_BinaryWriter_
  commentId: M:Neo.SmartContract.NefFile.Serialize(System.IO.BinaryWriter)
  fullName: Neo.SmartContract.NefFile.Serialize(System.IO.BinaryWriter)
  nameWithType: NefFile.Serialize(BinaryWriter)
- uid: Neo.SmartContract.NefFile.Serialize*
  name: Serialize
  href: api/Neo.SmartContract.NefFile.html#Neo_SmartContract_NefFile_Serialize_
  commentId: Overload:Neo.SmartContract.NefFile.Serialize
  isSpec: "True"
  fullName: Neo.SmartContract.NefFile.Serialize
  nameWithType: NefFile.Serialize
- uid: Neo.SmartContract.NefFile.Size
  name: Size
  href: api/Neo.SmartContract.NefFile.html#Neo_SmartContract_NefFile_Size
  commentId: P:Neo.SmartContract.NefFile.Size
  fullName: Neo.SmartContract.NefFile.Size
  nameWithType: NefFile.Size
- uid: Neo.SmartContract.NefFile.Size*
  name: Size
  href: api/Neo.SmartContract.NefFile.html#Neo_SmartContract_NefFile_Size_
  commentId: Overload:Neo.SmartContract.NefFile.Size
  isSpec: "True"
  fullName: Neo.SmartContract.NefFile.Size
  nameWithType: NefFile.Size
- uid: Neo.SmartContract.NefFile.Source
  name: Source
  href: api/Neo.SmartContract.NefFile.html#Neo_SmartContract_NefFile_Source
  commentId: P:Neo.SmartContract.NefFile.Source
  fullName: Neo.SmartContract.NefFile.Source
  nameWithType: NefFile.Source
- uid: Neo.SmartContract.NefFile.Source*
  name: Source
  href: api/Neo.SmartContract.NefFile.html#Neo_SmartContract_NefFile_Source_
  commentId: Overload:Neo.SmartContract.NefFile.Source
  isSpec: "True"
  fullName: Neo.SmartContract.NefFile.Source
  nameWithType: NefFile.Source
- uid: Neo.SmartContract.NefFile.ToJson
  name: ToJson()
  href: api/Neo.SmartContract.NefFile.html#Neo_SmartContract_NefFile_ToJson
  commentId: M:Neo.SmartContract.NefFile.ToJson
  fullName: Neo.SmartContract.NefFile.ToJson()
  nameWithType: NefFile.ToJson()
- uid: Neo.SmartContract.NefFile.ToJson*
  name: ToJson
  href: api/Neo.SmartContract.NefFile.html#Neo_SmartContract_NefFile_ToJson_
  commentId: Overload:Neo.SmartContract.NefFile.ToJson
  isSpec: "True"
  fullName: Neo.SmartContract.NefFile.ToJson
  nameWithType: NefFile.ToJson
- uid: Neo.SmartContract.NefFile.Tokens
  name: Tokens
  href: api/Neo.SmartContract.NefFile.html#Neo_SmartContract_NefFile_Tokens
  commentId: P:Neo.SmartContract.NefFile.Tokens
  fullName: Neo.SmartContract.NefFile.Tokens
  nameWithType: NefFile.Tokens
- uid: Neo.SmartContract.NefFile.Tokens*
  name: Tokens
  href: api/Neo.SmartContract.NefFile.html#Neo_SmartContract_NefFile_Tokens_
  commentId: Overload:Neo.SmartContract.NefFile.Tokens
  isSpec: "True"
  fullName: Neo.SmartContract.NefFile.Tokens
  nameWithType: NefFile.Tokens
- uid: Neo.SmartContract.NotifyEventArgs
  name: NotifyEventArgs
  href: api/Neo.SmartContract.NotifyEventArgs.html
  commentId: T:Neo.SmartContract.NotifyEventArgs
  fullName: Neo.SmartContract.NotifyEventArgs
  nameWithType: NotifyEventArgs
- uid: Neo.SmartContract.NotifyEventArgs.#ctor(Neo.Network.P2P.Payloads.IVerifiable,Neo.UInt160,System.String,Neo.VM.Types.Array)
  name: NotifyEventArgs(IVerifiable, UInt160, string, Array)
  href: api/Neo.SmartContract.NotifyEventArgs.html#Neo_SmartContract_NotifyEventArgs__ctor_Neo_Network_P2P_Payloads_IVerifiable_Neo_UInt160_System_String_Neo_VM_Types_Array_
  commentId: M:Neo.SmartContract.NotifyEventArgs.#ctor(Neo.Network.P2P.Payloads.IVerifiable,Neo.UInt160,System.String,Neo.VM.Types.Array)
  name.vb: New(IVerifiable, UInt160, String, Array)
  fullName: Neo.SmartContract.NotifyEventArgs.NotifyEventArgs(Neo.Network.P2P.Payloads.IVerifiable, Neo.UInt160, string, Neo.VM.Types.Array)
  fullName.vb: Neo.SmartContract.NotifyEventArgs.New(Neo.Network.P2P.Payloads.IVerifiable, Neo.UInt160, String, Neo.VM.Types.Array)
  nameWithType: NotifyEventArgs.NotifyEventArgs(IVerifiable, UInt160, string, Array)
  nameWithType.vb: NotifyEventArgs.New(IVerifiable, UInt160, String, Array)
- uid: Neo.SmartContract.NotifyEventArgs.#ctor*
  name: NotifyEventArgs
  href: api/Neo.SmartContract.NotifyEventArgs.html#Neo_SmartContract_NotifyEventArgs__ctor_
  commentId: Overload:Neo.SmartContract.NotifyEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.SmartContract.NotifyEventArgs.NotifyEventArgs
  fullName.vb: Neo.SmartContract.NotifyEventArgs.New
  nameWithType: NotifyEventArgs.NotifyEventArgs
  nameWithType.vb: NotifyEventArgs.New
- uid: Neo.SmartContract.NotifyEventArgs.EventName
  name: EventName
  href: api/Neo.SmartContract.NotifyEventArgs.html#Neo_SmartContract_NotifyEventArgs_EventName
  commentId: P:Neo.SmartContract.NotifyEventArgs.EventName
  fullName: Neo.SmartContract.NotifyEventArgs.EventName
  nameWithType: NotifyEventArgs.EventName
- uid: Neo.SmartContract.NotifyEventArgs.EventName*
  name: EventName
  href: api/Neo.SmartContract.NotifyEventArgs.html#Neo_SmartContract_NotifyEventArgs_EventName_
  commentId: Overload:Neo.SmartContract.NotifyEventArgs.EventName
  isSpec: "True"
  fullName: Neo.SmartContract.NotifyEventArgs.EventName
  nameWithType: NotifyEventArgs.EventName
- uid: Neo.SmartContract.NotifyEventArgs.FromStackItem(Neo.VM.Types.StackItem)
  name: FromStackItem(StackItem)
  href: api/Neo.SmartContract.NotifyEventArgs.html#Neo_SmartContract_NotifyEventArgs_FromStackItem_Neo_VM_Types_StackItem_
  commentId: M:Neo.SmartContract.NotifyEventArgs.FromStackItem(Neo.VM.Types.StackItem)
  fullName: Neo.SmartContract.NotifyEventArgs.FromStackItem(Neo.VM.Types.StackItem)
  nameWithType: NotifyEventArgs.FromStackItem(StackItem)
- uid: Neo.SmartContract.NotifyEventArgs.FromStackItem*
  name: FromStackItem
  href: api/Neo.SmartContract.NotifyEventArgs.html#Neo_SmartContract_NotifyEventArgs_FromStackItem_
  commentId: Overload:Neo.SmartContract.NotifyEventArgs.FromStackItem
  isSpec: "True"
  fullName: Neo.SmartContract.NotifyEventArgs.FromStackItem
  nameWithType: NotifyEventArgs.FromStackItem
- uid: Neo.SmartContract.NotifyEventArgs.ScriptContainer
  name: ScriptContainer
  href: api/Neo.SmartContract.NotifyEventArgs.html#Neo_SmartContract_NotifyEventArgs_ScriptContainer
  commentId: P:Neo.SmartContract.NotifyEventArgs.ScriptContainer
  fullName: Neo.SmartContract.NotifyEventArgs.ScriptContainer
  nameWithType: NotifyEventArgs.ScriptContainer
- uid: Neo.SmartContract.NotifyEventArgs.ScriptContainer*
  name: ScriptContainer
  href: api/Neo.SmartContract.NotifyEventArgs.html#Neo_SmartContract_NotifyEventArgs_ScriptContainer_
  commentId: Overload:Neo.SmartContract.NotifyEventArgs.ScriptContainer
  isSpec: "True"
  fullName: Neo.SmartContract.NotifyEventArgs.ScriptContainer
  nameWithType: NotifyEventArgs.ScriptContainer
- uid: Neo.SmartContract.NotifyEventArgs.ScriptHash
  name: ScriptHash
  href: api/Neo.SmartContract.NotifyEventArgs.html#Neo_SmartContract_NotifyEventArgs_ScriptHash
  commentId: P:Neo.SmartContract.NotifyEventArgs.ScriptHash
  fullName: Neo.SmartContract.NotifyEventArgs.ScriptHash
  nameWithType: NotifyEventArgs.ScriptHash
- uid: Neo.SmartContract.NotifyEventArgs.ScriptHash*
  name: ScriptHash
  href: api/Neo.SmartContract.NotifyEventArgs.html#Neo_SmartContract_NotifyEventArgs_ScriptHash_
  commentId: Overload:Neo.SmartContract.NotifyEventArgs.ScriptHash
  isSpec: "True"
  fullName: Neo.SmartContract.NotifyEventArgs.ScriptHash
  nameWithType: NotifyEventArgs.ScriptHash
- uid: Neo.SmartContract.NotifyEventArgs.State
  name: State
  href: api/Neo.SmartContract.NotifyEventArgs.html#Neo_SmartContract_NotifyEventArgs_State
  commentId: P:Neo.SmartContract.NotifyEventArgs.State
  fullName: Neo.SmartContract.NotifyEventArgs.State
  nameWithType: NotifyEventArgs.State
- uid: Neo.SmartContract.NotifyEventArgs.State*
  name: State
  href: api/Neo.SmartContract.NotifyEventArgs.html#Neo_SmartContract_NotifyEventArgs_State_
  commentId: Overload:Neo.SmartContract.NotifyEventArgs.State
  isSpec: "True"
  fullName: Neo.SmartContract.NotifyEventArgs.State
  nameWithType: NotifyEventArgs.State
- uid: Neo.SmartContract.NotifyEventArgs.ToStackItem(Neo.VM.ReferenceCounter)
  name: ToStackItem(ReferenceCounter)
  href: api/Neo.SmartContract.NotifyEventArgs.html#Neo_SmartContract_NotifyEventArgs_ToStackItem_Neo_VM_ReferenceCounter_
  commentId: M:Neo.SmartContract.NotifyEventArgs.ToStackItem(Neo.VM.ReferenceCounter)
  fullName: Neo.SmartContract.NotifyEventArgs.ToStackItem(Neo.VM.ReferenceCounter)
  nameWithType: NotifyEventArgs.ToStackItem(ReferenceCounter)
- uid: Neo.SmartContract.NotifyEventArgs.ToStackItem*
  name: ToStackItem
  href: api/Neo.SmartContract.NotifyEventArgs.html#Neo_SmartContract_NotifyEventArgs_ToStackItem_
  commentId: Overload:Neo.SmartContract.NotifyEventArgs.ToStackItem
  isSpec: "True"
  fullName: Neo.SmartContract.NotifyEventArgs.ToStackItem
  nameWithType: NotifyEventArgs.ToStackItem
- uid: Neo.SmartContract.StorageContext
  name: StorageContext
  href: api/Neo.SmartContract.StorageContext.html
  commentId: T:Neo.SmartContract.StorageContext
  fullName: Neo.SmartContract.StorageContext
  nameWithType: StorageContext
- uid: Neo.SmartContract.StorageContext.Id
  name: Id
  href: api/Neo.SmartContract.StorageContext.html#Neo_SmartContract_StorageContext_Id
  commentId: F:Neo.SmartContract.StorageContext.Id
  fullName: Neo.SmartContract.StorageContext.Id
  nameWithType: StorageContext.Id
- uid: Neo.SmartContract.StorageContext.IsReadOnly
  name: IsReadOnly
  href: api/Neo.SmartContract.StorageContext.html#Neo_SmartContract_StorageContext_IsReadOnly
  commentId: F:Neo.SmartContract.StorageContext.IsReadOnly
  fullName: Neo.SmartContract.StorageContext.IsReadOnly
  nameWithType: StorageContext.IsReadOnly
- uid: Neo.SmartContract.StorageItem
  name: StorageItem
  href: api/Neo.SmartContract.StorageItem.html
  commentId: T:Neo.SmartContract.StorageItem
  fullName: Neo.SmartContract.StorageItem
  nameWithType: StorageItem
- uid: Neo.SmartContract.StorageItem.#ctor
  name: StorageItem()
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem__ctor
  commentId: M:Neo.SmartContract.StorageItem.#ctor
  name.vb: New()
  fullName: Neo.SmartContract.StorageItem.StorageItem()
  fullName.vb: Neo.SmartContract.StorageItem.New()
  nameWithType: StorageItem.StorageItem()
  nameWithType.vb: StorageItem.New()
- uid: Neo.SmartContract.StorageItem.#ctor(Neo.SmartContract.IInteroperable)
  name: StorageItem(IInteroperable)
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem__ctor_Neo_SmartContract_IInteroperable_
  commentId: M:Neo.SmartContract.StorageItem.#ctor(Neo.SmartContract.IInteroperable)
  name.vb: New(IInteroperable)
  fullName: Neo.SmartContract.StorageItem.StorageItem(Neo.SmartContract.IInteroperable)
  fullName.vb: Neo.SmartContract.StorageItem.New(Neo.SmartContract.IInteroperable)
  nameWithType: StorageItem.StorageItem(IInteroperable)
  nameWithType.vb: StorageItem.New(IInteroperable)
- uid: Neo.SmartContract.StorageItem.#ctor(System.Byte[])
  name: StorageItem(byte[])
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem__ctor_System_Byte___
  commentId: M:Neo.SmartContract.StorageItem.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: Neo.SmartContract.StorageItem.StorageItem(byte[])
  fullName.vb: Neo.SmartContract.StorageItem.New(Byte())
  nameWithType: StorageItem.StorageItem(byte[])
  nameWithType.vb: StorageItem.New(Byte())
- uid: Neo.SmartContract.StorageItem.#ctor(System.Numerics.BigInteger)
  name: StorageItem(BigInteger)
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem__ctor_System_Numerics_BigInteger_
  commentId: M:Neo.SmartContract.StorageItem.#ctor(System.Numerics.BigInteger)
  name.vb: New(BigInteger)
  fullName: Neo.SmartContract.StorageItem.StorageItem(System.Numerics.BigInteger)
  fullName.vb: Neo.SmartContract.StorageItem.New(System.Numerics.BigInteger)
  nameWithType: StorageItem.StorageItem(BigInteger)
  nameWithType.vb: StorageItem.New(BigInteger)
- uid: Neo.SmartContract.StorageItem.#ctor*
  name: StorageItem
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem__ctor_
  commentId: Overload:Neo.SmartContract.StorageItem.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.SmartContract.StorageItem.StorageItem
  fullName.vb: Neo.SmartContract.StorageItem.New
  nameWithType: StorageItem.StorageItem
  nameWithType.vb: StorageItem.New
- uid: Neo.SmartContract.StorageItem.Add(System.Numerics.BigInteger)
  name: Add(BigInteger)
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem_Add_System_Numerics_BigInteger_
  commentId: M:Neo.SmartContract.StorageItem.Add(System.Numerics.BigInteger)
  fullName: Neo.SmartContract.StorageItem.Add(System.Numerics.BigInteger)
  nameWithType: StorageItem.Add(BigInteger)
- uid: Neo.SmartContract.StorageItem.Add*
  name: Add
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem_Add_
  commentId: Overload:Neo.SmartContract.StorageItem.Add
  isSpec: "True"
  fullName: Neo.SmartContract.StorageItem.Add
  nameWithType: StorageItem.Add
- uid: Neo.SmartContract.StorageItem.Clone
  name: Clone()
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem_Clone
  commentId: M:Neo.SmartContract.StorageItem.Clone
  fullName: Neo.SmartContract.StorageItem.Clone()
  nameWithType: StorageItem.Clone()
- uid: Neo.SmartContract.StorageItem.Clone*
  name: Clone
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem_Clone_
  commentId: Overload:Neo.SmartContract.StorageItem.Clone
  isSpec: "True"
  fullName: Neo.SmartContract.StorageItem.Clone
  nameWithType: StorageItem.Clone
- uid: Neo.SmartContract.StorageItem.Deserialize(Neo.IO.MemoryReader@)
  name: Deserialize(ref MemoryReader)
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem_Deserialize_Neo_IO_MemoryReader__
  commentId: M:Neo.SmartContract.StorageItem.Deserialize(Neo.IO.MemoryReader@)
  name.vb: Deserialize(MemoryReader)
  fullName: Neo.SmartContract.StorageItem.Deserialize(ref Neo.IO.MemoryReader)
  fullName.vb: Neo.SmartContract.StorageItem.Deserialize(Neo.IO.MemoryReader)
  nameWithType: StorageItem.Deserialize(ref MemoryReader)
  nameWithType.vb: StorageItem.Deserialize(MemoryReader)
- uid: Neo.SmartContract.StorageItem.Deserialize*
  name: Deserialize
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem_Deserialize_
  commentId: Overload:Neo.SmartContract.StorageItem.Deserialize
  isSpec: "True"
  fullName: Neo.SmartContract.StorageItem.Deserialize
  nameWithType: StorageItem.Deserialize
- uid: Neo.SmartContract.StorageItem.FromReplica(Neo.SmartContract.StorageItem)
  name: FromReplica(StorageItem)
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem_FromReplica_Neo_SmartContract_StorageItem_
  commentId: M:Neo.SmartContract.StorageItem.FromReplica(Neo.SmartContract.StorageItem)
  fullName: Neo.SmartContract.StorageItem.FromReplica(Neo.SmartContract.StorageItem)
  nameWithType: StorageItem.FromReplica(StorageItem)
- uid: Neo.SmartContract.StorageItem.FromReplica*
  name: FromReplica
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem_FromReplica_
  commentId: Overload:Neo.SmartContract.StorageItem.FromReplica
  isSpec: "True"
  fullName: Neo.SmartContract.StorageItem.FromReplica
  nameWithType: StorageItem.FromReplica
- uid: Neo.SmartContract.StorageItem.GetInteroperable*
  name: GetInteroperable
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem_GetInteroperable_
  commentId: Overload:Neo.SmartContract.StorageItem.GetInteroperable
  isSpec: "True"
  fullName: Neo.SmartContract.StorageItem.GetInteroperable
  nameWithType: StorageItem.GetInteroperable
- uid: Neo.SmartContract.StorageItem.GetInteroperable``1
  name: GetInteroperable<T>()
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem_GetInteroperable__1
  commentId: M:Neo.SmartContract.StorageItem.GetInteroperable``1
  name.vb: GetInteroperable(Of T)()
  fullName: Neo.SmartContract.StorageItem.GetInteroperable<T>()
  fullName.vb: Neo.SmartContract.StorageItem.GetInteroperable(Of T)()
  nameWithType: StorageItem.GetInteroperable<T>()
  nameWithType.vb: StorageItem.GetInteroperable(Of T)()
- uid: Neo.SmartContract.StorageItem.Serialize(System.IO.BinaryWriter)
  name: Serialize(BinaryWriter)
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem_Serialize_System_IO_BinaryWriter_
  commentId: M:Neo.SmartContract.StorageItem.Serialize(System.IO.BinaryWriter)
  fullName: Neo.SmartContract.StorageItem.Serialize(System.IO.BinaryWriter)
  nameWithType: StorageItem.Serialize(BinaryWriter)
- uid: Neo.SmartContract.StorageItem.Serialize*
  name: Serialize
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem_Serialize_
  commentId: Overload:Neo.SmartContract.StorageItem.Serialize
  isSpec: "True"
  fullName: Neo.SmartContract.StorageItem.Serialize
  nameWithType: StorageItem.Serialize
- uid: Neo.SmartContract.StorageItem.Set(System.Numerics.BigInteger)
  name: Set(BigInteger)
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem_Set_System_Numerics_BigInteger_
  commentId: M:Neo.SmartContract.StorageItem.Set(System.Numerics.BigInteger)
  fullName: Neo.SmartContract.StorageItem.Set(System.Numerics.BigInteger)
  nameWithType: StorageItem.Set(BigInteger)
- uid: Neo.SmartContract.StorageItem.Set*
  name: Set
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem_Set_
  commentId: Overload:Neo.SmartContract.StorageItem.Set
  isSpec: "True"
  fullName: Neo.SmartContract.StorageItem.Set
  nameWithType: StorageItem.Set
- uid: Neo.SmartContract.StorageItem.Size
  name: Size
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem_Size
  commentId: P:Neo.SmartContract.StorageItem.Size
  fullName: Neo.SmartContract.StorageItem.Size
  nameWithType: StorageItem.Size
- uid: Neo.SmartContract.StorageItem.Size*
  name: Size
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem_Size_
  commentId: Overload:Neo.SmartContract.StorageItem.Size
  isSpec: "True"
  fullName: Neo.SmartContract.StorageItem.Size
  nameWithType: StorageItem.Size
- uid: Neo.SmartContract.StorageItem.Value
  name: Value
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem_Value
  commentId: P:Neo.SmartContract.StorageItem.Value
  fullName: Neo.SmartContract.StorageItem.Value
  nameWithType: StorageItem.Value
- uid: Neo.SmartContract.StorageItem.Value*
  name: Value
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem_Value_
  commentId: Overload:Neo.SmartContract.StorageItem.Value
  isSpec: "True"
  fullName: Neo.SmartContract.StorageItem.Value
  nameWithType: StorageItem.Value
- uid: Neo.SmartContract.StorageItem.op_Implicit(Neo.SmartContract.StorageItem)~System.Numerics.BigInteger
  name: implicit operator BigInteger(StorageItem)
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem_op_Implicit_Neo_SmartContract_StorageItem__System_Numerics_BigInteger
  commentId: M:Neo.SmartContract.StorageItem.op_Implicit(Neo.SmartContract.StorageItem)~System.Numerics.BigInteger
  name.vb: CType(StorageItem)
  fullName: Neo.SmartContract.StorageItem.implicit operator System.Numerics.BigInteger(Neo.SmartContract.StorageItem)
  fullName.vb: Neo.SmartContract.StorageItem.CType(Neo.SmartContract.StorageItem)
  nameWithType: StorageItem.implicit operator BigInteger(StorageItem)
  nameWithType.vb: StorageItem.CType(StorageItem)
- uid: Neo.SmartContract.StorageItem.op_Implicit*
  name: implicit operator
  href: api/Neo.SmartContract.StorageItem.html#Neo_SmartContract_StorageItem_op_Implicit_
  commentId: Overload:Neo.SmartContract.StorageItem.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: Neo.SmartContract.StorageItem.implicit operator
  fullName.vb: Neo.SmartContract.StorageItem.CType
  nameWithType: StorageItem.implicit operator
  nameWithType.vb: StorageItem.CType
- uid: Neo.SmartContract.StorageKey
  name: StorageKey
  href: api/Neo.SmartContract.StorageKey.html
  commentId: T:Neo.SmartContract.StorageKey
  fullName: Neo.SmartContract.StorageKey
  nameWithType: StorageKey
- uid: Neo.SmartContract.StorageKey.#ctor
  name: StorageKey()
  href: api/Neo.SmartContract.StorageKey.html#Neo_SmartContract_StorageKey__ctor
  commentId: M:Neo.SmartContract.StorageKey.#ctor
  name.vb: New()
  fullName: Neo.SmartContract.StorageKey.StorageKey()
  fullName.vb: Neo.SmartContract.StorageKey.New()
  nameWithType: StorageKey.StorageKey()
  nameWithType.vb: StorageKey.New()
- uid: Neo.SmartContract.StorageKey.#ctor*
  name: StorageKey
  href: api/Neo.SmartContract.StorageKey.html#Neo_SmartContract_StorageKey__ctor_
  commentId: Overload:Neo.SmartContract.StorageKey.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.SmartContract.StorageKey.StorageKey
  fullName.vb: Neo.SmartContract.StorageKey.New
  nameWithType: StorageKey.StorageKey
  nameWithType.vb: StorageKey.New
- uid: Neo.SmartContract.StorageKey.CreateSearchPrefix(System.Int32,System.ReadOnlySpan{System.Byte})
  name: CreateSearchPrefix(int, ReadOnlySpan<byte>)
  href: api/Neo.SmartContract.StorageKey.html#Neo_SmartContract_StorageKey_CreateSearchPrefix_System_Int32_System_ReadOnlySpan_System_Byte__
  commentId: M:Neo.SmartContract.StorageKey.CreateSearchPrefix(System.Int32,System.ReadOnlySpan{System.Byte})
  name.vb: CreateSearchPrefix(Integer, ReadOnlySpan(Of Byte))
  fullName: Neo.SmartContract.StorageKey.CreateSearchPrefix(int, System.ReadOnlySpan<byte>)
  fullName.vb: Neo.SmartContract.StorageKey.CreateSearchPrefix(Integer, System.ReadOnlySpan(Of Byte))
  nameWithType: StorageKey.CreateSearchPrefix(int, ReadOnlySpan<byte>)
  nameWithType.vb: StorageKey.CreateSearchPrefix(Integer, ReadOnlySpan(Of Byte))
- uid: Neo.SmartContract.StorageKey.CreateSearchPrefix*
  name: CreateSearchPrefix
  href: api/Neo.SmartContract.StorageKey.html#Neo_SmartContract_StorageKey_CreateSearchPrefix_
  commentId: Overload:Neo.SmartContract.StorageKey.CreateSearchPrefix
  isSpec: "True"
  fullName: Neo.SmartContract.StorageKey.CreateSearchPrefix
  nameWithType: StorageKey.CreateSearchPrefix
- uid: Neo.SmartContract.StorageKey.Equals(Neo.SmartContract.StorageKey)
  name: Equals(StorageKey)
  href: api/Neo.SmartContract.StorageKey.html#Neo_SmartContract_StorageKey_Equals_Neo_SmartContract_StorageKey_
  commentId: M:Neo.SmartContract.StorageKey.Equals(Neo.SmartContract.StorageKey)
  fullName: Neo.SmartContract.StorageKey.Equals(Neo.SmartContract.StorageKey)
  nameWithType: StorageKey.Equals(StorageKey)
- uid: Neo.SmartContract.StorageKey.Equals*
  name: Equals
  href: api/Neo.SmartContract.StorageKey.html#Neo_SmartContract_StorageKey_Equals_
  commentId: Overload:Neo.SmartContract.StorageKey.Equals
  isSpec: "True"
  fullName: Neo.SmartContract.StorageKey.Equals
  nameWithType: StorageKey.Equals
- uid: Neo.SmartContract.StorageKey.GetHashCode
  name: GetHashCode()
  href: api/Neo.SmartContract.StorageKey.html#Neo_SmartContract_StorageKey_GetHashCode
  commentId: M:Neo.SmartContract.StorageKey.GetHashCode
  fullName: Neo.SmartContract.StorageKey.GetHashCode()
  nameWithType: StorageKey.GetHashCode()
- uid: Neo.SmartContract.StorageKey.GetHashCode*
  name: GetHashCode
  href: api/Neo.SmartContract.StorageKey.html#Neo_SmartContract_StorageKey_GetHashCode_
  commentId: Overload:Neo.SmartContract.StorageKey.GetHashCode
  isSpec: "True"
  fullName: Neo.SmartContract.StorageKey.GetHashCode
  nameWithType: StorageKey.GetHashCode
- uid: Neo.SmartContract.StorageKey.Id
  name: Id
  href: api/Neo.SmartContract.StorageKey.html#Neo_SmartContract_StorageKey_Id
  commentId: P:Neo.SmartContract.StorageKey.Id
  fullName: Neo.SmartContract.StorageKey.Id
  nameWithType: StorageKey.Id
- uid: Neo.SmartContract.StorageKey.Id*
  name: Id
  href: api/Neo.SmartContract.StorageKey.html#Neo_SmartContract_StorageKey_Id_
  commentId: Overload:Neo.SmartContract.StorageKey.Id
  isSpec: "True"
  fullName: Neo.SmartContract.StorageKey.Id
  nameWithType: StorageKey.Id
- uid: Neo.SmartContract.StorageKey.Key
  name: Key
  href: api/Neo.SmartContract.StorageKey.html#Neo_SmartContract_StorageKey_Key
  commentId: P:Neo.SmartContract.StorageKey.Key
  fullName: Neo.SmartContract.StorageKey.Key
  nameWithType: StorageKey.Key
- uid: Neo.SmartContract.StorageKey.Key*
  name: Key
  href: api/Neo.SmartContract.StorageKey.html#Neo_SmartContract_StorageKey_Key_
  commentId: Overload:Neo.SmartContract.StorageKey.Key
  isSpec: "True"
  fullName: Neo.SmartContract.StorageKey.Key
  nameWithType: StorageKey.Key
- uid: Neo.SmartContract.StorageKey.ToArray
  name: ToArray()
  href: api/Neo.SmartContract.StorageKey.html#Neo_SmartContract_StorageKey_ToArray
  commentId: M:Neo.SmartContract.StorageKey.ToArray
  fullName: Neo.SmartContract.StorageKey.ToArray()
  nameWithType: StorageKey.ToArray()
- uid: Neo.SmartContract.StorageKey.ToArray*
  name: ToArray
  href: api/Neo.SmartContract.StorageKey.html#Neo_SmartContract_StorageKey_ToArray_
  commentId: Overload:Neo.SmartContract.StorageKey.ToArray
  isSpec: "True"
  fullName: Neo.SmartContract.StorageKey.ToArray
  nameWithType: StorageKey.ToArray
- uid: Neo.SmartContract.TriggerType
  name: TriggerType
  href: api/Neo.SmartContract.TriggerType.html
  commentId: T:Neo.SmartContract.TriggerType
  fullName: Neo.SmartContract.TriggerType
  nameWithType: TriggerType
- uid: Neo.SmartContract.TriggerType.All
  name: All
  href: api/Neo.SmartContract.TriggerType.html#Neo_SmartContract_TriggerType_All
  commentId: F:Neo.SmartContract.TriggerType.All
  fullName: Neo.SmartContract.TriggerType.All
  nameWithType: TriggerType.All
- uid: Neo.SmartContract.TriggerType.Application
  name: Application
  href: api/Neo.SmartContract.TriggerType.html#Neo_SmartContract_TriggerType_Application
  commentId: F:Neo.SmartContract.TriggerType.Application
  fullName: Neo.SmartContract.TriggerType.Application
  nameWithType: TriggerType.Application
- uid: Neo.SmartContract.TriggerType.OnPersist
  name: OnPersist
  href: api/Neo.SmartContract.TriggerType.html#Neo_SmartContract_TriggerType_OnPersist
  commentId: F:Neo.SmartContract.TriggerType.OnPersist
  fullName: Neo.SmartContract.TriggerType.OnPersist
  nameWithType: TriggerType.OnPersist
- uid: Neo.SmartContract.TriggerType.PostPersist
  name: PostPersist
  href: api/Neo.SmartContract.TriggerType.html#Neo_SmartContract_TriggerType_PostPersist
  commentId: F:Neo.SmartContract.TriggerType.PostPersist
  fullName: Neo.SmartContract.TriggerType.PostPersist
  nameWithType: TriggerType.PostPersist
- uid: Neo.SmartContract.TriggerType.System
  name: System
  href: api/Neo.SmartContract.TriggerType.html#Neo_SmartContract_TriggerType_System
  commentId: F:Neo.SmartContract.TriggerType.System
  fullName: Neo.SmartContract.TriggerType.System
  nameWithType: TriggerType.System
- uid: Neo.SmartContract.TriggerType.Verification
  name: Verification
  href: api/Neo.SmartContract.TriggerType.html#Neo_SmartContract_TriggerType_Verification
  commentId: F:Neo.SmartContract.TriggerType.Verification
  fullName: Neo.SmartContract.TriggerType.Verification
  nameWithType: TriggerType.Verification
- uid: Neo.TimeProvider
  name: TimeProvider
  href: api/Neo.TimeProvider.html
  commentId: T:Neo.TimeProvider
  fullName: Neo.TimeProvider
  nameWithType: TimeProvider
- uid: Neo.TimeProvider.Current
  name: Current
  href: api/Neo.TimeProvider.html#Neo_TimeProvider_Current
  commentId: P:Neo.TimeProvider.Current
  fullName: Neo.TimeProvider.Current
  nameWithType: TimeProvider.Current
- uid: Neo.TimeProvider.Current*
  name: Current
  href: api/Neo.TimeProvider.html#Neo_TimeProvider_Current_
  commentId: Overload:Neo.TimeProvider.Current
  isSpec: "True"
  fullName: Neo.TimeProvider.Current
  nameWithType: TimeProvider.Current
- uid: Neo.TimeProvider.UtcNow
  name: UtcNow
  href: api/Neo.TimeProvider.html#Neo_TimeProvider_UtcNow
  commentId: P:Neo.TimeProvider.UtcNow
  fullName: Neo.TimeProvider.UtcNow
  nameWithType: TimeProvider.UtcNow
- uid: Neo.TimeProvider.UtcNow*
  name: UtcNow
  href: api/Neo.TimeProvider.html#Neo_TimeProvider_UtcNow_
  commentId: Overload:Neo.TimeProvider.UtcNow
  isSpec: "True"
  fullName: Neo.TimeProvider.UtcNow
  nameWithType: TimeProvider.UtcNow
- uid: Neo.UInt160
  name: UInt160
  href: api/Neo.UInt160.html
  commentId: T:Neo.UInt160
  fullName: Neo.UInt160
  nameWithType: UInt160
- uid: Neo.UInt160.#ctor
  name: UInt160()
  href: api/Neo.UInt160.html#Neo_UInt160__ctor
  commentId: M:Neo.UInt160.#ctor
  name.vb: New()
  fullName: Neo.UInt160.UInt160()
  fullName.vb: Neo.UInt160.New()
  nameWithType: UInt160.UInt160()
  nameWithType.vb: UInt160.New()
- uid: Neo.UInt160.#ctor(System.ReadOnlySpan{System.Byte})
  name: UInt160(ReadOnlySpan<byte>)
  href: api/Neo.UInt160.html#Neo_UInt160__ctor_System_ReadOnlySpan_System_Byte__
  commentId: M:Neo.UInt160.#ctor(System.ReadOnlySpan{System.Byte})
  name.vb: New(ReadOnlySpan(Of Byte))
  fullName: Neo.UInt160.UInt160(System.ReadOnlySpan<byte>)
  fullName.vb: Neo.UInt160.New(System.ReadOnlySpan(Of Byte))
  nameWithType: UInt160.UInt160(ReadOnlySpan<byte>)
  nameWithType.vb: UInt160.New(ReadOnlySpan(Of Byte))
- uid: Neo.UInt160.#ctor*
  name: UInt160
  href: api/Neo.UInt160.html#Neo_UInt160__ctor_
  commentId: Overload:Neo.UInt160.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.UInt160.UInt160
  fullName.vb: Neo.UInt160.New
  nameWithType: UInt160.UInt160
  nameWithType.vb: UInt160.New
- uid: Neo.UInt160.CompareTo(Neo.UInt160)
  name: CompareTo(UInt160)
  href: api/Neo.UInt160.html#Neo_UInt160_CompareTo_Neo_UInt160_
  commentId: M:Neo.UInt160.CompareTo(Neo.UInt160)
  fullName: Neo.UInt160.CompareTo(Neo.UInt160)
  nameWithType: UInt160.CompareTo(UInt160)
- uid: Neo.UInt160.CompareTo*
  name: CompareTo
  href: api/Neo.UInt160.html#Neo_UInt160_CompareTo_
  commentId: Overload:Neo.UInt160.CompareTo
  isSpec: "True"
  fullName: Neo.UInt160.CompareTo
  nameWithType: UInt160.CompareTo
- uid: Neo.UInt160.Deserialize(Neo.IO.MemoryReader@)
  name: Deserialize(ref MemoryReader)
  href: api/Neo.UInt160.html#Neo_UInt160_Deserialize_Neo_IO_MemoryReader__
  commentId: M:Neo.UInt160.Deserialize(Neo.IO.MemoryReader@)
  name.vb: Deserialize(MemoryReader)
  fullName: Neo.UInt160.Deserialize(ref Neo.IO.MemoryReader)
  fullName.vb: Neo.UInt160.Deserialize(Neo.IO.MemoryReader)
  nameWithType: UInt160.Deserialize(ref MemoryReader)
  nameWithType.vb: UInt160.Deserialize(MemoryReader)
- uid: Neo.UInt160.Deserialize*
  name: Deserialize
  href: api/Neo.UInt160.html#Neo_UInt160_Deserialize_
  commentId: Overload:Neo.UInt160.Deserialize
  isSpec: "True"
  fullName: Neo.UInt160.Deserialize
  nameWithType: UInt160.Deserialize
- uid: Neo.UInt160.Equals(Neo.UInt160)
  name: Equals(UInt160)
  href: api/Neo.UInt160.html#Neo_UInt160_Equals_Neo_UInt160_
  commentId: M:Neo.UInt160.Equals(Neo.UInt160)
  fullName: Neo.UInt160.Equals(Neo.UInt160)
  nameWithType: UInt160.Equals(UInt160)
- uid: Neo.UInt160.Equals(System.Object)
  name: Equals(object)
  href: api/Neo.UInt160.html#Neo_UInt160_Equals_System_Object_
  commentId: M:Neo.UInt160.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Neo.UInt160.Equals(object)
  fullName.vb: Neo.UInt160.Equals(Object)
  nameWithType: UInt160.Equals(object)
  nameWithType.vb: UInt160.Equals(Object)
- uid: Neo.UInt160.Equals*
  name: Equals
  href: api/Neo.UInt160.html#Neo_UInt160_Equals_
  commentId: Overload:Neo.UInt160.Equals
  isSpec: "True"
  fullName: Neo.UInt160.Equals
  nameWithType: UInt160.Equals
- uid: Neo.UInt160.GetHashCode
  name: GetHashCode()
  href: api/Neo.UInt160.html#Neo_UInt160_GetHashCode
  commentId: M:Neo.UInt160.GetHashCode
  fullName: Neo.UInt160.GetHashCode()
  nameWithType: UInt160.GetHashCode()
- uid: Neo.UInt160.GetHashCode*
  name: GetHashCode
  href: api/Neo.UInt160.html#Neo_UInt160_GetHashCode_
  commentId: Overload:Neo.UInt160.GetHashCode
  isSpec: "True"
  fullName: Neo.UInt160.GetHashCode
  nameWithType: UInt160.GetHashCode
- uid: Neo.UInt160.Length
  name: Length
  href: api/Neo.UInt160.html#Neo_UInt160_Length
  commentId: F:Neo.UInt160.Length
  fullName: Neo.UInt160.Length
  nameWithType: UInt160.Length
- uid: Neo.UInt160.Parse(System.String)
  name: Parse(string)
  href: api/Neo.UInt160.html#Neo_UInt160_Parse_System_String_
  commentId: M:Neo.UInt160.Parse(System.String)
  name.vb: Parse(String)
  fullName: Neo.UInt160.Parse(string)
  fullName.vb: Neo.UInt160.Parse(String)
  nameWithType: UInt160.Parse(string)
  nameWithType.vb: UInt160.Parse(String)
- uid: Neo.UInt160.Parse*
  name: Parse
  href: api/Neo.UInt160.html#Neo_UInt160_Parse_
  commentId: Overload:Neo.UInt160.Parse
  isSpec: "True"
  fullName: Neo.UInt160.Parse
  nameWithType: UInt160.Parse
- uid: Neo.UInt160.Serialize(System.IO.BinaryWriter)
  name: Serialize(BinaryWriter)
  href: api/Neo.UInt160.html#Neo_UInt160_Serialize_System_IO_BinaryWriter_
  commentId: M:Neo.UInt160.Serialize(System.IO.BinaryWriter)
  fullName: Neo.UInt160.Serialize(System.IO.BinaryWriter)
  nameWithType: UInt160.Serialize(BinaryWriter)
- uid: Neo.UInt160.Serialize*
  name: Serialize
  href: api/Neo.UInt160.html#Neo_UInt160_Serialize_
  commentId: Overload:Neo.UInt160.Serialize
  isSpec: "True"
  fullName: Neo.UInt160.Serialize
  nameWithType: UInt160.Serialize
- uid: Neo.UInt160.Size
  name: Size
  href: api/Neo.UInt160.html#Neo_UInt160_Size
  commentId: P:Neo.UInt160.Size
  fullName: Neo.UInt160.Size
  nameWithType: UInt160.Size
- uid: Neo.UInt160.Size*
  name: Size
  href: api/Neo.UInt160.html#Neo_UInt160_Size_
  commentId: Overload:Neo.UInt160.Size
  isSpec: "True"
  fullName: Neo.UInt160.Size
  nameWithType: UInt160.Size
- uid: Neo.UInt160.ToString
  name: ToString()
  href: api/Neo.UInt160.html#Neo_UInt160_ToString
  commentId: M:Neo.UInt160.ToString
  fullName: Neo.UInt160.ToString()
  nameWithType: UInt160.ToString()
- uid: Neo.UInt160.ToString*
  name: ToString
  href: api/Neo.UInt160.html#Neo_UInt160_ToString_
  commentId: Overload:Neo.UInt160.ToString
  isSpec: "True"
  fullName: Neo.UInt160.ToString
  nameWithType: UInt160.ToString
- uid: Neo.UInt160.TryParse(System.String,Neo.UInt160@)
  name: TryParse(string, out UInt160)
  href: api/Neo.UInt160.html#Neo_UInt160_TryParse_System_String_Neo_UInt160__
  commentId: M:Neo.UInt160.TryParse(System.String,Neo.UInt160@)
  name.vb: TryParse(String, UInt160)
  fullName: Neo.UInt160.TryParse(string, out Neo.UInt160)
  fullName.vb: Neo.UInt160.TryParse(String, Neo.UInt160)
  nameWithType: UInt160.TryParse(string, out UInt160)
  nameWithType.vb: UInt160.TryParse(String, UInt160)
- uid: Neo.UInt160.TryParse*
  name: TryParse
  href: api/Neo.UInt160.html#Neo_UInt160_TryParse_
  commentId: Overload:Neo.UInt160.TryParse
  isSpec: "True"
  fullName: Neo.UInt160.TryParse
  nameWithType: UInt160.TryParse
- uid: Neo.UInt160.Zero
  name: Zero
  href: api/Neo.UInt160.html#Neo_UInt160_Zero
  commentId: F:Neo.UInt160.Zero
  fullName: Neo.UInt160.Zero
  nameWithType: UInt160.Zero
- uid: Neo.UInt160.op_Equality(Neo.UInt160,Neo.UInt160)
  name: operator ==(UInt160, UInt160)
  href: api/Neo.UInt160.html#Neo_UInt160_op_Equality_Neo_UInt160_Neo_UInt160_
  commentId: M:Neo.UInt160.op_Equality(Neo.UInt160,Neo.UInt160)
  name.vb: =(UInt160, UInt160)
  fullName: Neo.UInt160.operator ==(Neo.UInt160, Neo.UInt160)
  fullName.vb: Neo.UInt160.=(Neo.UInt160, Neo.UInt160)
  nameWithType: UInt160.operator ==(UInt160, UInt160)
  nameWithType.vb: UInt160.=(UInt160, UInt160)
- uid: Neo.UInt160.op_Equality*
  name: operator ==
  href: api/Neo.UInt160.html#Neo_UInt160_op_Equality_
  commentId: Overload:Neo.UInt160.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: Neo.UInt160.operator ==
  fullName.vb: Neo.UInt160.=
  nameWithType: UInt160.operator ==
  nameWithType.vb: UInt160.=
- uid: Neo.UInt160.op_GreaterThan(Neo.UInt160,Neo.UInt160)
  name: operator >(UInt160, UInt160)
  href: api/Neo.UInt160.html#Neo_UInt160_op_GreaterThan_Neo_UInt160_Neo_UInt160_
  commentId: M:Neo.UInt160.op_GreaterThan(Neo.UInt160,Neo.UInt160)
  name.vb: '>(UInt160, UInt160)'
  fullName: Neo.UInt160.operator >(Neo.UInt160, Neo.UInt160)
  fullName.vb: Neo.UInt160.>(Neo.UInt160, Neo.UInt160)
  nameWithType: UInt160.operator >(UInt160, UInt160)
  nameWithType.vb: UInt160.>(UInt160, UInt160)
- uid: Neo.UInt160.op_GreaterThan*
  name: operator >
  href: api/Neo.UInt160.html#Neo_UInt160_op_GreaterThan_
  commentId: Overload:Neo.UInt160.op_GreaterThan
  isSpec: "True"
  name.vb: '>'
  fullName: Neo.UInt160.operator >
  fullName.vb: Neo.UInt160.>
  nameWithType: UInt160.operator >
  nameWithType.vb: UInt160.>
- uid: Neo.UInt160.op_GreaterThanOrEqual(Neo.UInt160,Neo.UInt160)
  name: operator >=(UInt160, UInt160)
  href: api/Neo.UInt160.html#Neo_UInt160_op_GreaterThanOrEqual_Neo_UInt160_Neo_UInt160_
  commentId: M:Neo.UInt160.op_GreaterThanOrEqual(Neo.UInt160,Neo.UInt160)
  name.vb: '>=(UInt160, UInt160)'
  fullName: Neo.UInt160.operator >=(Neo.UInt160, Neo.UInt160)
  fullName.vb: Neo.UInt160.>=(Neo.UInt160, Neo.UInt160)
  nameWithType: UInt160.operator >=(UInt160, UInt160)
  nameWithType.vb: UInt160.>=(UInt160, UInt160)
- uid: Neo.UInt160.op_GreaterThanOrEqual*
  name: operator >=
  href: api/Neo.UInt160.html#Neo_UInt160_op_GreaterThanOrEqual_
  commentId: Overload:Neo.UInt160.op_GreaterThanOrEqual
  isSpec: "True"
  name.vb: '>='
  fullName: Neo.UInt160.operator >=
  fullName.vb: Neo.UInt160.>=
  nameWithType: UInt160.operator >=
  nameWithType.vb: UInt160.>=
- uid: Neo.UInt160.op_Inequality(Neo.UInt160,Neo.UInt160)
  name: operator !=(UInt160, UInt160)
  href: api/Neo.UInt160.html#Neo_UInt160_op_Inequality_Neo_UInt160_Neo_UInt160_
  commentId: M:Neo.UInt160.op_Inequality(Neo.UInt160,Neo.UInt160)
  name.vb: <>(UInt160, UInt160)
  fullName: Neo.UInt160.operator !=(Neo.UInt160, Neo.UInt160)
  fullName.vb: Neo.UInt160.<>(Neo.UInt160, Neo.UInt160)
  nameWithType: UInt160.operator !=(UInt160, UInt160)
  nameWithType.vb: UInt160.<>(UInt160, UInt160)
- uid: Neo.UInt160.op_Inequality*
  name: operator !=
  href: api/Neo.UInt160.html#Neo_UInt160_op_Inequality_
  commentId: Overload:Neo.UInt160.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: Neo.UInt160.operator !=
  fullName.vb: Neo.UInt160.<>
  nameWithType: UInt160.operator !=
  nameWithType.vb: UInt160.<>
- uid: Neo.UInt160.op_LessThan(Neo.UInt160,Neo.UInt160)
  name: operator <(UInt160, UInt160)
  href: api/Neo.UInt160.html#Neo_UInt160_op_LessThan_Neo_UInt160_Neo_UInt160_
  commentId: M:Neo.UInt160.op_LessThan(Neo.UInt160,Neo.UInt160)
  name.vb: <(UInt160, UInt160)
  fullName: Neo.UInt160.operator <(Neo.UInt160, Neo.UInt160)
  fullName.vb: Neo.UInt160.<(Neo.UInt160, Neo.UInt160)
  nameWithType: UInt160.operator <(UInt160, UInt160)
  nameWithType.vb: UInt160.<(UInt160, UInt160)
- uid: Neo.UInt160.op_LessThan*
  name: operator <
  href: api/Neo.UInt160.html#Neo_UInt160_op_LessThan_
  commentId: Overload:Neo.UInt160.op_LessThan
  isSpec: "True"
  name.vb: <
  fullName: Neo.UInt160.operator <
  fullName.vb: Neo.UInt160.<
  nameWithType: UInt160.operator <
  nameWithType.vb: UInt160.<
- uid: Neo.UInt160.op_LessThanOrEqual(Neo.UInt160,Neo.UInt160)
  name: operator <=(UInt160, UInt160)
  href: api/Neo.UInt160.html#Neo_UInt160_op_LessThanOrEqual_Neo_UInt160_Neo_UInt160_
  commentId: M:Neo.UInt160.op_LessThanOrEqual(Neo.UInt160,Neo.UInt160)
  name.vb: <=(UInt160, UInt160)
  fullName: Neo.UInt160.operator <=(Neo.UInt160, Neo.UInt160)
  fullName.vb: Neo.UInt160.<=(Neo.UInt160, Neo.UInt160)
  nameWithType: UInt160.operator <=(UInt160, UInt160)
  nameWithType.vb: UInt160.<=(UInt160, UInt160)
- uid: Neo.UInt160.op_LessThanOrEqual*
  name: operator <=
  href: api/Neo.UInt160.html#Neo_UInt160_op_LessThanOrEqual_
  commentId: Overload:Neo.UInt160.op_LessThanOrEqual
  isSpec: "True"
  name.vb: <=
  fullName: Neo.UInt160.operator <=
  fullName.vb: Neo.UInt160.<=
  nameWithType: UInt160.operator <=
  nameWithType.vb: UInt160.<=
- uid: Neo.UInt256
  name: UInt256
  href: api/Neo.UInt256.html
  commentId: T:Neo.UInt256
  fullName: Neo.UInt256
  nameWithType: UInt256
- uid: Neo.UInt256.#ctor
  name: UInt256()
  href: api/Neo.UInt256.html#Neo_UInt256__ctor
  commentId: M:Neo.UInt256.#ctor
  name.vb: New()
  fullName: Neo.UInt256.UInt256()
  fullName.vb: Neo.UInt256.New()
  nameWithType: UInt256.UInt256()
  nameWithType.vb: UInt256.New()
- uid: Neo.UInt256.#ctor(System.ReadOnlySpan{System.Byte})
  name: UInt256(ReadOnlySpan<byte>)
  href: api/Neo.UInt256.html#Neo_UInt256__ctor_System_ReadOnlySpan_System_Byte__
  commentId: M:Neo.UInt256.#ctor(System.ReadOnlySpan{System.Byte})
  name.vb: New(ReadOnlySpan(Of Byte))
  fullName: Neo.UInt256.UInt256(System.ReadOnlySpan<byte>)
  fullName.vb: Neo.UInt256.New(System.ReadOnlySpan(Of Byte))
  nameWithType: UInt256.UInt256(ReadOnlySpan<byte>)
  nameWithType.vb: UInt256.New(ReadOnlySpan(Of Byte))
- uid: Neo.UInt256.#ctor*
  name: UInt256
  href: api/Neo.UInt256.html#Neo_UInt256__ctor_
  commentId: Overload:Neo.UInt256.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.UInt256.UInt256
  fullName.vb: Neo.UInt256.New
  nameWithType: UInt256.UInt256
  nameWithType.vb: UInt256.New
- uid: Neo.UInt256.CompareTo(Neo.UInt256)
  name: CompareTo(UInt256)
  href: api/Neo.UInt256.html#Neo_UInt256_CompareTo_Neo_UInt256_
  commentId: M:Neo.UInt256.CompareTo(Neo.UInt256)
  fullName: Neo.UInt256.CompareTo(Neo.UInt256)
  nameWithType: UInt256.CompareTo(UInt256)
- uid: Neo.UInt256.CompareTo*
  name: CompareTo
  href: api/Neo.UInt256.html#Neo_UInt256_CompareTo_
  commentId: Overload:Neo.UInt256.CompareTo
  isSpec: "True"
  fullName: Neo.UInt256.CompareTo
  nameWithType: UInt256.CompareTo
- uid: Neo.UInt256.Deserialize(Neo.IO.MemoryReader@)
  name: Deserialize(ref MemoryReader)
  href: api/Neo.UInt256.html#Neo_UInt256_Deserialize_Neo_IO_MemoryReader__
  commentId: M:Neo.UInt256.Deserialize(Neo.IO.MemoryReader@)
  name.vb: Deserialize(MemoryReader)
  fullName: Neo.UInt256.Deserialize(ref Neo.IO.MemoryReader)
  fullName.vb: Neo.UInt256.Deserialize(Neo.IO.MemoryReader)
  nameWithType: UInt256.Deserialize(ref MemoryReader)
  nameWithType.vb: UInt256.Deserialize(MemoryReader)
- uid: Neo.UInt256.Deserialize*
  name: Deserialize
  href: api/Neo.UInt256.html#Neo_UInt256_Deserialize_
  commentId: Overload:Neo.UInt256.Deserialize
  isSpec: "True"
  fullName: Neo.UInt256.Deserialize
  nameWithType: UInt256.Deserialize
- uid: Neo.UInt256.Equals(Neo.UInt256)
  name: Equals(UInt256)
  href: api/Neo.UInt256.html#Neo_UInt256_Equals_Neo_UInt256_
  commentId: M:Neo.UInt256.Equals(Neo.UInt256)
  fullName: Neo.UInt256.Equals(Neo.UInt256)
  nameWithType: UInt256.Equals(UInt256)
- uid: Neo.UInt256.Equals(System.Object)
  name: Equals(object)
  href: api/Neo.UInt256.html#Neo_UInt256_Equals_System_Object_
  commentId: M:Neo.UInt256.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Neo.UInt256.Equals(object)
  fullName.vb: Neo.UInt256.Equals(Object)
  nameWithType: UInt256.Equals(object)
  nameWithType.vb: UInt256.Equals(Object)
- uid: Neo.UInt256.Equals*
  name: Equals
  href: api/Neo.UInt256.html#Neo_UInt256_Equals_
  commentId: Overload:Neo.UInt256.Equals
  isSpec: "True"
  fullName: Neo.UInt256.Equals
  nameWithType: UInt256.Equals
- uid: Neo.UInt256.GetHashCode
  name: GetHashCode()
  href: api/Neo.UInt256.html#Neo_UInt256_GetHashCode
  commentId: M:Neo.UInt256.GetHashCode
  fullName: Neo.UInt256.GetHashCode()
  nameWithType: UInt256.GetHashCode()
- uid: Neo.UInt256.GetHashCode*
  name: GetHashCode
  href: api/Neo.UInt256.html#Neo_UInt256_GetHashCode_
  commentId: Overload:Neo.UInt256.GetHashCode
  isSpec: "True"
  fullName: Neo.UInt256.GetHashCode
  nameWithType: UInt256.GetHashCode
- uid: Neo.UInt256.Length
  name: Length
  href: api/Neo.UInt256.html#Neo_UInt256_Length
  commentId: F:Neo.UInt256.Length
  fullName: Neo.UInt256.Length
  nameWithType: UInt256.Length
- uid: Neo.UInt256.Parse(System.String)
  name: Parse(string)
  href: api/Neo.UInt256.html#Neo_UInt256_Parse_System_String_
  commentId: M:Neo.UInt256.Parse(System.String)
  name.vb: Parse(String)
  fullName: Neo.UInt256.Parse(string)
  fullName.vb: Neo.UInt256.Parse(String)
  nameWithType: UInt256.Parse(string)
  nameWithType.vb: UInt256.Parse(String)
- uid: Neo.UInt256.Parse*
  name: Parse
  href: api/Neo.UInt256.html#Neo_UInt256_Parse_
  commentId: Overload:Neo.UInt256.Parse
  isSpec: "True"
  fullName: Neo.UInt256.Parse
  nameWithType: UInt256.Parse
- uid: Neo.UInt256.Serialize(System.IO.BinaryWriter)
  name: Serialize(BinaryWriter)
  href: api/Neo.UInt256.html#Neo_UInt256_Serialize_System_IO_BinaryWriter_
  commentId: M:Neo.UInt256.Serialize(System.IO.BinaryWriter)
  fullName: Neo.UInt256.Serialize(System.IO.BinaryWriter)
  nameWithType: UInt256.Serialize(BinaryWriter)
- uid: Neo.UInt256.Serialize*
  name: Serialize
  href: api/Neo.UInt256.html#Neo_UInt256_Serialize_
  commentId: Overload:Neo.UInt256.Serialize
  isSpec: "True"
  fullName: Neo.UInt256.Serialize
  nameWithType: UInt256.Serialize
- uid: Neo.UInt256.Size
  name: Size
  href: api/Neo.UInt256.html#Neo_UInt256_Size
  commentId: P:Neo.UInt256.Size
  fullName: Neo.UInt256.Size
  nameWithType: UInt256.Size
- uid: Neo.UInt256.Size*
  name: Size
  href: api/Neo.UInt256.html#Neo_UInt256_Size_
  commentId: Overload:Neo.UInt256.Size
  isSpec: "True"
  fullName: Neo.UInt256.Size
  nameWithType: UInt256.Size
- uid: Neo.UInt256.ToString
  name: ToString()
  href: api/Neo.UInt256.html#Neo_UInt256_ToString
  commentId: M:Neo.UInt256.ToString
  fullName: Neo.UInt256.ToString()
  nameWithType: UInt256.ToString()
- uid: Neo.UInt256.ToString*
  name: ToString
  href: api/Neo.UInt256.html#Neo_UInt256_ToString_
  commentId: Overload:Neo.UInt256.ToString
  isSpec: "True"
  fullName: Neo.UInt256.ToString
  nameWithType: UInt256.ToString
- uid: Neo.UInt256.TryParse(System.String,Neo.UInt256@)
  name: TryParse(string, out UInt256)
  href: api/Neo.UInt256.html#Neo_UInt256_TryParse_System_String_Neo_UInt256__
  commentId: M:Neo.UInt256.TryParse(System.String,Neo.UInt256@)
  name.vb: TryParse(String, UInt256)
  fullName: Neo.UInt256.TryParse(string, out Neo.UInt256)
  fullName.vb: Neo.UInt256.TryParse(String, Neo.UInt256)
  nameWithType: UInt256.TryParse(string, out UInt256)
  nameWithType.vb: UInt256.TryParse(String, UInt256)
- uid: Neo.UInt256.TryParse*
  name: TryParse
  href: api/Neo.UInt256.html#Neo_UInt256_TryParse_
  commentId: Overload:Neo.UInt256.TryParse
  isSpec: "True"
  fullName: Neo.UInt256.TryParse
  nameWithType: UInt256.TryParse
- uid: Neo.UInt256.Zero
  name: Zero
  href: api/Neo.UInt256.html#Neo_UInt256_Zero
  commentId: F:Neo.UInt256.Zero
  fullName: Neo.UInt256.Zero
  nameWithType: UInt256.Zero
- uid: Neo.UInt256.op_Equality(Neo.UInt256,Neo.UInt256)
  name: operator ==(UInt256, UInt256)
  href: api/Neo.UInt256.html#Neo_UInt256_op_Equality_Neo_UInt256_Neo_UInt256_
  commentId: M:Neo.UInt256.op_Equality(Neo.UInt256,Neo.UInt256)
  name.vb: =(UInt256, UInt256)
  fullName: Neo.UInt256.operator ==(Neo.UInt256, Neo.UInt256)
  fullName.vb: Neo.UInt256.=(Neo.UInt256, Neo.UInt256)
  nameWithType: UInt256.operator ==(UInt256, UInt256)
  nameWithType.vb: UInt256.=(UInt256, UInt256)
- uid: Neo.UInt256.op_Equality*
  name: operator ==
  href: api/Neo.UInt256.html#Neo_UInt256_op_Equality_
  commentId: Overload:Neo.UInt256.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: Neo.UInt256.operator ==
  fullName.vb: Neo.UInt256.=
  nameWithType: UInt256.operator ==
  nameWithType.vb: UInt256.=
- uid: Neo.UInt256.op_GreaterThan(Neo.UInt256,Neo.UInt256)
  name: operator >(UInt256, UInt256)
  href: api/Neo.UInt256.html#Neo_UInt256_op_GreaterThan_Neo_UInt256_Neo_UInt256_
  commentId: M:Neo.UInt256.op_GreaterThan(Neo.UInt256,Neo.UInt256)
  name.vb: '>(UInt256, UInt256)'
  fullName: Neo.UInt256.operator >(Neo.UInt256, Neo.UInt256)
  fullName.vb: Neo.UInt256.>(Neo.UInt256, Neo.UInt256)
  nameWithType: UInt256.operator >(UInt256, UInt256)
  nameWithType.vb: UInt256.>(UInt256, UInt256)
- uid: Neo.UInt256.op_GreaterThan*
  name: operator >
  href: api/Neo.UInt256.html#Neo_UInt256_op_GreaterThan_
  commentId: Overload:Neo.UInt256.op_GreaterThan
  isSpec: "True"
  name.vb: '>'
  fullName: Neo.UInt256.operator >
  fullName.vb: Neo.UInt256.>
  nameWithType: UInt256.operator >
  nameWithType.vb: UInt256.>
- uid: Neo.UInt256.op_GreaterThanOrEqual(Neo.UInt256,Neo.UInt256)
  name: operator >=(UInt256, UInt256)
  href: api/Neo.UInt256.html#Neo_UInt256_op_GreaterThanOrEqual_Neo_UInt256_Neo_UInt256_
  commentId: M:Neo.UInt256.op_GreaterThanOrEqual(Neo.UInt256,Neo.UInt256)
  name.vb: '>=(UInt256, UInt256)'
  fullName: Neo.UInt256.operator >=(Neo.UInt256, Neo.UInt256)
  fullName.vb: Neo.UInt256.>=(Neo.UInt256, Neo.UInt256)
  nameWithType: UInt256.operator >=(UInt256, UInt256)
  nameWithType.vb: UInt256.>=(UInt256, UInt256)
- uid: Neo.UInt256.op_GreaterThanOrEqual*
  name: operator >=
  href: api/Neo.UInt256.html#Neo_UInt256_op_GreaterThanOrEqual_
  commentId: Overload:Neo.UInt256.op_GreaterThanOrEqual
  isSpec: "True"
  name.vb: '>='
  fullName: Neo.UInt256.operator >=
  fullName.vb: Neo.UInt256.>=
  nameWithType: UInt256.operator >=
  nameWithType.vb: UInt256.>=
- uid: Neo.UInt256.op_Inequality(Neo.UInt256,Neo.UInt256)
  name: operator !=(UInt256, UInt256)
  href: api/Neo.UInt256.html#Neo_UInt256_op_Inequality_Neo_UInt256_Neo_UInt256_
  commentId: M:Neo.UInt256.op_Inequality(Neo.UInt256,Neo.UInt256)
  name.vb: <>(UInt256, UInt256)
  fullName: Neo.UInt256.operator !=(Neo.UInt256, Neo.UInt256)
  fullName.vb: Neo.UInt256.<>(Neo.UInt256, Neo.UInt256)
  nameWithType: UInt256.operator !=(UInt256, UInt256)
  nameWithType.vb: UInt256.<>(UInt256, UInt256)
- uid: Neo.UInt256.op_Inequality*
  name: operator !=
  href: api/Neo.UInt256.html#Neo_UInt256_op_Inequality_
  commentId: Overload:Neo.UInt256.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: Neo.UInt256.operator !=
  fullName.vb: Neo.UInt256.<>
  nameWithType: UInt256.operator !=
  nameWithType.vb: UInt256.<>
- uid: Neo.UInt256.op_LessThan(Neo.UInt256,Neo.UInt256)
  name: operator <(UInt256, UInt256)
  href: api/Neo.UInt256.html#Neo_UInt256_op_LessThan_Neo_UInt256_Neo_UInt256_
  commentId: M:Neo.UInt256.op_LessThan(Neo.UInt256,Neo.UInt256)
  name.vb: <(UInt256, UInt256)
  fullName: Neo.UInt256.operator <(Neo.UInt256, Neo.UInt256)
  fullName.vb: Neo.UInt256.<(Neo.UInt256, Neo.UInt256)
  nameWithType: UInt256.operator <(UInt256, UInt256)
  nameWithType.vb: UInt256.<(UInt256, UInt256)
- uid: Neo.UInt256.op_LessThan*
  name: operator <
  href: api/Neo.UInt256.html#Neo_UInt256_op_LessThan_
  commentId: Overload:Neo.UInt256.op_LessThan
  isSpec: "True"
  name.vb: <
  fullName: Neo.UInt256.operator <
  fullName.vb: Neo.UInt256.<
  nameWithType: UInt256.operator <
  nameWithType.vb: UInt256.<
- uid: Neo.UInt256.op_LessThanOrEqual(Neo.UInt256,Neo.UInt256)
  name: operator <=(UInt256, UInt256)
  href: api/Neo.UInt256.html#Neo_UInt256_op_LessThanOrEqual_Neo_UInt256_Neo_UInt256_
  commentId: M:Neo.UInt256.op_LessThanOrEqual(Neo.UInt256,Neo.UInt256)
  name.vb: <=(UInt256, UInt256)
  fullName: Neo.UInt256.operator <=(Neo.UInt256, Neo.UInt256)
  fullName.vb: Neo.UInt256.<=(Neo.UInt256, Neo.UInt256)
  nameWithType: UInt256.operator <=(UInt256, UInt256)
  nameWithType.vb: UInt256.<=(UInt256, UInt256)
- uid: Neo.UInt256.op_LessThanOrEqual*
  name: operator <=
  href: api/Neo.UInt256.html#Neo_UInt256_op_LessThanOrEqual_
  commentId: Overload:Neo.UInt256.op_LessThanOrEqual
  isSpec: "True"
  name.vb: <=
  fullName: Neo.UInt256.operator <=
  fullName.vb: Neo.UInt256.<=
  nameWithType: UInt256.operator <=
  nameWithType.vb: UInt256.<=
- uid: Neo.Utility
  name: Utility
  href: api/Neo.Utility.html
  commentId: T:Neo.Utility
  fullName: Neo.Utility
  nameWithType: Utility
- uid: Neo.Utility.Log(System.String,Neo.LogLevel,System.Object)
  name: Log(string, LogLevel, object)
  href: api/Neo.Utility.html#Neo_Utility_Log_System_String_Neo_LogLevel_System_Object_
  commentId: M:Neo.Utility.Log(System.String,Neo.LogLevel,System.Object)
  name.vb: Log(String, LogLevel, Object)
  fullName: Neo.Utility.Log(string, Neo.LogLevel, object)
  fullName.vb: Neo.Utility.Log(String, Neo.LogLevel, Object)
  nameWithType: Utility.Log(string, LogLevel, object)
  nameWithType.vb: Utility.Log(String, LogLevel, Object)
- uid: Neo.Utility.Log*
  name: Log
  href: api/Neo.Utility.html#Neo_Utility_Log_
  commentId: Overload:Neo.Utility.Log
  isSpec: "True"
  fullName: Neo.Utility.Log
  nameWithType: Utility.Log
- uid: Neo.Utility.Logging
  name: Logging
  href: api/Neo.Utility.html#Neo_Utility_Logging
  commentId: E:Neo.Utility.Logging
  fullName: Neo.Utility.Logging
  nameWithType: Utility.Logging
- uid: Neo.Utility.StrictUTF8
  name: StrictUTF8
  href: api/Neo.Utility.html#Neo_Utility_StrictUTF8
  commentId: P:Neo.Utility.StrictUTF8
  fullName: Neo.Utility.StrictUTF8
  nameWithType: Utility.StrictUTF8
- uid: Neo.Utility.StrictUTF8*
  name: StrictUTF8
  href: api/Neo.Utility.html#Neo_Utility_StrictUTF8_
  commentId: Overload:Neo.Utility.StrictUTF8
  isSpec: "True"
  fullName: Neo.Utility.StrictUTF8
  nameWithType: Utility.StrictUTF8
- uid: Neo.VM
  name: Neo.VM
  href: api/Neo.VM.html
  commentId: N:Neo.VM
  fullName: Neo.VM
  nameWithType: Neo.VM
- uid: Neo.VM.Helper
  name: Helper
  href: api/Neo.VM.Helper.html
  commentId: T:Neo.VM.Helper
  fullName: Neo.VM.Helper
  nameWithType: Helper
- uid: Neo.VM.Helper.CreateArray*
  name: CreateArray
  href: api/Neo.VM.Helper.html#Neo_VM_Helper_CreateArray_
  commentId: Overload:Neo.VM.Helper.CreateArray
  isSpec: "True"
  fullName: Neo.VM.Helper.CreateArray
  nameWithType: Helper.CreateArray
- uid: Neo.VM.Helper.CreateArray``1(Neo.VM.ScriptBuilder,System.Collections.Generic.IReadOnlyList{``0})
  name: CreateArray<T>(ScriptBuilder, IReadOnlyList<T>)
  href: api/Neo.VM.Helper.html#Neo_VM_Helper_CreateArray__1_Neo_VM_ScriptBuilder_System_Collections_Generic_IReadOnlyList___0__
  commentId: M:Neo.VM.Helper.CreateArray``1(Neo.VM.ScriptBuilder,System.Collections.Generic.IReadOnlyList{``0})
  name.vb: CreateArray(Of T)(ScriptBuilder, IReadOnlyList(Of T))
  fullName: Neo.VM.Helper.CreateArray<T>(Neo.VM.ScriptBuilder, System.Collections.Generic.IReadOnlyList<T>)
  fullName.vb: Neo.VM.Helper.CreateArray(Of T)(Neo.VM.ScriptBuilder, System.Collections.Generic.IReadOnlyList(Of T))
  nameWithType: Helper.CreateArray<T>(ScriptBuilder, IReadOnlyList<T>)
  nameWithType.vb: Helper.CreateArray(Of T)(ScriptBuilder, IReadOnlyList(Of T))
- uid: Neo.VM.Helper.CreateMap*
  name: CreateMap
  href: api/Neo.VM.Helper.html#Neo_VM_Helper_CreateMap_
  commentId: Overload:Neo.VM.Helper.CreateMap
  isSpec: "True"
  fullName: Neo.VM.Helper.CreateMap
  nameWithType: Helper.CreateMap
- uid: Neo.VM.Helper.CreateMap``2(Neo.VM.ScriptBuilder,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  name: CreateMap<TKey, TValue>(ScriptBuilder, IEnumerable<KeyValuePair<TKey, TValue>>)
  href: api/Neo.VM.Helper.html#Neo_VM_Helper_CreateMap__2_Neo_VM_ScriptBuilder_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair___0___1___
  commentId: M:Neo.VM.Helper.CreateMap``2(Neo.VM.ScriptBuilder,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  name.vb: CreateMap(Of TKey, TValue)(ScriptBuilder, IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  fullName: Neo.VM.Helper.CreateMap<TKey, TValue>(Neo.VM.ScriptBuilder, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  fullName.vb: Neo.VM.Helper.CreateMap(Of TKey, TValue)(Neo.VM.ScriptBuilder, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  nameWithType: Helper.CreateMap<TKey, TValue>(ScriptBuilder, IEnumerable<KeyValuePair<TKey, TValue>>)
  nameWithType.vb: Helper.CreateMap(Of TKey, TValue)(ScriptBuilder, IEnumerable(Of KeyValuePair(Of TKey, TValue)))
- uid: Neo.VM.Helper.Emit(Neo.VM.ScriptBuilder,Neo.VM.OpCode[])
  name: Emit(ScriptBuilder, params OpCode[])
  href: api/Neo.VM.Helper.html#Neo_VM_Helper_Emit_Neo_VM_ScriptBuilder_Neo_VM_OpCode___
  commentId: M:Neo.VM.Helper.Emit(Neo.VM.ScriptBuilder,Neo.VM.OpCode[])
  name.vb: Emit(ScriptBuilder, ParamArray OpCode())
  fullName: Neo.VM.Helper.Emit(Neo.VM.ScriptBuilder, params Neo.VM.OpCode[])
  fullName.vb: Neo.VM.Helper.Emit(Neo.VM.ScriptBuilder, ParamArray Neo.VM.OpCode())
  nameWithType: Helper.Emit(ScriptBuilder, params OpCode[])
  nameWithType.vb: Helper.Emit(ScriptBuilder, ParamArray OpCode())
- uid: Neo.VM.Helper.Emit*
  name: Emit
  href: api/Neo.VM.Helper.html#Neo_VM_Helper_Emit_
  commentId: Overload:Neo.VM.Helper.Emit
  isSpec: "True"
  fullName: Neo.VM.Helper.Emit
  nameWithType: Helper.Emit
- uid: Neo.VM.Helper.EmitDynamicCall(Neo.VM.ScriptBuilder,Neo.UInt160,System.String,Neo.SmartContract.CallFlags,System.Object[])
  name: EmitDynamicCall(ScriptBuilder, UInt160, string, CallFlags, params object[])
  href: api/Neo.VM.Helper.html#Neo_VM_Helper_EmitDynamicCall_Neo_VM_ScriptBuilder_Neo_UInt160_System_String_Neo_SmartContract_CallFlags_System_Object___
  commentId: M:Neo.VM.Helper.EmitDynamicCall(Neo.VM.ScriptBuilder,Neo.UInt160,System.String,Neo.SmartContract.CallFlags,System.Object[])
  name.vb: EmitDynamicCall(ScriptBuilder, UInt160, String, CallFlags, ParamArray Object())
  fullName: Neo.VM.Helper.EmitDynamicCall(Neo.VM.ScriptBuilder, Neo.UInt160, string, Neo.SmartContract.CallFlags, params object[])
  fullName.vb: Neo.VM.Helper.EmitDynamicCall(Neo.VM.ScriptBuilder, Neo.UInt160, String, Neo.SmartContract.CallFlags, ParamArray Object())
  nameWithType: Helper.EmitDynamicCall(ScriptBuilder, UInt160, string, CallFlags, params object[])
  nameWithType.vb: Helper.EmitDynamicCall(ScriptBuilder, UInt160, String, CallFlags, ParamArray Object())
- uid: Neo.VM.Helper.EmitDynamicCall(Neo.VM.ScriptBuilder,Neo.UInt160,System.String,System.Object[])
  name: EmitDynamicCall(ScriptBuilder, UInt160, string, params object[])
  href: api/Neo.VM.Helper.html#Neo_VM_Helper_EmitDynamicCall_Neo_VM_ScriptBuilder_Neo_UInt160_System_String_System_Object___
  commentId: M:Neo.VM.Helper.EmitDynamicCall(Neo.VM.ScriptBuilder,Neo.UInt160,System.String,System.Object[])
  name.vb: EmitDynamicCall(ScriptBuilder, UInt160, String, ParamArray Object())
  fullName: Neo.VM.Helper.EmitDynamicCall(Neo.VM.ScriptBuilder, Neo.UInt160, string, params object[])
  fullName.vb: Neo.VM.Helper.EmitDynamicCall(Neo.VM.ScriptBuilder, Neo.UInt160, String, ParamArray Object())
  nameWithType: Helper.EmitDynamicCall(ScriptBuilder, UInt160, string, params object[])
  nameWithType.vb: Helper.EmitDynamicCall(ScriptBuilder, UInt160, String, ParamArray Object())
- uid: Neo.VM.Helper.EmitDynamicCall*
  name: EmitDynamicCall
  href: api/Neo.VM.Helper.html#Neo_VM_Helper_EmitDynamicCall_
  commentId: Overload:Neo.VM.Helper.EmitDynamicCall
  isSpec: "True"
  fullName: Neo.VM.Helper.EmitDynamicCall
  nameWithType: Helper.EmitDynamicCall
- uid: Neo.VM.Helper.EmitPush(Neo.VM.ScriptBuilder,Neo.IO.ISerializable)
  name: EmitPush(ScriptBuilder, ISerializable)
  href: api/Neo.VM.Helper.html#Neo_VM_Helper_EmitPush_Neo_VM_ScriptBuilder_Neo_IO_ISerializable_
  commentId: M:Neo.VM.Helper.EmitPush(Neo.VM.ScriptBuilder,Neo.IO.ISerializable)
  fullName: Neo.VM.Helper.EmitPush(Neo.VM.ScriptBuilder, Neo.IO.ISerializable)
  nameWithType: Helper.EmitPush(ScriptBuilder, ISerializable)
- uid: Neo.VM.Helper.EmitPush(Neo.VM.ScriptBuilder,Neo.SmartContract.ContractParameter)
  name: EmitPush(ScriptBuilder, ContractParameter)
  href: api/Neo.VM.Helper.html#Neo_VM_Helper_EmitPush_Neo_VM_ScriptBuilder_Neo_SmartContract_ContractParameter_
  commentId: M:Neo.VM.Helper.EmitPush(Neo.VM.ScriptBuilder,Neo.SmartContract.ContractParameter)
  fullName: Neo.VM.Helper.EmitPush(Neo.VM.ScriptBuilder, Neo.SmartContract.ContractParameter)
  nameWithType: Helper.EmitPush(ScriptBuilder, ContractParameter)
- uid: Neo.VM.Helper.EmitPush(Neo.VM.ScriptBuilder,System.Object)
  name: EmitPush(ScriptBuilder, object)
  href: api/Neo.VM.Helper.html#Neo_VM_Helper_EmitPush_Neo_VM_ScriptBuilder_System_Object_
  commentId: M:Neo.VM.Helper.EmitPush(Neo.VM.ScriptBuilder,System.Object)
  name.vb: EmitPush(ScriptBuilder, Object)
  fullName: Neo.VM.Helper.EmitPush(Neo.VM.ScriptBuilder, object)
  fullName.vb: Neo.VM.Helper.EmitPush(Neo.VM.ScriptBuilder, Object)
  nameWithType: Helper.EmitPush(ScriptBuilder, object)
  nameWithType.vb: Helper.EmitPush(ScriptBuilder, Object)
- uid: Neo.VM.Helper.EmitPush*
  name: EmitPush
  href: api/Neo.VM.Helper.html#Neo_VM_Helper_EmitPush_
  commentId: Overload:Neo.VM.Helper.EmitPush
  isSpec: "True"
  fullName: Neo.VM.Helper.EmitPush
  nameWithType: Helper.EmitPush
- uid: Neo.VM.Helper.EmitSysCall(Neo.VM.ScriptBuilder,System.UInt32,System.Object[])
  name: EmitSysCall(ScriptBuilder, uint, params object[])
  href: api/Neo.VM.Helper.html#Neo_VM_Helper_EmitSysCall_Neo_VM_ScriptBuilder_System_UInt32_System_Object___
  commentId: M:Neo.VM.Helper.EmitSysCall(Neo.VM.ScriptBuilder,System.UInt32,System.Object[])
  name.vb: EmitSysCall(ScriptBuilder, UInteger, ParamArray Object())
  fullName: Neo.VM.Helper.EmitSysCall(Neo.VM.ScriptBuilder, uint, params object[])
  fullName.vb: Neo.VM.Helper.EmitSysCall(Neo.VM.ScriptBuilder, UInteger, ParamArray Object())
  nameWithType: Helper.EmitSysCall(ScriptBuilder, uint, params object[])
  nameWithType.vb: Helper.EmitSysCall(ScriptBuilder, UInteger, ParamArray Object())
- uid: Neo.VM.Helper.EmitSysCall*
  name: EmitSysCall
  href: api/Neo.VM.Helper.html#Neo_VM_Helper_EmitSysCall_
  commentId: Overload:Neo.VM.Helper.EmitSysCall
  isSpec: "True"
  fullName: Neo.VM.Helper.EmitSysCall
  nameWithType: Helper.EmitSysCall
- uid: Neo.VM.Helper.MakeScript(Neo.UInt160,System.String,System.Object[])
  name: MakeScript(UInt160, string, params object[])
  href: api/Neo.VM.Helper.html#Neo_VM_Helper_MakeScript_Neo_UInt160_System_String_System_Object___
  commentId: M:Neo.VM.Helper.MakeScript(Neo.UInt160,System.String,System.Object[])
  name.vb: MakeScript(UInt160, String, ParamArray Object())
  fullName: Neo.VM.Helper.MakeScript(Neo.UInt160, string, params object[])
  fullName.vb: Neo.VM.Helper.MakeScript(Neo.UInt160, String, ParamArray Object())
  nameWithType: Helper.MakeScript(UInt160, string, params object[])
  nameWithType.vb: Helper.MakeScript(UInt160, String, ParamArray Object())
- uid: Neo.VM.Helper.MakeScript*
  name: MakeScript
  href: api/Neo.VM.Helper.html#Neo_VM_Helper_MakeScript_
  commentId: Overload:Neo.VM.Helper.MakeScript
  isSpec: "True"
  fullName: Neo.VM.Helper.MakeScript
  nameWithType: Helper.MakeScript
- uid: Neo.VM.Helper.ToJson(Neo.VM.EvaluationStack,System.Int32)
  name: ToJson(EvaluationStack, int)
  href: api/Neo.VM.Helper.html#Neo_VM_Helper_ToJson_Neo_VM_EvaluationStack_System_Int32_
  commentId: M:Neo.VM.Helper.ToJson(Neo.VM.EvaluationStack,System.Int32)
  name.vb: ToJson(EvaluationStack, Integer)
  fullName: Neo.VM.Helper.ToJson(Neo.VM.EvaluationStack, int)
  fullName.vb: Neo.VM.Helper.ToJson(Neo.VM.EvaluationStack, Integer)
  nameWithType: Helper.ToJson(EvaluationStack, int)
  nameWithType.vb: Helper.ToJson(EvaluationStack, Integer)
- uid: Neo.VM.Helper.ToJson(Neo.VM.Types.StackItem,System.Int32)
  name: ToJson(StackItem, int)
  href: api/Neo.VM.Helper.html#Neo_VM_Helper_ToJson_Neo_VM_Types_StackItem_System_Int32_
  commentId: M:Neo.VM.Helper.ToJson(Neo.VM.Types.StackItem,System.Int32)
  name.vb: ToJson(StackItem, Integer)
  fullName: Neo.VM.Helper.ToJson(Neo.VM.Types.StackItem, int)
  fullName.vb: Neo.VM.Helper.ToJson(Neo.VM.Types.StackItem, Integer)
  nameWithType: Helper.ToJson(StackItem, int)
  nameWithType.vb: Helper.ToJson(StackItem, Integer)
- uid: Neo.VM.Helper.ToJson*
  name: ToJson
  href: api/Neo.VM.Helper.html#Neo_VM_Helper_ToJson_
  commentId: Overload:Neo.VM.Helper.ToJson
  isSpec: "True"
  fullName: Neo.VM.Helper.ToJson
  nameWithType: Helper.ToJson
- uid: Neo.VM.Helper.ToParameter(Neo.VM.Types.StackItem)
  name: ToParameter(StackItem)
  href: api/Neo.VM.Helper.html#Neo_VM_Helper_ToParameter_Neo_VM_Types_StackItem_
  commentId: M:Neo.VM.Helper.ToParameter(Neo.VM.Types.StackItem)
  fullName: Neo.VM.Helper.ToParameter(Neo.VM.Types.StackItem)
  nameWithType: Helper.ToParameter(StackItem)
- uid: Neo.VM.Helper.ToParameter*
  name: ToParameter
  href: api/Neo.VM.Helper.html#Neo_VM_Helper_ToParameter_
  commentId: Overload:Neo.VM.Helper.ToParameter
  isSpec: "True"
  fullName: Neo.VM.Helper.ToParameter
  nameWithType: Helper.ToParameter
- uid: Neo.VM.Helper.ToStackItem(Neo.SmartContract.ContractParameter)
  name: ToStackItem(ContractParameter)
  href: api/Neo.VM.Helper.html#Neo_VM_Helper_ToStackItem_Neo_SmartContract_ContractParameter_
  commentId: M:Neo.VM.Helper.ToStackItem(Neo.SmartContract.ContractParameter)
  fullName: Neo.VM.Helper.ToStackItem(Neo.SmartContract.ContractParameter)
  nameWithType: Helper.ToStackItem(ContractParameter)
- uid: Neo.VM.Helper.ToStackItem*
  name: ToStackItem
  href: api/Neo.VM.Helper.html#Neo_VM_Helper_ToStackItem_
  commentId: Overload:Neo.VM.Helper.ToStackItem
  isSpec: "True"
  fullName: Neo.VM.Helper.ToStackItem
  nameWithType: Helper.ToStackItem
- uid: Neo.Wallets
  name: Neo.Wallets
  href: api/Neo.Wallets.html
  commentId: N:Neo.Wallets
  fullName: Neo.Wallets
  nameWithType: Neo.Wallets
- uid: Neo.Wallets.AssetDescriptor
  name: AssetDescriptor
  href: api/Neo.Wallets.AssetDescriptor.html
  commentId: T:Neo.Wallets.AssetDescriptor
  fullName: Neo.Wallets.AssetDescriptor
  nameWithType: AssetDescriptor
- uid: Neo.Wallets.AssetDescriptor.#ctor(Neo.Persistence.DataCache,Neo.ProtocolSettings,Neo.UInt160)
  name: AssetDescriptor(DataCache, ProtocolSettings, UInt160)
  href: api/Neo.Wallets.AssetDescriptor.html#Neo_Wallets_AssetDescriptor__ctor_Neo_Persistence_DataCache_Neo_ProtocolSettings_Neo_UInt160_
  commentId: M:Neo.Wallets.AssetDescriptor.#ctor(Neo.Persistence.DataCache,Neo.ProtocolSettings,Neo.UInt160)
  name.vb: New(DataCache, ProtocolSettings, UInt160)
  fullName: Neo.Wallets.AssetDescriptor.AssetDescriptor(Neo.Persistence.DataCache, Neo.ProtocolSettings, Neo.UInt160)
  fullName.vb: Neo.Wallets.AssetDescriptor.New(Neo.Persistence.DataCache, Neo.ProtocolSettings, Neo.UInt160)
  nameWithType: AssetDescriptor.AssetDescriptor(DataCache, ProtocolSettings, UInt160)
  nameWithType.vb: AssetDescriptor.New(DataCache, ProtocolSettings, UInt160)
- uid: Neo.Wallets.AssetDescriptor.#ctor*
  name: AssetDescriptor
  href: api/Neo.Wallets.AssetDescriptor.html#Neo_Wallets_AssetDescriptor__ctor_
  commentId: Overload:Neo.Wallets.AssetDescriptor.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Wallets.AssetDescriptor.AssetDescriptor
  fullName.vb: Neo.Wallets.AssetDescriptor.New
  nameWithType: AssetDescriptor.AssetDescriptor
  nameWithType.vb: AssetDescriptor.New
- uid: Neo.Wallets.AssetDescriptor.AssetId
  name: AssetId
  href: api/Neo.Wallets.AssetDescriptor.html#Neo_Wallets_AssetDescriptor_AssetId
  commentId: P:Neo.Wallets.AssetDescriptor.AssetId
  fullName: Neo.Wallets.AssetDescriptor.AssetId
  nameWithType: AssetDescriptor.AssetId
- uid: Neo.Wallets.AssetDescriptor.AssetId*
  name: AssetId
  href: api/Neo.Wallets.AssetDescriptor.html#Neo_Wallets_AssetDescriptor_AssetId_
  commentId: Overload:Neo.Wallets.AssetDescriptor.AssetId
  isSpec: "True"
  fullName: Neo.Wallets.AssetDescriptor.AssetId
  nameWithType: AssetDescriptor.AssetId
- uid: Neo.Wallets.AssetDescriptor.AssetName
  name: AssetName
  href: api/Neo.Wallets.AssetDescriptor.html#Neo_Wallets_AssetDescriptor_AssetName
  commentId: P:Neo.Wallets.AssetDescriptor.AssetName
  fullName: Neo.Wallets.AssetDescriptor.AssetName
  nameWithType: AssetDescriptor.AssetName
- uid: Neo.Wallets.AssetDescriptor.AssetName*
  name: AssetName
  href: api/Neo.Wallets.AssetDescriptor.html#Neo_Wallets_AssetDescriptor_AssetName_
  commentId: Overload:Neo.Wallets.AssetDescriptor.AssetName
  isSpec: "True"
  fullName: Neo.Wallets.AssetDescriptor.AssetName
  nameWithType: AssetDescriptor.AssetName
- uid: Neo.Wallets.AssetDescriptor.Decimals
  name: Decimals
  href: api/Neo.Wallets.AssetDescriptor.html#Neo_Wallets_AssetDescriptor_Decimals
  commentId: P:Neo.Wallets.AssetDescriptor.Decimals
  fullName: Neo.Wallets.AssetDescriptor.Decimals
  nameWithType: AssetDescriptor.Decimals
- uid: Neo.Wallets.AssetDescriptor.Decimals*
  name: Decimals
  href: api/Neo.Wallets.AssetDescriptor.html#Neo_Wallets_AssetDescriptor_Decimals_
  commentId: Overload:Neo.Wallets.AssetDescriptor.Decimals
  isSpec: "True"
  fullName: Neo.Wallets.AssetDescriptor.Decimals
  nameWithType: AssetDescriptor.Decimals
- uid: Neo.Wallets.AssetDescriptor.Symbol
  name: Symbol
  href: api/Neo.Wallets.AssetDescriptor.html#Neo_Wallets_AssetDescriptor_Symbol
  commentId: P:Neo.Wallets.AssetDescriptor.Symbol
  fullName: Neo.Wallets.AssetDescriptor.Symbol
  nameWithType: AssetDescriptor.Symbol
- uid: Neo.Wallets.AssetDescriptor.Symbol*
  name: Symbol
  href: api/Neo.Wallets.AssetDescriptor.html#Neo_Wallets_AssetDescriptor_Symbol_
  commentId: Overload:Neo.Wallets.AssetDescriptor.Symbol
  isSpec: "True"
  fullName: Neo.Wallets.AssetDescriptor.Symbol
  nameWithType: AssetDescriptor.Symbol
- uid: Neo.Wallets.AssetDescriptor.ToString
  name: ToString()
  href: api/Neo.Wallets.AssetDescriptor.html#Neo_Wallets_AssetDescriptor_ToString
  commentId: M:Neo.Wallets.AssetDescriptor.ToString
  fullName: Neo.Wallets.AssetDescriptor.ToString()
  nameWithType: AssetDescriptor.ToString()
- uid: Neo.Wallets.AssetDescriptor.ToString*
  name: ToString
  href: api/Neo.Wallets.AssetDescriptor.html#Neo_Wallets_AssetDescriptor_ToString_
  commentId: Overload:Neo.Wallets.AssetDescriptor.ToString
  isSpec: "True"
  fullName: Neo.Wallets.AssetDescriptor.ToString
  nameWithType: AssetDescriptor.ToString
- uid: Neo.Wallets.Helper
  name: Helper
  href: api/Neo.Wallets.Helper.html
  commentId: T:Neo.Wallets.Helper
  fullName: Neo.Wallets.Helper
  nameWithType: Helper
- uid: Neo.Wallets.Helper.Sign(Neo.Network.P2P.Payloads.IVerifiable,Neo.Wallets.KeyPair,System.UInt32)
  name: Sign(IVerifiable, KeyPair, uint)
  href: api/Neo.Wallets.Helper.html#Neo_Wallets_Helper_Sign_Neo_Network_P2P_Payloads_IVerifiable_Neo_Wallets_KeyPair_System_UInt32_
  commentId: M:Neo.Wallets.Helper.Sign(Neo.Network.P2P.Payloads.IVerifiable,Neo.Wallets.KeyPair,System.UInt32)
  name.vb: Sign(IVerifiable, KeyPair, UInteger)
  fullName: Neo.Wallets.Helper.Sign(Neo.Network.P2P.Payloads.IVerifiable, Neo.Wallets.KeyPair, uint)
  fullName.vb: Neo.Wallets.Helper.Sign(Neo.Network.P2P.Payloads.IVerifiable, Neo.Wallets.KeyPair, UInteger)
  nameWithType: Helper.Sign(IVerifiable, KeyPair, uint)
  nameWithType.vb: Helper.Sign(IVerifiable, KeyPair, UInteger)
- uid: Neo.Wallets.Helper.Sign*
  name: Sign
  href: api/Neo.Wallets.Helper.html#Neo_Wallets_Helper_Sign_
  commentId: Overload:Neo.Wallets.Helper.Sign
  isSpec: "True"
  fullName: Neo.Wallets.Helper.Sign
  nameWithType: Helper.Sign
- uid: Neo.Wallets.Helper.ToAddress(Neo.UInt160,System.Byte)
  name: ToAddress(UInt160, byte)
  href: api/Neo.Wallets.Helper.html#Neo_Wallets_Helper_ToAddress_Neo_UInt160_System_Byte_
  commentId: M:Neo.Wallets.Helper.ToAddress(Neo.UInt160,System.Byte)
  name.vb: ToAddress(UInt160, Byte)
  fullName: Neo.Wallets.Helper.ToAddress(Neo.UInt160, byte)
  fullName.vb: Neo.Wallets.Helper.ToAddress(Neo.UInt160, Byte)
  nameWithType: Helper.ToAddress(UInt160, byte)
  nameWithType.vb: Helper.ToAddress(UInt160, Byte)
- uid: Neo.Wallets.Helper.ToAddress*
  name: ToAddress
  href: api/Neo.Wallets.Helper.html#Neo_Wallets_Helper_ToAddress_
  commentId: Overload:Neo.Wallets.Helper.ToAddress
  isSpec: "True"
  fullName: Neo.Wallets.Helper.ToAddress
  nameWithType: Helper.ToAddress
- uid: Neo.Wallets.Helper.ToScriptHash(System.String,System.Byte)
  name: ToScriptHash(string, byte)
  href: api/Neo.Wallets.Helper.html#Neo_Wallets_Helper_ToScriptHash_System_String_System_Byte_
  commentId: M:Neo.Wallets.Helper.ToScriptHash(System.String,System.Byte)
  name.vb: ToScriptHash(String, Byte)
  fullName: Neo.Wallets.Helper.ToScriptHash(string, byte)
  fullName.vb: Neo.Wallets.Helper.ToScriptHash(String, Byte)
  nameWithType: Helper.ToScriptHash(string, byte)
  nameWithType.vb: Helper.ToScriptHash(String, Byte)
- uid: Neo.Wallets.Helper.ToScriptHash*
  name: ToScriptHash
  href: api/Neo.Wallets.Helper.html#Neo_Wallets_Helper_ToScriptHash_
  commentId: Overload:Neo.Wallets.Helper.ToScriptHash
  isSpec: "True"
  fullName: Neo.Wallets.Helper.ToScriptHash
  nameWithType: Helper.ToScriptHash
- uid: Neo.Wallets.IWalletFactory
  name: IWalletFactory
  href: api/Neo.Wallets.IWalletFactory.html
  commentId: T:Neo.Wallets.IWalletFactory
  fullName: Neo.Wallets.IWalletFactory
  nameWithType: IWalletFactory
- uid: Neo.Wallets.IWalletFactory.CreateWallet(System.String,System.String,System.String,Neo.ProtocolSettings)
  name: CreateWallet(string, string, string, ProtocolSettings)
  href: api/Neo.Wallets.IWalletFactory.html#Neo_Wallets_IWalletFactory_CreateWallet_System_String_System_String_System_String_Neo_ProtocolSettings_
  commentId: M:Neo.Wallets.IWalletFactory.CreateWallet(System.String,System.String,System.String,Neo.ProtocolSettings)
  name.vb: CreateWallet(String, String, String, ProtocolSettings)
  fullName: Neo.Wallets.IWalletFactory.CreateWallet(string, string, string, Neo.ProtocolSettings)
  fullName.vb: Neo.Wallets.IWalletFactory.CreateWallet(String, String, String, Neo.ProtocolSettings)
  nameWithType: IWalletFactory.CreateWallet(string, string, string, ProtocolSettings)
  nameWithType.vb: IWalletFactory.CreateWallet(String, String, String, ProtocolSettings)
- uid: Neo.Wallets.IWalletFactory.CreateWallet*
  name: CreateWallet
  href: api/Neo.Wallets.IWalletFactory.html#Neo_Wallets_IWalletFactory_CreateWallet_
  commentId: Overload:Neo.Wallets.IWalletFactory.CreateWallet
  isSpec: "True"
  fullName: Neo.Wallets.IWalletFactory.CreateWallet
  nameWithType: IWalletFactory.CreateWallet
- uid: Neo.Wallets.IWalletFactory.Handle(System.String)
  name: Handle(string)
  href: api/Neo.Wallets.IWalletFactory.html#Neo_Wallets_IWalletFactory_Handle_System_String_
  commentId: M:Neo.Wallets.IWalletFactory.Handle(System.String)
  name.vb: Handle(String)
  fullName: Neo.Wallets.IWalletFactory.Handle(string)
  fullName.vb: Neo.Wallets.IWalletFactory.Handle(String)
  nameWithType: IWalletFactory.Handle(string)
  nameWithType.vb: IWalletFactory.Handle(String)
- uid: Neo.Wallets.IWalletFactory.Handle*
  name: Handle
  href: api/Neo.Wallets.IWalletFactory.html#Neo_Wallets_IWalletFactory_Handle_
  commentId: Overload:Neo.Wallets.IWalletFactory.Handle
  isSpec: "True"
  fullName: Neo.Wallets.IWalletFactory.Handle
  nameWithType: IWalletFactory.Handle
- uid: Neo.Wallets.IWalletFactory.OpenWallet(System.String,System.String,Neo.ProtocolSettings)
  name: OpenWallet(string, string, ProtocolSettings)
  href: api/Neo.Wallets.IWalletFactory.html#Neo_Wallets_IWalletFactory_OpenWallet_System_String_System_String_Neo_ProtocolSettings_
  commentId: M:Neo.Wallets.IWalletFactory.OpenWallet(System.String,System.String,Neo.ProtocolSettings)
  name.vb: OpenWallet(String, String, ProtocolSettings)
  fullName: Neo.Wallets.IWalletFactory.OpenWallet(string, string, Neo.ProtocolSettings)
  fullName.vb: Neo.Wallets.IWalletFactory.OpenWallet(String, String, Neo.ProtocolSettings)
  nameWithType: IWalletFactory.OpenWallet(string, string, ProtocolSettings)
  nameWithType.vb: IWalletFactory.OpenWallet(String, String, ProtocolSettings)
- uid: Neo.Wallets.IWalletFactory.OpenWallet*
  name: OpenWallet
  href: api/Neo.Wallets.IWalletFactory.html#Neo_Wallets_IWalletFactory_OpenWallet_
  commentId: Overload:Neo.Wallets.IWalletFactory.OpenWallet
  isSpec: "True"
  fullName: Neo.Wallets.IWalletFactory.OpenWallet
  nameWithType: IWalletFactory.OpenWallet
- uid: Neo.Wallets.IWalletProvider
  name: IWalletProvider
  href: api/Neo.Wallets.IWalletProvider.html
  commentId: T:Neo.Wallets.IWalletProvider
  fullName: Neo.Wallets.IWalletProvider
  nameWithType: IWalletProvider
- uid: Neo.Wallets.IWalletProvider.GetWallet
  name: GetWallet()
  href: api/Neo.Wallets.IWalletProvider.html#Neo_Wallets_IWalletProvider_GetWallet
  commentId: M:Neo.Wallets.IWalletProvider.GetWallet
  fullName: Neo.Wallets.IWalletProvider.GetWallet()
  nameWithType: IWalletProvider.GetWallet()
- uid: Neo.Wallets.IWalletProvider.GetWallet*
  name: GetWallet
  href: api/Neo.Wallets.IWalletProvider.html#Neo_Wallets_IWalletProvider_GetWallet_
  commentId: Overload:Neo.Wallets.IWalletProvider.GetWallet
  isSpec: "True"
  fullName: Neo.Wallets.IWalletProvider.GetWallet
  nameWithType: IWalletProvider.GetWallet
- uid: Neo.Wallets.IWalletProvider.WalletChanged
  name: WalletChanged
  href: api/Neo.Wallets.IWalletProvider.html#Neo_Wallets_IWalletProvider_WalletChanged
  commentId: E:Neo.Wallets.IWalletProvider.WalletChanged
  fullName: Neo.Wallets.IWalletProvider.WalletChanged
  nameWithType: IWalletProvider.WalletChanged
- uid: Neo.Wallets.KeyPair
  name: KeyPair
  href: api/Neo.Wallets.KeyPair.html
  commentId: T:Neo.Wallets.KeyPair
  fullName: Neo.Wallets.KeyPair
  nameWithType: KeyPair
- uid: Neo.Wallets.KeyPair.#ctor(System.Byte[])
  name: KeyPair(byte[])
  href: api/Neo.Wallets.KeyPair.html#Neo_Wallets_KeyPair__ctor_System_Byte___
  commentId: M:Neo.Wallets.KeyPair.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: Neo.Wallets.KeyPair.KeyPair(byte[])
  fullName.vb: Neo.Wallets.KeyPair.New(Byte())
  nameWithType: KeyPair.KeyPair(byte[])
  nameWithType.vb: KeyPair.New(Byte())
- uid: Neo.Wallets.KeyPair.#ctor*
  name: KeyPair
  href: api/Neo.Wallets.KeyPair.html#Neo_Wallets_KeyPair__ctor_
  commentId: Overload:Neo.Wallets.KeyPair.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Wallets.KeyPair.KeyPair
  fullName.vb: Neo.Wallets.KeyPair.New
  nameWithType: KeyPair.KeyPair
  nameWithType.vb: KeyPair.New
- uid: Neo.Wallets.KeyPair.Equals(Neo.Wallets.KeyPair)
  name: Equals(KeyPair)
  href: api/Neo.Wallets.KeyPair.html#Neo_Wallets_KeyPair_Equals_Neo_Wallets_KeyPair_
  commentId: M:Neo.Wallets.KeyPair.Equals(Neo.Wallets.KeyPair)
  fullName: Neo.Wallets.KeyPair.Equals(Neo.Wallets.KeyPair)
  nameWithType: KeyPair.Equals(KeyPair)
- uid: Neo.Wallets.KeyPair.Equals(System.Object)
  name: Equals(object)
  href: api/Neo.Wallets.KeyPair.html#Neo_Wallets_KeyPair_Equals_System_Object_
  commentId: M:Neo.Wallets.KeyPair.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Neo.Wallets.KeyPair.Equals(object)
  fullName.vb: Neo.Wallets.KeyPair.Equals(Object)
  nameWithType: KeyPair.Equals(object)
  nameWithType.vb: KeyPair.Equals(Object)
- uid: Neo.Wallets.KeyPair.Equals*
  name: Equals
  href: api/Neo.Wallets.KeyPair.html#Neo_Wallets_KeyPair_Equals_
  commentId: Overload:Neo.Wallets.KeyPair.Equals
  isSpec: "True"
  fullName: Neo.Wallets.KeyPair.Equals
  nameWithType: KeyPair.Equals
- uid: Neo.Wallets.KeyPair.Export
  name: Export()
  href: api/Neo.Wallets.KeyPair.html#Neo_Wallets_KeyPair_Export
  commentId: M:Neo.Wallets.KeyPair.Export
  fullName: Neo.Wallets.KeyPair.Export()
  nameWithType: KeyPair.Export()
- uid: Neo.Wallets.KeyPair.Export(System.Byte[],System.Byte,System.Int32,System.Int32,System.Int32)
  name: Export(byte[], byte, int, int, int)
  href: api/Neo.Wallets.KeyPair.html#Neo_Wallets_KeyPair_Export_System_Byte___System_Byte_System_Int32_System_Int32_System_Int32_
  commentId: M:Neo.Wallets.KeyPair.Export(System.Byte[],System.Byte,System.Int32,System.Int32,System.Int32)
  name.vb: Export(Byte(), Byte, Integer, Integer, Integer)
  fullName: Neo.Wallets.KeyPair.Export(byte[], byte, int, int, int)
  fullName.vb: Neo.Wallets.KeyPair.Export(Byte(), Byte, Integer, Integer, Integer)
  nameWithType: KeyPair.Export(byte[], byte, int, int, int)
  nameWithType.vb: KeyPair.Export(Byte(), Byte, Integer, Integer, Integer)
- uid: Neo.Wallets.KeyPair.Export(System.String,System.Byte,System.Int32,System.Int32,System.Int32)
  name: Export(string, byte, int, int, int)
  href: api/Neo.Wallets.KeyPair.html#Neo_Wallets_KeyPair_Export_System_String_System_Byte_System_Int32_System_Int32_System_Int32_
  commentId: M:Neo.Wallets.KeyPair.Export(System.String,System.Byte,System.Int32,System.Int32,System.Int32)
  name.vb: Export(String, Byte, Integer, Integer, Integer)
  fullName: Neo.Wallets.KeyPair.Export(string, byte, int, int, int)
  fullName.vb: Neo.Wallets.KeyPair.Export(String, Byte, Integer, Integer, Integer)
  nameWithType: KeyPair.Export(string, byte, int, int, int)
  nameWithType.vb: KeyPair.Export(String, Byte, Integer, Integer, Integer)
- uid: Neo.Wallets.KeyPair.Export*
  name: Export
  href: api/Neo.Wallets.KeyPair.html#Neo_Wallets_KeyPair_Export_
  commentId: Overload:Neo.Wallets.KeyPair.Export
  isSpec: "True"
  fullName: Neo.Wallets.KeyPair.Export
  nameWithType: KeyPair.Export
- uid: Neo.Wallets.KeyPair.GetHashCode
  name: GetHashCode()
  href: api/Neo.Wallets.KeyPair.html#Neo_Wallets_KeyPair_GetHashCode
  commentId: M:Neo.Wallets.KeyPair.GetHashCode
  fullName: Neo.Wallets.KeyPair.GetHashCode()
  nameWithType: KeyPair.GetHashCode()
- uid: Neo.Wallets.KeyPair.GetHashCode*
  name: GetHashCode
  href: api/Neo.Wallets.KeyPair.html#Neo_Wallets_KeyPair_GetHashCode_
  commentId: Overload:Neo.Wallets.KeyPair.GetHashCode
  isSpec: "True"
  fullName: Neo.Wallets.KeyPair.GetHashCode
  nameWithType: KeyPair.GetHashCode
- uid: Neo.Wallets.KeyPair.PrivateKey
  name: PrivateKey
  href: api/Neo.Wallets.KeyPair.html#Neo_Wallets_KeyPair_PrivateKey
  commentId: F:Neo.Wallets.KeyPair.PrivateKey
  fullName: Neo.Wallets.KeyPair.PrivateKey
  nameWithType: KeyPair.PrivateKey
- uid: Neo.Wallets.KeyPair.PublicKey
  name: PublicKey
  href: api/Neo.Wallets.KeyPair.html#Neo_Wallets_KeyPair_PublicKey
  commentId: F:Neo.Wallets.KeyPair.PublicKey
  fullName: Neo.Wallets.KeyPair.PublicKey
  nameWithType: KeyPair.PublicKey
- uid: Neo.Wallets.KeyPair.PublicKeyHash
  name: PublicKeyHash
  href: api/Neo.Wallets.KeyPair.html#Neo_Wallets_KeyPair_PublicKeyHash
  commentId: P:Neo.Wallets.KeyPair.PublicKeyHash
  fullName: Neo.Wallets.KeyPair.PublicKeyHash
  nameWithType: KeyPair.PublicKeyHash
- uid: Neo.Wallets.KeyPair.PublicKeyHash*
  name: PublicKeyHash
  href: api/Neo.Wallets.KeyPair.html#Neo_Wallets_KeyPair_PublicKeyHash_
  commentId: Overload:Neo.Wallets.KeyPair.PublicKeyHash
  isSpec: "True"
  fullName: Neo.Wallets.KeyPair.PublicKeyHash
  nameWithType: KeyPair.PublicKeyHash
- uid: Neo.Wallets.KeyPair.ToString
  name: ToString()
  href: api/Neo.Wallets.KeyPair.html#Neo_Wallets_KeyPair_ToString
  commentId: M:Neo.Wallets.KeyPair.ToString
  fullName: Neo.Wallets.KeyPair.ToString()
  nameWithType: KeyPair.ToString()
- uid: Neo.Wallets.KeyPair.ToString*
  name: ToString
  href: api/Neo.Wallets.KeyPair.html#Neo_Wallets_KeyPair_ToString_
  commentId: Overload:Neo.Wallets.KeyPair.ToString
  isSpec: "True"
  fullName: Neo.Wallets.KeyPair.ToString
  nameWithType: KeyPair.ToString
- uid: Neo.Wallets.NEP6
  name: Neo.Wallets.NEP6
  href: api/Neo.Wallets.NEP6.html
  commentId: N:Neo.Wallets.NEP6
  fullName: Neo.Wallets.NEP6
  nameWithType: Neo.Wallets.NEP6
- uid: Neo.Wallets.NEP6.NEP6Wallet
  name: NEP6Wallet
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html
  commentId: T:Neo.Wallets.NEP6.NEP6Wallet
  fullName: Neo.Wallets.NEP6.NEP6Wallet
  nameWithType: NEP6Wallet
- uid: Neo.Wallets.NEP6.NEP6Wallet.#ctor(System.String,System.String,Neo.ProtocolSettings,Neo.Json.JObject)
  name: NEP6Wallet(string, string, ProtocolSettings, JObject)
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet__ctor_System_String_System_String_Neo_ProtocolSettings_Neo_Json_JObject_
  commentId: M:Neo.Wallets.NEP6.NEP6Wallet.#ctor(System.String,System.String,Neo.ProtocolSettings,Neo.Json.JObject)
  name.vb: New(String, String, ProtocolSettings, JObject)
  fullName: Neo.Wallets.NEP6.NEP6Wallet.NEP6Wallet(string, string, Neo.ProtocolSettings, Neo.Json.JObject)
  fullName.vb: Neo.Wallets.NEP6.NEP6Wallet.New(String, String, Neo.ProtocolSettings, Neo.Json.JObject)
  nameWithType: NEP6Wallet.NEP6Wallet(string, string, ProtocolSettings, JObject)
  nameWithType.vb: NEP6Wallet.New(String, String, ProtocolSettings, JObject)
- uid: Neo.Wallets.NEP6.NEP6Wallet.#ctor(System.String,System.String,Neo.ProtocolSettings,System.String)
  name: NEP6Wallet(string, string, ProtocolSettings, string)
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet__ctor_System_String_System_String_Neo_ProtocolSettings_System_String_
  commentId: M:Neo.Wallets.NEP6.NEP6Wallet.#ctor(System.String,System.String,Neo.ProtocolSettings,System.String)
  name.vb: New(String, String, ProtocolSettings, String)
  fullName: Neo.Wallets.NEP6.NEP6Wallet.NEP6Wallet(string, string, Neo.ProtocolSettings, string)
  fullName.vb: Neo.Wallets.NEP6.NEP6Wallet.New(String, String, Neo.ProtocolSettings, String)
  nameWithType: NEP6Wallet.NEP6Wallet(string, string, ProtocolSettings, string)
  nameWithType.vb: NEP6Wallet.New(String, String, ProtocolSettings, String)
- uid: Neo.Wallets.NEP6.NEP6Wallet.#ctor*
  name: NEP6Wallet
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet__ctor_
  commentId: Overload:Neo.Wallets.NEP6.NEP6Wallet.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Wallets.NEP6.NEP6Wallet.NEP6Wallet
  fullName.vb: Neo.Wallets.NEP6.NEP6Wallet.New
  nameWithType: NEP6Wallet.NEP6Wallet
  nameWithType.vb: NEP6Wallet.New
- uid: Neo.Wallets.NEP6.NEP6Wallet.ChangePassword(System.String,System.String)
  name: ChangePassword(string, string)
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_ChangePassword_System_String_System_String_
  commentId: M:Neo.Wallets.NEP6.NEP6Wallet.ChangePassword(System.String,System.String)
  name.vb: ChangePassword(String, String)
  fullName: Neo.Wallets.NEP6.NEP6Wallet.ChangePassword(string, string)
  fullName.vb: Neo.Wallets.NEP6.NEP6Wallet.ChangePassword(String, String)
  nameWithType: NEP6Wallet.ChangePassword(string, string)
  nameWithType.vb: NEP6Wallet.ChangePassword(String, String)
- uid: Neo.Wallets.NEP6.NEP6Wallet.ChangePassword*
  name: ChangePassword
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_ChangePassword_
  commentId: Overload:Neo.Wallets.NEP6.NEP6Wallet.ChangePassword
  isSpec: "True"
  fullName: Neo.Wallets.NEP6.NEP6Wallet.ChangePassword
  nameWithType: NEP6Wallet.ChangePassword
- uid: Neo.Wallets.NEP6.NEP6Wallet.Contains(Neo.UInt160)
  name: Contains(UInt160)
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_Contains_Neo_UInt160_
  commentId: M:Neo.Wallets.NEP6.NEP6Wallet.Contains(Neo.UInt160)
  fullName: Neo.Wallets.NEP6.NEP6Wallet.Contains(Neo.UInt160)
  nameWithType: NEP6Wallet.Contains(UInt160)
- uid: Neo.Wallets.NEP6.NEP6Wallet.Contains*
  name: Contains
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_Contains_
  commentId: Overload:Neo.Wallets.NEP6.NEP6Wallet.Contains
  isSpec: "True"
  fullName: Neo.Wallets.NEP6.NEP6Wallet.Contains
  nameWithType: NEP6Wallet.Contains
- uid: Neo.Wallets.NEP6.NEP6Wallet.CreateAccount(Neo.SmartContract.Contract,Neo.Wallets.KeyPair)
  name: CreateAccount(Contract, KeyPair)
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_CreateAccount_Neo_SmartContract_Contract_Neo_Wallets_KeyPair_
  commentId: M:Neo.Wallets.NEP6.NEP6Wallet.CreateAccount(Neo.SmartContract.Contract,Neo.Wallets.KeyPair)
  fullName: Neo.Wallets.NEP6.NEP6Wallet.CreateAccount(Neo.SmartContract.Contract, Neo.Wallets.KeyPair)
  nameWithType: NEP6Wallet.CreateAccount(Contract, KeyPair)
- uid: Neo.Wallets.NEP6.NEP6Wallet.CreateAccount(Neo.UInt160)
  name: CreateAccount(UInt160)
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_CreateAccount_Neo_UInt160_
  commentId: M:Neo.Wallets.NEP6.NEP6Wallet.CreateAccount(Neo.UInt160)
  fullName: Neo.Wallets.NEP6.NEP6Wallet.CreateAccount(Neo.UInt160)
  nameWithType: NEP6Wallet.CreateAccount(UInt160)
- uid: Neo.Wallets.NEP6.NEP6Wallet.CreateAccount(System.Byte[])
  name: CreateAccount(byte[])
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_CreateAccount_System_Byte___
  commentId: M:Neo.Wallets.NEP6.NEP6Wallet.CreateAccount(System.Byte[])
  name.vb: CreateAccount(Byte())
  fullName: Neo.Wallets.NEP6.NEP6Wallet.CreateAccount(byte[])
  fullName.vb: Neo.Wallets.NEP6.NEP6Wallet.CreateAccount(Byte())
  nameWithType: NEP6Wallet.CreateAccount(byte[])
  nameWithType.vb: NEP6Wallet.CreateAccount(Byte())
- uid: Neo.Wallets.NEP6.NEP6Wallet.CreateAccount*
  name: CreateAccount
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_CreateAccount_
  commentId: Overload:Neo.Wallets.NEP6.NEP6Wallet.CreateAccount
  isSpec: "True"
  fullName: Neo.Wallets.NEP6.NEP6Wallet.CreateAccount
  nameWithType: NEP6Wallet.CreateAccount
- uid: Neo.Wallets.NEP6.NEP6Wallet.Delete
  name: Delete()
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_Delete
  commentId: M:Neo.Wallets.NEP6.NEP6Wallet.Delete
  fullName: Neo.Wallets.NEP6.NEP6Wallet.Delete()
  nameWithType: NEP6Wallet.Delete()
- uid: Neo.Wallets.NEP6.NEP6Wallet.Delete*
  name: Delete
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_Delete_
  commentId: Overload:Neo.Wallets.NEP6.NEP6Wallet.Delete
  isSpec: "True"
  fullName: Neo.Wallets.NEP6.NEP6Wallet.Delete
  nameWithType: NEP6Wallet.Delete
- uid: Neo.Wallets.NEP6.NEP6Wallet.DeleteAccount(Neo.UInt160)
  name: DeleteAccount(UInt160)
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_DeleteAccount_Neo_UInt160_
  commentId: M:Neo.Wallets.NEP6.NEP6Wallet.DeleteAccount(Neo.UInt160)
  fullName: Neo.Wallets.NEP6.NEP6Wallet.DeleteAccount(Neo.UInt160)
  nameWithType: NEP6Wallet.DeleteAccount(UInt160)
- uid: Neo.Wallets.NEP6.NEP6Wallet.DeleteAccount*
  name: DeleteAccount
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_DeleteAccount_
  commentId: Overload:Neo.Wallets.NEP6.NEP6Wallet.DeleteAccount
  isSpec: "True"
  fullName: Neo.Wallets.NEP6.NEP6Wallet.DeleteAccount
  nameWithType: NEP6Wallet.DeleteAccount
- uid: Neo.Wallets.NEP6.NEP6Wallet.GetAccount(Neo.UInt160)
  name: GetAccount(UInt160)
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_GetAccount_Neo_UInt160_
  commentId: M:Neo.Wallets.NEP6.NEP6Wallet.GetAccount(Neo.UInt160)
  fullName: Neo.Wallets.NEP6.NEP6Wallet.GetAccount(Neo.UInt160)
  nameWithType: NEP6Wallet.GetAccount(UInt160)
- uid: Neo.Wallets.NEP6.NEP6Wallet.GetAccount*
  name: GetAccount
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_GetAccount_
  commentId: Overload:Neo.Wallets.NEP6.NEP6Wallet.GetAccount
  isSpec: "True"
  fullName: Neo.Wallets.NEP6.NEP6Wallet.GetAccount
  nameWithType: NEP6Wallet.GetAccount
- uid: Neo.Wallets.NEP6.NEP6Wallet.GetAccounts
  name: GetAccounts()
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_GetAccounts
  commentId: M:Neo.Wallets.NEP6.NEP6Wallet.GetAccounts
  fullName: Neo.Wallets.NEP6.NEP6Wallet.GetAccounts()
  nameWithType: NEP6Wallet.GetAccounts()
- uid: Neo.Wallets.NEP6.NEP6Wallet.GetAccounts*
  name: GetAccounts
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_GetAccounts_
  commentId: Overload:Neo.Wallets.NEP6.NEP6Wallet.GetAccounts
  isSpec: "True"
  fullName: Neo.Wallets.NEP6.NEP6Wallet.GetAccounts
  nameWithType: NEP6Wallet.GetAccounts
- uid: Neo.Wallets.NEP6.NEP6Wallet.Import(System.Security.Cryptography.X509Certificates.X509Certificate2)
  name: Import(X509Certificate2)
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_Import_System_Security_Cryptography_X509Certificates_X509Certificate2_
  commentId: M:Neo.Wallets.NEP6.NEP6Wallet.Import(System.Security.Cryptography.X509Certificates.X509Certificate2)
  fullName: Neo.Wallets.NEP6.NEP6Wallet.Import(System.Security.Cryptography.X509Certificates.X509Certificate2)
  nameWithType: NEP6Wallet.Import(X509Certificate2)
- uid: Neo.Wallets.NEP6.NEP6Wallet.Import(System.String)
  name: Import(string)
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_Import_System_String_
  commentId: M:Neo.Wallets.NEP6.NEP6Wallet.Import(System.String)
  name.vb: Import(String)
  fullName: Neo.Wallets.NEP6.NEP6Wallet.Import(string)
  fullName.vb: Neo.Wallets.NEP6.NEP6Wallet.Import(String)
  nameWithType: NEP6Wallet.Import(string)
  nameWithType.vb: NEP6Wallet.Import(String)
- uid: Neo.Wallets.NEP6.NEP6Wallet.Import(System.String,System.String,System.Int32,System.Int32,System.Int32)
  name: Import(string, string, int, int, int)
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_Import_System_String_System_String_System_Int32_System_Int32_System_Int32_
  commentId: M:Neo.Wallets.NEP6.NEP6Wallet.Import(System.String,System.String,System.Int32,System.Int32,System.Int32)
  name.vb: Import(String, String, Integer, Integer, Integer)
  fullName: Neo.Wallets.NEP6.NEP6Wallet.Import(string, string, int, int, int)
  fullName.vb: Neo.Wallets.NEP6.NEP6Wallet.Import(String, String, Integer, Integer, Integer)
  nameWithType: NEP6Wallet.Import(string, string, int, int, int)
  nameWithType.vb: NEP6Wallet.Import(String, String, Integer, Integer, Integer)
- uid: Neo.Wallets.NEP6.NEP6Wallet.Import*
  name: Import
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_Import_
  commentId: Overload:Neo.Wallets.NEP6.NEP6Wallet.Import
  isSpec: "True"
  fullName: Neo.Wallets.NEP6.NEP6Wallet.Import
  nameWithType: NEP6Wallet.Import
- uid: Neo.Wallets.NEP6.NEP6Wallet.Name
  name: Name
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_Name
  commentId: P:Neo.Wallets.NEP6.NEP6Wallet.Name
  fullName: Neo.Wallets.NEP6.NEP6Wallet.Name
  nameWithType: NEP6Wallet.Name
- uid: Neo.Wallets.NEP6.NEP6Wallet.Name*
  name: Name
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_Name_
  commentId: Overload:Neo.Wallets.NEP6.NEP6Wallet.Name
  isSpec: "True"
  fullName: Neo.Wallets.NEP6.NEP6Wallet.Name
  nameWithType: NEP6Wallet.Name
- uid: Neo.Wallets.NEP6.NEP6Wallet.Save
  name: Save()
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_Save
  commentId: M:Neo.Wallets.NEP6.NEP6Wallet.Save
  fullName: Neo.Wallets.NEP6.NEP6Wallet.Save()
  nameWithType: NEP6Wallet.Save()
- uid: Neo.Wallets.NEP6.NEP6Wallet.Save*
  name: Save
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_Save_
  commentId: Overload:Neo.Wallets.NEP6.NEP6Wallet.Save
  isSpec: "True"
  fullName: Neo.Wallets.NEP6.NEP6Wallet.Save
  nameWithType: NEP6Wallet.Save
- uid: Neo.Wallets.NEP6.NEP6Wallet.Scrypt
  name: Scrypt
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_Scrypt
  commentId: F:Neo.Wallets.NEP6.NEP6Wallet.Scrypt
  fullName: Neo.Wallets.NEP6.NEP6Wallet.Scrypt
  nameWithType: NEP6Wallet.Scrypt
- uid: Neo.Wallets.NEP6.NEP6Wallet.ToJson
  name: ToJson()
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_ToJson
  commentId: M:Neo.Wallets.NEP6.NEP6Wallet.ToJson
  fullName: Neo.Wallets.NEP6.NEP6Wallet.ToJson()
  nameWithType: NEP6Wallet.ToJson()
- uid: Neo.Wallets.NEP6.NEP6Wallet.ToJson*
  name: ToJson
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_ToJson_
  commentId: Overload:Neo.Wallets.NEP6.NEP6Wallet.ToJson
  isSpec: "True"
  fullName: Neo.Wallets.NEP6.NEP6Wallet.ToJson
  nameWithType: NEP6Wallet.ToJson
- uid: Neo.Wallets.NEP6.NEP6Wallet.VerifyPassword(System.String)
  name: VerifyPassword(string)
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_VerifyPassword_System_String_
  commentId: M:Neo.Wallets.NEP6.NEP6Wallet.VerifyPassword(System.String)
  name.vb: VerifyPassword(String)
  fullName: Neo.Wallets.NEP6.NEP6Wallet.VerifyPassword(string)
  fullName.vb: Neo.Wallets.NEP6.NEP6Wallet.VerifyPassword(String)
  nameWithType: NEP6Wallet.VerifyPassword(string)
  nameWithType.vb: NEP6Wallet.VerifyPassword(String)
- uid: Neo.Wallets.NEP6.NEP6Wallet.VerifyPassword*
  name: VerifyPassword
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_VerifyPassword_
  commentId: Overload:Neo.Wallets.NEP6.NEP6Wallet.VerifyPassword
  isSpec: "True"
  fullName: Neo.Wallets.NEP6.NEP6Wallet.VerifyPassword
  nameWithType: NEP6Wallet.VerifyPassword
- uid: Neo.Wallets.NEP6.NEP6Wallet.Version
  name: Version
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_Version
  commentId: P:Neo.Wallets.NEP6.NEP6Wallet.Version
  fullName: Neo.Wallets.NEP6.NEP6Wallet.Version
  nameWithType: NEP6Wallet.Version
- uid: Neo.Wallets.NEP6.NEP6Wallet.Version*
  name: Version
  href: api/Neo.Wallets.NEP6.NEP6Wallet.html#Neo_Wallets_NEP6_NEP6Wallet_Version_
  commentId: Overload:Neo.Wallets.NEP6.NEP6Wallet.Version
  isSpec: "True"
  fullName: Neo.Wallets.NEP6.NEP6Wallet.Version
  nameWithType: NEP6Wallet.Version
- uid: Neo.Wallets.NEP6.ScryptParameters
  name: ScryptParameters
  href: api/Neo.Wallets.NEP6.ScryptParameters.html
  commentId: T:Neo.Wallets.NEP6.ScryptParameters
  fullName: Neo.Wallets.NEP6.ScryptParameters
  nameWithType: ScryptParameters
- uid: Neo.Wallets.NEP6.ScryptParameters.#ctor(System.Int32,System.Int32,System.Int32)
  name: ScryptParameters(int, int, int)
  href: api/Neo.Wallets.NEP6.ScryptParameters.html#Neo_Wallets_NEP6_ScryptParameters__ctor_System_Int32_System_Int32_System_Int32_
  commentId: M:Neo.Wallets.NEP6.ScryptParameters.#ctor(System.Int32,System.Int32,System.Int32)
  name.vb: New(Integer, Integer, Integer)
  fullName: Neo.Wallets.NEP6.ScryptParameters.ScryptParameters(int, int, int)
  fullName.vb: Neo.Wallets.NEP6.ScryptParameters.New(Integer, Integer, Integer)
  nameWithType: ScryptParameters.ScryptParameters(int, int, int)
  nameWithType.vb: ScryptParameters.New(Integer, Integer, Integer)
- uid: Neo.Wallets.NEP6.ScryptParameters.#ctor*
  name: ScryptParameters
  href: api/Neo.Wallets.NEP6.ScryptParameters.html#Neo_Wallets_NEP6_ScryptParameters__ctor_
  commentId: Overload:Neo.Wallets.NEP6.ScryptParameters.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Wallets.NEP6.ScryptParameters.ScryptParameters
  fullName.vb: Neo.Wallets.NEP6.ScryptParameters.New
  nameWithType: ScryptParameters.ScryptParameters
  nameWithType.vb: ScryptParameters.New
- uid: Neo.Wallets.NEP6.ScryptParameters.Default
  name: Default
  href: api/Neo.Wallets.NEP6.ScryptParameters.html#Neo_Wallets_NEP6_ScryptParameters_Default
  commentId: P:Neo.Wallets.NEP6.ScryptParameters.Default
  fullName: Neo.Wallets.NEP6.ScryptParameters.Default
  nameWithType: ScryptParameters.Default
- uid: Neo.Wallets.NEP6.ScryptParameters.Default*
  name: Default
  href: api/Neo.Wallets.NEP6.ScryptParameters.html#Neo_Wallets_NEP6_ScryptParameters_Default_
  commentId: Overload:Neo.Wallets.NEP6.ScryptParameters.Default
  isSpec: "True"
  fullName: Neo.Wallets.NEP6.ScryptParameters.Default
  nameWithType: ScryptParameters.Default
- uid: Neo.Wallets.NEP6.ScryptParameters.FromJson(Neo.Json.JObject)
  name: FromJson(JObject)
  href: api/Neo.Wallets.NEP6.ScryptParameters.html#Neo_Wallets_NEP6_ScryptParameters_FromJson_Neo_Json_JObject_
  commentId: M:Neo.Wallets.NEP6.ScryptParameters.FromJson(Neo.Json.JObject)
  fullName: Neo.Wallets.NEP6.ScryptParameters.FromJson(Neo.Json.JObject)
  nameWithType: ScryptParameters.FromJson(JObject)
- uid: Neo.Wallets.NEP6.ScryptParameters.FromJson*
  name: FromJson
  href: api/Neo.Wallets.NEP6.ScryptParameters.html#Neo_Wallets_NEP6_ScryptParameters_FromJson_
  commentId: Overload:Neo.Wallets.NEP6.ScryptParameters.FromJson
  isSpec: "True"
  fullName: Neo.Wallets.NEP6.ScryptParameters.FromJson
  nameWithType: ScryptParameters.FromJson
- uid: Neo.Wallets.NEP6.ScryptParameters.N
  name: N
  href: api/Neo.Wallets.NEP6.ScryptParameters.html#Neo_Wallets_NEP6_ScryptParameters_N
  commentId: F:Neo.Wallets.NEP6.ScryptParameters.N
  fullName: Neo.Wallets.NEP6.ScryptParameters.N
  nameWithType: ScryptParameters.N
- uid: Neo.Wallets.NEP6.ScryptParameters.P
  name: P
  href: api/Neo.Wallets.NEP6.ScryptParameters.html#Neo_Wallets_NEP6_ScryptParameters_P
  commentId: F:Neo.Wallets.NEP6.ScryptParameters.P
  fullName: Neo.Wallets.NEP6.ScryptParameters.P
  nameWithType: ScryptParameters.P
- uid: Neo.Wallets.NEP6.ScryptParameters.R
  name: R
  href: api/Neo.Wallets.NEP6.ScryptParameters.html#Neo_Wallets_NEP6_ScryptParameters_R
  commentId: F:Neo.Wallets.NEP6.ScryptParameters.R
  fullName: Neo.Wallets.NEP6.ScryptParameters.R
  nameWithType: ScryptParameters.R
- uid: Neo.Wallets.NEP6.ScryptParameters.ToJson
  name: ToJson()
  href: api/Neo.Wallets.NEP6.ScryptParameters.html#Neo_Wallets_NEP6_ScryptParameters_ToJson
  commentId: M:Neo.Wallets.NEP6.ScryptParameters.ToJson
  fullName: Neo.Wallets.NEP6.ScryptParameters.ToJson()
  nameWithType: ScryptParameters.ToJson()
- uid: Neo.Wallets.NEP6.ScryptParameters.ToJson*
  name: ToJson
  href: api/Neo.Wallets.NEP6.ScryptParameters.html#Neo_Wallets_NEP6_ScryptParameters_ToJson_
  commentId: Overload:Neo.Wallets.NEP6.ScryptParameters.ToJson
  isSpec: "True"
  fullName: Neo.Wallets.NEP6.ScryptParameters.ToJson
  nameWithType: ScryptParameters.ToJson
- uid: Neo.Wallets.TransferOutput
  name: TransferOutput
  href: api/Neo.Wallets.TransferOutput.html
  commentId: T:Neo.Wallets.TransferOutput
  fullName: Neo.Wallets.TransferOutput
  nameWithType: TransferOutput
- uid: Neo.Wallets.TransferOutput.AssetId
  name: AssetId
  href: api/Neo.Wallets.TransferOutput.html#Neo_Wallets_TransferOutput_AssetId
  commentId: F:Neo.Wallets.TransferOutput.AssetId
  fullName: Neo.Wallets.TransferOutput.AssetId
  nameWithType: TransferOutput.AssetId
- uid: Neo.Wallets.TransferOutput.Data
  name: Data
  href: api/Neo.Wallets.TransferOutput.html#Neo_Wallets_TransferOutput_Data
  commentId: F:Neo.Wallets.TransferOutput.Data
  fullName: Neo.Wallets.TransferOutput.Data
  nameWithType: TransferOutput.Data
- uid: Neo.Wallets.TransferOutput.ScriptHash
  name: ScriptHash
  href: api/Neo.Wallets.TransferOutput.html#Neo_Wallets_TransferOutput_ScriptHash
  commentId: F:Neo.Wallets.TransferOutput.ScriptHash
  fullName: Neo.Wallets.TransferOutput.ScriptHash
  nameWithType: TransferOutput.ScriptHash
- uid: Neo.Wallets.TransferOutput.Value
  name: Value
  href: api/Neo.Wallets.TransferOutput.html#Neo_Wallets_TransferOutput_Value
  commentId: F:Neo.Wallets.TransferOutput.Value
  fullName: Neo.Wallets.TransferOutput.Value
  nameWithType: TransferOutput.Value
- uid: Neo.Wallets.Wallet
  name: Wallet
  href: api/Neo.Wallets.Wallet.html
  commentId: T:Neo.Wallets.Wallet
  fullName: Neo.Wallets.Wallet
  nameWithType: Wallet
- uid: Neo.Wallets.Wallet.#ctor(System.String,Neo.ProtocolSettings)
  name: Wallet(string, ProtocolSettings)
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet__ctor_System_String_Neo_ProtocolSettings_
  commentId: M:Neo.Wallets.Wallet.#ctor(System.String,Neo.ProtocolSettings)
  name.vb: New(String, ProtocolSettings)
  fullName: Neo.Wallets.Wallet.Wallet(string, Neo.ProtocolSettings)
  fullName.vb: Neo.Wallets.Wallet.New(String, Neo.ProtocolSettings)
  nameWithType: Wallet.Wallet(string, ProtocolSettings)
  nameWithType.vb: Wallet.New(String, ProtocolSettings)
- uid: Neo.Wallets.Wallet.#ctor*
  name: Wallet
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet__ctor_
  commentId: Overload:Neo.Wallets.Wallet.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Wallets.Wallet.Wallet
  fullName.vb: Neo.Wallets.Wallet.New
  nameWithType: Wallet.Wallet
  nameWithType.vb: Wallet.New
- uid: Neo.Wallets.Wallet.CalculateNetworkFee(Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.Transaction,System.Int64)
  name: CalculateNetworkFee(DataCache, Transaction, long)
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_CalculateNetworkFee_Neo_Persistence_DataCache_Neo_Network_P2P_Payloads_Transaction_System_Int64_
  commentId: M:Neo.Wallets.Wallet.CalculateNetworkFee(Neo.Persistence.DataCache,Neo.Network.P2P.Payloads.Transaction,System.Int64)
  name.vb: CalculateNetworkFee(DataCache, Transaction, Long)
  fullName: Neo.Wallets.Wallet.CalculateNetworkFee(Neo.Persistence.DataCache, Neo.Network.P2P.Payloads.Transaction, long)
  fullName.vb: Neo.Wallets.Wallet.CalculateNetworkFee(Neo.Persistence.DataCache, Neo.Network.P2P.Payloads.Transaction, Long)
  nameWithType: Wallet.CalculateNetworkFee(DataCache, Transaction, long)
  nameWithType.vb: Wallet.CalculateNetworkFee(DataCache, Transaction, Long)
- uid: Neo.Wallets.Wallet.CalculateNetworkFee*
  name: CalculateNetworkFee
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_CalculateNetworkFee_
  commentId: Overload:Neo.Wallets.Wallet.CalculateNetworkFee
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.CalculateNetworkFee
  nameWithType: Wallet.CalculateNetworkFee
- uid: Neo.Wallets.Wallet.ChangePassword(System.String,System.String)
  name: ChangePassword(string, string)
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_ChangePassword_System_String_System_String_
  commentId: M:Neo.Wallets.Wallet.ChangePassword(System.String,System.String)
  name.vb: ChangePassword(String, String)
  fullName: Neo.Wallets.Wallet.ChangePassword(string, string)
  fullName.vb: Neo.Wallets.Wallet.ChangePassword(String, String)
  nameWithType: Wallet.ChangePassword(string, string)
  nameWithType.vb: Wallet.ChangePassword(String, String)
- uid: Neo.Wallets.Wallet.ChangePassword*
  name: ChangePassword
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_ChangePassword_
  commentId: Overload:Neo.Wallets.Wallet.ChangePassword
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.ChangePassword
  nameWithType: Wallet.ChangePassword
- uid: Neo.Wallets.Wallet.Contains(Neo.UInt160)
  name: Contains(UInt160)
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_Contains_Neo_UInt160_
  commentId: M:Neo.Wallets.Wallet.Contains(Neo.UInt160)
  fullName: Neo.Wallets.Wallet.Contains(Neo.UInt160)
  nameWithType: Wallet.Contains(UInt160)
- uid: Neo.Wallets.Wallet.Contains*
  name: Contains
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_Contains_
  commentId: Overload:Neo.Wallets.Wallet.Contains
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.Contains
  nameWithType: Wallet.Contains
- uid: Neo.Wallets.Wallet.Create(System.String,System.String,System.String,Neo.ProtocolSettings)
  name: Create(string, string, string, ProtocolSettings)
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_Create_System_String_System_String_System_String_Neo_ProtocolSettings_
  commentId: M:Neo.Wallets.Wallet.Create(System.String,System.String,System.String,Neo.ProtocolSettings)
  name.vb: Create(String, String, String, ProtocolSettings)
  fullName: Neo.Wallets.Wallet.Create(string, string, string, Neo.ProtocolSettings)
  fullName.vb: Neo.Wallets.Wallet.Create(String, String, String, Neo.ProtocolSettings)
  nameWithType: Wallet.Create(string, string, string, ProtocolSettings)
  nameWithType.vb: Wallet.Create(String, String, String, ProtocolSettings)
- uid: Neo.Wallets.Wallet.Create*
  name: Create
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_Create_
  commentId: Overload:Neo.Wallets.Wallet.Create
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.Create
  nameWithType: Wallet.Create
- uid: Neo.Wallets.Wallet.CreateAccount
  name: CreateAccount()
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_CreateAccount
  commentId: M:Neo.Wallets.Wallet.CreateAccount
  fullName: Neo.Wallets.Wallet.CreateAccount()
  nameWithType: Wallet.CreateAccount()
- uid: Neo.Wallets.Wallet.CreateAccount(Neo.SmartContract.Contract,Neo.Wallets.KeyPair)
  name: CreateAccount(Contract, KeyPair)
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_CreateAccount_Neo_SmartContract_Contract_Neo_Wallets_KeyPair_
  commentId: M:Neo.Wallets.Wallet.CreateAccount(Neo.SmartContract.Contract,Neo.Wallets.KeyPair)
  fullName: Neo.Wallets.Wallet.CreateAccount(Neo.SmartContract.Contract, Neo.Wallets.KeyPair)
  nameWithType: Wallet.CreateAccount(Contract, KeyPair)
- uid: Neo.Wallets.Wallet.CreateAccount(Neo.SmartContract.Contract,System.Byte[])
  name: CreateAccount(Contract, byte[])
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_CreateAccount_Neo_SmartContract_Contract_System_Byte___
  commentId: M:Neo.Wallets.Wallet.CreateAccount(Neo.SmartContract.Contract,System.Byte[])
  name.vb: CreateAccount(Contract, Byte())
  fullName: Neo.Wallets.Wallet.CreateAccount(Neo.SmartContract.Contract, byte[])
  fullName.vb: Neo.Wallets.Wallet.CreateAccount(Neo.SmartContract.Contract, Byte())
  nameWithType: Wallet.CreateAccount(Contract, byte[])
  nameWithType.vb: Wallet.CreateAccount(Contract, Byte())
- uid: Neo.Wallets.Wallet.CreateAccount(Neo.UInt160)
  name: CreateAccount(UInt160)
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_CreateAccount_Neo_UInt160_
  commentId: M:Neo.Wallets.Wallet.CreateAccount(Neo.UInt160)
  fullName: Neo.Wallets.Wallet.CreateAccount(Neo.UInt160)
  nameWithType: Wallet.CreateAccount(UInt160)
- uid: Neo.Wallets.Wallet.CreateAccount(System.Byte[])
  name: CreateAccount(byte[])
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_CreateAccount_System_Byte___
  commentId: M:Neo.Wallets.Wallet.CreateAccount(System.Byte[])
  name.vb: CreateAccount(Byte())
  fullName: Neo.Wallets.Wallet.CreateAccount(byte[])
  fullName.vb: Neo.Wallets.Wallet.CreateAccount(Byte())
  nameWithType: Wallet.CreateAccount(byte[])
  nameWithType.vb: Wallet.CreateAccount(Byte())
- uid: Neo.Wallets.Wallet.CreateAccount*
  name: CreateAccount
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_CreateAccount_
  commentId: Overload:Neo.Wallets.Wallet.CreateAccount
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.CreateAccount
  nameWithType: Wallet.CreateAccount
- uid: Neo.Wallets.Wallet.Delete
  name: Delete()
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_Delete
  commentId: M:Neo.Wallets.Wallet.Delete
  fullName: Neo.Wallets.Wallet.Delete()
  nameWithType: Wallet.Delete()
- uid: Neo.Wallets.Wallet.Delete*
  name: Delete
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_Delete_
  commentId: Overload:Neo.Wallets.Wallet.Delete
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.Delete
  nameWithType: Wallet.Delete
- uid: Neo.Wallets.Wallet.DeleteAccount(Neo.UInt160)
  name: DeleteAccount(UInt160)
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_DeleteAccount_Neo_UInt160_
  commentId: M:Neo.Wallets.Wallet.DeleteAccount(Neo.UInt160)
  fullName: Neo.Wallets.Wallet.DeleteAccount(Neo.UInt160)
  nameWithType: Wallet.DeleteAccount(UInt160)
- uid: Neo.Wallets.Wallet.DeleteAccount*
  name: DeleteAccount
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_DeleteAccount_
  commentId: Overload:Neo.Wallets.Wallet.DeleteAccount
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.DeleteAccount
  nameWithType: Wallet.DeleteAccount
- uid: Neo.Wallets.Wallet.GetAccount(Neo.Cryptography.ECC.ECPoint)
  name: GetAccount(ECPoint)
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_GetAccount_Neo_Cryptography_ECC_ECPoint_
  commentId: M:Neo.Wallets.Wallet.GetAccount(Neo.Cryptography.ECC.ECPoint)
  fullName: Neo.Wallets.Wallet.GetAccount(Neo.Cryptography.ECC.ECPoint)
  nameWithType: Wallet.GetAccount(ECPoint)
- uid: Neo.Wallets.Wallet.GetAccount(Neo.UInt160)
  name: GetAccount(UInt160)
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_GetAccount_Neo_UInt160_
  commentId: M:Neo.Wallets.Wallet.GetAccount(Neo.UInt160)
  fullName: Neo.Wallets.Wallet.GetAccount(Neo.UInt160)
  nameWithType: Wallet.GetAccount(UInt160)
- uid: Neo.Wallets.Wallet.GetAccount*
  name: GetAccount
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_GetAccount_
  commentId: Overload:Neo.Wallets.Wallet.GetAccount
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.GetAccount
  nameWithType: Wallet.GetAccount
- uid: Neo.Wallets.Wallet.GetAccounts
  name: GetAccounts()
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_GetAccounts
  commentId: M:Neo.Wallets.Wallet.GetAccounts
  fullName: Neo.Wallets.Wallet.GetAccounts()
  nameWithType: Wallet.GetAccounts()
- uid: Neo.Wallets.Wallet.GetAccounts*
  name: GetAccounts
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_GetAccounts_
  commentId: Overload:Neo.Wallets.Wallet.GetAccounts
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.GetAccounts
  nameWithType: Wallet.GetAccounts
- uid: Neo.Wallets.Wallet.GetAvailable(Neo.Persistence.DataCache,Neo.UInt160)
  name: GetAvailable(DataCache, UInt160)
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_GetAvailable_Neo_Persistence_DataCache_Neo_UInt160_
  commentId: M:Neo.Wallets.Wallet.GetAvailable(Neo.Persistence.DataCache,Neo.UInt160)
  fullName: Neo.Wallets.Wallet.GetAvailable(Neo.Persistence.DataCache, Neo.UInt160)
  nameWithType: Wallet.GetAvailable(DataCache, UInt160)
- uid: Neo.Wallets.Wallet.GetAvailable*
  name: GetAvailable
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_GetAvailable_
  commentId: Overload:Neo.Wallets.Wallet.GetAvailable
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.GetAvailable
  nameWithType: Wallet.GetAvailable
- uid: Neo.Wallets.Wallet.GetBalance(Neo.Persistence.DataCache,Neo.UInt160,Neo.UInt160[])
  name: GetBalance(DataCache, UInt160, params UInt160[])
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_GetBalance_Neo_Persistence_DataCache_Neo_UInt160_Neo_UInt160___
  commentId: M:Neo.Wallets.Wallet.GetBalance(Neo.Persistence.DataCache,Neo.UInt160,Neo.UInt160[])
  name.vb: GetBalance(DataCache, UInt160, ParamArray UInt160())
  fullName: Neo.Wallets.Wallet.GetBalance(Neo.Persistence.DataCache, Neo.UInt160, params Neo.UInt160[])
  fullName.vb: Neo.Wallets.Wallet.GetBalance(Neo.Persistence.DataCache, Neo.UInt160, ParamArray Neo.UInt160())
  nameWithType: Wallet.GetBalance(DataCache, UInt160, params UInt160[])
  nameWithType.vb: Wallet.GetBalance(DataCache, UInt160, ParamArray UInt160())
- uid: Neo.Wallets.Wallet.GetBalance*
  name: GetBalance
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_GetBalance_
  commentId: Overload:Neo.Wallets.Wallet.GetBalance
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.GetBalance
  nameWithType: Wallet.GetBalance
- uid: Neo.Wallets.Wallet.GetDefaultAccount
  name: GetDefaultAccount()
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_GetDefaultAccount
  commentId: M:Neo.Wallets.Wallet.GetDefaultAccount
  fullName: Neo.Wallets.Wallet.GetDefaultAccount()
  nameWithType: Wallet.GetDefaultAccount()
- uid: Neo.Wallets.Wallet.GetDefaultAccount*
  name: GetDefaultAccount
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_GetDefaultAccount_
  commentId: Overload:Neo.Wallets.Wallet.GetDefaultAccount
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.GetDefaultAccount
  nameWithType: Wallet.GetDefaultAccount
- uid: Neo.Wallets.Wallet.GetPrivateKeyFromNEP2(System.String,System.Byte[],System.Byte,System.Int32,System.Int32,System.Int32)
  name: GetPrivateKeyFromNEP2(string, byte[], byte, int, int, int)
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_GetPrivateKeyFromNEP2_System_String_System_Byte___System_Byte_System_Int32_System_Int32_System_Int32_
  commentId: M:Neo.Wallets.Wallet.GetPrivateKeyFromNEP2(System.String,System.Byte[],System.Byte,System.Int32,System.Int32,System.Int32)
  name.vb: GetPrivateKeyFromNEP2(String, Byte(), Byte, Integer, Integer, Integer)
  fullName: Neo.Wallets.Wallet.GetPrivateKeyFromNEP2(string, byte[], byte, int, int, int)
  fullName.vb: Neo.Wallets.Wallet.GetPrivateKeyFromNEP2(String, Byte(), Byte, Integer, Integer, Integer)
  nameWithType: Wallet.GetPrivateKeyFromNEP2(string, byte[], byte, int, int, int)
  nameWithType.vb: Wallet.GetPrivateKeyFromNEP2(String, Byte(), Byte, Integer, Integer, Integer)
- uid: Neo.Wallets.Wallet.GetPrivateKeyFromNEP2(System.String,System.String,System.Byte,System.Int32,System.Int32,System.Int32)
  name: GetPrivateKeyFromNEP2(string, string, byte, int, int, int)
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_GetPrivateKeyFromNEP2_System_String_System_String_System_Byte_System_Int32_System_Int32_System_Int32_
  commentId: M:Neo.Wallets.Wallet.GetPrivateKeyFromNEP2(System.String,System.String,System.Byte,System.Int32,System.Int32,System.Int32)
  name.vb: GetPrivateKeyFromNEP2(String, String, Byte, Integer, Integer, Integer)
  fullName: Neo.Wallets.Wallet.GetPrivateKeyFromNEP2(string, string, byte, int, int, int)
  fullName.vb: Neo.Wallets.Wallet.GetPrivateKeyFromNEP2(String, String, Byte, Integer, Integer, Integer)
  nameWithType: Wallet.GetPrivateKeyFromNEP2(string, string, byte, int, int, int)
  nameWithType.vb: Wallet.GetPrivateKeyFromNEP2(String, String, Byte, Integer, Integer, Integer)
- uid: Neo.Wallets.Wallet.GetPrivateKeyFromNEP2*
  name: GetPrivateKeyFromNEP2
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_GetPrivateKeyFromNEP2_
  commentId: Overload:Neo.Wallets.Wallet.GetPrivateKeyFromNEP2
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.GetPrivateKeyFromNEP2
  nameWithType: Wallet.GetPrivateKeyFromNEP2
- uid: Neo.Wallets.Wallet.GetPrivateKeyFromWIF(System.String)
  name: GetPrivateKeyFromWIF(string)
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_GetPrivateKeyFromWIF_System_String_
  commentId: M:Neo.Wallets.Wallet.GetPrivateKeyFromWIF(System.String)
  name.vb: GetPrivateKeyFromWIF(String)
  fullName: Neo.Wallets.Wallet.GetPrivateKeyFromWIF(string)
  fullName.vb: Neo.Wallets.Wallet.GetPrivateKeyFromWIF(String)
  nameWithType: Wallet.GetPrivateKeyFromWIF(string)
  nameWithType.vb: Wallet.GetPrivateKeyFromWIF(String)
- uid: Neo.Wallets.Wallet.GetPrivateKeyFromWIF*
  name: GetPrivateKeyFromWIF
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_GetPrivateKeyFromWIF_
  commentId: Overload:Neo.Wallets.Wallet.GetPrivateKeyFromWIF
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.GetPrivateKeyFromWIF
  nameWithType: Wallet.GetPrivateKeyFromWIF
- uid: Neo.Wallets.Wallet.Import(System.Security.Cryptography.X509Certificates.X509Certificate2)
  name: Import(X509Certificate2)
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_Import_System_Security_Cryptography_X509Certificates_X509Certificate2_
  commentId: M:Neo.Wallets.Wallet.Import(System.Security.Cryptography.X509Certificates.X509Certificate2)
  fullName: Neo.Wallets.Wallet.Import(System.Security.Cryptography.X509Certificates.X509Certificate2)
  nameWithType: Wallet.Import(X509Certificate2)
- uid: Neo.Wallets.Wallet.Import(System.String)
  name: Import(string)
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_Import_System_String_
  commentId: M:Neo.Wallets.Wallet.Import(System.String)
  name.vb: Import(String)
  fullName: Neo.Wallets.Wallet.Import(string)
  fullName.vb: Neo.Wallets.Wallet.Import(String)
  nameWithType: Wallet.Import(string)
  nameWithType.vb: Wallet.Import(String)
- uid: Neo.Wallets.Wallet.Import(System.String,System.String,System.Int32,System.Int32,System.Int32)
  name: Import(string, string, int, int, int)
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_Import_System_String_System_String_System_Int32_System_Int32_System_Int32_
  commentId: M:Neo.Wallets.Wallet.Import(System.String,System.String,System.Int32,System.Int32,System.Int32)
  name.vb: Import(String, String, Integer, Integer, Integer)
  fullName: Neo.Wallets.Wallet.Import(string, string, int, int, int)
  fullName.vb: Neo.Wallets.Wallet.Import(String, String, Integer, Integer, Integer)
  nameWithType: Wallet.Import(string, string, int, int, int)
  nameWithType.vb: Wallet.Import(String, String, Integer, Integer, Integer)
- uid: Neo.Wallets.Wallet.Import*
  name: Import
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_Import_
  commentId: Overload:Neo.Wallets.Wallet.Import
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.Import
  nameWithType: Wallet.Import
- uid: Neo.Wallets.Wallet.MakeTransaction(Neo.Persistence.DataCache,Neo.Wallets.TransferOutput[],Neo.UInt160,Neo.Network.P2P.Payloads.Signer[],Neo.Network.P2P.Payloads.Block)
  name: MakeTransaction(DataCache, TransferOutput[], UInt160, Signer[], Block)
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_MakeTransaction_Neo_Persistence_DataCache_Neo_Wallets_TransferOutput___Neo_UInt160_Neo_Network_P2P_Payloads_Signer___Neo_Network_P2P_Payloads_Block_
  commentId: M:Neo.Wallets.Wallet.MakeTransaction(Neo.Persistence.DataCache,Neo.Wallets.TransferOutput[],Neo.UInt160,Neo.Network.P2P.Payloads.Signer[],Neo.Network.P2P.Payloads.Block)
  name.vb: MakeTransaction(DataCache, TransferOutput(), UInt160, Signer(), Block)
  fullName: Neo.Wallets.Wallet.MakeTransaction(Neo.Persistence.DataCache, Neo.Wallets.TransferOutput[], Neo.UInt160, Neo.Network.P2P.Payloads.Signer[], Neo.Network.P2P.Payloads.Block)
  fullName.vb: Neo.Wallets.Wallet.MakeTransaction(Neo.Persistence.DataCache, Neo.Wallets.TransferOutput(), Neo.UInt160, Neo.Network.P2P.Payloads.Signer(), Neo.Network.P2P.Payloads.Block)
  nameWithType: Wallet.MakeTransaction(DataCache, TransferOutput[], UInt160, Signer[], Block)
  nameWithType.vb: Wallet.MakeTransaction(DataCache, TransferOutput(), UInt160, Signer(), Block)
- uid: Neo.Wallets.Wallet.MakeTransaction(Neo.Persistence.DataCache,System.ReadOnlyMemory{System.Byte},Neo.UInt160,Neo.Network.P2P.Payloads.Signer[],Neo.Network.P2P.Payloads.TransactionAttribute[],System.Int64,Neo.Network.P2P.Payloads.Block)
  name: MakeTransaction(DataCache, ReadOnlyMemory<byte>, UInt160, Signer[], TransactionAttribute[], long, Block)
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_MakeTransaction_Neo_Persistence_DataCache_System_ReadOnlyMemory_System_Byte__Neo_UInt160_Neo_Network_P2P_Payloads_Signer___Neo_Network_P2P_Payloads_TransactionAttribute___System_Int64_Neo_Network_P2P_Payloads_Block_
  commentId: M:Neo.Wallets.Wallet.MakeTransaction(Neo.Persistence.DataCache,System.ReadOnlyMemory{System.Byte},Neo.UInt160,Neo.Network.P2P.Payloads.Signer[],Neo.Network.P2P.Payloads.TransactionAttribute[],System.Int64,Neo.Network.P2P.Payloads.Block)
  name.vb: MakeTransaction(DataCache, ReadOnlyMemory(Of Byte), UInt160, Signer(), TransactionAttribute(), Long, Block)
  fullName: Neo.Wallets.Wallet.MakeTransaction(Neo.Persistence.DataCache, System.ReadOnlyMemory<byte>, Neo.UInt160, Neo.Network.P2P.Payloads.Signer[], Neo.Network.P2P.Payloads.TransactionAttribute[], long, Neo.Network.P2P.Payloads.Block)
  fullName.vb: Neo.Wallets.Wallet.MakeTransaction(Neo.Persistence.DataCache, System.ReadOnlyMemory(Of Byte), Neo.UInt160, Neo.Network.P2P.Payloads.Signer(), Neo.Network.P2P.Payloads.TransactionAttribute(), Long, Neo.Network.P2P.Payloads.Block)
  nameWithType: Wallet.MakeTransaction(DataCache, ReadOnlyMemory<byte>, UInt160, Signer[], TransactionAttribute[], long, Block)
  nameWithType.vb: Wallet.MakeTransaction(DataCache, ReadOnlyMemory(Of Byte), UInt160, Signer(), TransactionAttribute(), Long, Block)
- uid: Neo.Wallets.Wallet.MakeTransaction*
  name: MakeTransaction
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_MakeTransaction_
  commentId: Overload:Neo.Wallets.Wallet.MakeTransaction
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.MakeTransaction
  nameWithType: Wallet.MakeTransaction
- uid: Neo.Wallets.Wallet.Migrate(System.String,System.String,System.String,Neo.ProtocolSettings)
  name: Migrate(string, string, string, ProtocolSettings)
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_Migrate_System_String_System_String_System_String_Neo_ProtocolSettings_
  commentId: M:Neo.Wallets.Wallet.Migrate(System.String,System.String,System.String,Neo.ProtocolSettings)
  name.vb: Migrate(String, String, String, ProtocolSettings)
  fullName: Neo.Wallets.Wallet.Migrate(string, string, string, Neo.ProtocolSettings)
  fullName.vb: Neo.Wallets.Wallet.Migrate(String, String, String, Neo.ProtocolSettings)
  nameWithType: Wallet.Migrate(string, string, string, ProtocolSettings)
  nameWithType.vb: Wallet.Migrate(String, String, String, ProtocolSettings)
- uid: Neo.Wallets.Wallet.Migrate*
  name: Migrate
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_Migrate_
  commentId: Overload:Neo.Wallets.Wallet.Migrate
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.Migrate
  nameWithType: Wallet.Migrate
- uid: Neo.Wallets.Wallet.Name
  name: Name
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_Name
  commentId: P:Neo.Wallets.Wallet.Name
  fullName: Neo.Wallets.Wallet.Name
  nameWithType: Wallet.Name
- uid: Neo.Wallets.Wallet.Name*
  name: Name
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_Name_
  commentId: Overload:Neo.Wallets.Wallet.Name
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.Name
  nameWithType: Wallet.Name
- uid: Neo.Wallets.Wallet.Open(System.String,System.String,Neo.ProtocolSettings)
  name: Open(string, string, ProtocolSettings)
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_Open_System_String_System_String_Neo_ProtocolSettings_
  commentId: M:Neo.Wallets.Wallet.Open(System.String,System.String,Neo.ProtocolSettings)
  name.vb: Open(String, String, ProtocolSettings)
  fullName: Neo.Wallets.Wallet.Open(string, string, Neo.ProtocolSettings)
  fullName.vb: Neo.Wallets.Wallet.Open(String, String, Neo.ProtocolSettings)
  nameWithType: Wallet.Open(string, string, ProtocolSettings)
  nameWithType.vb: Wallet.Open(String, String, ProtocolSettings)
- uid: Neo.Wallets.Wallet.Open*
  name: Open
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_Open_
  commentId: Overload:Neo.Wallets.Wallet.Open
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.Open
  nameWithType: Wallet.Open
- uid: Neo.Wallets.Wallet.Path
  name: Path
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_Path
  commentId: P:Neo.Wallets.Wallet.Path
  fullName: Neo.Wallets.Wallet.Path
  nameWithType: Wallet.Path
- uid: Neo.Wallets.Wallet.Path*
  name: Path
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_Path_
  commentId: Overload:Neo.Wallets.Wallet.Path
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.Path
  nameWithType: Wallet.Path
- uid: Neo.Wallets.Wallet.ProtocolSettings
  name: ProtocolSettings
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_ProtocolSettings
  commentId: P:Neo.Wallets.Wallet.ProtocolSettings
  fullName: Neo.Wallets.Wallet.ProtocolSettings
  nameWithType: Wallet.ProtocolSettings
- uid: Neo.Wallets.Wallet.ProtocolSettings*
  name: ProtocolSettings
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_ProtocolSettings_
  commentId: Overload:Neo.Wallets.Wallet.ProtocolSettings
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.ProtocolSettings
  nameWithType: Wallet.ProtocolSettings
- uid: Neo.Wallets.Wallet.RegisterFactory(Neo.Wallets.IWalletFactory)
  name: RegisterFactory(IWalletFactory)
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_RegisterFactory_Neo_Wallets_IWalletFactory_
  commentId: M:Neo.Wallets.Wallet.RegisterFactory(Neo.Wallets.IWalletFactory)
  fullName: Neo.Wallets.Wallet.RegisterFactory(Neo.Wallets.IWalletFactory)
  nameWithType: Wallet.RegisterFactory(IWalletFactory)
- uid: Neo.Wallets.Wallet.RegisterFactory*
  name: RegisterFactory
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_RegisterFactory_
  commentId: Overload:Neo.Wallets.Wallet.RegisterFactory
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.RegisterFactory
  nameWithType: Wallet.RegisterFactory
- uid: Neo.Wallets.Wallet.Save
  name: Save()
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_Save
  commentId: M:Neo.Wallets.Wallet.Save
  fullName: Neo.Wallets.Wallet.Save()
  nameWithType: Wallet.Save()
- uid: Neo.Wallets.Wallet.Save*
  name: Save
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_Save_
  commentId: Overload:Neo.Wallets.Wallet.Save
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.Save
  nameWithType: Wallet.Save
- uid: Neo.Wallets.Wallet.Sign(Neo.SmartContract.ContractParametersContext)
  name: Sign(ContractParametersContext)
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_Sign_Neo_SmartContract_ContractParametersContext_
  commentId: M:Neo.Wallets.Wallet.Sign(Neo.SmartContract.ContractParametersContext)
  fullName: Neo.Wallets.Wallet.Sign(Neo.SmartContract.ContractParametersContext)
  nameWithType: Wallet.Sign(ContractParametersContext)
- uid: Neo.Wallets.Wallet.Sign*
  name: Sign
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_Sign_
  commentId: Overload:Neo.Wallets.Wallet.Sign
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.Sign
  nameWithType: Wallet.Sign
- uid: Neo.Wallets.Wallet.VerifyPassword(System.String)
  name: VerifyPassword(string)
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_VerifyPassword_System_String_
  commentId: M:Neo.Wallets.Wallet.VerifyPassword(System.String)
  name.vb: VerifyPassword(String)
  fullName: Neo.Wallets.Wallet.VerifyPassword(string)
  fullName.vb: Neo.Wallets.Wallet.VerifyPassword(String)
  nameWithType: Wallet.VerifyPassword(string)
  nameWithType.vb: Wallet.VerifyPassword(String)
- uid: Neo.Wallets.Wallet.VerifyPassword*
  name: VerifyPassword
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_VerifyPassword_
  commentId: Overload:Neo.Wallets.Wallet.VerifyPassword
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.VerifyPassword
  nameWithType: Wallet.VerifyPassword
- uid: Neo.Wallets.Wallet.Version
  name: Version
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_Version
  commentId: P:Neo.Wallets.Wallet.Version
  fullName: Neo.Wallets.Wallet.Version
  nameWithType: Wallet.Version
- uid: Neo.Wallets.Wallet.Version*
  name: Version
  href: api/Neo.Wallets.Wallet.html#Neo_Wallets_Wallet_Version_
  commentId: Overload:Neo.Wallets.Wallet.Version
  isSpec: "True"
  fullName: Neo.Wallets.Wallet.Version
  nameWithType: Wallet.Version
- uid: Neo.Wallets.WalletAccount
  name: WalletAccount
  href: api/Neo.Wallets.WalletAccount.html
  commentId: T:Neo.Wallets.WalletAccount
  fullName: Neo.Wallets.WalletAccount
  nameWithType: WalletAccount
- uid: Neo.Wallets.WalletAccount.#ctor(Neo.UInt160,Neo.ProtocolSettings)
  name: WalletAccount(UInt160, ProtocolSettings)
  href: api/Neo.Wallets.WalletAccount.html#Neo_Wallets_WalletAccount__ctor_Neo_UInt160_Neo_ProtocolSettings_
  commentId: M:Neo.Wallets.WalletAccount.#ctor(Neo.UInt160,Neo.ProtocolSettings)
  name.vb: New(UInt160, ProtocolSettings)
  fullName: Neo.Wallets.WalletAccount.WalletAccount(Neo.UInt160, Neo.ProtocolSettings)
  fullName.vb: Neo.Wallets.WalletAccount.New(Neo.UInt160, Neo.ProtocolSettings)
  nameWithType: WalletAccount.WalletAccount(UInt160, ProtocolSettings)
  nameWithType.vb: WalletAccount.New(UInt160, ProtocolSettings)
- uid: Neo.Wallets.WalletAccount.#ctor*
  name: WalletAccount
  href: api/Neo.Wallets.WalletAccount.html#Neo_Wallets_WalletAccount__ctor_
  commentId: Overload:Neo.Wallets.WalletAccount.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Neo.Wallets.WalletAccount.WalletAccount
  fullName.vb: Neo.Wallets.WalletAccount.New
  nameWithType: WalletAccount.WalletAccount
  nameWithType.vb: WalletAccount.New
- uid: Neo.Wallets.WalletAccount.Address
  name: Address
  href: api/Neo.Wallets.WalletAccount.html#Neo_Wallets_WalletAccount_Address
  commentId: P:Neo.Wallets.WalletAccount.Address
  fullName: Neo.Wallets.WalletAccount.Address
  nameWithType: WalletAccount.Address
- uid: Neo.Wallets.WalletAccount.Address*
  name: Address
  href: api/Neo.Wallets.WalletAccount.html#Neo_Wallets_WalletAccount_Address_
  commentId: Overload:Neo.Wallets.WalletAccount.Address
  isSpec: "True"
  fullName: Neo.Wallets.WalletAccount.Address
  nameWithType: WalletAccount.Address
- uid: Neo.Wallets.WalletAccount.Contract
  name: Contract
  href: api/Neo.Wallets.WalletAccount.html#Neo_Wallets_WalletAccount_Contract
  commentId: F:Neo.Wallets.WalletAccount.Contract
  fullName: Neo.Wallets.WalletAccount.Contract
  nameWithType: WalletAccount.Contract
- uid: Neo.Wallets.WalletAccount.GetKey
  name: GetKey()
  href: api/Neo.Wallets.WalletAccount.html#Neo_Wallets_WalletAccount_GetKey
  commentId: M:Neo.Wallets.WalletAccount.GetKey
  fullName: Neo.Wallets.WalletAccount.GetKey()
  nameWithType: WalletAccount.GetKey()
- uid: Neo.Wallets.WalletAccount.GetKey*
  name: GetKey
  href: api/Neo.Wallets.WalletAccount.html#Neo_Wallets_WalletAccount_GetKey_
  commentId: Overload:Neo.Wallets.WalletAccount.GetKey
  isSpec: "True"
  fullName: Neo.Wallets.WalletAccount.GetKey
  nameWithType: WalletAccount.GetKey
- uid: Neo.Wallets.WalletAccount.HasKey
  name: HasKey
  href: api/Neo.Wallets.WalletAccount.html#Neo_Wallets_WalletAccount_HasKey
  commentId: P:Neo.Wallets.WalletAccount.HasKey
  fullName: Neo.Wallets.WalletAccount.HasKey
  nameWithType: WalletAccount.HasKey
- uid: Neo.Wallets.WalletAccount.HasKey*
  name: HasKey
  href: api/Neo.Wallets.WalletAccount.html#Neo_Wallets_WalletAccount_HasKey_
  commentId: Overload:Neo.Wallets.WalletAccount.HasKey
  isSpec: "True"
  fullName: Neo.Wallets.WalletAccount.HasKey
  nameWithType: WalletAccount.HasKey
- uid: Neo.Wallets.WalletAccount.IsDefault
  name: IsDefault
  href: api/Neo.Wallets.WalletAccount.html#Neo_Wallets_WalletAccount_IsDefault
  commentId: F:Neo.Wallets.WalletAccount.IsDefault
  fullName: Neo.Wallets.WalletAccount.IsDefault
  nameWithType: WalletAccount.IsDefault
- uid: Neo.Wallets.WalletAccount.Label
  name: Label
  href: api/Neo.Wallets.WalletAccount.html#Neo_Wallets_WalletAccount_Label
  commentId: F:Neo.Wallets.WalletAccount.Label
  fullName: Neo.Wallets.WalletAccount.Label
  nameWithType: WalletAccount.Label
- uid: Neo.Wallets.WalletAccount.Lock
  name: Lock
  href: api/Neo.Wallets.WalletAccount.html#Neo_Wallets_WalletAccount_Lock
  commentId: F:Neo.Wallets.WalletAccount.Lock
  fullName: Neo.Wallets.WalletAccount.Lock
  nameWithType: WalletAccount.Lock
- uid: Neo.Wallets.WalletAccount.ProtocolSettings
  name: ProtocolSettings
  href: api/Neo.Wallets.WalletAccount.html#Neo_Wallets_WalletAccount_ProtocolSettings
  commentId: F:Neo.Wallets.WalletAccount.ProtocolSettings
  fullName: Neo.Wallets.WalletAccount.ProtocolSettings
  nameWithType: WalletAccount.ProtocolSettings
- uid: Neo.Wallets.WalletAccount.ScriptHash
  name: ScriptHash
  href: api/Neo.Wallets.WalletAccount.html#Neo_Wallets_WalletAccount_ScriptHash
  commentId: F:Neo.Wallets.WalletAccount.ScriptHash
  fullName: Neo.Wallets.WalletAccount.ScriptHash
  nameWithType: WalletAccount.ScriptHash
- uid: Neo.Wallets.WalletAccount.WatchOnly
  name: WatchOnly
  href: api/Neo.Wallets.WalletAccount.html#Neo_Wallets_WalletAccount_WatchOnly
  commentId: P:Neo.Wallets.WalletAccount.WatchOnly
  fullName: Neo.Wallets.WalletAccount.WatchOnly
  nameWithType: WalletAccount.WatchOnly
- uid: Neo.Wallets.WalletAccount.WatchOnly*
  name: WatchOnly
  href: api/Neo.Wallets.WalletAccount.html#Neo_Wallets_WalletAccount_WatchOnly_
  commentId: Overload:Neo.Wallets.WalletAccount.WatchOnly
  isSpec: "True"
  fullName: Neo.Wallets.WalletAccount.WatchOnly
  nameWithType: WalletAccount.WatchOnly
